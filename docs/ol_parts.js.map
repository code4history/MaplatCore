{"version":3,"file":"ol_parts.js","mappings":"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YAAY,CAAC,YAAY,wIAAwI,YAAY,CAAC,YAAY,wIAAwI,YAAY,CAAC,YAAY,wIAAwI,YAAY,CAAC,YAAY,wIAAwI,YAAY,CAAC,YAAY,wIAAwI,YAAY,CAAC,YAAY,wIAAwI,YAAY,CAAC,YAAY,wIAAwI,YAAY,CAAC,YAAY,wIAAwI,YAAY,CAAC,YAAY,wIAAwI,YAAY,CAAC,YAAY,wIAAwI,YAAY,CAAC,YAAY,wIAAwI,YAAY,CAAC,YAAY,yIAAyI,YAAY,CAAC,YAAY,yIAAyI,YAAY,CAAC,YAAY,wIAAwI,YAAY,CAAC,YAAY,yIAAyI,YAAY,CAAC,YAAY,yIAAyI,YAAY,CAAC,YAAY,yIAAyI,YAAY,CAAC,YAAY,yIAAyI,YAAY,CAAC,YAAY,yIAAyI,YAAY,CAAC,YAAY,yIAAyI,YAAY,CAAC,YAAY,yIAAyI,YAAY,CAAC,YAAY,yIAAyI,YAAY,CAAC,YAAY,yIAAyI,YAAY,CAAC,YAAY,yIAAyI,YAAY,CAAC,YAAY,yIAAyI,YAAY,CAAC,YAAY,yIAAyI,YAAY,CAAC,YAAY,yIAAyI,YAAY,CAAC,YAAY,yIAAyI,YAAY,CAAC,YAAY,yIAAyI,YAAY,CAAC,YAAY,0IAA0I,YAAY,CAAC,YAAY,0IAA0I,YAAY,CAAC,YAAY,0IAA0I,YAAY,CAAC,YAAY,0IAA0I,YAAY,CAAC,YAAY,0IAA0I,YAAY,CAAC,YAAY,0IAA0I,YAAY,CAAC,YAAY,0IAA0I,YAAY,CAAC,YAAY,0IAA0I,YAAY,CAAC,YAAY,0IAA0I,YAAY,CAAC,YAAY,0IAA0I,YAAY,CAAC,YAAY,0IAA0I,YAAY,CAAC,YAAY,0IAA0I,YAAY,CAAC,YAAY,0IAA0I,YAAY,CAAC,YAAY,2IAA2I,YAAY,CAAC,YAAY,2IAA2I,YAAY,CAAC,YAAY,0IAA0I,YAAY,CAAC,YAAY,0IAA0I,YAAY,CAAC,YAAY,2IAA2I,YAAY,CAAC,YAAY,2IAA2I,YAAY,CAAC,YAAY,2IAA2I,YAAY,CAAC,YAAY,2IAA2I,YAAY,CAAC,YAAY,mFAAmF,YAAY,CAAC,YAAY,2IAA2I,YAAY,CAAC,YAAY,2IAA2I,YAAY,CAAC,YAAY,2IAA2I,YAAY,CAAC,YAAY,2IAA2I,YAAY,CAAC,YAAY,2IAA2I,YAAY,CAAC,YAAY,2IAA2I,YAAY,CAAC,YAAY,2IAA2I,YAAY,CAAC,YAAY,2IAA2I,YAAY,CAAC,YAAY,2IAA2I,YAAY,CAAC,YAAY,2IAA2I,YAAY,CAAC,YAAY,2IAA2I,YAAY,CAAC,YAAY,2IAA2I,YAAY,CAAC,YAAY,2IAA2I,YAAY,CAAC,YAAY,2IAA2I,YAAY,CAAC,YAAY,2IAA2I,YAAY,CAAC,YAAY,2IAA2I,YAAY,CAAC,YAAY,2IAA2I,YAAY,CAAC,YAAY,2IAA2I,YAAY,CAAC,YAAY,2IAA2I,YAAY,CAAC,YAAY,2IAA2I,YAAY,CAAC,YAAY,oGAAoG,YAAY,CAAC,YAAY,4IAA4I,YAAY,CAAC,YAAY,4IAA4I,YAAY,CAAC,YAAY,4IAA4I,YAAY,CAAC,YAAY,4IAA4I,YAAY,CAAC,YAAY,4IAA4I,YAAY,CAAC,YAAY,4IAA4I,YAAY,CAAC,YAAY,4IAA4I,YAAY,CAAC,YAAY,4IAA4I,YAAY,CAAC,YAAY,4IAA4I,YAAY,CAAC,YAAY,4IAA4I,YAAY,CAAC,YAAY,4IAA4I,YAAY,CAAC,YAAY,4IAA4I,YAAY,CAAC,YAAY,4IAA4I,YAAY,CAAC,YAAY,4IAA4I,YAAY,CAAC,YAAY,4IAA4I,YAAY,CAAC,YAAY,4IAA4I,YAAY,CAAC,YAAY,4IAA4I,YAAY,CAAC,YAAY,4IAA4I,YAAY,CAAC,YAAY,4IAA4I,YAAY,CAAC,YAAY,4IAA4I,YAAY,CAAC,YAAY,4IAA4I,YAAY,CAAC,YAAY,4IAA4I,YAAY,CAAC,YAAY,4IAA4I,YAAY,CAAC,YAAY,4IAA4I,YAAY,CAAC,YAAY,mHAAmH,YAAY,CAAC,YAAY,4IAA4I,YAAY,CAAC,YAAY,4IAA4I,YAAY,CAAC,YAAY,4IAA4I,YAAY,CAAC,YAAY,6IAA6I,YAAY,CAAC,YAAY,6IAA6I,YAAY,CAAC,YAAY,6IAA6I,YAAY,CAAC,YAAY,6IAA6I,YAAY,CAAC,YAAY,yIAAyI,YAAY,CAAC,YAAY,yIAAyI,YAAY,CAAC,YAAY,yIAAyI,YAAY,CAAC,YAAY,yIAAyI,YAAY,CAAC,YAAY,yIAAyI,YAAY,CAAC,YAAY,yIAAyI,YAAY,CAAC,YAAY,yIAAyI,YAAY,CAAC,YAAY,yIAAyI,YAAY,CAAC,YAAY,yIAAyI,YAAY,CAAC,YAAY,yIAAyI,YAAY,CAAC,YAAY,yIAAyI,YAAY,CAAC,YAAY,oHAAoH,YAAY,CAAC,YAAY,yIAAyI,YAAY,CAAC,YAAY,yIAAyI,YAAY,CAAC,YAAY,yIAAyI,YAAY,CAAC,YAAY,yIAAyI,YAAY,CAAC,YAAY,yIAAyI,YAAY,CAAC,YAAY,yIAAyI,YAAY,CAAC,YAAY,yIAAyI,YAAY,CAAC,YAAY,sHAAsH,YAAY,CAAC,YAAY,yIAAyI,YAAY,CAAC,YAAY,yIAAyI,YAAY,CAAC,YAAY,yIAAyI,YAAY,CAAC,YAAY,yIAAyI,YAAY,CAAC,YAAY,yIAAyI,YAAY,CAAC,YAAY,yIAAyI,YAAY,CAAC,YAAY,yIAAyI,YAAY,CAAC,YAAY,yIAAyI,YAAY,CAAC,YAAY,yIAAyI,YAAY,CAAC,YAAY,0IAA0I,YAAY,CAAC,YAAY,0IAA0I,YAAY,CAAC,YAAY,oHAAoH,YAAY,CAAC,YAAY,0IAA0I,YAAY,CAAC,YAAY,0IAA0I,YAAY,CAAC,YAAY,0IAA0I,YAAY,CAAC,YAAY,0IAA0I,YAAY,CAAC,YAAY,0IAA0I,YAAY,CAAC,YAAY,0IAA0I,YAAY,CAAC,YAAY,0IAA0I,YAAY,CAAC,YAAY,0IAA0I,YAAY,CAAC,YAAY,0IAA0I,YAAY,CAAC,YAAY,oHAAoH,YAAY,CAAC,YAAY,0IAA0I,YAAY,CAAC,YAAY,0IAA0I,YAAY,CAAC,YAAY,0IAA0I,YAAY,CAAC,YAAY,0IAA0I,YAAY,CAAC,YAAY,0IAA0I,YAAY,CAAC,YAAY,0IAA0I,YAAY,CAAC,YAAY,0IAA0I,YAAY,CAAC,YAAY,0IAA0I,YAAY,CAAC,YAAY,0IAA0I,YAAY,CAAC,YAAY,0IAA0I,YAAY,CAAC,YAAY,0IAA0I,YAAY,CAAC,YAAY,0IAA0I,YAAY,CAAC,YAAY,0IAA0I,YAAY,CAAC,YAAY,0IAA0I,YAAY,CAAC,YAAY,0IAA0I,YAAY,CAAC,YAAY,0IAA0I,YAAY,CAAC,YAAY,2IAA2I,YAAY,CAAC,YAAY,2IAA2I,YAAY,CAAC,YAAY,oHAAoH,YAAY,CAAC,YAAY,2IAA2I,YAAY,CAAC,YAAY,2IAA2I,YAAY,CAAC,YAAY,wIAAwI,YAAY,CAAC,YAAY,wIAAwI,YAAY,CAAC,YAAY,wIAAwI,YAAY,CAAC,YAAY,yIAAyI,YAAY,CAAC,YAAY,yIAAyI,YAAY,CAAC,YAAY,yIAAyI,YAAY,CAAC,YAAY,yIAAyI,YAAY,CAAC,YAAY,kFAAkF,YAAY,CAAC,YAAY,yIAAyI,YAAY,CAAC,YAAY,yIAAyI,YAAY,CAAC,YAAY,yIAAyI,YAAY,CAAC,YAAY,yIAAyI,YAAY,CAAC,YAAY,yIAAyI,YAAY,CAAC,YAAY,yIAAyI,YAAY,CAAC,YAAY,yIAAyI,YAAY,CAAC,YAAY,yIAAyI,YAAY,CAAC,YAAY,yIAAyI,YAAY,CAAC,YAAY,oHAAoH,YAAY,CAAC,YAAY,yIAAyI,YAAY,CAAC,YAAY,yIAAyI,YAAY,CAAC,YAAY,yIAAyI,YAAY,CAAC,YAAY,yIAAyI,YAAY,CAAC,YAAY,yIAAyI,YAAY,CAAC,YAAY,yIAAyI,YAAY,CAAC,YAAY,yIAAyI,YAAY,CAAC,YAAY,yIAAyI,YAAY,CAAC,YAAY,yIAAyI,YAAY,CAAC,YAAY,oHAAoH,YAAY,CAAC,YAAY,yIAAyI,YAAY,CAAC,YAAY,yIAAyI,YAAY,CAAC,YAAY,0IAA0I,YAAY,CAAC,YAAY,0IAA0I,YAAY,CAAC,YAAY,0IAA0I,YAAY,CAAC,YAAY,0IAA0I,YAAY,CAAC,YAAY,0IAA0I,YAAY,CAAC,YAAY,0IAA0I,YAAY,CAAC,YAAY,0IAA0I,YAAY,CAAC,YAAY,2GAA2G,YAAY,CAAC,YAAY,0IAA0I,YAAY,CAAC,YAAY,0IAA0I,YAAY,CAAC,YAAY,0IAA0I,YAAY,CAAC,YAAY,0IAA0I,YAAY,CAAC,YAAY,0IAA0I,YAAY,CAAC,YAAY,0IAA0I,YAAY,CAAC,YAAY,0IAA0I,YAAY,CAAC,YAAY,0IAA0I,YAAY,CAAC,YAAY,0IAA0I,YAAY,CAAC,YAAY,2GAA2G,YAAY,CAAC,YAAY,0IAA0I,YAAY,CAAC,YAAY,0IAA0I,YAAY,CAAC,YAAY,0IAA0I,YAAY,CAAC,YAAY,0IAA0I,YAAY,CAAC,YAAY,0IAA0I,YAAY,CAAC,YAAY,0IAA0I,YAAY,CAAC,YAAY,0IAA0I,YAAY,CAAC,YAAY,0IAA0I,YAAY,CAAC,YAAY,0IAA0I,YAAY,CAAC,YAAY,kGAAkG,YAAY,CAAC,YAAY,0IAA0I,YAAY,CAAC,YAAY,0IAA0I,YAAY,CAAC,YAAY,2IAA2I,YAAY,CAAC,YAAY,2IAA2I,YAAY,CAAC,YAAY,2IAA2I,YAAY,CAAC,YAAY,2IAA2I,YAAY,CAAC,YAAY,uIAAuI,YAAY,CAAC,YAAY,uIAAuI,YAAY,CAAC,YAAY,uIAAuI,YAAY,CAAC,YAAY,uIAAuI,YAAY,CAAC,YAAY,uIAAuI,YAAY,CAAC,YAAY,uIAAuI,YAAY,CAAC,YAAY,uIAAuI,YAAY,CAAC,YAAY,uIAAuI,YAAY,CAAC,YAAY,uIAAuI,YAAY,CAAC,YAAY,uIAAuI,YAAY,CAAC,YAAY,uIAAuI,YAAY,CAAC,YAAY,uIAAuI,YAAY,CAAC,YAAY,uIAAuI,YAAY,CAAC,YAAY,uIAAuI,YAAY,CAAC,YAAY,uIAAuI,YAAY,CAAC,YAAY,uIAAuI,YAAY,CAAC,YAAY,uIAAuI,YAAY,CAAC,YAAY,uIAAuI,YAAY,CAAC,YAAY,uIAAuI,YAAY,CAAC,YAAY,uIAAuI,YAAY,CAAC,YAAY,uIAAuI,YAAY,CAAC,YAAY,uIAAuI,YAAY,CAAC,YAAY,uIAAuI,YAAY,CAAC,YAAY,uIAAuI,YAAY,CAAC,YAAY,uIAAuI,YAAY,CAAC,YAAY,uIAAuI,YAAY,CAAC,YAAY,uIAAuI,YAAY,CAAC,YAAY,wIAAwI,YAAY,CAAC,YAAY,wIAAwI,YAAY,CAAC,YAAY,wIAAwI,YAAY,CAAC,YAAY,wIAAwI,YAAY,CAAC,YAAY,wIAAwI,YAAY,CAAC,YAAY,wIAAwI,YAAY,CAAC,YAAY,wIAAwI,YAAY,CAAC,YAAY,wIAAwI,YAAY,CAAC,YAAY,wIAAwI,YAAY,CAAC,YAAY,wIAAwI,YAAY,CAAC,YAAY,6FAA6F,YAAY,CAAC,YAAY,6FAA6F,YAAY,CAAC,YAAY,wIAAwI,YAAY,CAAC,YAAY,wIAAwI,YAAY,CAAC,YAAY,w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AY,kGAAkG,YAAY,CAAC,YAAY,qIAAqI,YAAY,CAAC,YAAY,qIAAqI,YAAY,CAAC,YAAY,qIAAqI,YAAY,CAAC,YAAY,sIAAsI,YAAY,CAAC,YAAY,qIAAqI,YAAY,CAAC,YAAY,qIAAqI,YAAY,CAAC,YAAY,oIAAoI,YAAY,CAAC,YAAY,oIAAoI,YAAY,CAAC,YAAY,iDAAiD,YAAY,CAAC,YAAY,oIAAoI,YAAY,CAAC,YAAY,oIAAoI,YAAY,CAAC,YAAY,oIAAoI,YAAY,CAAC,YAAY,qIAAqI,YAAY,CAAC,YAAY,qIAAqI,YAAY,CAAC,YAAY,qIAAqI,YAAY,CAAC,YAAY,qIAAqI,YAAY,CAAC,YAAY,qIAAqI,YAAY,CAAC,YAAY,qIAAqI,YAAY,CAAC,YAAY,sIAAsI,YAAY,CAAC,YAAY,qIAAqI,YAAY,CAAC,YAAY,qIAAqI,YAAY,CAAC,YAAY,qIAAqI,YAAY,CAAC,YAAY,qIAAqI,YAAY,CAAC,YAAY,oIAAoI,YAAY,CAAC,YAAY,mIAAmI,YAAY,CAAC,YAAY,oIAAoI,YAAY,CAAC,YAAY,oIAAoI,YAAY,CAAC,YAAY,oIAAoI,YAAY,CAAC,YAAY,oIAAoI,YAAY,CAAC,YAAY,oIAAoI,YAAY,CAAC,YAAY,oIAAoI,YAAY,CAAC,YAAY,oIAAoI,YAAY,CAAC,YAAY,qIAAqI,YAAY,CAAC,YAAY,qIAAqI,YAAY,CAAC,YAAY,qIAAqI,YAAY,CAAC,YAAY,qIAAqI,YAAY,CAAC,YAAY,qIAAqI,YAAY,CAAC,YAAY,qIAAqI,YAAY,CAAC,YAAY,qIAAqI,YAAY,CAAC,YAAY,sIAAsI,YAAY,CAAC,YAAY,sIAAsI,YAAY,CAAC,YAAY,sIAAsI,YAAY,CAAC,YAAY,qIAAqI,YAAY,CAAC,YAAY,qIAAqI,YAAY,CAAC,YAAY,qIAAqI,YAAY,CAAC,YAAY,qIAAqI,YAAY,CAAC,YAAY,oIAAoI,YAAY,CAAC,YAAY,mIAAmI,YAAY,CAAC,YAAY,oIAAoI,YAAY,CAAC,YAAY,oIAAoI,YAAY,CAAC,YAAY,oIAAoI,YAAY,CAAC,YAAY,oIAAoI,YAAY,CAAC,YAAY,oIAAoI,YAAY,CAAC,YAAY,qIAAqI,YA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,6EAA6E,YAAY,CAAC,YAAY,2FAA2F,YAAY,CAAC,YAAY,6EAA6E,YAAY,CAAC,YAAY,6EAA6E,YAAY,CAAC,YAAY,6EAA6E,YAAY,CAAC,YAAY,6EAA6E,YAAY,CAAC,YAAY,6EAA6E,YAAY,CAAC,YAAY,4FAA4F,YAAY,CAAC,YAAY,4FAA4F,YAAY,CAAC,YAAY,4FAA4F,YAAY,CAAC,YAAY,4FAA4F,YAAY,CAAC,YAAY,6FAA6F,YAAY,CAAC,YAAY,6FAA6F,YAAY,CAAC,YAAY,6FAA6F,YAAY,CAAC,YAAY,6FAA6F,YAAY,CAAC,YAAY,6FAA6F,YAAY,CAAC,YAAY,0FAA0F,YAAY,CAAC,YAAY,0FAA0F,YAAY,CAAC,YAAY,0FAA0F,YAAY,CAAC,YAAY,0FAA0F,YAAY,CAAC,YAAY,0FAA0F,YAAY,CAAC,YAAY,2FAA2F,YAAY,CAAC,YAAY,2FAA2F,YAAY,CAAC,YAAY,2FAA2F,YAAY,CAAC,YAAY,2FAA2F,YAAY,CAAC,YAAY,2FAA2F,YAAY,CAAC,YAAY,4FAA4F,YAAY,CAAC,YAAY,4FAA4F,YAAY,CAAC,YAAY,4FAA4F,YAAY,CAAC,YAAY,4FAA4F,YAAY,CAAC,YAAY,4FAA4F,YAAY,CAAC,YAAY,4FAA4F,YAAY,CAAC,YAAY,4FAA4F,YAAY,CAAC,YAAY,4FAA4F,YAAY,CAAC,YAAY,4FAA4F,YAAY,CAAC,YAAY,6FAA6F,YAAY,CAAC,YAAY,6FAA6F,YAAY,CAAC,YAAY,6FAA6F,YAAY,CAAC,YAAY,6FAA6F,YAAY,CAAC,YAAY,6FAA6F,YAAY,CAAC,YAAY,6FAA6F,YAAY,CAAC,YAAY,6FAA6F,YAAY,CAAC,YAAY,6FAA6F,YAAY,CAAC,YAAY,6FAA6F,YAAY,CAAC,YAAY,6FAA6F,YAAY,CAAC,YAAY,6FAA6F,YAAY,CAAC,YAAY,6FAA6F,YAAY,CAAC,YAAY,0FAA0F,YAAY,CAAC,YAAY,iDAAiD,YAAY,CAAC,YAAY,0FAA0F,YAAY,CAAC,YAAY,0FAA0F,YAAY,CAAC,YAAY,0FAA0F,YAAY,CAAC,YAAY,0FAA0F,YAAY,CAAC,YAAY,0FAA0F,YAAY,CAAC,YAAY,0FAA0F,YAAY,CAAC,YAAY,0FAA0F,YAAY,CAAC,YAAY,0FAA0F,YAAY,CAAC,YAAY,2FAA2F,YAAY,CAAC,YAAY,2FAA2F,YAAY,CAAC,YAAY,2FAA2F,YAAY,CAAC,YAAY,2FAA2F,YAAY,CAAC,YAAY,2FAA2F,YAAY,CAAC,YAAY,2FAA2F,YAAY,CAAC,YAAY,2FAA2F,YAAY,CAAC,YAAY,2FAA2F,YAAY,CAAC,YAAY,2FAA2F,YAAY,CAAC,YAAY,2FAA2F,YAAY,CAAC,YAAY,2FAA2F,YAAY,CAAC,YAAY,2FAA2F,YAAY,CAAC,YAAY,6EAA6E,YAAY,CAAC,YAAY,4FAA4F,YAAY,CAAC,YAAY,6FAA6F,YAAY,CAAC,YAAY,6FAA6F,YAAY,CAAC,YAAY,6FAA6F,YAAY,CAAC,YAAY,6FAA6F,YAAY,CAAC,YAAY,6FAA6F,YAAY,CAAC,YAAY,6FAA6F,YAAY,CAAC,YAAY,0FAA0F,YAAY,CAAC,YAAY,0FAA0F,YAAY,CAAC,YAAY,0FAA0F,YAAY,CAAC,YAAY,0FAA0F,YAAY,CAAC,YAAY,0FAA0F,YAAY,CAAC,YAAY,2FAA2F,YAAY,CAAC,YAAY,2FAA2F,YAAY,CAAC,YAAY,2FAA2F,YAAY,CAAC,YAAY,uHAAuH,YAAY,CAAC,YAAY,4FAA4F,YAAY,CAAC,YAAY,4FAA4F,YAAY,CAAC,YAAY,4FAA4F,YAAY,CAAC,YAAY,4FAA4F,YAAY,CAAC,YAAY,4FAA4F,YAAY,CAAC,YAAY,4FAA4F,YAAY,CAAC,YAAY,4FAA4F,YAAY,CAAC,YAAY,4FAA4F,YAAY,CAAC,YAAY,4FAA4F,YAAY,CAAC,YAAY,6FAA6F,YAAY,CAAC,YAAY,6FAA6F,YAAY,CAAC,YAAY,6FAA6F,YAAY,CAAC,YAAY,6FAA6F,YAAY,CAAC,YAAY,6FAA6F,YAAY,CAAC,YAAY,6FAA6F,YAAY,CAAC,YAAY,6FAA6F,YAAY,CAAC,YAAY,6FAA6F,YAAY,CAAC,YAAY,6FAA6F,YAAY,CAAC,YAAY,6FAA6F,YAAY,CAAC,YAAY,6FAA6F,YAAY,CAAC,YAAY,6FAA6F,YAAY,CAAC,YAAY,0FAA0F,YAAY,CAAC,YAAY,0FAA0F,YAAY,CAAC,YAAY,0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,CAAC,aAAa,wIAAwI,aAAa,CAAC,aAAa,wIAAwI,aAAa,CAAC,aAAa,yIAAyI,aAAa,CAAC,aAAa,yIAAyI,aAAa,CAAC,aAAa,yIAAyI,aAAa,CAAC,aAAa,yIAAyI,aAAa,CAAC,aAAa,yIAAyI,aAAa,CAAC,aAAa,yIAAyI,aAAa,CAAC,aAAa,yIAAyI,aAAa,CAAC,aAAa,yIAAyI,aAAa,CAAC,aAAa,0IAA0I,aAAa,CAAC,aAAa,0IAA0I,aAAa,CAAC,aAAa,0IAA0I,aAAa,CAAC,aAAa,0IAA0I,aAAa,CAAC,aAAa,0IAA0I,aAAa,CAAC,aAAa,0IAA0I,aAAa,CAAC,aAAa,0IAA0I,aAAa,CAAC,aAAa,0IAA0I,aAAa,CAAC,aAAa,0IAA0I,aAAa,CAAC,aAAa,0IAA0I,aAAa,CAAC,aAAa,0IAA0I,aAAa,CAAC,aAAa,0IAA0I,aAAa,CAAC,aAAa,0IAA0I,aAAa,CAAC,aAAa,2IAA2I,aAAa,CAAC,aAAa,2IAA2I,aAAa,CAAC,aAAa,uIAAuI,aAAa,CAAC,aAAa,uIAAuI,aAAa,CAAC,aAAa,uIAAuI,aAAa,CAAC,aAAa,uIAAuI,aAAa,CAAC,aAAa,uIAAuI,aAAa,CAAC,aAAa,uIAAuI,aAAa,CAAC,aAAa,uIAAuI,aAAa,CAAC,aAAa,uIAAuI,aAAa,CAAC,aAAa,uIAAuI,aAAa,CAAC,aAAa,uIAAuI,aAAa,CAAC,aAAa,uIAAuI,aAAa,CAAC,aAAa,uIAAuI,aAAa,CAAC,aAAa,uIAAuI,aAAa,CAAC,aAAa,uIAAuI,aAAa,CAAC,aAAa,wIAAwI,aAAa,CAAC,aAAa,wIAAwI,aAAa,CAAC,aAAa,wIAAwI,aAAa,CAAC,aAAa,wIAAwI,aAAa,CAAC,aAAa,wIAAwI,aAAa,CAAC,aAAa,wIAAwI,aAAa,CAAC,aAAa,wIAAwI,aAAa,CAAC,aAAa,wIAAwI,aAAa,CAAC,aAAa,wIAAwI,aAAa,CAAC,aAAa,wIAAwI,aAAa,CAAC,aAAa,wIAAwI,aAAa,CAAC,aAAa,wIAAwI,aAAa,CAAC,aAAa,wIAAwI,aAAa,CAAC,aAAa,yIAAyI,aAAa,CAAC,aAAa,yIAAyI,aAAa,CAAC,aAAa,q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,CAAC,aAAa,wFAAwF,aAAa,CAAC,aAAa,wFAAwF,aAAa,CAAC,aAAa,wFAAwF,aAAa,CAAC,aAAa,wFAAwF,YAAY,CAAC,YAAY,iDAAiD,aAAa,CAAC,aAAa,wFAAwF,aAAa,CAAC,aAAa,wFAAwF,aAAa,CAAC,aAAa,wFAAwF,aAAa,CAAC,aAAa,wFAAwF,aAAa,CAAC,aAAa,wFAAwF,aAAa,CAAC,aAAa,wFAAwF,aAAa,CAAC,aAAa,wFAAwF,aAAa,CAAC,aAAa,wFAAwF,aAAa,CAAC,aAAa,wFAAwF,aAAa,CAAC,aAAa,wFAAwF,YAAY,CAAC,YAAY,iDAAiD,aAAa,CAAC,aAAa,wFAAwF,aAAa,CAAC,aAAa,wFAAwF,aAAa,CAAC,aAAa,wFAAwF,aAAa,CAAC,aAAa,wFAAwF,aAAa,CAAC,aAAa,wFAAwF,aAAa,CAAC,aAAa,wFAAwF,aAAa,CAAC,aAAa,wFAAwF,aAAa,CAAC,aAAa,wFAAwF,aAAa,CAAC,aAAa,wFAAwF,aAAa,CAAC,aAAa,wFAAwF,YAAY,CAAC,YAAY,iDAAiD,aAAa,CAAC,aAAa,wFAAwF,aAAa,CAAC,aAAa,wFAAwF,aAAa,CAAC,aAAa,wFAAwF,aAAa,CAAC,aAAa,wFAAwF,aAAa,CAAC,aAAa,wFAAwF,aAAa,CAAC,aAAa,wFAAwF,aAAa,CAAC,aAAa,wFAAwF,aAAa,CAAC,aAAa,wFAAwF,aAAa,CAAC,aAAa,wFAAwF,aAAa,CAAC,aAAa,wFAAwF,aAAa,CAAC,aAAa,wFAAwF,aAAa,CAAC,aAAa,wFAAwF,aAAa,CAAC,aAAa,wFAAwF,aAAa,CAAC,aAAa,wFAAwF,aAAa,CAAC,aAAa,wFAAwF,aAAa,CAAC,aAAa,wFAAwF,aAAa,CAAC,aAAa,wFAAwF,aAAa,CAAC,aAAa,wFAAwF,aAAa,CAAC,aAAa,wFAAwF,YAAY,CAAC,YAAY,iDAAiD,aAAa,CAAC,aAAa,8FAA8F,aAAa,CAAC,aAAa,8FAA8F,aAAa,CAAC,aAAa,8FAA8F,aAAa,CAAC,aAAa,8FAA8F,aAAa,CAAC,aAAa,8FAA8F,aAAa,CAAC,aAAa,8FAA8F,aAAa,CAAC,aAAa,8FAA8F,aAAa,CAAC,aAAa,8FAA8F,aAAa,CAAC,aAAa,8FAA8F,aAAa,CAAC,aAAa,+FAA+F,aAAa,CAAC,aAAa,+FAA+F,aAAa,CAAC,aAAa,+FAA+F,aAAa,CAAC,aAAa,+FAA+F,aAAa,CAAC,aAAa,+FAA+F,aAAa,CAAC,aAAa,+FAA+F,aAAa,CAAC,aAAa,+FAA+F,aAAa,CAAC,aAAa,+FAA+F,aAAa,CAAC,aAAa,+FAA+F,aAAa,CAAC,aAAa,+FAA+F,aAAa,CAAC,aAAa,+FAA+F,aAAa,CAAC,aAAa,+FAA+F,aAAa,CAAC,aAAa,+FAA+F,aAAa,CAAC,aAAa,+FAA+F,aAAa,CAAC,aAAa,+FAA+F,aAAa,CAAC,aAAa,+FAA+F,aAAa,CAAC,aAAa,+FAA+F,aAAa,CAAC,aAAa,+FAA+F,aAAa,CAAC,aAAa,+FAA+F,aAAa,CAAC,aAAa,+FAA+F,aAAa,CAAC,aAAa,+FAA+F,aAAa,CAAC,aAAa,+FAA+F,aAAa,CAAC,aAAa,+FAA+F,aAAa,CAAC,aAAa,+FAA+F,aAAa,CAAC,aAAa,+FAA+F,aAAa,CAAC,aAAa,+FAA+F,aAAa,CAAC,aAAa,+FAA+F,aAAa,CAAC,aAAa,+FAA+F,aAAa,CAAC,aAAa,+FAA+F,aAAa,CAAC,aAAa,+FAA+F,aAAa,CAAC,aAAa,+FAA+F,aAAa,CAAC,aAAa,+FAA+F,aAAa,CAAC,aAAa,+FAA+F,aAAa,CAAC,aAAa,+FAA+F,aAAa,CAAC,aAAa,+FAA+F,aAAa,CAAC,aAAa,+FAA+F,aAAa,CAAC,aAAa,+FAA+F,aAAa,CAAC,aAAa,+FAA+F,aAAa,CAAC,aAAa,+FAA+F,aAAa,CAAC,aAAa,+FAA+F,aAAa,CAAC,aAAa,+FAA+F,aAAa,CAAC,aAAa,+FAA+F,aAAa,CAAC,aAAa,+FAA+F,aAAa,CAAC,aAAa,+FAA+F,aAAa,CAAC,aAAa,+FAA+F,aAAa,CAAC,aAAa,+FAA+F,aAAa,CAAC,aAAa,+FAA+F,aAAa,CAAC,aAAa,+FAA+F,aAAa,CAAC,aAAa,+FAA+F,aAAa,CAAC,aAAa,+FAA+F,aAAa,CAAC,aAAa,sFAAsF,aAAa,CAAC,aAAa,sFAAsF,aAAa,CAAC,aAAa,sFAAsF,aAAa,CAAC,aAAa,sFAAsF,aAAa,CAAC,aAAa,sFAAsF,aAAa,CAAC,aAAa,sFAAsF,aAAa,CAAC,aAAa,sFAAsF,aAAa,CAAC,aAAa,sFAAsF,aAAa,CAAC,aAAa,sFAAsF,aAAa,CAAC,aAAa,uFAAuF,aAAa,CAAC,aAAa,uFAAuF,aAAa,CAAC,aAAa,uFAAuF,aAAa,CAAC,aAAa,uFAAuF,aAAa,CAAC,aAAa,uFAAuF,aAAa,CAAC,aAAa,uFAAuF,aAAa,CAAC,aAAa,uFAAuF,aAAa,CAAC,aAAa,uFAAuF,aAAa,CAAC,aAAa,uFAAuF,aAAa,CAAC,aAAa,uFAAuF,aAAa,CAAC,aAAa,uFAAuF,aAAa,CAAC,aAAa,uFAAuF,aAAa,CAAC,aAAa,uFAAuF,aAAa,CAAC,aAAa,uFAAuF,aAAa,CAAC,aAAa,uFAAuF,aAAa,CAAC,aAAa,uFAAuF,aAAa,CAAC,aAAa,uFAAuF,aAAa,CAAC,aAAa,uFAAuF,aAAa,CAAC,aAAa,uFAAuF,aAAa,CAAC,aAAa,uFAAuF,aAAa,CAAC,aAAa,uFAAuF,aAAa,CAAC,aAAa,uFAAuF,aAAa,CAAC,aAAa,uFAAuF,aAAa,CAAC,aAAa,uFAAuF,aAAa,CAAC,aAAa,uFAAuF,aAAa,CAAC,aAAa,uFAAuF,aAAa,CAAC,aAAa,uFAAuF,aAAa,CAAC,aAAa,uFAAuF,aAAa,CAAC,aAAa,uFAAuF,aAAa,CAAC,aAAa,uFAAuF,aAAa,CAAC,aAAa,uFAAuF,aAAa,CAAC,aAAa,uFAAuF,aAAa,CAAC,aAAa,uFAAuF,aAAa,CAAC,aAAa,uFAAuF,aAAa,CAAC,aAAa,uFAAuF,aAAa,CAAC,aAAa,uFAAuF,aAAa,CAAC,aAAa,uFAAuF,aAAa,CAAC,aAAa,uFAAuF,aAAa,CAAC,aAAa,uFAAuF,aAAa,CAAC,aAAa,uFAAuF,aAAa,CAAC,aAAa,uFAAuF,aAAa,CAAC,aAAa,uFAAuF,aAAa,CAAC,aAAa,uFAAuF,aAAa,CAAC,aAAa,uFAAuF,aAAa,CAAC,aAAa,uFAAuF,aAAa,CAAC,aAAa,uFAAuF,aAAa,CAAC,aAAa,uFAAuF,aAAa,CAAC,aAAa,uFAAuF,aAAa,CAAC,aAAa,uFAAuF,aAAa,CAAC,aAAa,uFAAuF,aAAa,CAAC,aAAa,uFAAuF,aAAa,CAAC,aAAa,6FAA6F,aAAa,CAAC,aAAa,6FAA6F,aAAa,CAAC,aAAa,6FAA6F,aAAa,CAAC,aAAa,6FAA6F,aAAa,CAAC,aAAa,6FAA6F,aAAa,CAAC,aAAa,6FAA6F,aAAa,CAAC,aAAa,6FAA6F,aAAa,CAAC,aAAa,6FAA6F,aAAa,CAAC,aAAa,6FAA6F,aAAa,CAAC,aAAa,8FAA8F,aAAa,CAAC,aAAa,8FAA8F,aAAa,CAAC,aAAa,8FAA8F,aAAa,CAAC,aAAa,8FAA8F,aAAa,CAAC,aAAa,8FAA8F,aAAa,CAAC,aAAa,8FAA8F,aAAa,CAAC,aAAa,8FAA8F,aAAa,CAAC,aAAa,8FAA8F,aAAa,CAAC,aAAa,8FAA8F,aAAa,CAAC,aAAa,8FAA8F,aAAa,CAAC,aAAa,8FAA8F,aAAa,CAAC,aAAa,8FAA8F,aAAa,CAAC,aAAa,8FAA8F,aAAa,CAAC,aAAa,8FAA8F,aAAa,CAAC,aAAa,8FAA8F,aAAa,CAAC,aAAa,8FAA8F,aAAa,CAAC,aAAa,8FAA8F,aAAa,CAAC,aAAa,8FAA8F,aAAa,CAAC,aAAa,8FAA8F,aAAa,CAAC,aAAa,8FAA8F,aAAa,CAAC,aAAa,8FAA8F,aAAa,CAAC,aAAa,8FAA8F,aAAa,CAAC,aAAa,8FAA8F,aAAa,CAAC,aAAa,8FAA8F,aAAa,CAAC,aAAa,8FAA8F,aAAa,CAAC,aAAa,8FAA8F,aAAa,CAAC,aAAa,8FAA8F,aAAa,CAAC,aAAa,8FAA8F,aAAa,CAAC,aAAa,8FAA8F,aAAa,CAAC,aAAa,8FAA8F,aAAa,CAAC,aAAa,8FAA8F,aAAa,CAAC,aAAa,8FAA8F,aAAa,CAAC,aAAa,8FAA8F,aAAa,CAAC,aAAa,8FAA8F,aAAa,CAAC,aAAa,8FAA8F,aAAa,CAAC,aAAa,8FAA8F,aAAa,CAAC,aAAa,8FAA8F,aAAa,CAAC,aAAa,8FAA8F,aAAa,CAAC,aAAa,8FAA8F,aAAa,CAAC,aAAa,8FAA8F,aAAa,CAAC,aAAa,8FAA8F,aAAa,CAAC,aAAa,8FAA8F,aAAa,CAAC,aAAa,8FAA8F,aAAa,CAA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YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,aAAa,CAAC,aAAa,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,aAAa,CAAC,aAAa,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,gBAAgB,CAAC,gBAAgB,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,CAAC,YAAY,aAAa,YAAY,C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","sources":["webpack:///../node_modules/manifesto.js/dist-umd/manifesto.js","webpack:///../node_modules/proj4-list/dist/list.min.js","webpack:///../node_modules/ol/geom/MultiPoint.js","webpack:///../node_modules/ol/geom/MultiLineString.js","webpack:///../node_modules/ol/geom/MultiPolygon.js","webpack:///../node_modules/ol/geom/GeometryCollection.js","webpack:///../node_modules/ol/format/Feature.js","webpack:///../node_modules/ol/format/JSONFeature.js","webpack:///../node_modules/ol/format/GeoJSON.js","webpack:///../node_modules/ol/xml.js","webpack:///../node_modules/ol/format/XMLFeature.js","webpack:///../node_modules/ol/format/xsd.js","webpack:///../node_modules/ol/format/KML.js","webpack:///../node_modules/ol/source/Zoomify.js","webpack:///../src/ol/maplat/source/Maplat.ts","webpack:///../node_modules/proj4/lib/constants/values.js","webpack:///../node_modules/proj4/lib/constants/PrimeMeridian.js","webpack:///../node_modules/proj4/lib/constants/units.js","webpack:///../node_modules/proj4/lib/match.js","webpack:///../node_modules/proj4/lib/projString.js","webpack:///../node_modules/wkt-parser/parser.js","webpack:///../node_modules/wkt-parser/process.js","webpack:///../node_modules/wkt-parser/index.js","webpack:///../node_modules/proj4/lib/defs.js","webpack:///../node_modules/proj4/lib/global.js","webpack:///../node_modules/proj4/lib/parseCode.js","webpack:///../node_modules/proj4/lib/extend.js","webpack:///../node_modules/proj4/lib/common/msfnz.js","webpack:///../node_modules/proj4/lib/common/sign.js","webpack:///../node_modules/proj4/lib/common/adjust_lon.js","webpack:///../node_modules/proj4/lib/common/tsfnz.js","webpack:///../node_modules/proj4/lib/common/phi2z.js","webpack:///../node_modules/proj4/lib/projections/longlat.js","webpack:///../node_modules/proj4/lib/projections.js","webpack:///../node_modules/proj4/lib/projections/merc.js","webpack:///../node_modules/proj4/lib/constants/Ellipsoid.js","webpack:///../node_modules/proj4/lib/constants/Datum.js","webpack:///../node_modules/proj4/lib/datum.js","webpack:///../node_modules/proj4/lib/nadgrid.js","webpack:///../node_modules/proj4/lib/Proj.js","webpack:///../node_modules/proj4/lib/deriveConstants.js","webpack:///../node_modules/proj4/lib/datumUtils.js","webpack:///../node_modules/proj4/lib/datum_transform.js","webpack:///../node_modules/proj4/lib/adjust_axis.js","webpack:///../node_modules/proj4/lib/common/toPoint.js","webpack:///../node_modules/proj4/lib/checkSanity.js","webpack:///../node_modules/proj4/lib/transform.js","webpack:///../node_modules/proj4/lib/core.js","webpack:///../node_modules/mgrs/mgrs.js","webpack:///../node_modules/proj4/lib/Point.js","webpack:///../node_modules/proj4/lib/common/pj_enfn.js","webpack:///../node_modules/proj4/lib/common/pj_mlfn.js","webpack:///../node_modules/proj4/lib/common/pj_inv_mlfn.js","webpack:///../node_modules/proj4/lib/projections/tmerc.js","webpack:///../node_modules/proj4/lib/common/sinh.js","webpack:///../node_modules/proj4/lib/common/hypot.js","webpack:///../node_modules/proj4/lib/common/asinhy.js","webpack:///../node_modules/proj4/lib/common/log1py.js","webpack:///../node_modules/proj4/lib/common/gatg.js","webpack:///../node_modules/proj4/lib/common/clens_cmplx.js","webpack:///../node_modules/proj4/lib/common/cosh.js","webpack:///../node_modules/proj4/lib/projections/etmerc.js","webpack:///../node_modules/proj4/lib/common/clens.js","webpack:///../node_modules/proj4/lib/projections/utm.js","webpack:///../node_modules/proj4/lib/common/adjust_zone.js","webpack:///../node_modules/proj4/lib/common/srat.js","webpack:///../node_modules/proj4/lib/projections/gauss.js","webpack:///../node_modules/proj4/lib/projections/sterea.js","webpack:///../node_modules/proj4/lib/projections/stere.js","webpack:///../node_modules/proj4/lib/projections/somerc.js","webpack:///../node_modules/proj4/lib/projections/omerc.js","webpack:///../node_modules/proj4/lib/projections/lcc.js","webpack:///../node_modules/proj4/lib/projections/krovak.js","webpack:///../node_modules/proj4/lib/common/mlfn.js","webpack:///../node_modules/proj4/lib/common/e0fn.js","webpack:///../node_modules/proj4/lib/common/e1fn.js","webpack:///../node_modules/proj4/lib/common/e2fn.js","webpack:///../node_modules/proj4/lib/common/e3fn.js","webpack:///../node_modules/proj4/lib/common/gN.js","webpack:///../node_modules/proj4/lib/common/adjust_lat.js","webpack:///../node_modules/proj4/lib/common/imlfn.js","webpack:///../node_modules/proj4/lib/projections/cass.js","webpack:///../node_modules/proj4/lib/common/qsfnz.js","webpack:///../node_modules/proj4/lib/projections/laea.js","webpack:///../node_modules/proj4/lib/common/asinz.js","webpack:///../node_modules/proj4/lib/projections/aea.js","webpack:///../node_modules/proj4/lib/projections/gnom.js","webpack:///../node_modules/proj4/lib/projections/cea.js","webpack:///../node_modules/proj4/lib/common/iqsfnz.js","webpack:///../node_modules/proj4/lib/projections/eqc.js","webpack:///../node_modules/proj4/lib/projections/poly.js","webpack:///../node_modules/proj4/lib/projections/nzmg.js","webpack:///../node_modules/proj4/lib/projections/mill.js","webpack:///../node_modules/proj4/lib/projections/sinu.js","webpack:///../node_modules/proj4/lib/projections/moll.js","webpack:///../node_modules/proj4/lib/projections/eqdc.js","webpack:///../node_modules/proj4/lib/projections/vandg.js","webpack:///../node_modules/proj4/lib/projections/aeqd.js","webpack:///../node_modules/proj4/lib/projections/ortho.js","webpack:///../node_modules/proj4/lib/projections/qsc.js","webpack:///../node_modules/proj4/lib/projections/robin.js","webpack:///../node_modules/proj4/lib/projections/geocent.js","webpack:///../node_modules/proj4/lib/projections/tpers.js","webpack:///../node_modules/proj4/lib/projections/geos.js","webpack:///../node_modules/proj4/lib/index.js","webpack:///../node_modules/proj4/projs.js","webpack:///../node_modules/ol/format/IIIFInfo.js","webpack:///../node_modules/ol/source/IIIF.js","webpack:///../src/ol/maplat/source/Factory.ts","webpack:///../node_modules/ol/DataTile.js","webpack:///../node_modules/ol/reproj/DataTile.js","webpack:///../node_modules/ol/webgl/BaseTileRepresentation.js","webpack:///../node_modules/ol/webgl.js","webpack:///../node_modules/ol/webgl/Buffer.js","webpack:///../node_modules/ol/webgl/TileTexture.js","webpack:///../node_modules/ol/webgl/ContextEventType.js","webpack:///../node_modules/ol/webgl/PostProcessingPass.js","webpack:///../node_modules/ol/vec/mat4.js","webpack:///../node_modules/ol/webgl/Helper.js","webpack:///../node_modules/ol/renderer/webgl/Layer.js","webpack:///../node_modules/ol/renderer/webgl/TileLayerBase.js","webpack:///../node_modules/ol/renderer/webgl/TileLayer.js","webpack:///../node_modules/ol/webgl/PaletteTexture.js","webpack:///../node_modules/ol/expr/gpu.js","webpack:///../node_modules/ol/webgl/styleparser.js","webpack:///../node_modules/ol/layer/WebGLTile.js","webpack:///../node_modules/monotone-chain-convex-hull/lib-esm/index.js","webpack:///../node_modules/ol/source/Cluster.js","webpack:///../src/ol/maplat/clusterRegister.ts","webpack:///../src/ol/maplat/locale/selector.ts","webpack:///../src/ol/maplat/vector/filter.ts","webpack:///../src/ol/maplat/viewport/switcher.ts","webpack:///./ol_parts.js"],"sourcesContent":["!function(e,t){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(\"manifesto\",[],t):\"object\"==typeof exports?exports.manifesto=t():e.manifesto=t()}(\"undefined\"!=typeof self?self:this,(function(){return function(e){var t={};function r(n){if(t[n])return t[n].exports;var i=t[n]={i:n,l:!1,exports:{}};return e[n].call(i.exports,i,i.exports,r),i.l=!0,i.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var i in e)r.d(n,i,function(t){return e[t]}.bind(null,i));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,\"a\",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p=\"\",r(r.s=7)}([function(e,t,r){\"use strict\";function n(e){for(var r in e)t.hasOwnProperty(r)||(t[r]=e[r])}Object.defineProperty(t,\"__esModule\",{value:!0}),n(r(9)),n(r(10)),n(r(11)),n(r(12)),n(r(13)),n(r(14)),n(r(15)),n(r(16)),n(r(17)),n(r(31)),n(r(32)),n(r(33)),n(r(34)),n(r(35)),n(r(38)),n(r(39)),n(r(40)),n(r(41)),n(r(42)),n(r(43)),n(r(44)),n(r(45)),n(r(46)),n(r(47)),n(r(48)),n(r(49)),n(r(50)),n(r(3))},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),function(e){e.BOOKMARKING=\"oa:bookmarking\",e.CLASSIFYING=\"oa:classifying\",e.COMMENTING=\"oa:commenting\",e.DESCRIBING=\"oa:describing\",e.EDITING=\"oa:editing\",e.HIGHLIGHTING=\"oa:highlighting\",e.IDENTIFYING=\"oa:identifying\",e.LINKING=\"oa:linking\",e.MODERATING=\"oa:moderating\",e.PAINTING=\"sc:painting\",e.QUESTIONING=\"oa:questioning\",e.REPLYING=\"oa:replying\",e.TAGGING=\"oa:tagging\",e.TRANSCRIBING=\"oad:transcribing\"}(t.AnnotationMotivation||(t.AnnotationMotivation={})),function(e){e.AUTO_ADVANCE=\"auto-advance\",e.CONTINUOUS=\"continuous\",e.FACING_PAGES=\"facing-pages\",e.HIDDEN=\"hidden\",e.INDIVIDUALS=\"individuals\",e.MULTI_PART=\"multi-part\",e.NO_NAV=\"no-nav\",e.NON_PAGED=\"non-paged\",e.PAGED=\"paged\",e.REPEAT=\"repeat\",e.SEQUENCE=\"sequence\",e.THUMBNAIL_NAV=\"thumbnail-nav\",e.TOGETHER=\"together\",e.UNORDERED=\"unordered\"}(t.Behavior||(t.Behavior={})),function(e){e.CANVAS=\"canvas\",e.CHOICE=\"choice\",e.OA_CHOICE=\"oa:choice\",e.CONTENT_AS_TEXT=\"contentastext\",e.DATASET=\"dataset\",e.DOCUMENT=\"document\",e.IMAGE=\"image\",e.MODEL=\"model\",e.MOVING_IMAGE=\"movingimage\",e.PDF=\"pdf\",e.PHYSICAL_OBJECT=\"physicalobject\",e.SOUND=\"sound\",e.TEXT=\"text\",e.TEXTUALBODY=\"textualbody\",e.VIDEO=\"video\"}(t.ExternalResourceType||(t.ExternalResourceType={})),function(e){e.ANNOTATION=\"annotation\",e.CANVAS=\"canvas\",e.COLLECTION=\"collection\",e.MANIFEST=\"manifest\",e.RANGE=\"range\",e.SEQUENCE=\"sequence\"}(t.IIIFResourceType||(t.IIIFResourceType={})),function(e){e.AUDIO_MP4=\"audio/mp4\",e.CORTO=\"application/corto\",e.DICOM=\"application/dicom\",e.DRACO=\"application/draco\",e.EPUB=\"application/epub+zip\",e.GIRDER=\"image/vnd.kitware.girder\",e.GLB=\"model/gltf-binary\",e.GLTF=\"model/gltf+json\",e.IIIF_PRESENTATION_2='application/ld+json;profile=\"http://iiif.io/api/presentation/2/context.json\"',e.IIIF_PRESENTATION_3='application/ld+json;profile=\"http://iiif.io/api/presentation/3/context.json\"',e.JPG=\"image/jpeg\",e.M3U8=\"application/vnd.apple.mpegurl\",e.MP3=\"audio/mp3\",e.MPEG_DASH=\"application/dash+xml\",e.OBJ=\"text/plain\",e.OPF=\"application/oebps-package+xml\",e.PDF=\"application/pdf\",e.PLY=\"application/ply\",e.THREEJS=\"application/vnd.threejs+json\",e.USDZ=\"model/vnd.usd+zip\",e.VIDEO_MP4=\"video/mp4\",e.WAV=\"audio/wav\",e.WEBM=\"video/webm\"}(t.MediaType||(t.MediaType={})),function(e){e.DOC=\"application/msword\",e.DOCX=\"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",e.PDF=\"application/pdf\"}(t.RenderingFormat||(t.RenderingFormat={})),function(e){e.IMAGE_0_COMPLIANCE_LEVEL_0=\"http://library.stanford.edu/iiif/image-api/compliance.html#level0\",e.IMAGE_0_COMPLIANCE_LEVEL_1=\"http://library.stanford.edu/iiif/image-api/compliance.html#level1\",e.IMAGE_0_COMPLIANCE_LEVEL_2=\"http://library.stanford.edu/iiif/image-api/compliance.html#level2\",e.IMAGE_0_CONFORMANCE_LEVEL_0=\"http://library.stanford.edu/iiif/image-api/conformance.html#level0\",e.IMAGE_0_CONFORMANCE_LEVEL_1=\"http://library.stanford.edu/iiif/image-api/conformance.html#level1\",e.IMAGE_0_CONFORMANCE_LEVEL_2=\"http://library.stanford.edu/iiif/image-api/conformance.html#level2\",e.IMAGE_1_COMPLIANCE_LEVEL_0=\"http://library.stanford.edu/iiif/image-api/1.1/compliance.html#level0\",e.IMAGE_1_COMPLIANCE_LEVEL_1=\"http://library.stanford.edu/iiif/image-api/1.1/compliance.html#level1\",e.IMAGE_1_COMPLIANCE_LEVEL_2=\"http://library.stanford.edu/iiif/image-api/1.1/compliance.html#level2\",e.IMAGE_1_CONFORMANCE_LEVEL_0=\"http://library.stanford.edu/iiif/image-api/1.1/conformance.html#level0\",e.IMAGE_1_CONFORMANCE_LEVEL_1=\"http://library.stanford.edu/iiif/image-api/1.1/conformance.html#level1\",e.IMAGE_1_CONFORMANCE_LEVEL_2=\"http://library.stanford.edu/iiif/image-api/1.1/conformance.html#level2\",e.IMAGE_1_LEVEL_0=\"http://iiif.io/api/image/1/level0.json\",e.IMAGE_1_PROFILE_LEVEL_0=\"http://iiif.io/api/image/1/profiles/level0.json\",e.IMAGE_1_LEVEL_1=\"http://iiif.io/api/image/1/level1.json\",e.IMAGE_1_PROFILE_LEVEL_1=\"http://iiif.io/api/image/1/profiles/level1.json\",e.IMAGE_1_LEVEL_2=\"http://iiif.io/api/image/1/level2.json\",e.IMAGE_1_PROFILE_LEVEL_2=\"http://iiif.io/api/image/1/profiles/level2.json\",e.IMAGE_2_LEVEL_0=\"http://iiif.io/api/image/2/level0.json\",e.IMAGE_2_PROFILE_LEVEL_0=\"http://iiif.io/api/image/2/profiles/level0.json\",e.IMAGE_2_LEVEL_1=\"http://iiif.io/api/image/2/level1.json\",e.IMAGE_2_PROFILE_LEVEL_1=\"http://iiif.io/api/image/2/profiles/level1.json\",e.IMAGE_2_LEVEL_2=\"http://iiif.io/api/image/2/level2.json\",e.IMAGE_2_PROFILE_LEVEL_2=\"http://iiif.io/api/image/2/profiles/level2.json\",e.AUTH_0_CLICK_THROUGH=\"http://iiif.io/api/auth/0/login/clickthrough\",e.AUTH_0_LOGIN=\"http://iiif.io/api/auth/0/login\",e.AUTH_0_LOGOUT=\"http://iiif.io/api/auth/0/logout\",e.AUTH_0_RESTRICTED=\"http://iiif.io/api/auth/0/login/restricted\",e.AUTH_0_TOKEN=\"http://iiif.io/api/auth/0/token\",e.AUTH_1_CLICK_THROUGH=\"http://iiif.io/api/auth/1/clickthrough\",e.AUTH_1_EXTERNAL=\"http://iiif.io/api/auth/1/external\",e.AUTH_1_KIOSK=\"http://iiif.io/api/auth/1/kiosk\",e.AUTH_1_LOGIN=\"http://iiif.io/api/auth/1/login\",e.AUTH_1_LOGOUT=\"http://iiif.io/api/auth/1/logout\",e.AUTH_1_PROBE=\"http://iiif.io/api/auth/1/probe\",e.AUTH_1_TOKEN=\"http://iiif.io/api/auth/1/token\",e.SEARCH_0=\"http://iiif.io/api/search/0/search\",e.SEARCH_0_AUTO_COMPLETE=\"http://iiif.io/api/search/0/autocomplete\",e.SEARCH_1=\"http://iiif.io/api/search/1/search\",e.SEARCH_1_AUTO_COMPLETE=\"http://iiif.io/api/search/1/autocomplete\",e.TRACKING_EXTENSIONS=\"http://universalviewer.io/tracking-extensions-profile\",e.UI_EXTENSIONS=\"http://universalviewer.io/ui-extensions-profile\",e.PRINT_EXTENSIONS=\"http://universalviewer.io/print-extensions-profile\",e.SHARE_EXTENSIONS=\"http://universalviewer.io/share-extensions-profile\",e.DOWNLOAD_EXTENSIONS=\"http://universalviewer.io/download-extensions-profile\",e.OTHER_MANIFESTATIONS=\"http://iiif.io/api/otherManifestations.json\",e.IXIF=\"http://wellcomelibrary.org/ld/ixif/0/alpha.json\"}(t.ServiceProfile||(t.ServiceProfile={})),function(e){e.IMAGE_SERVICE_2=\"ImageService2\",e.IMAGE_SERVICE_3=\"ImageService3\"}(t.ServiceType||(t.ServiceType={})),function(e){e.BOTTOM_TO_TOP=\"bottom-to-top\",e.LEFT_TO_RIGHT=\"left-to-right\",e.RIGHT_TO_LEFT=\"right-to-left\",e.TOP_TO_BOTTOM=\"top-to-bottom\"}(t.ViewingDirection||(t.ViewingDirection={})),function(e){e.CONTINUOUS=\"continuous\",e.INDIVIDUALS=\"individuals\",e.NON_PAGED=\"non-paged\",e.PAGED=\"paged\",e.TOP=\"top\"}(t.ViewingHint||(t.ViewingHint={}))},function(e,t,r){var n=r(21).Symbol;e.exports=n},function(e,t,r){\"use strict\";var n=this&&this.__awaiter||function(e,t,r,n){return new(r||(r=Promise))((function(i,o){function a(e){try{u(n.next(e))}catch(e){o(e)}}function s(e){try{u(n.throw(e))}catch(e){o(e)}}function u(e){var t;e.done?i(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(a,s)}u((n=n.apply(e,t||[])).next())}))},i=this&&this.__generator||function(e,t){var r,n,i,o,a={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return o={next:s(0),throw:s(1),return:s(2)},\"function\"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function s(o){return function(s){return function(o){if(r)throw new TypeError(\"Generator is already executing.\");for(;a;)try{if(r=1,n&&(i=2&o[0]?n.return:o[0]?n.throw||((i=n.return)&&i.call(n),0):n.next)&&!(i=i.call(n,o[1])).done)return i;switch(n=0,i&&(o=[2&o[0],i.value]),o[0]){case 0:case 1:i=o;break;case 4:return a.label++,{value:o[1],done:!1};case 5:a.label++,n=o[1],o=[0];continue;case 7:o=a.ops.pop(),a.trys.pop();continue;default:if(!(i=(i=a.trys).length>0&&i[i.length-1])&&(6===o[0]||2===o[0])){a=0;continue}if(3===o[0]&&(!i||o[1]>i[0]&&o[1]<i[3])){a.label=o[1];break}if(6===o[0]&&a.label<i[1]){a.label=i[1],i=o;break}if(i&&a.label<i[2]){a.label=i[2],a.ops.push(o);break}i[2]&&a.ops.pop(),a.trys.pop();continue}o=t.call(e,a)}catch(e){o=[6,e],n=0}finally{r=i=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,s])}}};Object.defineProperty(t,\"__esModule\",{value:!0});var o=r(0),a=r(1),s=r(36);r(37);var u=function(){function e(){}return e.getMediaType=function(e){return(e=(e=e.toLowerCase()).split(\";\")[0]).trim()},e.getImageQuality=function(e){return e===a.ServiceProfile.IMAGE_0_COMPLIANCE_LEVEL_1||e===a.ServiceProfile.IMAGE_0_COMPLIANCE_LEVEL_2||e===a.ServiceProfile.IMAGE_1_COMPLIANCE_LEVEL_1||e===a.ServiceProfile.IMAGE_1_COMPLIANCE_LEVEL_2||e===a.ServiceProfile.IMAGE_0_CONFORMANCE_LEVEL_1||e===a.ServiceProfile.IMAGE_0_CONFORMANCE_LEVEL_2||e===a.ServiceProfile.IMAGE_1_CONFORMANCE_LEVEL_1||e===a.ServiceProfile.IMAGE_1_CONFORMANCE_LEVEL_2||e===a.ServiceProfile.IMAGE_1_LEVEL_1||e===a.ServiceProfile.IMAGE_1_PROFILE_LEVEL_1||e===a.ServiceProfile.IMAGE_1_LEVEL_2||e===a.ServiceProfile.IMAGE_1_PROFILE_LEVEL_2?\"native\":\"default\"},e.getInexactLocale=function(e){return-1!==e.indexOf(\"-\")?e.substr(0,e.indexOf(\"-\")):e},e.getLocalisedValue=function(e,t){if(!Array.isArray(e))return e;for(var r=0;r<e.length;r++){var n=e[r];if(t===n[\"@language\"])return n[\"@value\"]}var i=t.substr(0,t.indexOf(\"-\"));for(r=0;r<e.length;r++){var o=e[r];if(o[\"@language\"]===i)return o[\"@value\"]}return null},e.generateTreeNodeIds=function(t,r){var n;void 0===r&&(r=0),n=t.parentNode?t.parentNode.id+\"-\"+r:\"0\",t.id=n;for(var i=0;i<t.nodes.length;i++){var o=t.nodes[i];e.generateTreeNodeIds(o,i)}},e.normaliseType=function(e){return-1!==(e=(e||\"\").toLowerCase()).indexOf(\":\")?e.split(\":\")[1]:e},e.normaliseUrl=function(e){return-1!==(e=e.substr(e.indexOf(\"://\"))).indexOf(\"#\")&&(e=e.split(\"#\")[0]),e},e.normalisedUrlsMatch=function(t,r){return e.normaliseUrl(t)===e.normaliseUrl(r)},e.isImageProfile=function(t){return!!(e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_0_COMPLIANCE_LEVEL_0)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_0_COMPLIANCE_LEVEL_1)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_0_COMPLIANCE_LEVEL_2)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_1_COMPLIANCE_LEVEL_0)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_1_COMPLIANCE_LEVEL_2)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_0_CONFORMANCE_LEVEL_0)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_0_CONFORMANCE_LEVEL_1)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_0_CONFORMANCE_LEVEL_2)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_1_CONFORMANCE_LEVEL_1)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_1_CONFORMANCE_LEVEL_2)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_1_LEVEL_0)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_1_PROFILE_LEVEL_0)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_1_LEVEL_1)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_1_PROFILE_LEVEL_1)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_1_LEVEL_2)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_1_PROFILE_LEVEL_2)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_2_LEVEL_0)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_2_PROFILE_LEVEL_0)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_2_LEVEL_1)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_2_PROFILE_LEVEL_1)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_2_LEVEL_2)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_2_PROFILE_LEVEL_2))},e.isImageServiceType=function(e){return null!==e&&e.toLowerCase()===a.ServiceType.IMAGE_SERVICE_2.toLowerCase()||e===a.ServiceType.IMAGE_SERVICE_3.toLowerCase()},e.isLevel0ImageProfile=function(t){return!!(e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_0_COMPLIANCE_LEVEL_0)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_1_COMPLIANCE_LEVEL_0)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_0_CONFORMANCE_LEVEL_0)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_1_CONFORMANCE_LEVEL_0)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_1_LEVEL_0)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_1_PROFILE_LEVEL_0)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_2_LEVEL_0)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_2_PROFILE_LEVEL_0))},e.isLevel1ImageProfile=function(t){return!!(e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_0_COMPLIANCE_LEVEL_1)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_1_COMPLIANCE_LEVEL_1)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_0_CONFORMANCE_LEVEL_1)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_1_CONFORMANCE_LEVEL_1)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_1_LEVEL_1)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_1_PROFILE_LEVEL_1)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_2_LEVEL_1)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_2_PROFILE_LEVEL_1))},e.isLevel2ImageProfile=function(t){return!!(e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_0_COMPLIANCE_LEVEL_2)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_1_COMPLIANCE_LEVEL_2)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_0_CONFORMANCE_LEVEL_2)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_1_CONFORMANCE_LEVEL_2)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_1_LEVEL_2)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_1_PROFILE_LEVEL_2)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_2_LEVEL_2)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_2_PROFILE_LEVEL_2))},e.parseManifest=function(e,t){return o.Deserialiser.parse(e,t)},e.checkStatus=function(e){if(e.ok)return e;var t=new Error(e.statusText);return t.response=e,Promise.reject(t)},e.loadManifest=function(t){return new Promise((function(r,n){fetch(t).then(e.checkStatus).then((function(e){return e.json()})).then((function(e){r(e)})).catch((function(e){n()}))}))},e.loadExternalResourcesAuth1=function(t,r,n,i,o,a,s,u){return new Promise((function(c,l){var p=t.map((function(t){return e.loadExternalResourceAuth1(t,r,n,i,o,a,s,u)}));Promise.all(p).then((function(){c(t)})).catch((function(e){l(e)}))}))},e.loadExternalResourceAuth1=function(t,r,o,a,u,c,l,p){return n(this,void 0,void 0,(function(){var n;return i(this,(function(i){switch(i.label){case 0:return[4,a(t)];case 1:return(n=i.sent())?[4,t.getData(n)]:[3,6];case 2:return i.sent(),t.status!==s.OK?[3,3]:[2,t];case 3:return[4,e.doAuthChain(t,r,o,u,c,l,p)];case 4:i.sent(),i.label=5;case 5:if(t.status===s.OK||t.status===s.MOVED_TEMPORARILY)return[2,t];throw e.createAuthorizationFailedError();case 6:return[4,t.getData()];case 7:return i.sent(),t.status!==s.MOVED_TEMPORARILY&&t.status!==s.UNAUTHORIZED?[3,9]:[4,e.doAuthChain(t,r,o,u,c,l,p)];case 8:i.sent(),i.label=9;case 9:if(t.status===s.OK||t.status===s.MOVED_TEMPORARILY)return[2,t];throw e.createAuthorizationFailedError()}}))}))},e.doAuthChain=function(t,r,o,a,u,c,l){return n(this,void 0,void 0,(function(){var n,p,f,h,_,g,d,v;return i(this,(function(i){switch(i.label){case 0:return t.isAccessControlled()?((n=t.externalService)&&(n.options=t.options),(p=t.kioskService)&&(p.options=t.options),(f=t.clickThroughService)&&(f.options=t.options),(h=t.loginService)&&(h.options=t.options),t.isResponseHandled||t.status!==s.MOVED_TEMPORARILY?[3,2]:[4,c(t)]):[2,t];case 1:return i.sent(),[2,t];case 2:return _=null,g=null,(_=n)?(g=_,[4,e.attemptResourceWithToken(t,o,_)]):[3,4];case 3:return i.sent(),[2,t];case 4:return(_=p)?(g=_,(d=r(_))?[4,a(d)]:[3,7]):[3,7];case 5:return i.sent(),[4,e.attemptResourceWithToken(t,o,_)];case 6:return i.sent(),[2,t];case 7:return(_=f)?(g=_,[4,u(t,_)]):[3,11];case 8:return(v=i.sent())?[4,a(v)]:[3,11];case 9:return i.sent(),[4,e.attemptResourceWithToken(t,o,_)];case 10:return i.sent(),[2,t];case 11:return(_=h)?(g=_,[4,u(t,_)]):[3,15];case 12:return(v=i.sent())?[4,a(v)]:[3,15];case 13:return i.sent(),[4,e.attemptResourceWithToken(t,o,_)];case 14:return i.sent(),[2,t];case 15:return g&&l(t,g),[2]}}))}))},e.attemptResourceWithToken=function(e,t,r){return n(this,void 0,void 0,(function(){var n,o;return i(this,(function(i){switch(i.label){case 0:return(n=r.getService(a.ServiceProfile.AUTH_1_TOKEN))?[4,t(e,n)]:[3,3];case 1:return(o=i.sent())&&o.accessToken?[4,e.getData(o)]:[3,3];case 2:return i.sent(),[2,e];case 3:return[2]}}))}))},e.loadExternalResourcesAuth09=function(t,r,n,i,o,a,s,u,c,l){return new Promise((function(p,f){var h=t.map((function(t){return e.loadExternalResourceAuth09(t,r,n,i,o,a,s,u,c,l)}));Promise.all(h).then((function(){p(t)})).catch((function(e){f(e)}))}))},e.loadExternalResourceAuth09=function(t,r,n,i,o,a,u,c,l,p){return new Promise((function(f,h){p&&p.pessimisticAccessControl?t.getData().then((function(){t.isAccessControlled()?t.clickThroughService?(f(n(t)),f(i(t))):o(t).then((function(){a(t,!0).then((function(r){t.getData(r).then((function(){f(l(t))})).catch((function(t){h(e.createInternalServerError(t))}))})).catch((function(t){h(e.createInternalServerError(t))}))})).catch((function(t){h(e.createInternalServerError(t))})):f(t)})).catch((function(t){h(e.createInternalServerError(t))})):c(t,r).then((function(p){p?t.getData(p).then((function(){t.status===s.OK?f(l(t)):e.authorize(t,r,n,i,o,a,u,c).then((function(){f(l(t))})).catch((function(t){h(e.createAuthorizationFailedError())}))})).catch((function(t){h(e.createAuthorizationFailedError())})):e.authorize(t,r,n,i,o,a,u,c).then((function(){f(l(t))})).catch((function(t){h(e.createAuthorizationFailedError())}))})).catch((function(t){h(e.createAuthorizationFailedError())}))}))},e.createError=function(e,t){var r=new Error;return r.message=t,r.name=String(e),r},e.createAuthorizationFailedError=function(){return e.createError(o.StatusCode.AUTHORIZATION_FAILED,\"Authorization failed\")},e.createRestrictedError=function(){return e.createError(o.StatusCode.RESTRICTED,\"Restricted\")},e.createInternalServerError=function(t){return e.createError(o.StatusCode.INTERNAL_SERVER_ERROR,t)},e.authorize=function(t,r,n,i,o,a,u,c){return new Promise((function(l,p){t.getData().then((function(){t.isAccessControlled()?c(t,r).then((function(c){c?t.getData(c).then((function(){t.status===s.OK?l(t):e.showAuthInteraction(t,r,n,i,o,a,u,l,p)})).catch((function(t){p(e.createInternalServerError(t))})):a(t,!1).then((function(c){c?u(t,c,r).then((function(){t.getData(c).then((function(){t.status===s.OK?l(t):e.showAuthInteraction(t,r,n,i,o,a,u,l,p)})).catch((function(t){p(e.createInternalServerError(t))}))})).catch((function(t){p(e.createInternalServerError(t))})):e.showAuthInteraction(t,r,n,i,o,a,u,l,p)}))})).catch((function(t){p(e.createInternalServerError(t))})):l(t)}))}))},e.showAuthInteraction=function(t,r,n,i,o,a,u,c,l){t.status!==s.MOVED_TEMPORARILY||t.isResponseHandled?t.clickThroughService&&!t.isResponseHandled?n(t).then((function(){a(t,!0).then((function(n){u(t,n,r).then((function(){t.getData(n).then((function(){c(t)})).catch((function(t){l(e.createInternalServerError(t))}))})).catch((function(t){l(e.createInternalServerError(t))}))})).catch((function(t){l(e.createInternalServerError(t))}))})):o(t).then((function(){a(t,!0).then((function(n){u(t,n,r).then((function(){t.getData(n).then((function(){c(t)})).catch((function(t){l(e.createInternalServerError(t))}))})).catch((function(t){l(e.createInternalServerError(t))}))})).catch((function(t){l(e.createInternalServerError(t))}))})):c(t)},e.getService=function(e,t){for(var r=this.getServices(e),n=0;n<r.length;n++){var i=r[n];if(i.getProfile()===t)return i}return null},e.getResourceById=function(t,r){return e.traverseAndFind(t.__jsonld,\"@id\",r)},e.traverseAndFind=function(t,r,n){if(t.hasOwnProperty(r)&&t[r]===n)return t;for(var i=0;i<Object.keys(t).length;i++)if(\"object\"==typeof t[Object.keys(t)[i]]){var o=e.traverseAndFind(t[Object.keys(t)[i]],r,n);if(null!=o)return o}},e.getServices=function(t,r){var n=void 0===r?{}:r,i=n.onlyService,a=void 0!==i&&i,s=n.onlyServices,u=void 0!==s&&s,c=n.skipParentResources,l=[];!(void 0!==c&&c)&&t&&t.options&&t.options.resource&&t.options.resource!==t&&l.push.apply(l,e.getServices(t.options.resource,{onlyServices:!0}));var p=u?[]:(t.__jsonld||t).service||[];if(Array.isArray(p)||(p=[p]),a||p.push.apply(p,(t.__jsonld||t).services||[]),0===p.length)return l;for(var f=0;f<p.length;f++){var h=p[f];if(\"string\"==typeof h){var _=this.getResourceById(t.options.resource,h);_&&l.push(new o.Service(_.__jsonld||_,t.options))}else l.push(new o.Service(h,t.options))}return l},e.getTemporalComponent=function(e){var t=/t=([^&]+)/g.exec(e),r=null;return t&&t[1]&&(r=t[1].split(\",\")),r},e}();t.Utils=u},function(e,t,r){var n=r(19),i=r(20);e.exports=function e(t,r,o,a,s){var u=-1,c=t.length;for(o||(o=i),s||(s=[]);++u<c;){var l=t[u];r>0&&o(l)?r>1?e(l,r-1,o,a,s):n(s,l):a||(s[s.length]=l)}return s}},function(e,t){e.exports=function(e){return null!=e&&\"object\"==typeof e}},function(e,t,r){\"use strict\";r.r(t),t.default=function(e,t){return t=t||{},new Promise((function(r,n){var i=new XMLHttpRequest,o=[],a=[],s={},u=function(){return{ok:2==(i.status/100|0),statusText:i.statusText,status:i.status,url:i.responseURL,text:function(){return Promise.resolve(i.responseText)},json:function(){return Promise.resolve(JSON.parse(i.responseText))},blob:function(){return Promise.resolve(new Blob([i.response]))},clone:u,headers:{keys:function(){return o},entries:function(){return a},get:function(e){return s[e.toLowerCase()]},has:function(e){return e.toLowerCase()in s}}}};for(var c in i.open(t.method||\"get\",e,!0),i.onload=function(){i.getAllResponseHeaders().replace(/^(.*?):[^\\S\\n]*([\\s\\S]*?)$/gm,(function(e,t,r){o.push(t=t.toLowerCase()),a.push([t,r]),s[t]=s[t]?s[t]+\",\"+r:r})),r(u())},i.onerror=n,i.withCredentials=\"include\"==t.credentials,t.headers)i.setRequestHeader(c,t.headers[c]);i.send(t.body||null)}))}},function(e,t,r){e.exports=r(8)},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),function(e){for(var r in e)t.hasOwnProperty(r)||(t[r]=e[r])}(r(0));var n=r(3);t.loadManifest=function(e){return n.Utils.loadManifest(e)},t.parseManifest=function(e,t){return n.Utils.parseManifest(e,t)}},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=function(){function e(e){this.__jsonld=e,this.context=this.getProperty(\"context\"),this.id=this.getProperty(\"id\")}return e.prototype.getProperty=function(e){var t=null;return this.__jsonld&&((t=this.__jsonld[e])||(t=this.__jsonld[\"@\"+e])),t},e}();t.JSONLDResource=n},function(e,t,r){\"use strict\";var n,i=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});Object.defineProperty(t,\"__esModule\",{value:!0});var o=r(0),a=r(1),s=function(e){function t(t,r){var n=e.call(this,t)||this;return n.options=r,n}return i(t,e),t.prototype.getIIIFResourceType=function(){return o.Utils.normaliseType(this.getProperty(\"type\"))},t.prototype.getLabel=function(){var e=this.getProperty(\"label\");return e?o.PropertyValue.parse(e,this.options.locale):new o.PropertyValue([],this.options.locale)},t.prototype.getDefaultLabel=function(){return this.getLabel().getValue(this.options.locale)},t.prototype.getMetadata=function(){var e=this.getProperty(\"metadata\"),t=[];if(!e)return t;for(var r=0;r<e.length;r++){var n=e[r],i=new o.LabelValuePair(this.options.locale);i.parse(n),t.push(i)}return t},t.prototype.getRendering=function(e){for(var t=this.getRenderings(),r=0;r<t.length;r++){var n=t[r];if(n.getFormat()===e)return n}return null},t.prototype.getRenderings=function(){var e,t=[];if(!(e=this.__jsonld?this.__jsonld.rendering:this.rendering))return t;Array.isArray(e)||(e=[e]);for(var r=0;r<e.length;r++){var n=e[r];t.push(new o.Rendering(n,this.options))}return t},t.prototype.getRequiredStatement=function(){var e=null,t=this.getProperty(\"requiredStatement\");return t&&(e=new o.LabelValuePair(this.options.locale)).parse(t),e},t.prototype.getService=function(e){return o.Utils.getService(this,e)},t.prototype.getServices=function(){return o.Utils.getServices(this)},t.prototype.getThumbnail=function(){var e=this.getProperty(\"thumbnail\");return Array.isArray(e)&&(e=e[0]),e?new o.Thumbnail(e,this.options):null},t.prototype.isAnnotation=function(){return this.getIIIFResourceType()===a.IIIFResourceType.ANNOTATION},t.prototype.isCanvas=function(){return this.getIIIFResourceType()===a.IIIFResourceType.CANVAS},t.prototype.isCollection=function(){return this.getIIIFResourceType()===a.IIIFResourceType.COLLECTION},t.prototype.isManifest=function(){return this.getIIIFResourceType()===a.IIIFResourceType.MANIFEST},t.prototype.isRange=function(){return this.getIIIFResourceType()===a.IIIFResourceType.RANGE},t.prototype.isSequence=function(){return this.getIIIFResourceType()===a.IIIFResourceType.SEQUENCE},t}(o.JSONLDResource);t.ManifestResource=s},function(e,t,r){\"use strict\";var n,i=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});Object.defineProperty(t,\"__esModule\",{value:!0});var o=r(0),a=function(e){function t(t,r){return e.call(this,t,r)||this}return i(t,e),t.prototype.getFormat=function(){var e=this.getProperty(\"format\");return e?e.toLowerCase():null},t.prototype.getResources=function(){var e=[];if(!this.__jsonld.resources)return e;for(var t=0;t<this.__jsonld.resources.length;t++){var r=this.__jsonld.resources[t],n=new o.Annotation(r,this.options);e.push(n)}return e},t.prototype.getType=function(){var e=this.getProperty(\"type\");return e?o.Utils.normaliseType(e):null},t.prototype.getWidth=function(){return this.getProperty(\"width\")},t.prototype.getHeight=function(){return this.getProperty(\"height\")},t.prototype.getMaxWidth=function(){return this.getProperty(\"maxWidth\")},t.prototype.getMaxHeight=function(){return this.getProperty(\"maxHeight\")?null:this.getMaxWidth()},t}(o.ManifestResource);t.Resource=a},function(e,t,r){\"use strict\";var n,i=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});Object.defineProperty(t,\"__esModule\",{value:!0});var o=r(0),a=r(1),s=function(e){function t(t,r){var n=e.call(this,t,r)||this;n.index=-1,n.isLoaded=!1;var i={defaultLabel:\"-\",locale:\"en-GB\",resource:n,pessimisticAccessControl:!1};return n.options=Object.assign(i,r),n}return i(t,e),t.prototype.getAttribution=function(){var e=this.getProperty(\"attribution\");return e?o.PropertyValue.parse(e,this.options.locale):new o.PropertyValue([],this.options.locale)},t.prototype.getDescription=function(){var e=this.getProperty(\"description\");return e?o.PropertyValue.parse(e,this.options.locale):new o.PropertyValue([],this.options.locale)},t.prototype.getHomepage=function(){var e=this.getProperty(\"homepage\");return e?\"string\"==typeof e?e:(Array.isArray(e)&&e.length&&(e=e[0]),e[\"@id\"]||e.id):null},t.prototype.getIIIFResourceType=function(){return o.Utils.normaliseType(this.getProperty(\"type\"))},t.prototype.getLogo=function(){var e=this.getProperty(\"logo\");if(!e){var t=this.getProperty(\"provider\");if(!t)return null;e=t.logo}return e?\"string\"==typeof e?e:(Array.isArray(e)&&e.length&&(e=e[0]),e[\"@id\"]||e.id):null},t.prototype.getLicense=function(){return o.Utils.getLocalisedValue(this.getProperty(\"license\"),this.options.locale)},t.prototype.getNavDate=function(){return new Date(this.getProperty(\"navDate\"))},t.prototype.getRelated=function(){return this.getProperty(\"related\")},t.prototype.getSeeAlso=function(){return this.getProperty(\"seeAlso\")},t.prototype.getTrackingLabel=function(){var e=this.getService(a.ServiceProfile.TRACKING_EXTENSIONS);return e?e.getProperty(\"trackingLabel\"):\"\"},t.prototype.getDefaultTree=function(){return this.defaultTree=new o.TreeNode(\"root\"),this.defaultTree.data=this,this.defaultTree},t.prototype.getRequiredStatement=function(){var e=null,t=this.getProperty(\"requiredStatement\");if(t)(e=new o.LabelValuePair(this.options.locale)).parse(t);else{var r=this.getAttribution();r&&((e=new o.LabelValuePair(this.options.locale)).value=r)}return e},t.prototype.isCollection=function(){return this.getIIIFResourceType()===a.IIIFResourceType.COLLECTION},t.prototype.isManifest=function(){return this.getIIIFResourceType()===a.IIIFResourceType.MANIFEST},t.prototype.load=function(){var e=this;return new Promise((function(t){if(e.isLoaded)t(e);else{var r=e.options;r.navDate=e.getNavDate();var n=e.__jsonld.id;n||(n=e.__jsonld[\"@id\"]),o.Utils.loadManifest(n).then((function(n){e.parentLabel=e.getLabel().getValue(r.locale);var i=o.Deserialiser.parse(n,r);(e=Object.assign(e,i)).index=r.index,t(e)}))}}))},t}(o.ManifestResource);t.IIIFResource=s},function(e,t,r){\"use strict\";var n,i=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});Object.defineProperty(t,\"__esModule\",{value:!0});var o=r(0),a=function(e){function t(t,r){return e.call(this,t,r)||this}return i(t,e),t.prototype.getBody=function(){var e=[],t=this.getProperty(\"body\");if(t)if(Array.isArray(t))for(var r=0;r<t.length;r++){if((a=t[r]).items)for(var n=0;n<a.items.length;n++){var i=a.items[n];e.push(new o.AnnotationBody(i,this.options))}else e.push(new o.AnnotationBody(a,this.options))}else if(t.items)for(r=0;r<t.items.length;r++){var a=t.items[r];e.push(new o.AnnotationBody(a,this.options))}else e.push(new o.AnnotationBody(t,this.options));return e},t.prototype.getMotivation=function(){var e=this.getProperty(\"motivation\");return e||null},t.prototype.getOn=function(){return this.getProperty(\"on\")},t.prototype.getTarget=function(){return this.getProperty(\"target\")},t.prototype.getResource=function(){return new o.Resource(this.getProperty(\"resource\"),this.options)},t}(o.ManifestResource);t.Annotation=a},function(e,t,r){\"use strict\";var n,i=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});Object.defineProperty(t,\"__esModule\",{value:!0});var o=r(0),a=function(e){function t(t,r){return e.call(this,t,r)||this}return i(t,e),t.prototype.getFormat=function(){var e=this.getProperty(\"format\");return e?o.Utils.getMediaType(e):null},t.prototype.getType=function(){return this.getProperty(\"type\")?o.Utils.normaliseType(this.getProperty(\"type\")):null},t.prototype.getWidth=function(){return this.getProperty(\"width\")},t.prototype.getHeight=function(){return this.getProperty(\"height\")},t}(o.ManifestResource);t.AnnotationBody=a},function(e,t,r){\"use strict\";var n,i=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});Object.defineProperty(t,\"__esModule\",{value:!0});var o=r(0),a=function(e){function t(t,r,n){var i=e.call(this,r)||this;return i.label=t,i.options=n,i}return i(t,e),t.prototype.getIIIFResourceType=function(){return o.Utils.normaliseType(this.getProperty(\"type\"))},t.prototype.getLabel=function(){return this.label},t.prototype.getResources=function(){var e=this;return this.getProperty(\"resources\").map((function(t){return new o.Annotation(t,e.options)}))},t.prototype.load=function(){var e=this;return new Promise((function(t,r){if(e.isLoaded)t(e);else{var n=e.__jsonld.id;n||(n=e.__jsonld[\"@id\"]),o.Utils.loadManifest(n).then((function(r){e.__jsonld=r,e.context=e.getProperty(\"context\"),e.id=e.getProperty(\"id\"),e.isLoaded=!0,t(e)})).catch(r)}}))},t}(o.JSONLDResource);t.AnnotationList=a},function(e,t,r){\"use strict\";var n,i=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});Object.defineProperty(t,\"__esModule\",{value:!0});var o=function(e){function t(t,r){return e.call(this,t,r)||this}return i(t,e),t.prototype.getItems=function(){return this.getProperty(\"items\")},t}(r(0).ManifestResource);t.AnnotationPage=o},function(e,t,r){\"use strict\";var n,i=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}),o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,\"__esModule\",{value:!0});var a=r(1),s=r(0),u=o(r(18)),c=o(r(30)),l=function(e){function t(t,r){return e.call(this,t,r)||this}return i(t,e),t.prototype.getCanonicalImageUri=function(e){var t,r=null,n=\"default\",i=e;if(this.externalResource&&this.externalResource.data&&this.externalResource.data[\"@id\"])r=this.externalResource.data[\"@id\"],i||(i=this.externalResource.data.width),this.externalResource.data[\"@context\"]&&(this.externalResource.data[\"@context\"].indexOf(\"/1.0/context.json\")>-1||this.externalResource.data[\"@context\"].indexOf(\"/1.1/context.json\")>-1||this.externalResource.data[\"@context\"].indexOf(\"/1/context.json\")>-1)&&(n=\"native\");else{var o=void 0;if((o=this.getImages())&&o.length){var a=o[0].getResource(),u=a.getServices();if(i||(i=a.getWidth()),c=u?u.find((function(e){return s.Utils.isImageProfile(e.getProfile())||s.Utils.isImageServiceType(e.getIIIFResourceType())})):null)r=c.id,n=s.Utils.getImageQuality(c.getProfile());else if(i===a.getWidth())return a.id}if((o=this.getContent())&&o.length){var c,l=o[0].getBody()[0];u=l.getServices();if(i||(i=l.getWidth()),c=u?u.find((function(e){return s.Utils.isImageServiceType(e.getIIIFResourceType())})):null)r=c.id,n=s.Utils.getImageQuality(c.getProfile());else if(i===l.getWidth())return l.id}if(!r){var p=this.getProperty(\"thumbnail\");if(p){if(\"string\"==typeof p)return p;if(p[\"@id\"])return p[\"@id\"];if(p.length)return p[0].id}}}return t=i+\",\",r&&r.endsWith(\"/\")&&(r=r.substr(0,r.length-1)),[r,\"full\",t,0,n+\".jpg\"].join(\"/\")},t.prototype.getMaxDimensions=function(){var e,t=null;return this.externalResource&&this.externalResource.data&&this.externalResource.data.profile&&(e=this.externalResource.data.profile,Array.isArray(e)&&(e=e.filter((function(e){return e.maxWidth}))[0])&&(t=new s.Size(e.maxWidth,e.maxHeight?e.maxHeight:e.maxWidth))),t},t.prototype.getContent=function(){var e=[],t=this.__jsonld.items||this.__jsonld.content;if(!t)return e;var r=null;if(t.length&&(r=new s.AnnotationPage(t[0],this.options)),!r)return e;for(var n=r.getItems(),i=0;i<n.length;i++){var o=n[i],a=new s.Annotation(o,this.options);e.push(a)}return e},t.prototype.getDuration=function(){return this.getProperty(\"duration\")},t.prototype.getImages=function(){var e=[];if(!this.__jsonld.images)return e;for(var t=0;t<this.__jsonld.images.length;t++){var r=this.__jsonld.images[t],n=new s.Annotation(r,this.options);e.push(n)}return e},t.prototype.getIndex=function(){return this.getProperty(\"index\")},t.prototype.getOtherContent=function(){var e=this,t=Array.isArray(this.getProperty(\"otherContent\"))?this.getProperty(\"otherContent\"):[this.getProperty(\"otherContent\")],r=t.filter((function(e){return e&&(t=e[\"@type\"],r=\"sc:AnnotationList\",\"string\"==typeof t&&\"string\"==typeof r&&t.toLowerCase()==t.toLowerCase());var t,r})).map((function(t,r){return new s.AnnotationList(t.label||\"Annotation list \"+r,t,e.options)})).map((function(e){return e.load()}));return Promise.all(r)},t.prototype.getWidth=function(){return this.getProperty(\"width\")},t.prototype.getHeight=function(){return this.getProperty(\"height\")},t.prototype.getViewingHint=function(){return this.getProperty(\"viewingHint\")},Object.defineProperty(t.prototype,\"imageResources\",{get:function(){var e=this,r=c.default([this.getImages().map((function(e){return e.getResource()})),this.getContent().map((function(e){return e.getBody()}))]);return u.default(r.map((function(r){switch(r.getProperty(\"type\").toLowerCase()){case a.ExternalResourceType.CHOICE:case a.ExternalResourceType.OA_CHOICE:return new t({images:u.default([r.getProperty(\"default\"),r.getProperty(\"item\")]).map((function(e){return{resource:e}}))},e.options).getImages().map((function(e){return e.getResource()}));default:return r}})))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,\"resourceAnnotations\",{get:function(){return c.default([this.getImages(),this.getContent()])},enumerable:!0,configurable:!0}),t.prototype.resourceAnnotation=function(e){return this.resourceAnnotations.find((function(t){return t.getResource().id===e||u.default(new Array(t.getBody())).some((function(t){return t.id===e}))}))},t.prototype.onFragment=function(e){var t=this.resourceAnnotation(e);if(t){var r=t.getProperty(\"on\"),n=t.getProperty(\"target\");if(r&&n){var i=(r||n).match(/xywh=(.*)$/);if(i)return i[1].split(\",\").map((function(e){return parseInt(e,10)}))}}},Object.defineProperty(t.prototype,\"iiifImageResources\",{get:function(){return this.imageResources.filter((function(e){return e&&e.getServices()[0]&&e.getServices()[0].id}))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,\"imageServiceIds\",{get:function(){return this.iiifImageResources.map((function(e){return e.getServices()[0].id}))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,\"aspectRatio\",{get:function(){return this.getWidth()/this.getHeight()},enumerable:!0,configurable:!0}),t}(s.Resource);t.Canvas=l},function(e,t,r){var n=r(4);e.exports=function(e){return(null==e?0:e.length)?n(e,1):[]}},function(e,t){e.exports=function(e,t){for(var r=-1,n=t.length,i=e.length;++r<n;)e[i+r]=t[r];return e}},function(e,t,r){var n=r(2),i=r(24),o=r(29),a=n?n.isConcatSpreadable:void 0;e.exports=function(e){return o(e)||i(e)||!!(a&&e&&e[a])}},function(e,t,r){var n=r(22),i=\"object\"==typeof self&&self&&self.Object===Object&&self,o=n||i||Function(\"return this\")();e.exports=o},function(e,t,r){(function(t){var r=\"object\"==typeof t&&t&&t.Object===Object&&t;e.exports=r}).call(this,r(23))},function(e,t){var r;r=function(){return this}();try{r=r||new Function(\"return this\")()}catch(e){\"object\"==typeof window&&(r=window)}e.exports=r},function(e,t,r){var n=r(25),i=r(5),o=Object.prototype,a=o.hasOwnProperty,s=o.propertyIsEnumerable,u=n(function(){return arguments}())?n:function(e){return i(e)&&a.call(e,\"callee\")&&!s.call(e,\"callee\")};e.exports=u},function(e,t,r){var n=r(26),i=r(5),o=\"[object Arguments]\";e.exports=function(e){return i(e)&&n(e)==o}},function(e,t,r){var n=r(2),i=r(27),o=r(28),a=\"[object Null]\",s=\"[object Undefined]\",u=n?n.toStringTag:void 0;e.exports=function(e){return null==e?void 0===e?s:a:u&&u in Object(e)?i(e):o(e)}},function(e,t,r){var n=r(2),i=Object.prototype,o=i.hasOwnProperty,a=i.toString,s=n?n.toStringTag:void 0;e.exports=function(e){var t=o.call(e,s),r=e[s];try{e[s]=void 0;var n=!0}catch(e){}var i=a.call(e);return n&&(t?e[s]=r:delete e[s]),i}},function(e,t){var r=Object.prototype.toString;e.exports=function(e){return r.call(e)}},function(e,t){var r=Array.isArray;e.exports=r},function(e,t,r){var n=r(4),i=1/0;e.exports=function(e){return(null==e?0:e.length)?n(e,i):[]}},function(e,t,r){\"use strict\";var n,i=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});Object.defineProperty(t,\"__esModule\",{value:!0});var o=r(1),a=r(0),s=function(e){function t(t,r){var n=e.call(this,t,r)||this;return n.items=[],n._collections=null,n._manifests=null,t.__collection=n,n}return i(t,e),t.prototype.getCollections=function(){return this._collections?this._collections:this._collections=this.items.filter((function(e){return e.isCollection()}))},t.prototype.getManifests=function(){return this._manifests?this._manifests:this._manifests=this.items.filter((function(e){return e.isManifest()}))},t.prototype.getCollectionByIndex=function(e){for(var t,r=this.getCollections(),n=0;n<r.length;n++){var i=r[n];i.index===e&&(t=i)}if(t)return t.options.index=e,t.load();throw new Error(\"Collection index not found\")},t.prototype.getManifestByIndex=function(e){for(var t,r=this.getManifests(),n=0;n<r.length;n++){var i=r[n];i.index===e&&(t=i)}if(t)return t.options.index=e,t.load();throw new Error(\"Manifest index not found\")},t.prototype.getTotalCollections=function(){return this.getCollections().length},t.prototype.getTotalManifests=function(){return this.getManifests().length},t.prototype.getTotalItems=function(){return this.items.length},t.prototype.getViewingDirection=function(){return this.getProperty(\"viewingDirection\")?this.getProperty(\"viewingDirection\"):o.ViewingDirection.LEFT_TO_RIGHT},t.prototype.getBehavior=function(){var e=this.getProperty(\"behavior\");return Array.isArray(e)&&(e=e[0]),e||null},t.prototype.getViewingHint=function(){return this.getProperty(\"viewingHint\")},t.prototype.getDefaultTree=function(){return e.prototype.getDefaultTree.call(this),this.defaultTree.data.type=a.Utils.normaliseType(a.TreeNodeType.COLLECTION),this._parseManifests(this),this._parseCollections(this),a.Utils.generateTreeNodeIds(this.defaultTree),this.defaultTree},t.prototype._parseManifests=function(e){if(e.getManifests()&&e.getManifests().length)for(var t=0;t<e.getManifests().length;t++){var r=e.getManifests()[t],n=r.getDefaultTree();n.label=r.parentLabel||r.getLabel().getValue(this.options.locale)||\"manifest \"+(t+1),n.navDate=r.getNavDate(),n.data.id=r.id,n.data.type=a.Utils.normaliseType(a.TreeNodeType.MANIFEST),e.defaultTree.addNode(n)}},t.prototype._parseCollections=function(e){if(e.getCollections()&&e.getCollections().length)for(var t=0;t<e.getCollections().length;t++){var r=e.getCollections()[t],n=r.getDefaultTree();n.label=r.parentLabel||r.getLabel().getValue(this.options.locale)||\"collection \"+(t+1),n.navDate=r.getNavDate(),n.data.id=r.id,n.data.type=a.Utils.normaliseType(a.TreeNodeType.COLLECTION),e.defaultTree.addNode(n)}},t}(a.IIIFResource);t.Collection=s},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=function(){function e(e,t){this.start=e,this.end=t}return e.prototype.getLength=function(){return this.end-this.start},e}();t.Duration=n},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=r(0),i=function(){function e(e){this.defaultLocale=e}return e.prototype.parse=function(e){this.resource=e,this.label=n.PropertyValue.parse(this.resource.label,this.defaultLocale),this.value=n.PropertyValue.parse(this.resource.value,this.defaultLocale)},e.prototype.getLabel=function(e){return null===this.label?null:(Array.isArray(e)&&!e.length&&(e=void 0),this.label.getValue(e||this.defaultLocale))},e.prototype.setLabel=function(e){null===this.label&&(this.label=new n.PropertyValue([])),this.label.setValue(e,this.defaultLocale)},e.prototype.getValue=function(e,t){return void 0===t&&(t=\"<br/>\"),null===this.value?null:(Array.isArray(e)&&!e.length&&(e=void 0),this.value.getValue(e||this.defaultLocale,t))},e.prototype.getValues=function(e){return null===this.value?[]:(Array.isArray(e)&&!e.length&&(e=void 0),this.value.getValues(e||this.defaultLocale))},e.prototype.setValue=function(e){null===this.value&&(this.value=new n.PropertyValue([])),this.value.setValue(e,this.defaultLocale)},e}();t.LabelValuePair=i},function(e,t,r){\"use strict\";var n,i=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});Object.defineProperty(t,\"__esModule\",{value:!0});var o=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return i(t,e),t.getValue=function(e,t){return e.getValue(t,\"<br/>\")},t.getValues=function(e,t){return e.getValues(t)},t}(Array);t.LanguageMap=o},function(e,t,r){\"use strict\";var n,i=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}),o=this&&this.__spreadArrays||function(){for(var e=0,t=0,r=arguments.length;t<r;t++)e+=arguments[t].length;var n=Array(e),i=0;for(t=0;t<r;t++)for(var o=arguments[t],a=0,s=o.length;a<s;a++,i++)n[i]=o[a];return n};Object.defineProperty(t,\"__esModule\",{value:!0});var a=r(3),s=function(){function e(e,t,r){void 0===r&&(r=\"none\"),Array.isArray(e)&&1===e.length?this._value=e[0]:this._value=e,\"none\"!==t&&\"@none\"!==t||(t=void 0),this._locale=t,this._defaultLocale=r}return e.parseV2Value=function(t,r){return\"string\"==typeof t?new e(t,void 0,r):t[\"@value\"]?new e(t[\"@value\"],t[\"@language\"],r):null},Object.defineProperty(e.prototype,\"value\",{get:function(){return Array.isArray(this._value)?this._value.join(\"<br/>\"):this._value},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,\"locale\",{get:function(){return void 0===this._locale?this._defaultLocale:this._locale},enumerable:!0,configurable:!0}),e.prototype.addValue=function(e){Array.isArray(this._value)||(this._value=[this._value]),Array.isArray(e)?this._value=this._value.concat(e):this._value.push(e)},e}();t.LocalizedValue=s;var u=function(e){function t(r,n){void 0===r&&(r=[]);var i=e.apply(this,r)||this;return i.__proto__=t.prototype,i._defaultLocale=n,i}return i(t,e),t.parse=function(e,r){if(!e)return new t([],r);if(Array.isArray(e)){var n=(i=e.map((function(e){return s.parseV2Value(e,r)})).filter((function(e){return null!==e}))).reduce((function(e,t){var r=t._locale;return r||(r=\"none\"),e[r]?e[r].addValue(t._value):e[r]=t,e}),{});return new t(Object.values(n),r)}return\"string\"==typeof e?new t([new s(e,void 0,r)],r):e[\"@language\"]?new t(null!==(i=s.parseV2Value(e))?[i]:[],r):e[\"@value\"]?new t(null!==(i=s.parseV2Value(e))?[i]:[],r):new t(Object.keys(e).map((function(t){var n=e[t];if(!Array.isArray(n))throw new Error(\"A IIIF v3 localized property value must have an array as the value for a given language.\");return new s(n,t,r)})),r);var i},t.prototype.getSuitableLocale=function(e){for(var t=o(this).map((function(e){return e._locale})).filter((function(e){return void 0!==e})),r=function(e){var r=t.find((function(t){return t===e}));if(r)return{value:r}},n=0,i=e;n<i.length;n++){var s=r(i[n]);if(\"object\"==typeof s)return s.value}for(var u=function(e){var r=t.find((function(t){return a.Utils.getInexactLocale(t)===a.Utils.getInexactLocale(e)}));if(r)return{value:r}},c=0,l=e;c<l.length;c++){var p=u(l[c]);if(\"object\"==typeof p)return p.value}},t.prototype.setValue=function(e,t){var r=void 0;if(t){var n=this.getSuitableLocale([t]);n&&(r=this.find((function(e){return e._locale===n})))}else r=this.find((function(e){return void 0===e._locale}));r?r._value=e:this.push(new s(e,t,this._defaultLocale))},t.prototype.getValue=function(e,t){var r=this.getValues(e);return 0===r.length?null:t?r.join(t):r[0]},t.prototype.getValues=function(e){if(!this.length)return[];var t;if(t=e?Array.isArray(e)?e:[e]:[],1===this.length&&void 0===this[0]._locale){var r=this[0]._value;return Array.isArray(r)?r:[r]}var n=this.getSuitableLocale(t);if(n){r=this.find((function(e){return e._locale===n}))._value;return Array.isArray(r)?r:[r]}if(!this.find((function(e){return void 0===e._locale}))){r=this[0]._value;return Array.isArray(r)?r:[r]}var i=this.find((function(e){return void 0===e._locale}));return i?Array.isArray(i._value)?i._value:[i._value]:[]},t}(Array);t.PropertyValue=u},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.CONTINUE=100,t.SWITCHING_PROTOCOLS=101,t.PROCESSING=102,t.OK=200,t.CREATED=201,t.ACCEPTED=202,t.NON_AUTHORITATIVE_INFORMATION=203,t.NO_CONTENT=204,t.RESET_CONTENT=205,t.PARTIAL_CONTENT=206,t.MULTI_STATUS=207,t.MULTIPLE_CHOICES=300,t.MOVED_PERMANENTLY=301,t.MOVED_TEMPORARILY=302,t.SEE_OTHER=303,t.NOT_MODIFIED=304,t.USE_PROXY=305,t.TEMPORARY_REDIRECT=307,t.BAD_REQUEST=400,t.UNAUTHORIZED=401,t.PAYMENT_REQUIRED=402,t.FORBIDDEN=403,t.NOT_FOUND=404,t.METHOD_NOT_ALLOWED=405,t.NOT_ACCEPTABLE=406,t.PROXY_AUTHENTICATION_REQUIRED=407,t.REQUEST_TIME_OUT=408,t.CONFLICT=409,t.GONE=410,t.LENGTH_REQUIRED=411,t.PRECONDITION_FAILED=412,t.REQUEST_ENTITY_TOO_LARGE=413,t.REQUEST_URI_TOO_LARGE=414,t.UNSUPPORTED_MEDIA_TYPE=415,t.REQUESTED_RANGE_NOT_SATISFIABLE=416,t.EXPECTATION_FAILED=417,t.IM_A_TEAPOT=418,t.UNPROCESSABLE_ENTITY=422,t.LOCKED=423,t.FAILED_DEPENDENCY=424,t.UNORDERED_COLLECTION=425,t.UPGRADE_REQUIRED=426,t.PRECONDITION_REQUIRED=428,t.TOO_MANY_REQUESTS=429,t.REQUEST_HEADER_FIELDS_TOO_LARGE=431,t.INTERNAL_SERVER_ERROR=500,t.NOT_IMPLEMENTED=501,t.BAD_GATEWAY=502,t.SERVICE_UNAVAILABLE=503,t.GATEWAY_TIME_OUT=504,t.HTTP_VERSION_NOT_SUPPORTED=505,t.VARIANT_ALSO_NEGOTIATES=506,t.INSUFFICIENT_STORAGE=507,t.BANDWIDTH_LIMIT_EXCEEDED=509,t.NOT_EXTENDED=510,t.NETWORK_AUTHENTICATION_REQUIRED=511},function(e,t,r){e.exports=window.fetch||(window.fetch=r(6).default||r(6))},function(e,t,r){\"use strict\";var n,i=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});Object.defineProperty(t,\"__esModule\",{value:!0});var o=r(1),a=r(0),s=function(e){function t(t,r){var n=e.call(this,t,r)||this;if(n.index=0,n._allRanges=null,n.items=[],n._topRanges=[],n.__jsonld.structures&&n.__jsonld.structures.length)for(var i=n._getTopRanges(),o=0;o<i.length;o++){var a=i[o];n._parseRanges(a,String(o))}return n}return i(t,e),t.prototype.getPosterCanvas=function(){var e=this.getProperty(\"posterCanvas\");return e&&(e=new a.Canvas(e,this.options)),e},t.prototype.getAccompanyingCanvas=function(){var e=this.getProperty(\"accompanyingCanvas\");return e&&(e=new a.Canvas(e,this.options)),e},t.prototype.getBehavior=function(){var e=this.getProperty(\"behavior\");return Array.isArray(e)&&(e=e[0]),e||null},t.prototype.getDefaultTree=function(){if(e.prototype.getDefaultTree.call(this),this.defaultTree.data.type=a.Utils.normaliseType(a.TreeNodeType.MANIFEST),!this.isLoaded)return this.defaultTree;var t=this.getTopRanges();return t.length&&t[0].getTree(this.defaultTree),a.Utils.generateTreeNodeIds(this.defaultTree),this.defaultTree},t.prototype._getTopRanges=function(){var e=[];if(this.__jsonld.structures&&this.__jsonld.structures.length){for(var t=0;t<this.__jsonld.structures.length;t++){var r=this.__jsonld.structures[t];r.viewingHint===o.ViewingHint.TOP&&e.push(r)}if(!e.length){var n={};n.ranges=this.__jsonld.structures,e.push(n)}}return e},t.prototype.getTopRanges=function(){return this._topRanges},t.prototype._getRangeById=function(e){if(this.__jsonld.structures&&this.__jsonld.structures.length)for(var t=0;t<this.__jsonld.structures.length;t++){var r=this.__jsonld.structures[t];if(r[\"@id\"]===e||r.id===e)return r}return null},t.prototype._parseRanges=function(e,t,r){var n,i=null;if(\"string\"==typeof e&&(i=e,e=this._getRangeById(i)),e){(n=new a.Range(e,this.options)).parentRange=r,n.path=t,r?r.items.push(n):this._topRanges.push(n);var o=e.items||e.members;if(o)for(var s=0;s<o.length;s++){var u=o[s];if(u[\"@type\"]&&\"sc:range\"===u[\"@type\"].toLowerCase()||u.type&&\"range\"===u.type.toLowerCase())this._parseRanges(u,t+\"/\"+s,n);else if(u[\"@type\"]&&\"sc:canvas\"===u[\"@type\"].toLowerCase()||u.type&&\"canvas\"===u.type.toLowerCase()){n.canvases||(n.canvases=[]);var c=u.id||u[\"@id\"];n.canvases.push(c)}}else if(e.ranges)for(s=0;s<e.ranges.length;s++)this._parseRanges(e.ranges[s],t+\"/\"+s,n)}else console.warn(\"Range:\",i,\"does not exist\")},t.prototype.getAllRanges=function(){if(null!=this._allRanges)return this._allRanges;this._allRanges=[];for(var e=this.getTopRanges(),t=function(t){var n=e[t];n.id&&r._allRanges.push(n);var i=function(e,t){e.add(t);var r=t.getRanges();return r.length?r.reduce(i,e):e},o=Array.from(n.getRanges().reduce(i,new Set));r._allRanges=r._allRanges.concat(o)},r=this,n=0;n<e.length;n++)t(n);return this._allRanges},t.prototype.getRangeById=function(e){for(var t=this.getAllRanges(),r=0;r<t.length;r++){var n=t[r];if(n.id===e)return n}return null},t.prototype.getRangeByPath=function(e){for(var t=this.getAllRanges(),r=0;r<t.length;r++){var n=t[r];if(n.path===e)return n}return null},t.prototype.getSequences=function(){if(this.items.length)return this.items;var e=this.__jsonld.mediaSequences||this.__jsonld.sequences;if(e)for(var t=0;t<e.length;t++){var r=e[t],n=new a.Sequence(r,this.options);this.items.push(n)}else if(this.__jsonld.items){n=new a.Sequence(this.__jsonld.items,this.options);this.items.push(n)}return this.items},t.prototype.getSequenceByIndex=function(e){return this.getSequences()[e]},t.prototype.getTotalSequences=function(){return this.getSequences().length},t.prototype.getManifestType=function(){var e=this.getService(o.ServiceProfile.UI_EXTENSIONS);return e?e.getProperty(\"manifestType\"):a.ManifestType.EMPTY},t.prototype.isMultiSequence=function(){return this.getTotalSequences()>1},t.prototype.isPagingEnabled=function(){var e=this.getViewingHint();if(e)return e===o.ViewingHint.PAGED;var t=this.getBehavior();return!!t&&t===o.Behavior.PAGED},t.prototype.getViewingDirection=function(){return this.getProperty(\"viewingDirection\")},t.prototype.getViewingHint=function(){return this.getProperty(\"viewingHint\")},t}(a.IIIFResource);t.Manifest=s},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),function(e){e.EMPTY=\"\",e.MANUSCRIPT=\"manuscript\",e.MONOGRAPH=\"monograph\"}(t.ManifestType||(t.ManifestType={}))},function(e,t,r){\"use strict\";var n,i=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});Object.defineProperty(t,\"__esModule\",{value:!0});var o=r(0),a=r(1),s=function(e){function t(t,r){var n=e.call(this,t,r)||this;return n._ranges=null,n.canvases=null,n.items=[],n}return i(t,e),t.prototype.getCanvasIds=function(){return this.__jsonld.canvases?this.__jsonld.canvases:this.canvases?this.canvases:[]},t.prototype.getDuration=function(){if(this.canvases&&this.canvases.length){for(var e=[],t=[],r=0,n=this.canvases;r<n.length;r++){if(_=n[r]){var i=_.match(/(.*)#t=([0-9.]+),?([0-9.]+)?/)||[void 0,_],a=i[1],s=i[2],u=i[3];a&&(e.push(parseFloat(s)),t.push(parseFloat(u)))}}if(e.length&&t.length)return new o.Duration(Math.min.apply(Math,e),Math.max.apply(Math,t))}else{e=[],t=[];for(var c=0,l=d=this.getRanges();c<l.length;c++){(v=l[c].getDuration())&&(e.push(v.start),t.push(v.end))}if(e.length&&t.length)return new o.Duration(Math.min.apply(Math,e),Math.max.apply(Math,t))}var p,f;if(this.canvases&&this.canvases.length)for(var h=0;h<this.canvases.length;h++){var _=this.canvases[h],g=o.Utils.getTemporalComponent(_);g&&g.length>1&&(0===h&&(p=Number(g[0])),h===this.canvases.length-1&&(f=Number(g[1])))}else{var d=this.getRanges();for(h=0;h<d.length;h++){var v;(v=d[h].getDuration())&&(0===h&&(p=v.start),h===d.length-1&&(f=v.end))}}if(void 0!==p&&void 0!==f)return new o.Duration(p,f)},t.prototype.getRanges=function(){return this._ranges?this._ranges:this._ranges=this.items.filter((function(e){return e.isRange()}))},t.prototype.getBehavior=function(){var e=this.getProperty(\"behavior\");return Array.isArray(e)&&(e=e[0]),e||null},t.prototype.getViewingDirection=function(){return this.getProperty(\"viewingDirection\")},t.prototype.getViewingHint=function(){return this.getProperty(\"viewingHint\")},t.prototype.getTree=function(e){e.data=this,this.treeNode=e;var t=this.getRanges();if(t&&t.length)for(var r=0;r<t.length;r++){var n=t[r],i=new o.TreeNode;e.addNode(i),this._parseTreeNode(i,n)}return o.Utils.generateTreeNodeIds(e),e},t.prototype.spansTime=function(e){var t=this.getDuration();return!!(t&&e>=t.start&&e<=t.end)},t.prototype._parseTreeNode=function(e,t){e.label=t.getLabel().getValue(this.options.locale),e.data=t,e.data.type=o.Utils.normaliseType(o.TreeNodeType.RANGE),t.treeNode=e;var r=t.getRanges();if(r&&r.length)for(var n=0;n<r.length;n++){var i=r[n];if(i.getBehavior()!==a.Behavior.NO_NAV){var s=new o.TreeNode;e.addNode(s),this._parseTreeNode(s,i)}}},t}(o.ManifestResource);t.Range=s},function(e,t,r){\"use strict\";var n,i=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});Object.defineProperty(t,\"__esModule\",{value:!0});var o=function(e){function t(t,r){return e.call(this,t,r)||this}return i(t,e),t.prototype.getFormat=function(){return this.getProperty(\"format\")},t}(r(0).ManifestResource);t.Rendering=o},function(e,t,r){\"use strict\";var n,i=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});Object.defineProperty(t,\"__esModule\",{value:!0});var o=r(1),a=r(0),s=function(e){function t(t,r){var n=e.call(this,t,r)||this;return n.items=[],n._thumbnails=null,n}return i(t,e),t.prototype.getCanvases=function(){if(this.items.length)return this.items;var e=this.__jsonld.canvases||this.__jsonld.elements;if(e)for(var t=0;t<e.length;t++){var r=e[t];(n=new a.Canvas(r,this.options)).index=t,this.items.push(n)}else if(this.__jsonld)for(t=0;t<this.__jsonld.length;t++){var n;r=this.__jsonld[t];(n=new a.Canvas(r,this.options)).index=t,this.items.push(n)}return this.items},t.prototype.getCanvasById=function(e){for(var t=0;t<this.getTotalCanvases();t++){var r=this.getCanvasByIndex(t),n=a.Utils.normaliseUrl(r.id);if(a.Utils.normaliseUrl(e)===n)return r}return null},t.prototype.getCanvasByIndex=function(e){return this.getCanvases()[e]},t.prototype.getCanvasIndexById=function(e){for(var t=0;t<this.getTotalCanvases();t++){if(this.getCanvasByIndex(t).id===e)return t}return null},t.prototype.getCanvasIndexByLabel=function(e,t){e=e.trim(),isNaN(e)||(e=parseInt(e,10).toString(),t&&(e+=\"r\"));for(var r,n,i,o=/(\\d*)\\D+(\\d*)/,a=0;a<this.getTotalCanvases();a++){var s=this.getCanvasByIndex(a);if(s.getLabel().getValue(this.options.locale)===e)return a;if((r=o.exec(e))&&(n=r[1],(i=r[2])&&new RegExp(\"^\"+n+\"\\\\D+\"+i+\"$\").test(s.getLabel().toString())))return a}return-1},t.prototype.getLastCanvasLabel=function(e){for(var t=this.getTotalCanvases()-1;t>=0;t--){var r=this.getCanvasByIndex(t).getLabel().getValue(this.options.locale);if(e){if(/^[a-zA-Z0-9]*$/.test(r))return r}else if(r)return r}return this.options.defaultLabel},t.prototype.getLastPageIndex=function(){return this.getTotalCanvases()-1},t.prototype.getNextPageIndex=function(e,t){var r;if(t){var n=this.getPagedIndices(e),i=this.getViewingDirection();r=i&&i===o.ViewingDirection.RIGHT_TO_LEFT?n[0]+1:n[n.length-1]+1}else r=e+1;return r>this.getLastPageIndex()?-1:r},t.prototype.getPagedIndices=function(e,t){var r=[];if(t){r=this.isFirstCanvas(e)||this.isLastCanvas(e)?[e]:e%2?[e,e+1]:[e-1,e];var n=this.getViewingDirection();n&&n===o.ViewingDirection.RIGHT_TO_LEFT&&(r=r.reverse())}else r.push(e);return r},t.prototype.getPrevPageIndex=function(e,t){var r;if(t){var n=this.getPagedIndices(e),i=this.getViewingDirection();r=i&&i===o.ViewingDirection.RIGHT_TO_LEFT?n[n.length-1]-1:n[0]-1}else r=e-1;return r},t.prototype.getStartCanvasIndex=function(){var e=this.getStartCanvas();if(e)for(var t=0;t<this.getTotalCanvases();t++){if(this.getCanvasByIndex(t).id===e)return t}return 0},t.prototype.getThumbs=function(e,t){for(var r=[],n=this.getTotalCanvases(),i=0;i<n;i++){var o=this.getCanvasByIndex(i),s=new a.Thumb(e,o);r.push(s)}return r},t.prototype.getThumbnails=function(){if(null!=this._thumbnails)return this._thumbnails;this._thumbnails=[];for(var e=this.getCanvases(),t=0;t<e.length;t++){var r=e[t].getThumbnail();r&&this._thumbnails.push(r)}return this._thumbnails},t.prototype.getStartCanvas=function(){return this.getProperty(\"startCanvas\")},t.prototype.getTotalCanvases=function(){return this.getCanvases().length},t.prototype.getViewingDirection=function(){return this.getProperty(\"viewingDirection\")?this.getProperty(\"viewingDirection\"):this.options.resource.getViewingDirection?this.options.resource.getViewingDirection():null},t.prototype.getViewingHint=function(){return this.getProperty(\"viewingHint\")},t.prototype.isCanvasIndexOutOfRange=function(e){return e>this.getTotalCanvases()-1},t.prototype.isFirstCanvas=function(e){return 0===e},t.prototype.isLastCanvas=function(e){return e===this.getTotalCanvases()-1},t.prototype.isMultiCanvas=function(){return this.getTotalCanvases()>1},t.prototype.isPagingEnabled=function(){var e=this.getViewingHint();return!!e&&e===o.ViewingHint.PAGED},t.prototype.isTotalCanvasesEven=function(){return this.getTotalCanvases()%2==0},t}(a.ManifestResource);t.Sequence=s},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=r(0),i=function(){function e(){}return e.parse=function(e,t){return\"string\"==typeof e&&(e=JSON.parse(e)),this.parseJson(e,t)},e.parseJson=function(e,t){var r;if(t&&t.navDate&&!isNaN(t.navDate.getTime())&&(e.navDate=t.navDate.toString()),e[\"@type\"])switch(e[\"@type\"]){case\"sc:Collection\":r=this.parseCollection(e,t);break;case\"sc:Manifest\":r=this.parseManifest(e,t);break;default:return null}else switch(e.type){case\"Collection\":r=this.parseCollection(e,t);break;case\"Manifest\":r=this.parseManifest(e,t);break;default:return null}return r.isLoaded=!0,r},e.parseCollection=function(e,t){var r=new n.Collection(e,t);return t?(r.index=t.index||0,t.resource&&(r.parentCollection=t.resource.parentCollection)):r.index=0,this.parseCollections(r,t),this.parseManifests(r,t),this.parseItems(r,t),r},e.parseCollections=function(e,t){var r;if(e.__jsonld.collections?r=e.__jsonld.collections:e.__jsonld.items&&(r=e.__jsonld.items.filter((function(e){return\"collection\"===e.type.toLowerCase()}))),r)for(var n=0;n<r.length;n++){t&&(t.index=n);var i=this.parseCollection(r[n],t);i.index=n,i.parentCollection=e,e.items.push(i)}},e.parseManifest=function(e,t){return new n.Manifest(e,t)},e.parseManifests=function(e,t){var r;if(e.__jsonld.manifests?r=e.__jsonld.manifests:e.__jsonld.items&&(r=e.__jsonld.items.filter((function(e){return\"manifest\"===e.type.toLowerCase()}))),r)for(var n=0;n<r.length;n++){var i=this.parseManifest(r[n],t);i.index=n,i.parentCollection=e,e.items.push(i)}},e.parseItem=function(e,t){if(e[\"@type\"]){if(\"sc:manifest\"===e[\"@type\"].toLowerCase())return this.parseManifest(e,t);if(\"sc:collection\"===e[\"@type\"].toLowerCase())return this.parseCollection(e,t)}else if(e.type){if(\"manifest\"===e.type.toLowerCase())return this.parseManifest(e,t);if(\"collection\"===e.type.toLowerCase())return this.parseCollection(e,t)}return null},e.parseItems=function(e,t){var r=e.__jsonld.members||e.__jsonld.items;if(r)for(var n=function(n){t&&(t.index=n);var o=i.parseItem(r[n],t);return o?e.items.filter((function(e){return e.id===o.id}))[0]?\"continue\":(o.index=n,o.parentCollection=e,void e.items.push(o)):{value:void 0}},i=this,o=0;o<r.length;o++){var a=n(o);if(\"object\"==typeof a)return a.value}},e}();t.Deserialiser=i},function(e,t,r){\"use strict\";var n,i=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});Object.defineProperty(t,\"__esModule\",{value:!0});var o=r(0),a=function(e){function t(t,r){return e.call(this,t,r)||this}return i(t,e),t.prototype.getProfile=function(){var e=this.getProperty(\"profile\");return e||(e=this.getProperty(\"dcterms:conformsTo\")),Array.isArray(e)?e[0]:e},t.prototype.getConfirmLabel=function(){return o.Utils.getLocalisedValue(this.getProperty(\"confirmLabel\"),this.options.locale)},t.prototype.getDescription=function(){return o.Utils.getLocalisedValue(this.getProperty(\"description\"),this.options.locale)},t.prototype.getFailureDescription=function(){return o.Utils.getLocalisedValue(this.getProperty(\"failureDescription\"),this.options.locale)},t.prototype.getFailureHeader=function(){return o.Utils.getLocalisedValue(this.getProperty(\"failureHeader\"),this.options.locale)},t.prototype.getHeader=function(){return o.Utils.getLocalisedValue(this.getProperty(\"header\"),this.options.locale)},t.prototype.getServiceLabel=function(){return o.Utils.getLocalisedValue(this.getProperty(\"label\"),this.options.locale)},t.prototype.getInfoUri=function(){var e=this.id;return e.endsWith(\"/\")||(e+=\"/\"),e+=\"info.json\"},t}(o.ManifestResource);t.Service=a},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=function(e,t){this.width=e,this.height=t};t.Size=n},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),function(e){e[e.AUTHORIZATION_FAILED=1]=\"AUTHORIZATION_FAILED\",e[e.FORBIDDEN=2]=\"FORBIDDEN\",e[e.INTERNAL_SERVER_ERROR=3]=\"INTERNAL_SERVER_ERROR\",e[e.RESTRICTED=4]=\"RESTRICTED\"}(t.StatusCode||(t.StatusCode={}))},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=function(e,t){this.data=t,this.index=t.index,this.width=e;var r=t.getHeight()/t.getWidth();this.height=r?Math.floor(this.width*r):e,this.uri=t.getCanonicalImageUri(e),this.label=t.getLabel().getValue(),this.viewingHint=t.getViewingHint()};t.Thumb=n},function(e,t,r){\"use strict\";var n,i=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});Object.defineProperty(t,\"__esModule\",{value:!0});var o=function(e){function t(t,r){return e.call(this,t,r)||this}return i(t,e),t}(r(0).Resource);t.Thumbnail=o},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=r(0),i=function(){function e(e,t){this.label=e,this.data=t||{},this.nodes=[]}return e.prototype.addNode=function(e){this.nodes.push(e),e.parentNode=this},e.prototype.isCollection=function(){return this.data.type===n.Utils.normaliseType(n.TreeNodeType.COLLECTION)},e.prototype.isManifest=function(){return this.data.type===n.Utils.normaliseType(n.TreeNodeType.MANIFEST)},e.prototype.isRange=function(){return this.data.type===n.Utils.normaliseType(n.TreeNodeType.RANGE)},e}();t.TreeNode=i},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),function(e){e.COLLECTION=\"collection\",e.MANIFEST=\"manifest\",e.RANGE=\"range\"}(t.TreeNodeType||(t.TreeNodeType={}))}])}));","module.exports={\"EPSG:4326\":[\"EPSG:4326\",\"+proj=longlat +datum=WGS84 +no_defs \"],\"EPSG:3857\":[\"EPSG:3857\",\"+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +wktext  +no_defs\"],\"EPSG:5514\":[\"EPSG:5514\",\"+proj=krovak +lat_0=49.5 +lon_0=24.83333333333333 +alpha=30.28813972222222 +k=0.9999 +x_0=0 +y_0=0 +ellps=bessel +towgs84=589,76,480,0,0,0,0 +units=m +no_defs \"],\"EPSG:27700\":[\"EPSG:27700\",\"+proj=tmerc +lat_0=49 +lon_0=-2 +k=0.9996012717 +x_0=400000 +y_0=-100000 +datum=OSGB36 +units=m +no_defs \"],\"EPSG:28992\":[\"EPSG:28992\",\"+proj=sterea +lat_0=52.15616055555555 +lon_0=5.38763888888889 +k=0.9999079 +x_0=155000 +y_0=463000 +ellps=bessel +towgs84=565.4171,50.3319,465.5524,-0.398957,0.343988,-1.87740,4.0725 +units=m +no_defs \"],\"EPSG:31300\":[\"EPSG:31300\",\"+proj=lcc +lat_1=49.83333333333334 +lat_2=51.16666666666666 +lat_0=90 +lon_0=4.356939722222222 +x_0=150000.01256 +y_0=5400088.4378 +ellps=intl +towgs84=-106.8686,52.2978,-103.7239,0.3366,-0.457,1.8422,-1.2747 +units=m +no_defs \"],\"EPSG:3044\":[\"EPSG:3044\",\"+proj=utm +zone=32 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3395\":[\"EPSG:3395\",\"+proj=merc +lon_0=0 +k=1 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3785\":[\"EPSG:3785\",\"+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +wktext  +no_defs\"],\"EPSG:32646\":[\"EPSG:32646\",\"+proj=utm +zone=46 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3006\":[\"EPSG:3006\",\"+proj=utm +zone=33 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:32640\":[\"EPSG:32640\",\"+proj=utm +zone=40 +datum=WGS84 +units=m +no_defs \"],\"EPSG:28354\":[\"EPSG:28354\",\"+proj=utm +zone=54 +south +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:32632\":[\"EPSG:32632\",\"+proj=utm +zone=32 +datum=WGS84 +units=m +no_defs \"],\"EPSG:4269\":[\"EPSG:4269\",\"+proj=longlat +datum=NAD83 +no_defs \"],\"EPSG:32633\":[\"EPSG:32633\",\"+proj=utm +zone=33 +datum=WGS84 +units=m +no_defs \"],\"EPSG:32616\":[\"EPSG:32616\",\"+proj=utm +zone=16 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3070\":[\"EPSG:3070\",\"+proj=tmerc +lat_0=0 +lon_0=-90 +k=0.9996 +x_0=520000 +y_0=-4480000 +datum=NAD83 +units=m +no_defs \"],\"EPSG:2261\":[\"EPSG:2261\",\"+proj=tmerc +lat_0=40 +lon_0=-76.58333333333333 +k=0.9999375 +x_0=249999.9998983998 +y_0=0 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:32039\":[\"EPSG:32039\",\"+proj=lcc +lat_1=30.11666666666667 +lat_2=31.88333333333333 +lat_0=29.66666666666667 +lon_0=-100.3333333333333 +x_0=609601.2192024384 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:32748\":[\"EPSG:32748\",\"+proj=utm +zone=48 +south +datum=WGS84 +units=m +no_defs \"],\"EPSG:32618\":[\"EPSG:32618\",\"+proj=utm +zone=18 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3045\":[\"EPSG:3045\",\"+proj=utm +zone=33 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:4283\":[\"EPSG:4283\",\"+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs \"],\"EPSG:31258\":[\"EPSG:31258\",\"+proj=tmerc +lat_0=0 +lon_0=13.33333333333333 +k=1 +x_0=450000 +y_0=-5000000 +datum=hermannskogel +units=m +no_defs \"],\"EPSG:2154\":[\"EPSG:2154\",\"+proj=lcc +lat_1=49 +lat_2=44 +lat_0=46.5 +lon_0=3 +x_0=700000 +y_0=6600000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:32635\":[\"EPSG:32635\",\"+proj=utm +zone=35 +datum=WGS84 +units=m +no_defs \"],\"EPSG:4471\":[\"EPSG:4471\",\"+proj=utm +zone=38 +south +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:25832\":[\"EPSG:25832\",\"+proj=utm +zone=32 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:4203\":[\"EPSG:4203\",\"+proj=longlat +ellps=aust_SA +towgs84=-134,-48,149,0,0,0,0 +no_defs \"],\"EPSG:2180\":[\"EPSG:2180\",\"+proj=tmerc +lat_0=0 +lon_0=19 +k=0.9993 +x_0=500000 +y_0=-5300000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3047\":[\"EPSG:3047\",\"+proj=utm +zone=35 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:26712\":[\"EPSG:26712\",\"+proj=utm +zone=12 +datum=NAD27 +units=m +no_defs \"],\"EPSG:32617\":[\"EPSG:32617\",\"+proj=utm +zone=17 +datum=WGS84 +units=m +no_defs \"],\"EPSG:7405\":[\"EPSG:7405\",\"+proj=tmerc +lat_0=49 +lon_0=-2 +k=0.9996012717 +x_0=400000 +y_0=-100000 +datum=OSGB36 +units=m +vunits=m +no_defs \"],\"EPSG:32116\":[\"EPSG:32116\",\"+proj=tmerc +lat_0=40 +lon_0=-76.58333333333333 +k=0.9999375 +x_0=250000 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:32637\":[\"EPSG:32637\",\"+proj=utm +zone=37 +datum=WGS84 +units=m +no_defs \"],\"EPSG:32719\":[\"EPSG:32719\",\"+proj=utm +zone=19 +south +datum=WGS84 +units=m +no_defs \"],\"EPSG:32736\":[\"EPSG:32736\",\"+proj=utm +zone=36 +south +datum=WGS84 +units=m +no_defs \"],\"EPSG:32638\":[\"EPSG:32638\",\"+proj=utm +zone=38 +datum=WGS84 +units=m +no_defs \"],\"EPSG:21781\":[\"EPSG:21781\",\"+proj=somerc +lat_0=46.95240555555556 +lon_0=7.439583333333333 +k_0=1 +x_0=600000 +y_0=200000 +ellps=bessel +towgs84=674.4,15.1,405.3,0,0,0,0 +units=m +no_defs \"],\"EPSG:32614\":[\"EPSG:32614\",\"+proj=utm +zone=14 +datum=WGS84 +units=m +no_defs \"],\"EPSG:4817\":[\"EPSG:4817\",\"+proj=longlat +a=6377492.018 +b=6356173.508712696 +towgs84=278.3,93,474.5,7.889,0.05,-6.61,6.21 +pm=oslo +no_defs \"],\"EPSG:32643\":[\"EPSG:32643\",\"+proj=utm +zone=43 +datum=WGS84 +units=m +no_defs \"],\"EPSG:26911\":[\"EPSG:26911\",\"+proj=utm +zone=11 +datum=NAD83 +units=m +no_defs \"],\"EPSG:2385\":[\"EPSG:2385\",\"+proj=tmerc +lat_0=0 +lon_0=120 +k=1 +x_0=500000 +y_0=0 +a=6378140 +b=6356755.288157528 +units=m +no_defs \"],\"EPSG:4617\":[\"EPSG:4617\",\"+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs \"],\"EPSG:32630\":[\"EPSG:32630\",\"+proj=utm +zone=30 +datum=WGS84 +units=m +no_defs \"],\"EPSG:32631\":[\"EPSG:32631\",\"+proj=utm +zone=31 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3043\":[\"EPSG:3043\",\"+proj=utm +zone=31 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:26711\":[\"EPSG:26711\",\"+proj=utm +zone=11 +datum=NAD27 +units=m +no_defs \"],\"EPSG:4277\":[\"EPSG:4277\",\"+proj=longlat +datum=OSGB36 +no_defs \"],\"EPSG:32610\":[\"EPSG:32610\",\"+proj=utm +zone=10 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3064\":[\"EPSG:3064\",\"+proj=utm +zone=32 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:32645\":[\"EPSG:32645\",\"+proj=utm +zone=45 +datum=WGS84 +units=m +no_defs \"],\"EPSG:20438\":[\"EPSG:20438\",\"+proj=utm +zone=38 +ellps=intl +towgs84=-143,-236,7,0,0,0,0 +units=m +no_defs \"],\"EPSG:3159\":[\"EPSG:3159\",\"+proj=utm +zone=15 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:4978\":[\"EPSG:4978\",\"+proj=geocent +datum=WGS84 +units=m +no_defs \"],\"EPSG:3035\":[\"EPSG:3035\",\"+proj=laea +lat_0=52 +lon_0=10 +x_0=4321000 +y_0=3210000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:25831\":[\"EPSG:25831\",\"+proj=utm +zone=31 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:32651\":[\"EPSG:32651\",\"+proj=utm +zone=51 +datum=WGS84 +units=m +no_defs \"],\"EPSG:32722\":[\"EPSG:32722\",\"+proj=utm +zone=22 +south +datum=WGS84 +units=m +no_defs \"],\"EPSG:32662\":[\"EPSG:32662\",\"+proj=eqc +lat_ts=0 +lat_0=0 +lon_0=0 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:5513\":[\"EPSG:5513\",\"+proj=krovak +lat_0=49.5 +lon_0=24.83333333333333 +alpha=30.28813972222222 +k=0.9999 +x_0=0 +y_0=0 +ellps=bessel +towgs84=589,76,480,0,0,0,0 +units=m +no_defs \"],\"EPSG:2227\":[\"EPSG:2227\",\"+proj=lcc +lat_1=38.43333333333333 +lat_2=37.06666666666667 +lat_0=36.5 +lon_0=-120.5 +x_0=2000000.0001016 +y_0=500000.0001016001 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:32644\":[\"EPSG:32644\",\"+proj=utm +zone=44 +datum=WGS84 +units=m +no_defs \"],\"EPSG:32639\":[\"EPSG:32639\",\"+proj=utm +zone=39 +datum=WGS84 +units=m +no_defs \"],\"EPSG:2290\":[\"EPSG:2290\",\"+proj=sterea +lat_0=47.25 +lon_0=-63 +k=0.999912 +x_0=700000 +y_0=400000 +a=6378135 +b=6356750.304921594 +units=m +no_defs \"],\"EPSG:3879\":[\"EPSG:3879\",\"+proj=tmerc +lat_0=0 +lon_0=25 +k=1 +x_0=25500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2077\":[\"EPSG:2077\",\"+proj=utm +zone=32 +ellps=intl +towgs84=-115.8543,-99.0583,-152.4616,0,0,0,0 +units=m +no_defs \"],\"EPSG:32613\":[\"EPSG:32613\",\"+proj=utm +zone=13 +datum=WGS84 +units=m +no_defs \"],\"EPSG:32636\":[\"EPSG:32636\",\"+proj=utm +zone=36 +datum=WGS84 +units=m +no_defs \"],\"EPSG:23700\":[\"EPSG:23700\",\"+proj=somerc +lat_0=47.14439372222222 +lon_0=19.04857177777778 +k_0=0.99993 +x_0=650000 +y_0=200000 +ellps=GRS67 +towgs84=52.17,-71.82,-14.9,0,0,0,0 +units=m +no_defs \"],\"EPSG:32611\":[\"EPSG:32611\",\"+proj=utm +zone=11 +datum=WGS84 +units=m +no_defs \"],\"EPSG:26713\":[\"EPSG:26713\",\"+proj=utm +zone=13 +datum=NAD27 +units=m +no_defs \"],\"EPSG:2149\":[\"EPSG:2149\",\"+proj=utm +zone=18 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:32650\":[\"EPSG:32650\",\"+proj=utm +zone=50 +datum=WGS84 +units=m +no_defs \"],\"EPSG:32718\":[\"EPSG:32718\",\"+proj=utm +zone=18 +south +datum=WGS84 +units=m +no_defs \"],\"EPSG:5551\":[\"EPSG:5551\",\"+proj=utm +zone=55 +south +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:4901\":[\"EPSG:4901\",\"+proj=longlat +a=6376523 +b=6355862.933255573 +pm=2.337208333333333 +no_defs \"],\"EPSG:4258\":[\"EPSG:4258\",\"+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs \"],\"EPSG:2100\":[\"EPSG:2100\",\"+proj=tmerc +lat_0=0 +lon_0=24 +k=0.9996 +x_0=500000 +y_0=0 +datum=GGRS87 +units=m +no_defs \"],\"EPSG:32735\":[\"EPSG:32735\",\"+proj=utm +zone=35 +south +datum=WGS84 +units=m +no_defs \"],\"EPSG:26912\":[\"EPSG:26912\",\"+proj=utm +zone=12 +datum=NAD83 +units=m +no_defs \"],\"EPSG:32620\":[\"EPSG:32620\",\"+proj=utm +zone=20 +datum=WGS84 +units=m +no_defs \"],\"EPSG:31700\":[\"EPSG:31700\",\"+proj=sterea +lat_0=46 +lon_0=25 +k=0.99975 +x_0=500000 +y_0=500000 +ellps=krass +towgs84=28,-121,-77,0,0,0,0 +units=m +no_defs \"],\"EPSG:26958\":[\"EPSG:26958\",\"+proj=tmerc +lat_0=24.33333333333333 +lon_0=-81 +k=0.999941177 +x_0=200000 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:4954\":[\"EPSG:4954\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:32749\":[\"EPSG:32749\",\"+proj=utm +zone=49 +south +datum=WGS84 +units=m +no_defs \"],\"EPSG:2153\":[\"EPSG:2153\",\"+proj=utm +zone=11 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:32615\":[\"EPSG:32615\",\"+proj=utm +zone=15 +datum=WGS84 +units=m +no_defs \"],\"EPSG:32634\":[\"EPSG:32634\",\"+proj=utm +zone=34 +datum=WGS84 +units=m +no_defs \"],\"EPSG:28351\":[\"EPSG:28351\",\"+proj=utm +zone=51 +south +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:4267\":[\"EPSG:4267\",\"+proj=longlat +datum=NAD27 +no_defs \"],\"EPSG:2193\":[\"EPSG:2193\",\"+proj=tmerc +lat_0=0 +lon_0=173 +k=0.9996 +x_0=1600000 +y_0=10000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:28356\":[\"EPSG:28356\",\"+proj=utm +zone=56 +south +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:4197\":[\"EPSG:4197\",\"+proj=longlat +ellps=clrk80 +no_defs \"],\"EPSG:3832\":[\"EPSG:3832\",\"+proj=merc +lon_0=150 +k=1 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:26914\":[\"EPSG:26914\",\"+proj=utm +zone=14 +datum=NAD83 +units=m +no_defs \"],\"EPSG:31370\":[\"EPSG:31370\",\"+proj=lcc +lat_1=51.16666723333333 +lat_2=49.8333339 +lat_0=90 +lon_0=4.367486666666666 +x_0=150000.013 +y_0=5400088.438 +ellps=intl +towgs84=-106.8686,52.2978,-103.7239,0.3366,-0.457,1.8422,-1.2747 +units=m +no_defs \"],\"EPSG:3577\":[\"EPSG:3577\",\"+proj=aea +lat_1=-18 +lat_2=-36 +lat_0=0 +lon_0=132 +x_0=0 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:32648\":[\"EPSG:32648\",\"+proj=utm +zone=48 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3042\":[\"EPSG:3042\",\"+proj=utm +zone=30 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:4230\":[\"EPSG:4230\",\"+proj=longlat +ellps=intl +towgs84=-87,-98,-121,0,0,0,0 +no_defs \"],\"EPSG:3300\":[\"EPSG:3300\",\"+proj=lcc +lat_1=59.33333333333334 +lat_2=58 +lat_0=57.51755393055556 +lon_0=24 +x_0=500000 +y_0=6375000 +ellps=GRS80 +towgs84=0.055,-0.541,-0.185,0.0183,-0.0003,-0.007,-0.014 +units=m +no_defs \"],\"EPSG:3765\":[\"EPSG:3765\",\"+proj=tmerc +lat_0=0 +lon_0=16.5 +k=0.9999 +x_0=500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:31468\":[\"EPSG:31468\",\"+proj=tmerc +lat_0=0 +lon_0=12 +k=1 +x_0=4500000 +y_0=0 +datum=potsdam +units=m +no_defs \"],\"EPSG:31467\":[\"EPSG:31467\",\"+proj=tmerc +lat_0=0 +lon_0=9 +k=1 +x_0=3500000 +y_0=0 +datum=potsdam +units=m +no_defs \"],\"EPSG:32721\":[\"EPSG:32721\",\"+proj=utm +zone=21 +south +datum=WGS84 +units=m +no_defs \"],\"EPSG:26710\":[\"EPSG:26710\",\"+proj=utm +zone=10 +datum=NAD27 +units=m +no_defs \"],\"EPSG:2829\":[\"EPSG:2829\",\"+proj=tmerc +lat_0=40 +lon_0=-76.58333333333333 +k=0.9999375 +x_0=250000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2845\":[\"EPSG:2845\",\"+proj=lcc +lat_1=33.96666666666667 +lat_2=32.13333333333333 +lat_0=31.66666666666667 +lon_0=-98.5 +x_0=600000 +y_0=2000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:23884\":[\"EPSG:23884\",\"+proj=utm +zone=54 +south +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:4824\":[\"EPSG:4824\",\"+proj=longlat +ellps=intl +no_defs \"],\"EPSG:32642\":[\"EPSG:32642\",\"+proj=utm +zone=42 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3005\":[\"EPSG:3005\",\"+proj=aea +lat_1=50 +lat_2=58.5 +lat_0=45 +lon_0=-126 +x_0=1000000 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:26915\":[\"EPSG:26915\",\"+proj=utm +zone=15 +datum=NAD83 +units=m +no_defs \"],\"EPSG:28355\":[\"EPSG:28355\",\"+proj=utm +zone=55 +south +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:32647\":[\"EPSG:32647\",\"+proj=utm +zone=47 +datum=WGS84 +units=m +no_defs \"],\"EPSG:26719\":[\"EPSG:26719\",\"+proj=utm +zone=19 +datum=NAD27 +units=m +no_defs \"],\"EPSG:5070\":[\"EPSG:5070\",\"+proj=aea +lat_1=29.5 +lat_2=45.5 +lat_0=23 +lon_0=-96 +x_0=0 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:26910\":[\"EPSG:26910\",\"+proj=utm +zone=10 +datum=NAD83 +units=m +no_defs \"],\"EPSG:5534\":[\"EPSG:5534\",\"+proj=utm +zone=24 +south +ellps=aust_SA +towgs84=-67.35,3.88,-38.22,0,0,0,0 +units=m +no_defs \"],\"EPSG:4037\":[\"EPSG:4037\",\"+proj=utm +zone=35 +datum=WGS84 +units=m +no_defs \"],\"EPSG:26918\":[\"EPSG:26918\",\"+proj=utm +zone=18 +datum=NAD83 +units=m +no_defs \"],\"EPSG:3065\":[\"EPSG:3065\",\"+proj=utm +zone=33 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2090\":[\"EPSG:2090\",\"+proj=utm +zone=39 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2037\":[\"EPSG:2037\",\"+proj=utm +zone=19 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:26913\":[\"EPSG:26913\",\"+proj=utm +zone=13 +datum=NAD83 +units=m +no_defs \"],\"EPSG:23030\":[\"EPSG:23030\",\"+proj=utm +zone=30 +ellps=intl +towgs84=-87,-98,-121,0,0,0,0 +units=m +no_defs \"],\"EPSG:23879\":[\"EPSG:23879\",\"+proj=utm +zone=49 +south +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5552\":[\"EPSG:5552\",\"+proj=utm +zone=56 +south +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:28350\":[\"EPSG:28350\",\"+proj=utm +zone=50 +south +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:23032\":[\"EPSG:23032\",\"+proj=utm +zone=32 +ellps=intl +towgs84=-87,-98,-121,0,0,0,0 +units=m +no_defs \"],\"EPSG:3067\":[\"EPSG:3067\",\"+proj=utm +zone=35 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:4055\":[\"EPSG:4055\",\"+proj=longlat +a=6378137 +b=6378137 +towgs84=0,0,0,0,0,0,0 +no_defs \"],\"EPSG:2039\":[\"EPSG:2039\",\"+proj=tmerc +lat_0=31.73439361111111 +lon_0=35.20451694444445 +k=1.0000067 +x_0=219529.584 +y_0=626907.39 +ellps=GRS80 +towgs84=-48,55,52,0,0,0,0 +units=m +no_defs \"],\"EPSG:4265\":[\"EPSG:4265\",\"+proj=longlat +ellps=intl +towgs84=-104.1,-49.1,-9.9,0.971,-2.917,0.714,-11.68 +no_defs \"],\"EPSG:26714\":[\"EPSG:26714\",\"+proj=utm +zone=14 +datum=NAD27 +units=m +no_defs \"],\"EPSG:26717\":[\"EPSG:26717\",\"+proj=utm +zone=17 +datum=NAD27 +units=m +no_defs \"],\"EPSG:32652\":[\"EPSG:32652\",\"+proj=utm +zone=52 +datum=WGS84 +units=m +no_defs \"],\"EPSG:32619\":[\"EPSG:32619\",\"+proj=utm +zone=19 +datum=WGS84 +units=m +no_defs \"],\"EPSG:32750\":[\"EPSG:32750\",\"+proj=utm +zone=50 +south +datum=WGS84 +units=m +no_defs \"],\"EPSG:3349\":[\"EPSG:3349\",\"+proj=merc +lon_0=-150 +k=1 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:32737\":[\"EPSG:32737\",\"+proj=utm +zone=37 +south +datum=WGS84 +units=m +no_defs \"],\"EPSG:31984\":[\"EPSG:31984\",\"+proj=utm +zone=24 +south +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:32756\":[\"EPSG:32756\",\"+proj=utm +zone=56 +south +datum=WGS84 +units=m +no_defs \"],\"EPSG:31287\":[\"EPSG:31287\",\"+proj=lcc +lat_1=49 +lat_2=46 +lat_0=47.5 +lon_0=13.33333333333333 +x_0=400000 +y_0=400000 +datum=hermannskogel +units=m +no_defs \"],\"EPSG:25833\":[\"EPSG:25833\",\"+proj=utm +zone=33 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3003\":[\"EPSG:3003\",\"+proj=tmerc +lat_0=0 +lon_0=9 +k=0.9996 +x_0=1500000 +y_0=0 +ellps=intl +towgs84=-104.1,-49.1,-9.9,0.971,-2.917,0.714,-11.68 +units=m +no_defs \"],\"EPSG:32724\":[\"EPSG:32724\",\"+proj=utm +zone=24 +south +datum=WGS84 +units=m +no_defs \"],\"EPSG:32723\":[\"EPSG:32723\",\"+proj=utm +zone=23 +south +datum=WGS84 +units=m +no_defs \"],\"EPSG:5531\":[\"EPSG:5531\",\"+proj=utm +zone=21 +south +ellps=aust_SA +towgs84=-67.35,3.88,-38.22,0,0,0,0 +units=m +no_defs \"],\"EPSG:4328\":[\"EPSG:4328\",\"+proj=geocent +datum=WGS84 +units=m +no_defs \"],\"EPSG:2151\":[\"EPSG:2151\",\"+proj=utm +zone=13 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:4807\":[\"EPSG:4807\",\"+proj=longlat +a=6378249.2 +b=6356515 +towgs84=-168,-60,320,0,0,0,0 +pm=paris +no_defs \"],\"EPSG:32629\":[\"EPSG:32629\",\"+proj=utm +zone=29 +datum=WGS84 +units=m +no_defs \"],\"EPSG:26916\":[\"EPSG:26916\",\"+proj=utm +zone=16 +datum=NAD83 +units=m +no_defs \"],\"EPSG:26894\":[\"EPSG:26894\",\"+proj=tmerc +lat_0=0 +lon_0=-87 +k=0.9999 +x_0=304800 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:27393\":[\"EPSG:27393\",\"+proj=tmerc +lat_0=58 +lon_0=0 +k=1 +x_0=0 +y_0=0 +a=6377492.018 +b=6356173.508712696 +towgs84=278.3,93,474.5,7.889,0.05,-6.61,6.21 +pm=oslo +units=m +no_defs \"],\"EPSG:7415\":[\"EPSG:7415\",\"+proj=sterea +lat_0=52.15616055555555 +lon_0=5.38763888888889 +k=0.9999079 +x_0=155000 +y_0=463000 +ellps=bessel +towgs84=565.4171,50.3319,465.5524,-0.398957,0.343988,-1.87740,4.0725 +units=m +vunits=m +no_defs \"],\"EPSG:2400\":[\"EPSG:2400\",\"+proj=tmerc +lat_0=0 +lon_0=15.80827777777778 +k=1 +x_0=1500000 +y_0=0 +ellps=bessel +towgs84=414.1,41.3,603.1,-0.855,2.141,-7.023,0 +units=m +no_defs \"],\"EPSG:3111\":[\"EPSG:3111\",\"+proj=lcc +lat_1=-36 +lat_2=-38 +lat_0=-37 +lon_0=145 +x_0=2500000 +y_0=2500000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:28353\":[\"EPSG:28353\",\"+proj=utm +zone=53 +south +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2230\":[\"EPSG:2230\",\"+proj=lcc +lat_1=33.88333333333333 +lat_2=32.78333333333333 +lat_0=32.16666666666666 +lon_0=-116.25 +x_0=2000000.0001016 +y_0=500000.0001016001 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:27040\":[\"EPSG:27040\",\"+proj=utm +zone=40 +ellps=clrk80 +towgs84=-249,-156,381,0,0,0,0 +units=m +no_defs \"],\"EPSG:2815\":[\"EPSG:2815\",\"+proj=tmerc +lat_0=35.83333333333334 +lon_0=-90.5 +k=0.999933333 +x_0=250000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:29101\":[\"EPSG:29101\",\"+proj=poly +lat_0=0 +lon_0=-54 +x_0=5000000 +y_0=10000000 +ellps=aust_SA +towgs84=-66.87,4.37,-38.52,0,0,0,0 +units=m +no_defs \"],\"EPSG:4618\":[\"EPSG:4618\",\"+proj=longlat +ellps=aust_SA +towgs84=-66.87,4.37,-38.52,0,0,0,0 +no_defs \"],\"EPSG:2989\":[\"EPSG:2989\",\"+proj=utm +zone=20 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:32757\":[\"EPSG:32757\",\"+proj=utm +zone=57 +south +datum=WGS84 +units=m +no_defs \"],\"EPSG:2089\":[\"EPSG:2089\",\"+proj=utm +zone=38 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2220\":[\"EPSG:2220\",\"+proj=utm +zone=20 +a=6378135 +b=6356750.304921594 +units=m +no_defs \"],\"EPSG:3310\":[\"EPSG:3310\",\"+proj=aea +lat_1=34 +lat_2=40.5 +lat_0=0 +lon_0=-120 +x_0=0 +y_0=-4000000 +datum=NAD83 +units=m +no_defs \"],\"EPSG:3132\":[\"EPSG:3132\",\"+proj=tmerc +lat_0=0 +lon_0=25 +k=1 +x_0=500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2163\":[\"EPSG:2163\",\"+proj=laea +lat_0=45 +lon_0=-100 +x_0=0 +y_0=0 +a=6370997 +b=6370997 +units=m +no_defs \"],\"EPSG:32754\":[\"EPSG:32754\",\"+proj=utm +zone=54 +south +datum=WGS84 +units=m +no_defs \"],\"EPSG:26331\":[\"EPSG:26331\",\"+proj=utm +zone=31 +ellps=clrk80 +towgs84=-92,-93,122,0,0,0,0 +units=m +no_defs \"],\"EPSG:32213\":[\"EPSG:32213\",\"+proj=utm +zone=13 +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:5533\":[\"EPSG:5533\",\"+proj=utm +zone=23 +south +ellps=aust_SA +towgs84=-67.35,3.88,-38.22,0,0,0,0 +units=m +no_defs \"],\"EPSG:4180\":[\"EPSG:4180\",\"+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs \"],\"EPSG:3734\":[\"EPSG:3734\",\"+proj=lcc +lat_1=41.7 +lat_2=40.43333333333333 +lat_0=39.66666666666666 +lon_0=-82.5 +x_0=600000 +y_0=0 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:3821\":[\"EPSG:3821\",\"+proj=longlat +ellps=aust_SA +no_defs \"],\"EPSG:3301\":[\"EPSG:3301\",\"+proj=lcc +lat_1=59.33333333333334 +lat_2=58 +lat_0=57.51755393055556 +lon_0=24 +x_0=500000 +y_0=6375000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3763\":[\"EPSG:3763\",\"+proj=tmerc +lat_0=39.66825833333333 +lon_0=-8.133108333333334 +k=1 +x_0=0 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:31983\":[\"EPSG:31983\",\"+proj=utm +zone=23 +south +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:4214\":[\"EPSG:4214\",\"+proj=longlat +ellps=krass +towgs84=15.8,-154.4,-82.3,0,0,0,0 +no_defs \"],\"EPSG:32755\":[\"EPSG:32755\",\"+proj=utm +zone=55 +south +datum=WGS84 +units=m +no_defs \"],\"EPSG:2905\":[\"EPSG:2905\",\"+proj=tmerc +lat_0=38.83333333333334 +lon_0=-74.5 +k=0.9999 +x_0=150000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:2906\":[\"EPSG:2906\",\"+proj=tmerc +lat_0=40 +lon_0=-76.58333333333333 +k=0.9999375 +x_0=249999.9998983998 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:2260\":[\"EPSG:2260\",\"+proj=tmerc +lat_0=38.83333333333334 +lon_0=-74.5 +k=0.9999 +x_0=150000 +y_0=0 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:2263\":[\"EPSG:2263\",\"+proj=lcc +lat_1=41.03333333333333 +lat_2=40.66666666666666 +lat_0=40.16666666666666 +lon_0=-74 +x_0=300000.0000000001 +y_0=0 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:32621\":[\"EPSG:32621\",\"+proj=utm +zone=21 +datum=WGS84 +units=m +no_defs \"],\"EPSG:23033\":[\"EPSG:23033\",\"+proj=utm +zone=33 +ellps=intl +towgs84=-87,-98,-121,0,0,0,0 +units=m +no_defs \"],\"EPSG:32655\":[\"EPSG:32655\",\"+proj=utm +zone=55 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3160\":[\"EPSG:3160\",\"+proj=utm +zone=16 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3452\":[\"EPSG:3452\",\"+proj=lcc +lat_1=30.7 +lat_2=29.3 +lat_0=28.5 +lon_0=-91.33333333333333 +x_0=999999.9999898402 +y_0=0 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:23029\":[\"EPSG:23029\",\"+proj=utm +zone=29 +ellps=intl +towgs84=-87,-98,-121,0,0,0,0 +units=m +no_defs \"],\"EPSG:3397\":[\"EPSG:3397\",\"+proj=tmerc +lat_0=0 +lon_0=12 +k=1 +x_0=4500000 +y_0=0 +ellps=bessel +units=m +no_defs \"],\"EPSG:31464\":[\"EPSG:31464\",\"+proj=tmerc +lat_0=0 +lon_0=12 +k=1 +x_0=4500000 +y_0=0 +datum=potsdam +units=m +no_defs \"],\"EPSG:3978\":[\"EPSG:3978\",\"+proj=lcc +lat_1=49 +lat_2=77 +lat_0=49 +lon_0=-95 +x_0=0 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:3011\":[\"EPSG:3011\",\"+proj=tmerc +lat_0=0 +lon_0=18 +k=1 +x_0=150000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3098\":[\"EPSG:3098\",\"+proj=utm +zone=52 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:25830\":[\"EPSG:25830\",\"+proj=utm +zone=30 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2812\":[\"EPSG:2812\",\"+proj=lcc +lat_1=45.21666666666667 +lat_2=43.78333333333333 +lat_0=43 +lon_0=-94 +x_0=800000 +y_0=100000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:4313\":[\"EPSG:4313\",\"+proj=longlat +ellps=intl +towgs84=-106.8686,52.2978,-103.7239,0.3366,-0.457,1.8422,-1.2747 +no_defs \"],\"EPSG:2169\":[\"EPSG:2169\",\"+proj=tmerc +lat_0=49.83333333333334 +lon_0=6.166666666666667 +k=1 +x_0=80000 +y_0=100000 +ellps=intl +towgs84=-189.6806,18.3463,-42.7695,-0.33746,-3.09264,2.53861,0.4598 +units=m +no_defs \"],\"EPSG:29872\":[\"EPSG:29872\",\"+proj=omerc +lat_0=4 +lonc=115 +alpha=53.31582047222222 +k=0.99984 +x_0=590476.8727431979 +y_0=442857.6545573985 +gamma=53.13010236111111 +ellps=evrstSS +towgs84=-679,669,-48,0,0,0,0 +to_meter=0.3047994715386762 +no_defs \"],\"EPSG:4128\":[\"EPSG:4128\",\"+proj=longlat +ellps=clrk66 +no_defs \"],\"EPSG:3855\":[\"EPSG:3855\",\"undefined\"],\"EPSG:26716\":[\"EPSG:26716\",\"+proj=utm +zone=16 +datum=NAD27 +units=m +no_defs \"],\"EPSG:3449\":[\"EPSG:3449\",\"+proj=utm +zone=17 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:32649\":[\"EPSG:32649\",\"+proj=utm +zone=49 +datum=WGS84 +units=m +no_defs \"],\"EPSG:2274\":[\"EPSG:2274\",\"+proj=lcc +lat_1=36.41666666666666 +lat_2=35.25 +lat_0=34.33333333333334 +lon_0=-86 +x_0=600000 +y_0=0 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:3112\":[\"EPSG:3112\",\"+proj=lcc +lat_1=-18 +lat_2=-36 +lat_0=0 +lon_0=134 +x_0=0 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:32612\":[\"EPSG:32612\",\"+proj=utm +zone=12 +datum=WGS84 +units=m +no_defs \"],\"EPSG:5072\":[\"EPSG:5072\",\"+proj=aea +lat_1=29.5 +lat_2=45.5 +lat_0=23 +lon_0=-96 +x_0=0 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2393\":[\"EPSG:2393\",\"+proj=tmerc +lat_0=0 +lon_0=27 +k=1 +x_0=3500000 +y_0=0 +ellps=intl +towgs84=-96.062,-82.428,-121.753,4.801,0.345,-1.376,1.496 +units=m +no_defs \"],\"EPSG:32720\":[\"EPSG:32720\",\"+proj=utm +zone=20 +south +datum=WGS84 +units=m +no_defs \"],\"EPSG:31285\":[\"EPSG:31285\",\"+proj=tmerc +lat_0=0 +lon_0=13.33333333333333 +k=1 +x_0=450000 +y_0=0 +datum=hermannskogel +units=m +no_defs \"],\"EPSG:28352\":[\"EPSG:28352\",\"+proj=utm +zone=52 +south +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3049\":[\"EPSG:3049\",\"+proj=utm +zone=37 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:32045\":[\"EPSG:32045\",\"+proj=tmerc +lat_0=42.5 +lon_0=-72.5 +k=0.999964286 +x_0=152400.3048006096 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:3071\":[\"EPSG:3071\",\"+proj=tmerc +lat_0=0 +lon_0=-90 +k=0.9996 +x_0=520000 +y_0=-4480000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3338\":[\"EPSG:3338\",\"+proj=aea +lat_1=55 +lat_2=65 +lat_0=50 +lon_0=-154 +x_0=0 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:32751\":[\"EPSG:32751\",\"+proj=utm +zone=51 +south +datum=WGS84 +units=m +no_defs \"],\"EPSG:27493\":[\"EPSG:27493\",\"+proj=tmerc +lat_0=39.66666666666666 +lon_0=-8.131906111111112 +k=1 +x_0=180.598 +y_0=-86.98999999999999 +ellps=intl +towgs84=-223.237,110.193,36.649,0,0,0,0 +units=m +no_defs \"],\"EPSG:3943\":[\"EPSG:3943\",\"+proj=lcc +lat_1=42.25 +lat_2=43.75 +lat_0=43 +lon_0=3 +x_0=1700000 +y_0=2200000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:4815\":[\"EPSG:4815\",\"+proj=longlat +ellps=bessel +pm=athens +no_defs \"],\"EPSG:4619\":[\"EPSG:4619\",\"+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs \"],\"EPSG:2228\":[\"EPSG:2228\",\"+proj=lcc +lat_1=37.25 +lat_2=36 +lat_0=35.33333333333334 +lon_0=-119 +x_0=2000000.0001016 +y_0=500000.0001016001 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:2157\":[\"EPSG:2157\",\"+proj=tmerc +lat_0=53.5 +lon_0=-8 +k=0.99982 +x_0=600000 +y_0=750000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2229\":[\"EPSG:2229\",\"+proj=lcc +lat_1=35.46666666666667 +lat_2=34.03333333333333 +lat_0=33.5 +lon_0=-118 +x_0=2000000.0001016 +y_0=500000.0001016001 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:4289\":[\"EPSG:4289\",\"+proj=longlat +ellps=bessel +towgs84=565.4171,50.3319,465.5524,-0.398957,0.343988,-1.87740,4.0725 +no_defs \"],\"EPSG:3113\":[\"EPSG:3113\",\"+proj=tmerc +lat_0=-28 +lon_0=153 +k=0.99999 +x_0=50000 +y_0=100000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2152\":[\"EPSG:2152\",\"+proj=utm +zone=12 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:4171\":[\"EPSG:4171\",\"+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs \"],\"EPSG:4317\":[\"EPSG:4317\",\"+proj=longlat +ellps=krass +towgs84=28,-121,-77,0,0,0,0 +no_defs \"],\"EPSG:4956\":[\"EPSG:4956\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:32623\":[\"EPSG:32623\",\"+proj=utm +zone=23 +datum=WGS84 +units=m +no_defs \"],\"EPSG:24719\":[\"EPSG:24719\",\"+proj=utm +zone=19 +ellps=intl +towgs84=-273.5,110.6,-357.9,0,0,0,0 +units=m +no_defs \"],\"EPSG:3157\":[\"EPSG:3157\",\"+proj=utm +zone=10 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2900\":[\"EPSG:2900\",\"+proj=tmerc +lat_0=29.5 +lon_0=-90.33333333333333 +k=0.99995 +x_0=699999.9998983998 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:26718\":[\"EPSG:26718\",\"+proj=utm +zone=18 +datum=NAD27 +units=m +no_defs \"],\"EPSG:32628\":[\"EPSG:32628\",\"+proj=utm +zone=28 +datum=WGS84 +units=m +no_defs \"],\"EPSG:4938\":[\"EPSG:4938\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:29193\":[\"EPSG:29193\",\"+proj=utm +zone=23 +south +ellps=aust_SA +towgs84=-66.87,4.37,-38.52,0,0,0,0 +units=m +no_defs \"],\"EPSG:4025\":[\"EPSG:4025\",\"+proj=longlat +ellps=WGS66 +no_defs \"],\"EPSG:31276\":[\"EPSG:31276\",\"+proj=tmerc +lat_0=0 +lon_0=18 +k=0.9999 +x_0=6500000 +y_0=0 +datum=hermannskogel +units=m +no_defs \"],\"EPSG:4322\":[\"EPSG:4322\",\"+proj=longlat +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +no_defs \"],\"EPSG:4826\":[\"EPSG:4826\",\"+proj=lcc +lat_1=15 +lat_2=16.66666666666667 +lat_0=15.83333333333333 +lon_0=-24 +x_0=161587.83 +y_0=128511.202 +datum=WGS84 +units=m +no_defs \"],\"EPSG:2262\":[\"EPSG:2262\",\"+proj=tmerc +lat_0=40 +lon_0=-78.58333333333333 +k=0.9999375 +x_0=350000.0001016001 +y_0=0 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:2264\":[\"EPSG:2264\",\"+proj=lcc +lat_1=36.16666666666666 +lat_2=34.33333333333334 +lat_0=33.75 +lon_0=-79 +x_0=609601.2192024384 +y_0=0 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:2811\":[\"EPSG:2811\",\"+proj=lcc +lat_1=47.05 +lat_2=45.61666666666667 +lat_0=45 +lon_0=-94.25 +x_0=800000 +y_0=100000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3116\":[\"EPSG:3116\",\"+proj=tmerc +lat_0=4.596200416666666 +lon_0=-74.07750791666666 +k=1 +x_0=1000000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:4940\":[\"EPSG:4940\",\"+proj=geocent +ellps=WGS84 +units=m +no_defs \"],\"EPSG:3975\":[\"EPSG:3975\",\"+proj=cea +lon_0=0 +lat_ts=30 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:26715\":[\"EPSG:26715\",\"+proj=utm +zone=15 +datum=NAD27 +units=m +no_defs \"],\"EPSG:2956\":[\"EPSG:2956\",\"+proj=utm +zone=12 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:26917\":[\"EPSG:26917\",\"+proj=utm +zone=17 +datum=NAD83 +units=m +no_defs \"],\"EPSG:26920\":[\"EPSG:26920\",\"+proj=utm +zone=20 +datum=NAD83 +units=m +no_defs \"],\"EPSG:4806\":[\"EPSG:4806\",\"+proj=longlat +ellps=intl +towgs84=-104.1,-49.1,-9.9,0.971,-2.917,0.714,-11.68 +pm=rome +no_defs \"],\"EPSG:32622\":[\"EPSG:32622\",\"+proj=utm +zone=22 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3413\":[\"EPSG:3413\",\"+proj=stere +lat_0=90 +lat_ts=70 +lon_0=-45 +k=1 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3009\":[\"EPSG:3009\",\"+proj=tmerc +lat_0=0 +lon_0=15 +k=1 +x_0=150000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5256\":[\"EPSG:5256\",\"+proj=tmerc +lat_0=0 +lon_0=36 +k=1 +x_0=500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:28991\":[\"EPSG:28991\",\"+proj=sterea +lat_0=52.15616055555555 +lon_0=5.38763888888889 +k=0.9999079 +x_0=0 +y_0=0 +ellps=bessel +towgs84=565.4171,50.3319,465.5524,-0.398957,0.343988,-1.87740,4.0725 +units=m +no_defs \"],\"EPSG:32747\":[\"EPSG:32747\",\"+proj=utm +zone=47 +south +datum=WGS84 +units=m +no_defs \"],\"EPSG:4148\":[\"EPSG:4148\",\"+proj=longlat +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +no_defs \"],\"EPSG:2004\":[\"EPSG:2004\",\"+proj=tmerc +lat_0=0 +lon_0=-62 +k=0.9995000000000001 +x_0=400000 +y_0=0 +ellps=clrk80 +towgs84=174,359,365,0,0,0,0 +units=m +no_defs \"],\"EPSG:4210\":[\"EPSG:4210\",\"+proj=longlat +ellps=clrk80 +towgs84=-160,-6,-302,0,0,0,0 +no_defs \"],\"EPSG:31254\":[\"EPSG:31254\",\"+proj=tmerc +lat_0=0 +lon_0=10.33333333333333 +k=1 +x_0=0 +y_0=-5000000 +datum=hermannskogel +units=m +no_defs \"],\"EPSG:29902\":[\"EPSG:29902\",\"+proj=tmerc +lat_0=53.5 +lon_0=-8 +k=1.000035 +x_0=200000 +y_0=250000 +datum=ire65 +units=m +no_defs \"],\"EPSG:3828\":[\"EPSG:3828\",\"+proj=tmerc +lat_0=0 +lon_0=121 +k=0.9999 +x_0=250000 +y_0=0 +ellps=aust_SA +units=m +no_defs \"],\"EPSG:3578\":[\"EPSG:3578\",\"+proj=aea +lat_1=61.66666666666666 +lat_2=68 +lat_0=59 +lon_0=-132.5 +x_0=500000 +y_0=500000 +datum=NAD83 +units=m +no_defs \"],\"EPSG:4483\":[\"EPSG:4483\",\"+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs \"],\"EPSG:31463\":[\"EPSG:31463\",\"+proj=tmerc +lat_0=0 +lon_0=9 +k=1 +x_0=3500000 +y_0=0 +datum=potsdam +units=m +no_defs \"],\"EPSG:23036\":[\"EPSG:23036\",\"+proj=utm +zone=36 +ellps=intl +towgs84=-87,-98,-121,0,0,0,0 +units=m +no_defs \"],\"EPSG:5550\":[\"EPSG:5550\",\"+proj=utm +zone=54 +south +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3158\":[\"EPSG:3158\",\"+proj=utm +zone=14 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:32717\":[\"EPSG:32717\",\"+proj=utm +zone=17 +south +datum=WGS84 +units=m +no_defs \"],\"EPSG:2285\":[\"EPSG:2285\",\"+proj=lcc +lat_1=48.73333333333333 +lat_2=47.5 +lat_0=47 +lon_0=-120.8333333333333 +x_0=500000.0001016001 +y_0=0 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:24048\":[\"EPSG:24048\",\"+proj=utm +zone=48 +a=6377276.345 +b=6356075.41314024 +towgs84=210,814,289,0,0,0,0 +units=m +no_defs \"],\"EPSG:27572\":[\"EPSG:27572\",\"+proj=lcc +lat_1=46.8 +lat_0=46.8 +lon_0=0 +k_0=0.99987742 +x_0=600000 +y_0=2200000 +a=6378249.2 +b=6356515 +towgs84=-168,-60,320,0,0,0,0 +pm=paris +units=m +no_defs \"],\"EPSG:26996\":[\"EPSG:26996\",\"+proj=tmerc +lat_0=35.83333333333334 +lon_0=-90.5 +k=0.999933333 +x_0=250000 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:3027\":[\"EPSG:3027\",\"+proj=tmerc +lat_0=0 +lon_0=15.80827777777778 +k=1 +x_0=1500000 +y_0=0 +ellps=bessel +units=m +no_defs \"],\"EPSG:27562\":[\"EPSG:27562\",\"+proj=lcc +lat_1=46.8 +lat_0=46.8 +lon_0=0 +k_0=0.99987742 +x_0=600000 +y_0=200000 +a=6378249.2 +b=6356515 +towgs84=-168,-60,320,0,0,0,0 +pm=paris +units=m +no_defs \"],\"EPSG:3553\":[\"EPSG:3553\",\"+proj=lcc +lat_1=30.7 +lat_2=29.3 +lat_0=28.5 +lon_0=-91.33333333333333 +x_0=999999.9999898402 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3034\":[\"EPSG:3034\",\"+proj=lcc +lat_1=35 +lat_2=65 +lat_0=52 +lon_0=10 +x_0=4000000 +y_0=2800000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5799\":[\"EPSG:5799\",\"undefined\"],\"EPSG:26778\":[\"EPSG:26778\",\"+proj=lcc +lat_1=38.56666666666667 +lat_2=37.26666666666667 +lat_0=36.66666666666666 +lon_0=-98.5 +x_0=609601.2192024384 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:31297\":[\"EPSG:31297\",\"+proj=lcc +lat_1=49 +lat_2=46 +lat_0=47.5 +lon_0=13.33333333333333 +x_0=400000 +y_0=400000 +datum=hermannskogel +units=m +no_defs \"],\"EPSG:4274\":[\"EPSG:4274\",\"+proj=longlat +ellps=intl +towgs84=-223.237,110.193,36.649,0,0,0,0 +no_defs \"],\"EPSG:3046\":[\"EPSG:3046\",\"+proj=utm +zone=34 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:4896\":[\"EPSG:4896\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:3008\":[\"EPSG:3008\",\"+proj=tmerc +lat_0=0 +lon_0=13.5 +k=1 +x_0=150000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2907\":[\"EPSG:2907\",\"+proj=tmerc +lat_0=40 +lon_0=-78.58333333333333 +k=0.9999375 +x_0=350000.0001016001 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:26591\":[\"EPSG:26591\",\"+proj=tmerc +lat_0=0 +lon_0=-3.45233333333333 +k=0.9996 +x_0=1500000 +y_0=0 +ellps=intl +towgs84=-104.1,-49.1,-9.9,0.971,-2.917,0.714,-11.68 +pm=rome +units=m +no_defs \"],\"EPSG:23035\":[\"EPSG:23035\",\"+proj=utm +zone=35 +ellps=intl +towgs84=-87,-98,-121,0,0,0,0 +units=m +no_defs \"],\"EPSG:5367\":[\"EPSG:5367\",\"+proj=tmerc +lat_0=0 +lon_0=-84 +k=0.9999 +x_0=500000 +y_0=0 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:21892\":[\"EPSG:21892\",\"+proj=tmerc +lat_0=4.599047222222222 +lon_0=-74.08091666666667 +k=1 +x_0=1000000 +y_0=1000000 +ellps=intl +towgs84=307,304,-318,0,0,0,0 +units=m +no_defs \"],\"EPSG:2226\":[\"EPSG:2226\",\"+proj=lcc +lat_1=39.83333333333334 +lat_2=38.33333333333334 +lat_0=37.66666666666666 +lon_0=-122 +x_0=2000000.0001016 +y_0=500000.0001016001 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:20790\":[\"EPSG:20790\",\"+proj=tmerc +lat_0=39.66666666666666 +lon_0=1 +k=1 +x_0=200000 +y_0=300000 +ellps=intl +towgs84=-304.046,-60.576,103.64,0,0,0,0 +pm=lisbon +units=m +no_defs \"],\"EPSG:2902\":[\"EPSG:2902\",\"+proj=tmerc +lat_0=31 +lon_0=-104.3333333333333 +k=0.999909091 +x_0=165000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:2176\":[\"EPSG:2176\",\"+proj=tmerc +lat_0=0 +lon_0=15 +k=0.999923 +x_0=5500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:29180\":[\"EPSG:29180\",\"+proj=utm +zone=20 +south +ellps=GRS67 +towgs84=-57,1,-41,0,0,0,0 +units=m +no_defs \"],\"EPSG:5764\":[\"EPSG:5764\",\"undefined\"],\"EPSG:3163\":[\"EPSG:3163\",\"+proj=lcc +lat_1=-20.66666666666667 +lat_2=-22.33333333333333 +lat_0=-21.5 +lon_0=166 +x_0=400000 +y_0=300000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:24047\":[\"EPSG:24047\",\"+proj=utm +zone=47 +a=6377276.345 +b=6356075.41314024 +towgs84=210,814,289,0,0,0,0 +units=m +no_defs \"],\"EPSG:4479\":[\"EPSG:4479\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:27563\":[\"EPSG:27563\",\"+proj=lcc +lat_1=44.10000000000001 +lat_0=44.10000000000001 +lon_0=0 +k_0=0.999877499 +x_0=600000 +y_0=200000 +a=6378249.2 +b=6356515 +towgs84=-168,-60,320,0,0,0,0 +pm=paris +units=m +no_defs \"],\"EPSG:3057\":[\"EPSG:3057\",\"+proj=lcc +lat_1=64.25 +lat_2=65.75 +lat_0=65 +lon_0=-19 +x_0=500000 +y_0=500000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:29191\":[\"EPSG:29191\",\"+proj=utm +zone=21 +south +ellps=aust_SA +towgs84=-66.87,4.37,-38.52,0,0,0,0 +units=m +no_defs \"],\"EPSG:2177\":[\"EPSG:2177\",\"+proj=tmerc +lat_0=0 +lon_0=18 +k=0.999923 +x_0=6500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:32139\":[\"EPSG:32139\",\"+proj=lcc +lat_1=31.88333333333333 +lat_2=30.11666666666667 +lat_0=29.66666666666667 +lon_0=-100.3333333333333 +x_0=700000 +y_0=3000000 +datum=NAD83 +units=m +no_defs \"],\"EPSG:3616\":[\"EPSG:3616\",\"+proj=tmerc +lat_0=38.83333333333334 +lon_0=-74.5 +k=0.9999 +x_0=150000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:2223\":[\"EPSG:2223\",\"+proj=tmerc +lat_0=31 +lon_0=-111.9166666666667 +k=0.9999 +x_0=213360 +y_0=0 +datum=NAD83 +units=ft +no_defs \"],\"EPSG:32019\":[\"EPSG:32019\",\"+proj=lcc +lat_1=34.33333333333334 +lat_2=36.16666666666666 +lat_0=33.75 +lon_0=-79 +x_0=609601.2192024384 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:26753\":[\"EPSG:26753\",\"+proj=lcc +lat_1=39.71666666666667 +lat_2=40.78333333333333 +lat_0=39.33333333333334 +lon_0=-105.5 +x_0=609601.2192024384 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:32654\":[\"EPSG:32654\",\"+proj=utm +zone=54 +datum=WGS84 +units=m +no_defs \"],\"EPSG:26904\":[\"EPSG:26904\",\"+proj=utm +zone=4 +datum=NAD83 +units=m +no_defs \"],\"EPSG:5018\":[\"EPSG:5018\",\"+proj=tmerc +lat_0=39.66666666666666 +lon_0=-8.131906111111112 +k=1 +x_0=0 +y_0=0 +ellps=intl +towgs84=-304.046,-60.576,103.64,0,0,0,0 +units=m +no_defs \"],\"EPSG:21096\":[\"EPSG:21096\",\"+proj=utm +zone=36 +ellps=clrk80 +towgs84=-160,-6,-302,0,0,0,0 +units=m +no_defs \"],\"EPSG:3822\":[\"EPSG:3822\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:3457\":[\"EPSG:3457\",\"+proj=lcc +lat_1=30.7 +lat_2=29.3 +lat_0=28.5 +lon_0=-91.33333333333333 +x_0=999999.9999898402 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:30800\":[\"EPSG:30800\",\"+proj=tmerc +lat_0=0 +lon_0=15.80827777777778 +k=1 +x_0=1500000 +y_0=0 +ellps=bessel +units=m +no_defs \"],\"EPSG:2065\":[\"EPSG:2065\",\"+proj=krovak +lat_0=49.5 +lon_0=42.5 +alpha=30.28813972222222 +k=0.9999 +x_0=0 +y_0=0 +ellps=bessel +towgs84=570.8,85.7,462.8,4.998,1.587,5.261,3.56 +pm=ferro +units=m +no_defs \"],\"EPSG:3346\":[\"EPSG:3346\",\"+proj=tmerc +lat_0=0 +lon_0=24 +k=0.9998 +x_0=500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3432\":[\"EPSG:3432\",\"+proj=tmerc +lat_0=38.83333333333334 +lon_0=-74.5 +k=0.9999 +x_0=150000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3290\":[\"EPSG:3290\",\"+proj=stere +lat_0=-90 +lat_ts=-80.23861111111111 +lon_0=30 +k=1 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:26967\":[\"EPSG:26967\",\"+proj=tmerc +lat_0=30 +lon_0=-84.16666666666667 +k=0.9999 +x_0=700000 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:2326\":[\"EPSG:2326\",\"+proj=tmerc +lat_0=22.31213333333334 +lon_0=114.1785555555556 +k=1 +x_0=836694.05 +y_0=819069.8 +ellps=intl +towgs84=-162.619,-276.959,-161.764,0.067753,-2.243649,-1.158827,-1.094246 +units=m +no_defs \"],\"EPSG:2927\":[\"EPSG:2927\",\"+proj=lcc +lat_1=47.33333333333334 +lat_2=45.83333333333334 +lat_0=45.33333333333334 +lon_0=-120.5 +x_0=500000.0001016001 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3153\":[\"EPSG:3153\",\"+proj=aea +lat_1=50 +lat_2=58.5 +lat_0=45 +lon_0=-126 +x_0=1000000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:4162\":[\"EPSG:4162\",\"+proj=longlat +ellps=bessel +no_defs \"],\"EPSG:25829\":[\"EPSG:25829\",\"+proj=utm +zone=29 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:4936\":[\"EPSG:4936\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:4385\":[\"EPSG:4385\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:25828\":[\"EPSG:25828\",\"+proj=utm +zone=28 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3004\":[\"EPSG:3004\",\"+proj=tmerc +lat_0=0 +lon_0=15 +k=0.9996 +x_0=2520000 +y_0=0 +ellps=intl +towgs84=-104.1,-49.1,-9.9,0.971,-2.917,0.714,-11.68 +units=m +no_defs \"],\"EPSG:2828\":[\"EPSG:2828\",\"+proj=tmerc +lat_0=38.83333333333334 +lon_0=-74.5 +k=0.9999 +x_0=150000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5069\":[\"EPSG:5069\",\"+proj=aea +lat_1=29.5 +lat_2=45.5 +lat_0=23 +lon_0=-96 +x_0=0 +y_0=0 +datum=NAD27 +units=m +no_defs \"],\"EPSG:4149\":[\"EPSG:4149\",\"+proj=longlat +ellps=bessel +towgs84=674.4,15.1,405.3,0,0,0,0 +no_defs \"],\"EPSG:4156\":[\"EPSG:4156\",\"+proj=longlat +ellps=bessel +towgs84=589,76,480,0,0,0,0 +no_defs \"],\"EPSG:4181\":[\"EPSG:4181\",\"+proj=longlat +ellps=intl +towgs84=-189.6806,18.3463,-42.7695,-0.33746,-3.09264,2.53861,0.4598 +no_defs \"],\"EPSG:2231\":[\"EPSG:2231\",\"+proj=lcc +lat_1=40.78333333333333 +lat_2=39.71666666666667 +lat_0=39.33333333333334 +lon_0=-105.5 +x_0=914401.8288036576 +y_0=304800.6096012192 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:4587\":[\"EPSG:4587\",\"+proj=tmerc +lat_0=0 +lon_0=123 +k=1 +x_0=500000 +y_0=0 +ellps=krass +units=m +no_defs \"],\"EPSG:4348\":[\"EPSG:4348\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:22184\":[\"EPSG:22184\",\"+proj=tmerc +lat_0=-90 +lon_0=-63 +k=1 +x_0=4500000 +y_0=0 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3826\":[\"EPSG:3826\",\"+proj=tmerc +lat_0=0 +lon_0=121 +k=0.9999 +x_0=250000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2034\":[\"EPSG:2034\",\"+proj=utm +zone=20 +ellps=clrk66 +units=m +no_defs \"],\"EPSG:29900\":[\"EPSG:29900\",\"+proj=tmerc +lat_0=53.5 +lon_0=-8 +k=1.000035 +x_0=200000 +y_0=250000 +datum=ire65 +units=m +no_defs \"],\"EPSG:3331\":[\"EPSG:3331\",\"+proj=tmerc +lat_0=0 +lon_0=21 +k=1 +x_0=7500000 +y_0=0 +ellps=krass +towgs84=2.3287,-147.0425,-92.0802,-0.3092483,0.32482185,0.49729934,5.68906266 +units=m +no_defs \"],\"EPSG:2768\":[\"EPSG:2768\",\"+proj=lcc +lat_1=38.43333333333333 +lat_2=37.06666666666667 +lat_0=36.5 +lon_0=-120.5 +x_0=2000000 +y_0=500000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3812\":[\"EPSG:3812\",\"+proj=lcc +lat_1=49.83333333333334 +lat_2=51.16666666666666 +lat_0=50.797815 +lon_0=4.359215833333333 +x_0=649328 +y_0=665262 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3815\":[\"EPSG:3815\",\"+proj=tmerc +lat_0=32.5 +lon_0=-89.75 +k=0.9998335 +x_0=500000 +y_0=1300000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2525\":[\"EPSG:2525\",\"+proj=tmerc +lat_0=0 +lon_0=27 +k=1 +x_0=9500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:4794\":[\"EPSG:4794\",\"+proj=tmerc +lat_0=0 +lon_0=111 +k=1 +x_0=500000 +y_0=0 +ellps=krass +units=m +no_defs \"],\"EPSG:4797\":[\"EPSG:4797\",\"+proj=tmerc +lat_0=0 +lon_0=120 +k=1 +x_0=500000 +y_0=0 +ellps=krass +units=m +no_defs \"],\"EPSG:4674\":[\"EPSG:4674\",\"+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs \"],\"EPSG:4897\":[\"EPSG:4897\",\"+proj=geocent +ellps=WGS84 +units=m +no_defs \"],\"EPSG:32520\":[\"EPSG:32520\",\"+proj=utm +zone=20 +south +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:4839\":[\"EPSG:4839\",\"+proj=lcc +lat_1=48.66666666666666 +lat_2=53.66666666666666 +lat_0=51 +lon_0=10.5 +x_0=0 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:26771\":[\"EPSG:26771\",\"+proj=tmerc +lat_0=36.66666666666666 +lon_0=-88.33333333333333 +k=0.9999749999999999 +x_0=152400.3048006096 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:3347\":[\"EPSG:3347\",\"+proj=lcc +lat_1=49 +lat_2=77 +lat_0=63.390675 +lon_0=-91.86666666666666 +x_0=6200000 +y_0=3000000 +datum=NAD83 +units=m +no_defs \"],\"EPSG:4612\":[\"EPSG:4612\",\"+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs \"],\"EPSG:3571\":[\"EPSG:3571\",\"+proj=laea +lat_0=90 +lon_0=180 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:4913\":[\"EPSG:4913\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:2272\":[\"EPSG:2272\",\"+proj=lcc +lat_1=40.96666666666667 +lat_2=39.93333333333333 +lat_0=39.33333333333334 +lon_0=-77.75 +x_0=600000 +y_0=0 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:4189\":[\"EPSG:4189\",\"+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs \"],\"EPSG:3575\":[\"EPSG:3575\",\"+proj=laea +lat_0=90 +lon_0=10 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:2926\":[\"EPSG:2926\",\"+proj=lcc +lat_1=48.73333333333333 +lat_2=47.5 +lat_0=47 +lon_0=-120.8333333333333 +x_0=500000.0001016001 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:31252\":[\"EPSG:31252\",\"+proj=tmerc +lat_0=0 +lon_0=31 +k=1 +x_0=0 +y_0=-5000000 +ellps=bessel +towgs84=682,-203,480,0,0,0,0 +pm=ferro +units=m +no_defs \"],\"EPSG:20356\":[\"EPSG:20356\",\"+proj=utm +zone=56 +south +ellps=aust_SA +towgs84=-134,-48,149,0,0,0,0 +units=m +no_defs \"],\"EPSG:31255\":[\"EPSG:31255\",\"+proj=tmerc +lat_0=0 +lon_0=13.33333333333333 +k=1 +x_0=0 +y_0=-5000000 +datum=hermannskogel +units=m +no_defs \"],\"EPSG:26785\":[\"EPSG:26785\",\"+proj=lcc +lat_1=38.3 +lat_2=39.45 +lat_0=37.83333333333334 +lon_0=-77 +x_0=243840.4876809754 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:4004\":[\"EPSG:4004\",\"+proj=longlat +ellps=bessel +no_defs \"],\"EPSG:31267\":[\"EPSG:31267\",\"+proj=tmerc +lat_0=0 +lon_0=21 +k=1 +x_0=7500000 +y_0=0 +datum=hermannskogel +units=m +no_defs \"],\"EPSG:2276\":[\"EPSG:2276\",\"+proj=lcc +lat_1=33.96666666666667 +lat_2=32.13333333333333 +lat_0=31.66666666666667 +lon_0=-98.5 +x_0=600000 +y_0=2000000.0001016 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:2277\":[\"EPSG:2277\",\"+proj=lcc +lat_1=31.88333333333333 +lat_2=30.11666666666667 +lat_0=29.66666666666667 +lon_0=-100.3333333333333 +x_0=699999.9998983998 +y_0=3000000 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:2278\":[\"EPSG:2278\",\"+proj=lcc +lat_1=30.28333333333333 +lat_2=28.38333333333333 +lat_0=27.83333333333333 +lon_0=-99 +x_0=600000 +y_0=3999999.9998984 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:4015\":[\"EPSG:4015\",\"+proj=longlat +a=6377276.345 +b=6356075.41314024 +no_defs \"],\"EPSG:3155\":[\"EPSG:3155\",\"+proj=utm +zone=8 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:32624\":[\"EPSG:32624\",\"+proj=utm +zone=24 +datum=WGS84 +units=m +no_defs \"],\"EPSG:5214\":[\"EPSG:5214\",\"undefined\"],\"EPSG:4986\":[\"EPSG:4986\",\"+proj=geocent +ellps=WGS72 +units=m +no_defs \"],\"EPSG:5048\":[\"EPSG:5048\",\"+proj=utm +zone=35 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2790\":[\"EPSG:2790\",\"+proj=tmerc +lat_0=36.66666666666666 +lon_0=-88.33333333333333 +k=0.9999749999999999 +x_0=300000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3907\":[\"EPSG:3907\",\"+proj=tmerc +lat_0=0 +lon_0=15 +k=0.9999 +x_0=5500000 +y_0=0 +ellps=bessel +towgs84=682,-203,480,0,0,0,0 +units=m +no_defs \"],\"EPSG:3908\":[\"EPSG:3908\",\"+proj=tmerc +lat_0=0 +lon_0=18 +k=0.9999 +x_0=6500000 +y_0=0 +ellps=bessel +towgs84=682,-203,480,0,0,0,0 +units=m +no_defs \"],\"EPSG:3375\":[\"EPSG:3375\",\"+proj=omerc +lat_0=4 +lonc=102.25 +alpha=323.0257964666666 +k=0.99984 +x_0=804671 +y_0=0 +no_uoff +gamma=323.1301023611111 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:3995\":[\"EPSG:3995\",\"+proj=stere +lat_0=90 +lat_ts=71 +lon_0=0 +k=1 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3007\":[\"EPSG:3007\",\"+proj=tmerc +lat_0=0 +lon_0=12 +k=1 +x_0=150000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:4005\":[\"EPSG:4005\",\"+proj=longlat +a=6377492.018 +b=6356173.508712696 +no_defs \"],\"EPSG:4024\":[\"EPSG:4024\",\"+proj=longlat +ellps=krass +no_defs \"],\"EPSG:4052\":[\"EPSG:4052\",\"+proj=longlat +a=6370997 +b=6370997 +no_defs \"],\"EPSG:32734\":[\"EPSG:32734\",\"+proj=utm +zone=34 +south +datum=WGS84 +units=m +no_defs \"],\"EPSG:32602\":[\"EPSG:32602\",\"+proj=utm +zone=2 +datum=WGS84 +units=m +no_defs \"],\"EPSG:4225\":[\"EPSG:4225\",\"+proj=longlat +ellps=intl +towgs84=-205.57,168.77,-4.12,0,0,0,0 +no_defs \"],\"EPSG:2953\":[\"EPSG:2953\",\"+proj=sterea +lat_0=46.5 +lon_0=-66.5 +k=0.999912 +x_0=2500000 +y_0=7500000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:31981\":[\"EPSG:31981\",\"+proj=utm +zone=21 +south +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:31985\":[\"EPSG:31985\",\"+proj=utm +zone=25 +south +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2174\":[\"EPSG:2174\",\"+proj=sterea +lat_0=51.67083333333333 +lon_0=16.67222222222222 +k=0.9998 +x_0=3703000 +y_0=5627000 +ellps=krass +towgs84=2.3287,-147.0425,-92.0802,-0.3092483,0.32482185,0.49729934,5.68906266 +units=m +no_defs \"],\"EPSG:3182\":[\"EPSG:3182\",\"+proj=utm +zone=22 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2175\":[\"EPSG:2175\",\"+proj=tmerc +lat_0=0 +lon_0=18.95833333333333 +k=0.999983 +x_0=237000 +y_0=-4700000 +ellps=krass +towgs84=2.3287,-147.0425,-92.0802,-0.3092483,0.32482185,0.49729934,5.68906266 +units=m +no_defs \"],\"EPSG:31992\":[\"EPSG:31992\",\"+proj=utm +zone=17 +south +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5773\":[\"EPSG:5773\",\"undefined\"],\"EPSG:2958\":[\"EPSG:2958\",\"+proj=utm +zone=17 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2434\":[\"EPSG:2434\",\"+proj=tmerc +lat_0=0 +lon_0=111 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=15.8,-154.4,-82.3,0,0,0,0 +units=m +no_defs \"],\"EPSG:4331\":[\"EPSG:4331\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:32606\":[\"EPSG:32606\",\"+proj=utm +zone=6 +datum=WGS84 +units=m +no_defs \"],\"EPSG:2178\":[\"EPSG:2178\",\"+proj=tmerc +lat_0=0 +lon_0=21 +k=0.999923 +x_0=7500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:32005\":[\"EPSG:32005\",\"+proj=lcc +lat_1=41.85 +lat_2=42.81666666666667 +lat_0=41.33333333333334 +lon_0=-100 +x_0=609601.2192024384 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:4917\":[\"EPSG:4917\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:26895\":[\"EPSG:26895\",\"+proj=tmerc +lat_0=0 +lon_0=-90 +k=0.9999 +x_0=304800 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:26896\":[\"EPSG:26896\",\"+proj=tmerc +lat_0=0 +lon_0=-93 +k=0.9999 +x_0=304800 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:21897\":[\"EPSG:21897\",\"+proj=tmerc +lat_0=4.599047222222222 +lon_0=-74.08091666666667 +k=1 +x_0=1000000 +y_0=1000000 +ellps=intl +towgs84=307,304,-318,0,0,0,0 +units=m +no_defs \"],\"EPSG:3403\":[\"EPSG:3403\",\"+proj=tmerc +lat_0=0 +lon_0=-115 +k=0.9992 +x_0=0 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3630\":[\"EPSG:3630\",\"+proj=tmerc +lat_0=40 +lon_0=-78.58333333333333 +k=0.9999375 +x_0=350000.0001016001 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:5524\":[\"EPSG:5524\",\"+proj=longlat +ellps=intl +no_defs \"],\"EPSG:32031\":[\"EPSG:32031\",\"+proj=lcc +lat_1=33.76666666666667 +lat_2=34.96666666666667 +lat_0=33 +lon_0=-81 +x_0=609601.2192024384 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:2816\":[\"EPSG:2816\",\"+proj=tmerc +lat_0=35.83333333333334 +lon_0=-92.5 +k=0.999933333 +x_0=500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:4481\":[\"EPSG:4481\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:32036\":[\"EPSG:32036\",\"+proj=lcc +lat_1=35.25 +lat_2=36.41666666666666 +lat_0=34.66666666666666 +lon_0=-86 +x_0=30480.06096012192 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:2817\":[\"EPSG:2817\",\"+proj=tmerc +lat_0=36.16666666666666 +lon_0=-94.5 +k=0.999941177 +x_0=850000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:4083\":[\"EPSG:4083\",\"+proj=utm +zone=28 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2819\":[\"EPSG:2819\",\"+proj=lcc +lat_1=43 +lat_2=40 +lat_0=39.83333333333334 +lon_0=-100 +x_0=500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5243\":[\"EPSG:5243\",\"+proj=lcc +lat_1=48.66666666666666 +lat_2=53.66666666666666 +lat_0=51 +lon_0=10.5 +x_0=0 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:22185\":[\"EPSG:22185\",\"+proj=tmerc +lat_0=-90 +lon_0=-60 +k=1 +x_0=5500000 +y_0=0 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:4094\":[\"EPSG:4094\",\"+proj=tmerc +lat_0=0 +lon_0=10 +k=0.99998 +x_0=400000 +y_0=-5000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:32601\":[\"EPSG:32601\",\"+proj=utm +zone=1 +datum=WGS84 +units=m +no_defs \"],\"EPSG:32049\":[\"EPSG:32049\",\"+proj=lcc +lat_1=45.83333333333334 +lat_2=47.33333333333334 +lat_0=45.33333333333334 +lon_0=-120.5 +x_0=609601.2192024384 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:2321\":[\"EPSG:2321\",\"+proj=tmerc +lat_0=0 +lon_0=33 +k=1 +x_0=500000 +y_0=0 +ellps=intl +towgs84=-87,-98,-121,0,0,0,0 +units=m +no_defs \"],\"EPSG:26943\":[\"EPSG:26943\",\"+proj=lcc +lat_1=38.43333333333333 +lat_2=37.06666666666667 +lat_0=36.5 +lon_0=-120.5 +x_0=2000000 +y_0=500000 +datum=NAD83 +units=m +no_defs \"],\"EPSG:4229\":[\"EPSG:4229\",\"+proj=longlat +ellps=helmert +towgs84=-130,110,-13,0,0,0,0 +no_defs \"],\"EPSG:4231\":[\"EPSG:4231\",\"+proj=longlat +ellps=intl +towgs84=-83.11,-97.38,-117.22,0.005693,-0.044698,0.044285,0.1218 +no_defs \"],\"EPSG:5272\":[\"EPSG:5272\",\"+proj=tmerc +lat_0=0 +lon_0=36 +k=1 +x_0=12500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3651\":[\"EPSG:3651\",\"+proj=lcc +lat_1=40.96666666666667 +lat_2=39.93333333333333 +lat_0=39.33333333333334 +lon_0=-77.75 +x_0=600000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3652\":[\"EPSG:3652\",\"+proj=lcc +lat_1=40.96666666666667 +lat_2=39.93333333333333 +lat_0=39.33333333333334 +lon_0=-77.75 +x_0=600000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3423\":[\"EPSG:3423\",\"+proj=tmerc +lat_0=34.75 +lon_0=-118.5833333333333 +k=0.9999 +x_0=800000.0000101599 +y_0=3999999.99998984 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:2450\":[\"EPSG:2450\",\"+proj=tmerc +lat_0=36 +lon_0=138.5 +k=0.9999 +x_0=0 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:22391\":[\"EPSG:22391\",\"+proj=lcc +lat_1=36 +lat_0=36 +lon_0=9.9 +k_0=0.999625544 +x_0=500000 +y_0=300000 +datum=carthage +units=m +no_defs \"],\"EPSG:4027\":[\"EPSG:4027\",\"+proj=longlat +a=6376523 +b=6355862.933255573 +no_defs \"],\"EPSG:22523\":[\"EPSG:22523\",\"+proj=utm +zone=23 +south +ellps=intl +towgs84=-205.57,168.77,-4.12,0,0,0,0 +units=m +no_defs \"],\"EPSG:22524\":[\"EPSG:22524\",\"+proj=utm +zone=24 +south +ellps=intl +towgs84=-205.57,168.77,-4.12,0,0,0,0 +units=m +no_defs \"],\"EPSG:32100\":[\"EPSG:32100\",\"+proj=lcc +lat_1=49 +lat_2=45 +lat_0=44.25 +lon_0=-109.5 +x_0=600000 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:4312\":[\"EPSG:4312\",\"+proj=longlat +datum=hermannskogel +no_defs \"],\"EPSG:3437\":[\"EPSG:3437\",\"+proj=tmerc +lat_0=42.5 +lon_0=-71.66666666666667 +k=0.999966667 +x_0=300000.0000000001 +y_0=0 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:4314\":[\"EPSG:4314\",\"+proj=longlat +datum=potsdam +no_defs \"],\"EPSG:32118\":[\"EPSG:32118\",\"+proj=lcc +lat_1=41.03333333333333 +lat_2=40.66666666666666 +lat_0=40.16666666666666 +lon_0=-74 +x_0=300000 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:32119\":[\"EPSG:32119\",\"+proj=lcc +lat_1=36.16666666666666 +lat_2=34.33333333333334 +lat_0=33.75 +lon_0=-79 +x_0=609601.22 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:23031\":[\"EPSG:23031\",\"+proj=utm +zone=31 +ellps=intl +towgs84=-87,-98,-121,0,0,0,0 +units=m +no_defs \"],\"EPSG:3518\":[\"EPSG:3518\",\"+proj=tmerc +lat_0=30 +lon_0=-82.16666666666667 +k=0.9999 +x_0=200000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3021\":[\"EPSG:3021\",\"+proj=tmerc +lat_0=0 +lon_0=15.80827777777778 +k=1 +x_0=1500000 +y_0=0 +ellps=bessel +towgs84=414.1,41.3,603.1,-0.855,2.141,-7.023,0 +units=m +no_defs \"],\"EPSG:3022\":[\"EPSG:3022\",\"+proj=tmerc +lat_0=0 +lon_0=18.05827777777778 +k=1 +x_0=1500000 +y_0=0 +ellps=bessel +towgs84=414.1,41.3,603.1,-0.855,2.141,-7.023,0 +units=m +no_defs \"],\"EPSG:3447\":[\"EPSG:3447\",\"+proj=lcc +lat_1=49.83333333333334 +lat_2=51.16666666666666 +lat_0=50.797815 +lon_0=4.359215833333333 +x_0=150328 +y_0=166262 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:32130\":[\"EPSG:32130\",\"+proj=tmerc +lat_0=41.08333333333334 +lon_0=-71.5 +k=0.99999375 +x_0=100000 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:26992\":[\"EPSG:26992\",\"+proj=lcc +lat_1=47.05 +lat_2=45.61666666666667 +lat_0=45 +lon_0=-94.25 +x_0=800000 +y_0=100000 +datum=NAD83 +units=m +no_defs \"],\"EPSG:4920\":[\"EPSG:4920\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:23834\":[\"EPSG:23834\",\"+proj=tmerc +lat_0=0 +lon_0=106.5 +k=0.9999 +x_0=200000 +y_0=1500000 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3453\":[\"EPSG:3453\",\"+proj=lcc +lat_1=27.83333333333333 +lat_2=26.16666666666667 +lat_0=25.5 +lon_0=-91.33333333333333 +x_0=999999.9999898402 +y_0=0 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:27200\":[\"EPSG:27200\",\"+proj=nzmg +lat_0=-41 +lon_0=173 +x_0=2510000 +y_0=6023150 +datum=nzgd49 +units=m +towgs84=59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993 +nadgrids=nzgd2kgrid0005.gsb +no_defs \"],\"EPSG:4272\":[\"EPSG:4272\",\"+proj=longlat +datum=nzgd49 +towgs84=59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993 +nadgrids=nzgd2kgrid0005.gsb +no_defs \"],\"EPSG:4001\":[\"EPSG:4001\",\"+proj=longlat +ellps=airy +no_defs \"],\"EPSG:3690\":[\"EPSG:3690\",\"+proj=lcc +lat_1=48.73333333333333 +lat_2=47.5 +lat_0=47 +lon_0=-120.8333333333333 +x_0=500000.0001016001 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3036\":[\"EPSG:3036\",\"+proj=utm +zone=36 +south +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:4455\":[\"EPSG:4455\",\"+proj=lcc +lat_1=40.96666666666667 +lat_2=39.93333333333333 +lat_0=39.33333333333334 +lon_0=-77.75 +x_0=609601.2192024384 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:4324\":[\"EPSG:4324\",\"+proj=longlat +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +no_defs \"],\"EPSG:2345\":[\"EPSG:2345\",\"+proj=tmerc +lat_0=0 +lon_0=117 +k=1 +x_0=500000 +y_0=0 +a=6378140 +b=6356755.288157528 +units=m +no_defs \"],\"EPSG:2852\":[\"EPSG:2852\",\"+proj=tmerc +lat_0=42.5 +lon_0=-72.5 +k=0.999964286 +x_0=500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2050\":[\"EPSG:2050\",\"+proj=tmerc +lat_0=0 +lon_0=23 +k=1 +x_0=0 +y_0=0 +axis=wsu +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:4487\":[\"EPSG:4487\",\"+proj=utm +zone=14 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2051\":[\"EPSG:2051\",\"+proj=tmerc +lat_0=0 +lon_0=25 +k=1 +x_0=0 +y_0=0 +axis=wsu +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2053\":[\"EPSG:2053\",\"+proj=tmerc +lat_0=0 +lon_0=29 +k=1 +x_0=0 +y_0=0 +axis=wsu +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2219\":[\"EPSG:2219\",\"+proj=utm +zone=19 +a=6378135 +b=6356750.304921594 +units=m +no_defs \"],\"EPSG:4497\":[\"EPSG:4497\",\"+proj=tmerc +lat_0=0 +lon_0=111 +k=1 +x_0=19500000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7408\":[\"EPSG:7408\",\"+proj=longlat +ellps=bessel +towgs84=565.4171,50.3319,465.5524,-0.398957,0.343988,-1.87740,4.0725 +vunits=m +no_defs \"],\"EPSG:32195\":[\"EPSG:32195\",\"+proj=tmerc +lat_0=0 +lon_0=-90 +k=0.9999 +x_0=304800 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:32196\":[\"EPSG:32196\",\"+proj=tmerc +lat_0=0 +lon_0=-93 +k=0.9999 +x_0=304800 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:7416\":[\"EPSG:7416\",\"+proj=utm +zone=32 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:3059\":[\"EPSG:3059\",\"+proj=tmerc +lat_0=0 +lon_0=24 +k=0.9996 +x_0=500000 +y_0=-6000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:27391\":[\"EPSG:27391\",\"+proj=tmerc +lat_0=58 +lon_0=-4.666666666666667 +k=1 +x_0=0 +y_0=0 +a=6377492.018 +b=6356173.508712696 +towgs84=278.3,93,474.5,7.889,0.05,-6.61,6.21 +pm=oslo +units=m +no_defs \"],\"EPSG:3717\":[\"EPSG:3717\",\"+proj=utm +zone=10 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3062\":[\"EPSG:3062\",\"+proj=utm +zone=26 +ellps=intl +towgs84=-204.619,140.176,55.226,0,0,0,0 +units=m +no_defs \"],\"EPSG:4508\":[\"EPSG:4508\",\"+proj=tmerc +lat_0=0 +lon_0=111 +k=1 +x_0=500000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:27492\":[\"EPSG:27492\",\"+proj=tmerc +lat_0=39.66666666666666 +lon_0=-8.131906111111112 +k=1 +x_0=180.598 +y_0=-86.98999999999999 +ellps=intl +towgs84=-223.237,110.193,36.649,0,0,0,0 +units=m +no_defs \"],\"EPSG:5532\":[\"EPSG:5532\",\"+proj=utm +zone=22 +south +ellps=aust_SA +towgs84=-66.87,4.37,-38.52,0,0,0,0 +units=m +no_defs \"],\"EPSG:27561\":[\"EPSG:27561\",\"+proj=lcc +lat_1=49.50000000000001 +lat_0=49.50000000000001 +lon_0=0 +k_0=0.999877341 +x_0=600000 +y_0=200000 +a=6378249.2 +b=6356515 +towgs84=-168,-60,320,0,0,0,0 +pm=paris +units=m +no_defs \"],\"EPSG:23948\":[\"EPSG:23948\",\"+proj=utm +zone=48 +a=6377276.345 +b=6356075.41314024 +towgs84=217,823,299,0,0,0,0 +units=m +no_defs \"],\"EPSG:27573\":[\"EPSG:27573\",\"+proj=lcc +lat_1=44.10000000000001 +lat_0=44.10000000000001 +lon_0=0 +k_0=0.999877499 +x_0=600000 +y_0=3200000 +a=6378249.2 +b=6356515 +towgs84=-168,-60,320,0,0,0,0 +pm=paris +units=m +no_defs \"],\"EPSG:27582\":[\"EPSG:27582\",\"+proj=lcc +lat_1=46.8 +lat_0=46.8 +lon_0=0 +k_0=0.99987742 +x_0=600000 +y_0=2200000 +a=6378249.2 +b=6356515 +towgs84=-168,-60,320,0,0,0,0 +pm=paris +units=m +no_defs \"],\"EPSG:5538\":[\"EPSG:5538\",\"+proj=utm +zone=23 +south +ellps=intl +units=m +no_defs \"],\"EPSG:3725\":[\"EPSG:3725\",\"+proj=utm +zone=18 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:32242\":[\"EPSG:32242\",\"+proj=utm +zone=42 +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32609\":[\"EPSG:32609\",\"+proj=utm +zone=9 +datum=WGS84 +units=m +no_defs \"],\"EPSG:4658\":[\"EPSG:4658\",\"+proj=longlat +ellps=intl +towgs84=-73,47,-83,0,0,0,0 +no_defs \"],\"EPSG:3491\":[\"EPSG:3491\",\"+proj=lcc +lat_1=39.83333333333334 +lat_2=38.33333333333334 +lat_0=37.66666666666666 +lon_0=-122 +x_0=2000000 +y_0=500000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3496\":[\"EPSG:3496\",\"+proj=lcc +lat_1=37.25 +lat_2=36 +lat_0=35.33333333333334 +lon_0=-119 +x_0=2000000.0001016 +y_0=500000.0001016001 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:2872\":[\"EPSG:2872\",\"+proj=lcc +lat_1=38.43333333333333 +lat_2=37.06666666666667 +lat_0=36.5 +lon_0=-120.5 +x_0=2000000.0001016 +y_0=500000.0001016001 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:2873\":[\"EPSG:2873\",\"+proj=lcc +lat_1=37.25 +lat_2=36 +lat_0=35.33333333333334 +lon_0=-119 +x_0=2000000.0001016 +y_0=500000.0001016001 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3740\":[\"EPSG:3740\",\"+proj=utm +zone=10 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2875\":[\"EPSG:2875\",\"+proj=lcc +lat_1=33.88333333333333 +lat_2=32.78333333333333 +lat_0=32.16666666666666 +lon_0=-116.25 +x_0=2000000.0001016 +y_0=500000.0001016001 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3742\":[\"EPSG:3742\",\"+proj=utm +zone=12 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2237\":[\"EPSG:2237\",\"+proj=tmerc +lat_0=24.33333333333333 +lon_0=-82 +k=0.999941177 +x_0=200000.0001016002 +y_0=0 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:24571\":[\"EPSG:24571\",\"+proj=omerc +lat_0=4 +lonc=102.25 +alpha=323.0257905 +k=0.99984 +x_0=804671.2997750348 +y_0=0 +no_uoff +gamma=323.1301023611111 +a=6377304.063 +b=6356103.038993155 +towgs84=-11,851,5,0,0,0,0 +to_meter=20.11678249437587 +no_defs \"],\"EPSG:2238\":[\"EPSG:2238\",\"+proj=lcc +lat_1=30.75 +lat_2=29.58333333333333 +lat_0=29 +lon_0=-84.5 +x_0=600000 +y_0=0 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:4976\":[\"EPSG:4976\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:3745\":[\"EPSG:3745\",\"+proj=utm +zone=15 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:4278\":[\"EPSG:4278\",\"+proj=longlat +ellps=airy +no_defs \"],\"EPSG:4207\":[\"EPSG:4207\",\"+proj=longlat +ellps=intl +towgs84=-304.046,-60.576,103.64,0,0,0,0 +no_defs \"],\"EPSG:3511\":[\"EPSG:3511\",\"+proj=tmerc +lat_0=24.33333333333333 +lon_0=-81 +k=0.999941177 +x_0=200000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5713\":[\"EPSG:5713\",\"undefined\"],\"EPSG:4209\":[\"EPSG:4209\",\"+proj=longlat +a=6378249.145 +b=6356514.966398753 +towgs84=-143,-90,-294,0,0,0,0 +no_defs \"],\"EPSG:3517\":[\"EPSG:3517\",\"+proj=tmerc +lat_0=24.33333333333333 +lon_0=-82 +k=0.999941177 +x_0=200000.0001016002 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3824\":[\"EPSG:3824\",\"+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs \"],\"EPSG:4121\":[\"EPSG:4121\",\"+proj=longlat +datum=GGRS87 +no_defs \"],\"EPSG:32337\":[\"EPSG:32337\",\"+proj=utm +zone=37 +south +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:4728\":[\"EPSG:4728\",\"+proj=longlat +ellps=intl +towgs84=-307,-92,127,0,0,0,0 +no_defs \"],\"EPSG:25835\":[\"EPSG:25835\",\"+proj=utm +zone=35 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3015\":[\"EPSG:3015\",\"+proj=tmerc +lat_0=0 +lon_0=18.75 +k=1 +x_0=150000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2253\":[\"EPSG:2253\",\"+proj=lcc +lat_1=43.66666666666666 +lat_2=42.1 +lat_0=41.5 +lon_0=-84.36666666666666 +x_0=3999999.999984 +y_0=0 +datum=NAD83 +units=ft +no_defs \"],\"EPSG:26191\":[\"EPSG:26191\",\"+proj=lcc +lat_1=33.3 +lat_0=33.3 +lon_0=-5.4 +k_0=0.999625769 +x_0=500000 +y_0=300000 +a=6378249.2 +b=6356515 +towgs84=31,146,47,0,0,0,0 +units=m +no_defs \"],\"EPSG:26192\":[\"EPSG:26192\",\"+proj=lcc +lat_1=29.7 +lat_0=29.7 +lon_0=-5.4 +k_0=0.9996155960000001 +x_0=500000 +y_0=300000 +a=6378249.2 +b=6356515 +towgs84=31,146,47,0,0,0,0 +units=m +no_defs \"],\"EPSG:4247\":[\"EPSG:4247\",\"+proj=longlat +ellps=intl +towgs84=-273.5,110.6,-357.9,0,0,0,0 +no_defs \"],\"EPSG:2257\":[\"EPSG:2257\",\"+proj=tmerc +lat_0=31 +lon_0=-104.3333333333333 +k=0.999909091 +x_0=165000 +y_0=0 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:29100\":[\"EPSG:29100\",\"+proj=poly +lat_0=0 +lon_0=-54 +x_0=5000000 +y_0=10000000 +ellps=GRS67 +towgs84=-57,1,-41,0,0,0,0 +units=m +no_defs \"],\"EPSG:4926\":[\"EPSG:4926\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:26705\":[\"EPSG:26705\",\"+proj=utm +zone=5 +datum=NAD27 +units=m +no_defs \"],\"EPSG:2903\":[\"EPSG:2903\",\"+proj=tmerc +lat_0=31 +lon_0=-106.25 +k=0.9999 +x_0=500000.0001016001 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:29182\":[\"EPSG:29182\",\"+proj=utm +zone=22 +south +ellps=GRS67 +towgs84=-57,1,-41,0,0,0,0 +units=m +no_defs \"],\"EPSG:3973\":[\"EPSG:3973\",\"+proj=laea +lat_0=90 +lon_0=0 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:29184\":[\"EPSG:29184\",\"+proj=utm +zone=24 +south +ellps=GRS67 +towgs84=-57,1,-41,0,0,0,0 +units=m +no_defs \"],\"EPSG:3786\":[\"EPSG:3786\",\"+proj=eqc +lat_ts=0 +lat_0=0 +lon_0=0 +x_0=0 +y_0=0 +a=6371007 +b=6371007 +units=m +no_defs \"],\"EPSG:3115\":[\"EPSG:3115\",\"+proj=tmerc +lat_0=4.596200416666666 +lon_0=-77.07750791666666 +k=1 +x_0=1000000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:4928\":[\"EPSG:4928\",\"+proj=geocent +ellps=WGS84 +units=m +no_defs \"],\"EPSG:26730\":[\"EPSG:26730\",\"+proj=tmerc +lat_0=30 +lon_0=-87.5 +k=0.999933333 +x_0=152400.3048006096 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:2911\":[\"EPSG:2911\",\"+proj=lcc +lat_1=36.76666666666667 +lat_2=35.56666666666667 +lat_0=35 +lon_0=-98 +x_0=600000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:4364\":[\"EPSG:4364\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:2112\":[\"EPSG:2112\",\"+proj=tmerc +lat_0=-40.92527777777777 +lon_0=175.6472222222222 +k=1 +x_0=400000 +y_0=800000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2113\":[\"EPSG:2113\",\"+proj=tmerc +lat_0=-41.3011111111111 +lon_0=174.7763888888889 +k=1 +x_0=400000 +y_0=800000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2114\":[\"EPSG:2114\",\"+proj=tmerc +lat_0=-40.71472222222223 +lon_0=172.6719444444444 +k=1 +x_0=400000 +y_0=800000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2115\":[\"EPSG:2115\",\"+proj=tmerc +lat_0=-41.27444444444444 +lon_0=173.2991666666667 +k=1 +x_0=400000 +y_0=800000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2116\":[\"EPSG:2116\",\"+proj=tmerc +lat_0=-41.28972222222222 +lon_0=172.1088888888889 +k=1 +x_0=400000 +y_0=800000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2117\":[\"EPSG:2117\",\"+proj=tmerc +lat_0=-41.81055555555555 +lon_0=171.5811111111111 +k=1 +x_0=400000 +y_0=800000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2118\":[\"EPSG:2118\",\"+proj=tmerc +lat_0=-42.33361111111111 +lon_0=171.5497222222222 +k=1 +x_0=400000 +y_0=800000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2119\":[\"EPSG:2119\",\"+proj=tmerc +lat_0=-42.68888888888888 +lon_0=173.01 +k=1 +x_0=400000 +y_0=800000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2120\":[\"EPSG:2120\",\"+proj=tmerc +lat_0=-41.54444444444444 +lon_0=173.8019444444444 +k=1 +x_0=400000 +y_0=800000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:4366\":[\"EPSG:4366\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:2121\":[\"EPSG:2121\",\"+proj=tmerc +lat_0=-42.88611111111111 +lon_0=170.9797222222222 +k=1 +x_0=400000 +y_0=800000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2122\":[\"EPSG:2122\",\"+proj=tmerc +lat_0=-43.11 +lon_0=170.2608333333333 +k=1 +x_0=400000 +y_0=800000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2123\":[\"EPSG:2123\",\"+proj=tmerc +lat_0=-43.97777777777778 +lon_0=168.6061111111111 +k=1 +x_0=400000 +y_0=800000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2124\":[\"EPSG:2124\",\"+proj=tmerc +lat_0=-43.59055555555556 +lon_0=172.7269444444445 +k=1 +x_0=400000 +y_0=800000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2125\":[\"EPSG:2125\",\"+proj=tmerc +lat_0=-43.74861111111111 +lon_0=171.3605555555555 +k=1 +x_0=400000 +y_0=800000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2126\":[\"EPSG:2126\",\"+proj=tmerc +lat_0=-44.40194444444445 +lon_0=171.0572222222222 +k=1 +x_0=400000 +y_0=800000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2127\":[\"EPSG:2127\",\"+proj=tmerc +lat_0=-44.735 +lon_0=169.4675 +k=1 +x_0=400000 +y_0=800000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2128\":[\"EPSG:2128\",\"+proj=tmerc +lat_0=-45.13277777777778 +lon_0=168.3986111111111 +k=1 +x_0=400000 +y_0=800000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2129\":[\"EPSG:2129\",\"+proj=tmerc +lat_0=-45.56361111111111 +lon_0=167.7386111111111 +k=1 +x_0=400000 +y_0=800000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:4368\":[\"EPSG:4368\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:2130\":[\"EPSG:2130\",\"+proj=tmerc +lat_0=-45.81611111111111 +lon_0=170.6283333333333 +k=1 +x_0=400000 +y_0=800000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2131\":[\"EPSG:2131\",\"+proj=tmerc +lat_0=-45.86138888888889 +lon_0=170.2825 +k=0.99996 +x_0=400000 +y_0=800000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2132\":[\"EPSG:2132\",\"+proj=tmerc +lat_0=-46.6 +lon_0=168.3427777777778 +k=1 +x_0=400000 +y_0=800000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2133\":[\"EPSG:2133\",\"+proj=utm +zone=58 +south +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2134\":[\"EPSG:2134\",\"+proj=utm +zone=59 +south +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2135\":[\"EPSG:2135\",\"+proj=utm +zone=60 +south +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2136\":[\"EPSG:2136\",\"+proj=tmerc +lat_0=4.666666666666667 +lon_0=-1 +k=0.99975 +x_0=274319.7391633579 +y_0=0 +a=6378300 +b=6356751.689189189 +towgs84=-199,32,322,0,0,0,0 +to_meter=0.3047997101815088 +no_defs \"],\"EPSG:2137\":[\"EPSG:2137\",\"+proj=tmerc +lat_0=0 +lon_0=-1 +k=0.9996 +x_0=500000 +y_0=0 +a=6378300 +b=6356751.689189189 +towgs84=-199,32,322,0,0,0,0 +units=m +no_defs \"],\"EPSG:2138\":[\"EPSG:2138\",\"+proj=lcc +lat_1=60 +lat_2=46 +lat_0=44 +lon_0=-68.5 +x_0=0 +y_0=0 +ellps=clrk66 +units=m +no_defs \"],\"EPSG:2312\":[\"EPSG:2312\",\"+proj=utm +zone=33 +ellps=clrk80 +units=m +no_defs \"],\"EPSG:2139\":[\"EPSG:2139\",\"+proj=tmerc +lat_0=0 +lon_0=-55.5 +k=0.9999 +x_0=304800 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2140\":[\"EPSG:2140\",\"+proj=tmerc +lat_0=0 +lon_0=-58.5 +k=0.9999 +x_0=304800 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2141\":[\"EPSG:2141\",\"+proj=tmerc +lat_0=0 +lon_0=-61.5 +k=0.9999 +x_0=304800 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2142\":[\"EPSG:2142\",\"+proj=tmerc +lat_0=0 +lon_0=-64.5 +k=0.9999 +x_0=304800 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2143\":[\"EPSG:2143\",\"+proj=tmerc +lat_0=0 +lon_0=-67.5 +k=0.9999 +x_0=304800 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2144\":[\"EPSG:2144\",\"+proj=tmerc +lat_0=0 +lon_0=-70.5 +k=0.9999 +x_0=304800 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2145\":[\"EPSG:2145\",\"+proj=tmerc +lat_0=0 +lon_0=-73.5 +k=0.9999 +x_0=304800 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2146\":[\"EPSG:2146\",\"+proj=tmerc +lat_0=0 +lon_0=-76.5 +k=0.9999 +x_0=304800 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2147\":[\"EPSG:2147\",\"+proj=tmerc +lat_0=0 +lon_0=-79.5 +k=0.9999 +x_0=304800 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:4370\":[\"EPSG:4370\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:2148\":[\"EPSG:2148\",\"+proj=utm +zone=21 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2150\":[\"EPSG:2150\",\"+proj=utm +zone=17 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2155\":[\"EPSG:2155\",\"+proj=lcc +lat_1=-14.26666666666667 +lat_0=-14.26666666666667 +lon_0=170 +k_0=1 +x_0=152400.3048006096 +y_0=0 +ellps=clrk66 +towgs84=-115,118,426,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:2156\":[\"EPSG:2156\",\"+proj=utm +zone=59 +south +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3994\":[\"EPSG:3994\",\"+proj=merc +lon_0=100 +lat_ts=-41 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:2158\":[\"EPSG:2158\",\"+proj=utm +zone=29 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2159\":[\"EPSG:2159\",\"+proj=tmerc +lat_0=6.666666666666667 +lon_0=-12 +k=1 +x_0=152399.8550907544 +y_0=0 +a=6378300 +b=6356751.689189189 +to_meter=0.3047997101815088 +no_defs \"],\"EPSG:2160\":[\"EPSG:2160\",\"+proj=tmerc +lat_0=6.666666666666667 +lon_0=-12 +k=1 +x_0=243839.7681452071 +y_0=182879.8261089053 +a=6378300 +b=6356751.689189189 +to_meter=0.3047997101815088 +no_defs \"],\"EPSG:2161\":[\"EPSG:2161\",\"+proj=utm +zone=28 +ellps=clrk80 +towgs84=-88,4,101,0,0,0,0 +units=m +no_defs \"],\"EPSG:2162\":[\"EPSG:2162\",\"+proj=utm +zone=29 +ellps=clrk80 +towgs84=-88,4,101,0,0,0,0 +units=m +no_defs \"],\"EPSG:2164\":[\"EPSG:2164\",\"+proj=tmerc +lat_0=0 +lon_0=-5 +k=0.9996 +x_0=500000 +y_0=0 +ellps=clrk80 +towgs84=-125,53,467,0,0,0,0 +units=m +no_defs \"],\"EPSG:2165\":[\"EPSG:2165\",\"+proj=tmerc +lat_0=0 +lon_0=-5 +k=0.9996 +x_0=500000 +y_0=0 +ellps=clrk80 +towgs84=-124.76,53,466.79,0,0,0,0 +units=m +no_defs \"],\"EPSG:2313\":[\"EPSG:2313\",\"+proj=utm +zone=33 +ellps=clrk80 +units=m +no_defs \"],\"EPSG:2166\":[\"EPSG:2166\",\"+proj=tmerc +lat_0=0 +lon_0=9 +k=1 +x_0=3500000 +y_0=0 +ellps=krass +towgs84=26,-121,-78,0,0,0,0 +units=m +no_defs \"],\"EPSG:2167\":[\"EPSG:2167\",\"+proj=tmerc +lat_0=0 +lon_0=12 +k=1 +x_0=4500000 +y_0=0 +ellps=krass +towgs84=26,-121,-78,0,0,0,0 +units=m +no_defs \"],\"EPSG:2168\":[\"EPSG:2168\",\"+proj=tmerc +lat_0=0 +lon_0=15 +k=1 +x_0=5500000 +y_0=0 +ellps=krass +towgs84=26,-121,-78,0,0,0,0 +units=m +no_defs \"],\"EPSG:2170\":[\"EPSG:2170\",\"+proj=tmerc +lat_0=0 +lon_0=15 +k=0.9999 +x_0=500000 +y_0=0 +datum=hermannskogel +units=m +no_defs \"],\"EPSG:2171\":[\"EPSG:2171\",\"+proj=sterea +lat_0=50.625 +lon_0=21.08333333333333 +k=0.9998 +x_0=4637000 +y_0=5647000 +ellps=krass +towgs84=2.3287,-147.0425,-92.0802,-0.3092483,0.32482185,0.49729934,5.68906266 +units=m +no_defs \"],\"EPSG:2172\":[\"EPSG:2172\",\"+proj=sterea +lat_0=53.00194444444445 +lon_0=21.50277777777778 +k=0.9998 +x_0=4603000 +y_0=5806000 +ellps=krass +towgs84=2.3287,-147.0425,-92.0802,-0.3092483,0.32482185,0.49729934,5.68906266 +units=m +no_defs \"],\"EPSG:2173\":[\"EPSG:2173\",\"+proj=sterea +lat_0=53.58333333333334 +lon_0=17.00833333333333 +k=0.9998 +x_0=3501000 +y_0=5999000 +ellps=krass +towgs84=2.3287,-147.0425,-92.0802,-0.3092483,0.32482185,0.49729934,5.68906266 +units=m +no_defs \"],\"EPSG:2179\":[\"EPSG:2179\",\"+proj=tmerc +lat_0=0 +lon_0=24 +k=0.999923 +x_0=8500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2188\":[\"EPSG:2188\",\"+proj=utm +zone=25 +ellps=intl +towgs84=-425,-169,81,0,0,0,0 +units=m +no_defs \"],\"EPSG:2189\":[\"EPSG:2189\",\"+proj=utm +zone=26 +ellps=intl +towgs84=-104,167,-38,0,0,0,0 +units=m +no_defs \"],\"EPSG:2190\":[\"EPSG:2190\",\"+proj=utm +zone=26 +ellps=intl +towgs84=-203,141,53,0,0,0,0 +units=m +no_defs \"],\"EPSG:2191\":[\"EPSG:2191\",\"+proj=utm +zone=28 +ellps=intl +units=m +no_defs \"],\"EPSG:2192\":[\"EPSG:2192\",\"+proj=lcc +lat_1=46.8 +lat_0=46.8 +lon_0=2.337229166666667 +k_0=0.99987742 +x_0=600000 +y_0=2200000 +ellps=intl +towgs84=-87,-98,-121,0,0,0,0 +units=m +no_defs \"],\"EPSG:2194\":[\"EPSG:2194\",\"+proj=lcc +lat_1=-14.26666666666667 +lat_0=-14.26666666666667 +lon_0=-170 +k_0=1 +x_0=152400.3048006096 +y_0=0 +ellps=clrk66 +towgs84=-115,118,426,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:2195\":[\"EPSG:2195\",\"+proj=utm +zone=2 +south +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2196\":[\"EPSG:2196\",\"+proj=tmerc +lat_0=0 +lon_0=9.5 +k=0.99995 +x_0=200000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2197\":[\"EPSG:2197\",\"+proj=tmerc +lat_0=0 +lon_0=12 +k=0.99995 +x_0=500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2198\":[\"EPSG:2198\",\"+proj=tmerc +lat_0=0 +lon_0=15 +k=1 +x_0=900000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2199\":[\"EPSG:2199\",\"+proj=tmerc +lat_0=0 +lon_0=21 +k=1 +x_0=4500000 +y_0=0 +ellps=krass +towgs84=-44.183,-0.58,-38.489,-2.3867,-2.7072,3.5196,-8.2703 +units=m +no_defs \"],\"EPSG:2200\":[\"EPSG:2200\",\"+proj=sterea +lat_0=46.5 +lon_0=-66.5 +k=0.999912 +x_0=300000 +y_0=800000 +a=6378135 +b=6356750.304921594 +units=m +no_defs \"],\"EPSG:4372\":[\"EPSG:4372\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:2201\":[\"EPSG:2201\",\"+proj=utm +zone=18 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2202\":[\"EPSG:2202\",\"+proj=utm +zone=19 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2203\":[\"EPSG:2203\",\"+proj=utm +zone=20 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2204\":[\"EPSG:2204\",\"+proj=lcc +lat_1=35.25 +lat_2=36.41666666666666 +lat_0=34.66666666666666 +lon_0=-86 +x_0=609601.2192024384 +y_0=30480.06096012192 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:2205\":[\"EPSG:2205\",\"+proj=lcc +lat_1=37.96666666666667 +lat_2=38.96666666666667 +lat_0=37.5 +lon_0=-84.25 +x_0=500000 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:2206\":[\"EPSG:2206\",\"+proj=tmerc +lat_0=0 +lon_0=27 +k=1 +x_0=9500000 +y_0=0 +ellps=intl +towgs84=-87,-98,-121,0,0,0,0 +units=m +no_defs \"],\"EPSG:2207\":[\"EPSG:2207\",\"+proj=tmerc +lat_0=0 +lon_0=30 +k=1 +x_0=10500000 +y_0=0 +ellps=intl +towgs84=-87,-98,-121,0,0,0,0 +units=m +no_defs \"],\"EPSG:2208\":[\"EPSG:2208\",\"+proj=tmerc +lat_0=0 +lon_0=33 +k=1 +x_0=11500000 +y_0=0 +ellps=intl +towgs84=-87,-98,-121,0,0,0,0 +units=m +no_defs \"],\"EPSG:2209\":[\"EPSG:2209\",\"+proj=tmerc +lat_0=0 +lon_0=36 +k=1 +x_0=12500000 +y_0=0 +ellps=intl +towgs84=-87,-98,-121,0,0,0,0 +units=m +no_defs \"],\"EPSG:2210\":[\"EPSG:2210\",\"+proj=tmerc +lat_0=0 +lon_0=39 +k=1 +x_0=13500000 +y_0=0 +ellps=intl +towgs84=-87,-98,-121,0,0,0,0 +units=m +no_defs \"],\"EPSG:2211\":[\"EPSG:2211\",\"+proj=tmerc +lat_0=0 +lon_0=42 +k=1 +x_0=14500000 +y_0=0 +ellps=intl +towgs84=-87,-98,-121,0,0,0,0 +units=m +no_defs \"],\"EPSG:2212\":[\"EPSG:2212\",\"+proj=tmerc +lat_0=0 +lon_0=45 +k=1 +x_0=15500000 +y_0=0 +ellps=intl +towgs84=-87,-98,-121,0,0,0,0 +units=m +no_defs \"],\"EPSG:2213\":[\"EPSG:2213\",\"+proj=tmerc +lat_0=0 +lon_0=30 +k=0.9996 +x_0=500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2214\":[\"EPSG:2214\",\"+proj=tmerc +lat_0=0 +lon_0=10.5 +k=0.999 +x_0=1000000 +y_0=1000000 +ellps=intl +towgs84=-206.1,-174.7,-87.7,0,0,0,0 +units=m +no_defs \"],\"EPSG:2215\":[\"EPSG:2215\",\"+proj=utm +zone=32 +a=6378249.2 +b=6356515 +towgs84=-70.9,-151.8,-41.4,0,0,0,0 +units=m +no_defs \"],\"EPSG:2216\":[\"EPSG:2216\",\"+proj=utm +zone=22 +ellps=intl +towgs84=164,138,-189,0,0,0,0 +units=m +no_defs \"],\"EPSG:2217\":[\"EPSG:2217\",\"+proj=utm +zone=23 +ellps=intl +towgs84=164,138,-189,0,0,0,0 +units=m +no_defs \"],\"EPSG:2222\":[\"EPSG:2222\",\"+proj=tmerc +lat_0=31 +lon_0=-110.1666666666667 +k=0.9999 +x_0=213360 +y_0=0 +datum=NAD83 +units=ft +no_defs \"],\"EPSG:2224\":[\"EPSG:2224\",\"+proj=tmerc +lat_0=31 +lon_0=-113.75 +k=0.999933333 +x_0=213360 +y_0=0 +datum=NAD83 +units=ft +no_defs \"],\"EPSG:2225\":[\"EPSG:2225\",\"+proj=lcc +lat_1=41.66666666666666 +lat_2=40 +lat_0=39.33333333333334 +lon_0=-122 +x_0=2000000.0001016 +y_0=500000.0001016001 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:4374\":[\"EPSG:4374\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:2232\":[\"EPSG:2232\",\"+proj=lcc +lat_1=39.75 +lat_2=38.45 +lat_0=37.83333333333334 +lon_0=-105.5 +x_0=914401.8288036576 +y_0=304800.6096012192 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:2233\":[\"EPSG:2233\",\"+proj=lcc +lat_1=38.43333333333333 +lat_2=37.23333333333333 +lat_0=36.66666666666666 +lon_0=-105.5 +x_0=914401.8288036576 +y_0=304800.6096012192 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:2234\":[\"EPSG:2234\",\"+proj=lcc +lat_1=41.86666666666667 +lat_2=41.2 +lat_0=40.83333333333334 +lon_0=-72.75 +x_0=304800.6096012192 +y_0=152400.3048006096 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:2235\":[\"EPSG:2235\",\"+proj=tmerc +lat_0=38 +lon_0=-75.41666666666667 +k=0.999995 +x_0=200000.0001016002 +y_0=0 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:2236\":[\"EPSG:2236\",\"+proj=tmerc +lat_0=24.33333333333333 +lon_0=-81 +k=0.999941177 +x_0=200000.0001016002 +y_0=0 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:2334\":[\"EPSG:2334\",\"+proj=tmerc +lat_0=0 +lon_0=117 +k=1 +x_0=20500000 +y_0=0 +a=6378140 +b=6356755.288157528 +units=m +no_defs \"],\"EPSG:2239\":[\"EPSG:2239\",\"+proj=tmerc +lat_0=30 +lon_0=-82.16666666666667 +k=0.9999 +x_0=200000.0001016002 +y_0=0 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:2240\":[\"EPSG:2240\",\"+proj=tmerc +lat_0=30 +lon_0=-84.16666666666667 +k=0.9999 +x_0=699999.9998983998 +y_0=0 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:2241\":[\"EPSG:2241\",\"+proj=tmerc +lat_0=41.66666666666666 +lon_0=-112.1666666666667 +k=0.9999473679999999 +x_0=200000.0001016002 +y_0=0 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:2242\":[\"EPSG:2242\",\"+proj=tmerc +lat_0=41.66666666666666 +lon_0=-114 +k=0.9999473679999999 +x_0=500000.0001016001 +y_0=0 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:2243\":[\"EPSG:2243\",\"+proj=tmerc +lat_0=41.66666666666666 +lon_0=-115.75 +k=0.999933333 +x_0=800000.0001016001 +y_0=0 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:2244\":[\"EPSG:2244\",\"+proj=tmerc +lat_0=37.5 +lon_0=-85.66666666666667 +k=0.999966667 +x_0=99999.99989839978 +y_0=249364.9987299975 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:2245\":[\"EPSG:2245\",\"+proj=tmerc +lat_0=37.5 +lon_0=-87.08333333333333 +k=0.999966667 +x_0=900000 +y_0=249364.9987299975 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:2246\":[\"EPSG:2246\",\"+proj=lcc +lat_1=37.96666666666667 +lat_2=38.96666666666667 +lat_0=37.5 +lon_0=-84.25 +x_0=500000.0001016001 +y_0=0 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:2247\":[\"EPSG:2247\",\"+proj=lcc +lat_1=37.93333333333333 +lat_2=36.73333333333333 +lat_0=36.33333333333334 +lon_0=-85.75 +x_0=500000.0001016001 +y_0=500000.0001016001 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:2248\":[\"EPSG:2248\",\"+proj=lcc +lat_1=39.45 +lat_2=38.3 +lat_0=37.66666666666666 +lon_0=-77 +x_0=399999.9998983998 +y_0=0 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:2249\":[\"EPSG:2249\",\"+proj=lcc +lat_1=42.68333333333333 +lat_2=41.71666666666667 +lat_0=41 +lon_0=-71.5 +x_0=200000.0001016002 +y_0=750000 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:2250\":[\"EPSG:2250\",\"+proj=lcc +lat_1=41.48333333333333 +lat_2=41.28333333333333 +lat_0=41 +lon_0=-70.5 +x_0=500000.0001016001 +y_0=0 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:2251\":[\"EPSG:2251\",\"+proj=lcc +lat_1=47.08333333333334 +lat_2=45.48333333333333 +lat_0=44.78333333333333 +lon_0=-87 +x_0=7999999.999968001 +y_0=0 +datum=NAD83 +units=ft +no_defs \"],\"EPSG:2252\":[\"EPSG:2252\",\"+proj=lcc +lat_1=45.7 +lat_2=44.18333333333333 +lat_0=43.31666666666667 +lon_0=-84.36666666666666 +x_0=5999999.999976001 +y_0=0 +datum=NAD83 +units=ft +no_defs \"],\"EPSG:2254\":[\"EPSG:2254\",\"+proj=tmerc +lat_0=29.5 +lon_0=-88.83333333333333 +k=0.99995 +x_0=300000.0000000001 +y_0=0 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:2255\":[\"EPSG:2255\",\"+proj=tmerc +lat_0=29.5 +lon_0=-90.33333333333333 +k=0.99995 +x_0=699999.9998983998 +y_0=0 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:2335\":[\"EPSG:2335\",\"+proj=tmerc +lat_0=0 +lon_0=123 +k=1 +x_0=21500000 +y_0=0 +a=6378140 +b=6356755.288157528 +units=m +no_defs \"],\"EPSG:2256\":[\"EPSG:2256\",\"+proj=lcc +lat_1=49 +lat_2=45 +lat_0=44.25 +lon_0=-109.5 +x_0=599999.9999976 +y_0=0 +datum=NAD83 +units=ft +no_defs \"],\"EPSG:2258\":[\"EPSG:2258\",\"+proj=tmerc +lat_0=31 +lon_0=-106.25 +k=0.9999 +x_0=500000.0001016001 +y_0=0 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:2259\":[\"EPSG:2259\",\"+proj=tmerc +lat_0=31 +lon_0=-107.8333333333333 +k=0.999916667 +x_0=830000.0001016001 +y_0=0 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:2265\":[\"EPSG:2265\",\"+proj=lcc +lat_1=48.73333333333333 +lat_2=47.43333333333333 +lat_0=47 +lon_0=-100.5 +x_0=599999.9999976 +y_0=0 +datum=NAD83 +units=ft +no_defs \"],\"EPSG:2266\":[\"EPSG:2266\",\"+proj=lcc +lat_1=47.48333333333333 +lat_2=46.18333333333333 +lat_0=45.66666666666666 +lon_0=-100.5 +x_0=599999.9999976 +y_0=0 +datum=NAD83 +units=ft +no_defs \"],\"EPSG:2267\":[\"EPSG:2267\",\"+proj=lcc +lat_1=36.76666666666667 +lat_2=35.56666666666667 +lat_0=35 +lon_0=-98 +x_0=600000 +y_0=0 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:2268\":[\"EPSG:2268\",\"+proj=lcc +lat_1=35.23333333333333 +lat_2=33.93333333333333 +lat_0=33.33333333333334 +lon_0=-98 +x_0=600000 +y_0=0 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:2269\":[\"EPSG:2269\",\"+proj=lcc +lat_1=46 +lat_2=44.33333333333334 +lat_0=43.66666666666666 +lon_0=-120.5 +x_0=2500000.0001424 +y_0=0 +datum=NAD83 +units=ft +no_defs \"],\"EPSG:2270\":[\"EPSG:2270\",\"+proj=lcc +lat_1=44 +lat_2=42.33333333333334 +lat_0=41.66666666666666 +lon_0=-120.5 +x_0=1500000.0001464 +y_0=0 +datum=NAD83 +units=ft +no_defs \"],\"EPSG:2271\":[\"EPSG:2271\",\"+proj=lcc +lat_1=41.95 +lat_2=40.88333333333333 +lat_0=40.16666666666666 +lon_0=-77.75 +x_0=600000 +y_0=0 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:4376\":[\"EPSG:4376\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:2273\":[\"EPSG:2273\",\"+proj=lcc +lat_1=34.83333333333334 +lat_2=32.5 +lat_0=31.83333333333333 +lon_0=-81 +x_0=609600 +y_0=0 +datum=NAD83 +units=ft +no_defs \"],\"EPSG:2275\":[\"EPSG:2275\",\"+proj=lcc +lat_1=36.18333333333333 +lat_2=34.65 +lat_0=34 +lon_0=-101.5 +x_0=200000.0001016002 +y_0=999999.9998983998 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:2279\":[\"EPSG:2279\",\"+proj=lcc +lat_1=27.83333333333333 +lat_2=26.16666666666667 +lat_0=25.66666666666667 +lon_0=-98.5 +x_0=300000.0000000001 +y_0=5000000.0001016 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:2280\":[\"EPSG:2280\",\"+proj=lcc +lat_1=41.78333333333333 +lat_2=40.71666666666667 +lat_0=40.33333333333334 +lon_0=-111.5 +x_0=500000.0001504 +y_0=999999.9999960001 +datum=NAD83 +units=ft +no_defs \"],\"EPSG:2281\":[\"EPSG:2281\",\"+proj=lcc +lat_1=40.65 +lat_2=39.01666666666667 +lat_0=38.33333333333334 +lon_0=-111.5 +x_0=500000.0001504 +y_0=1999999.999992 +datum=NAD83 +units=ft +no_defs \"],\"EPSG:2282\":[\"EPSG:2282\",\"+proj=lcc +lat_1=38.35 +lat_2=37.21666666666667 +lat_0=36.66666666666666 +lon_0=-111.5 +x_0=500000.0001504 +y_0=2999999.999988 +datum=NAD83 +units=ft +no_defs \"],\"EPSG:2283\":[\"EPSG:2283\",\"+proj=lcc +lat_1=39.2 +lat_2=38.03333333333333 +lat_0=37.66666666666666 +lon_0=-78.5 +x_0=3500000.0001016 +y_0=2000000.0001016 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:2284\":[\"EPSG:2284\",\"+proj=lcc +lat_1=37.96666666666667 +lat_2=36.76666666666667 +lat_0=36.33333333333334 +lon_0=-78.5 +x_0=3500000.0001016 +y_0=999999.9998983998 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:2286\":[\"EPSG:2286\",\"+proj=lcc +lat_1=47.33333333333334 +lat_2=45.83333333333334 +lat_0=45.33333333333334 +lon_0=-120.5 +x_0=500000.0001016001 +y_0=0 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:2287\":[\"EPSG:2287\",\"+proj=lcc +lat_1=46.76666666666667 +lat_2=45.56666666666667 +lat_0=45.16666666666666 +lon_0=-90 +x_0=600000 +y_0=0 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:2288\":[\"EPSG:2288\",\"+proj=lcc +lat_1=45.5 +lat_2=44.25 +lat_0=43.83333333333334 +lon_0=-90 +x_0=600000 +y_0=0 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:4378\":[\"EPSG:4378\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:2289\":[\"EPSG:2289\",\"+proj=lcc +lat_1=44.06666666666667 +lat_2=42.73333333333333 +lat_0=42 +lon_0=-90 +x_0=600000 +y_0=0 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:2291\":[\"EPSG:2291\",\"+proj=sterea +lat_0=47.25 +lon_0=-63 +k=0.999912 +x_0=400000 +y_0=800000 +a=6378135 +b=6356750.304921594 +units=m +no_defs \"],\"EPSG:2292\":[\"EPSG:2292\",\"+proj=sterea +lat_0=47.25 +lon_0=-63 +k=0.999912 +x_0=400000 +y_0=800000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2294\":[\"EPSG:2294\",\"+proj=tmerc +lat_0=0 +lon_0=-61.5 +k=0.9999 +x_0=4500000 +y_0=0 +a=6378135 +b=6356750.304921594 +units=m +no_defs \"],\"EPSG:2295\":[\"EPSG:2295\",\"+proj=tmerc +lat_0=0 +lon_0=-64.5 +k=0.9999 +x_0=5500000 +y_0=0 +a=6378135 +b=6356750.304921594 +units=m +no_defs \"],\"EPSG:2308\":[\"EPSG:2308\",\"+proj=tmerc +lat_0=0 +lon_0=109 +k=0.9996 +x_0=500000 +y_0=10000000 +ellps=bessel +towgs84=-377,681,-50,0,0,0,0 +units=m +no_defs \"],\"EPSG:2309\":[\"EPSG:2309\",\"+proj=tmerc +lat_0=0 +lon_0=116 +k=0.9996 +x_0=500000 +y_0=10000000 +datum=WGS84 +units=m +no_defs \"],\"EPSG:2310\":[\"EPSG:2310\",\"+proj=tmerc +lat_0=0 +lon_0=132 +k=0.9996 +x_0=500000 +y_0=10000000 +datum=WGS84 +units=m +no_defs \"],\"EPSG:4380\":[\"EPSG:4380\",\"+proj=geocent +ellps=WGS84 +units=m +no_defs \"],\"EPSG:2314\":[\"EPSG:2314\",\"+proj=cass +lat_0=10.44166666666667 +lon_0=-61.33333333333334 +x_0=86501.46392052001 +y_0=65379.0134283 +a=6378293.645208759 +b=6356617.987679838 +towgs84=-61.702,284.488,472.052,0,0,0,0 +to_meter=0.3047972654 +no_defs \"],\"EPSG:2315\":[\"EPSG:2315\",\"+proj=utm +zone=19 +south +ellps=intl +towgs84=-148,136,90,0,0,0,0 +units=m +no_defs \"],\"EPSG:2316\":[\"EPSG:2316\",\"+proj=utm +zone=20 +south +ellps=intl +towgs84=-148,136,90,0,0,0,0 +units=m +no_defs \"],\"EPSG:2317\":[\"EPSG:2317\",\"+proj=lcc +lat_1=9 +lat_2=3 +lat_0=6 +lon_0=-66 +x_0=1000000 +y_0=1000000 +ellps=intl +towgs84=-288,175,-376,0,0,0,0 +units=m +no_defs \"],\"EPSG:2318\":[\"EPSG:2318\",\"+proj=lcc +lat_1=17 +lat_2=33 +lat_0=25.08951 +lon_0=48 +x_0=0 +y_0=0 +ellps=intl +towgs84=-143,-236,7,0,0,0,0 +units=m +no_defs \"],\"EPSG:2319\":[\"EPSG:2319\",\"+proj=tmerc +lat_0=0 +lon_0=27 +k=1 +x_0=500000 +y_0=0 +ellps=intl +towgs84=-87,-98,-121,0,0,0,0 +units=m +no_defs \"],\"EPSG:2320\":[\"EPSG:2320\",\"+proj=tmerc +lat_0=0 +lon_0=30 +k=1 +x_0=500000 +y_0=0 +ellps=intl +towgs84=-87,-98,-121,0,0,0,0 +units=m +no_defs \"],\"EPSG:2322\":[\"EPSG:2322\",\"+proj=tmerc +lat_0=0 +lon_0=36 +k=1 +x_0=500000 +y_0=0 +ellps=intl +towgs84=-87,-98,-121,0,0,0,0 +units=m +no_defs \"],\"EPSG:2323\":[\"EPSG:2323\",\"+proj=tmerc +lat_0=0 +lon_0=39 +k=1 +x_0=500000 +y_0=0 +ellps=intl +towgs84=-87,-98,-121,0,0,0,0 +units=m +no_defs \"],\"EPSG:2324\":[\"EPSG:2324\",\"+proj=tmerc +lat_0=0 +lon_0=42 +k=1 +x_0=500000 +y_0=0 +ellps=intl +towgs84=-87,-98,-121,0,0,0,0 +units=m +no_defs \"],\"EPSG:2325\":[\"EPSG:2325\",\"+proj=tmerc +lat_0=0 +lon_0=45 +k=1 +x_0=500000 +y_0=0 +ellps=intl +towgs84=-87,-98,-121,0,0,0,0 +units=m +no_defs \"],\"EPSG:2327\":[\"EPSG:2327\",\"+proj=tmerc +lat_0=0 +lon_0=75 +k=1 +x_0=13500000 +y_0=0 +a=6378140 +b=6356755.288157528 +units=m +no_defs \"],\"EPSG:2328\":[\"EPSG:2328\",\"+proj=tmerc +lat_0=0 +lon_0=81 +k=1 +x_0=14500000 +y_0=0 +a=6378140 +b=6356755.288157528 +units=m +no_defs \"],\"EPSG:2329\":[\"EPSG:2329\",\"+proj=tmerc +lat_0=0 +lon_0=87 +k=1 +x_0=15500000 +y_0=0 +a=6378140 +b=6356755.288157528 +units=m +no_defs \"],\"EPSG:2330\":[\"EPSG:2330\",\"+proj=tmerc +lat_0=0 +lon_0=93 +k=1 +x_0=16500000 +y_0=0 +a=6378140 +b=6356755.288157528 +units=m +no_defs \"],\"EPSG:2331\":[\"EPSG:2331\",\"+proj=tmerc +lat_0=0 +lon_0=99 +k=1 +x_0=17500000 +y_0=0 +a=6378140 +b=6356755.288157528 +units=m +no_defs \"],\"EPSG:2332\":[\"EPSG:2332\",\"+proj=tmerc +lat_0=0 +lon_0=105 +k=1 +x_0=18500000 +y_0=0 +a=6378140 +b=6356755.288157528 +units=m +no_defs \"],\"EPSG:2333\":[\"EPSG:2333\",\"+proj=tmerc +lat_0=0 +lon_0=111 +k=1 +x_0=19500000 +y_0=0 +a=6378140 +b=6356755.288157528 +units=m +no_defs \"],\"EPSG:4382\":[\"EPSG:4382\",\"+proj=geocent +ellps=intl +units=m +no_defs \"],\"EPSG:2336\":[\"EPSG:2336\",\"+proj=tmerc +lat_0=0 +lon_0=129 +k=1 +x_0=22500000 +y_0=0 +a=6378140 +b=6356755.288157528 +units=m +no_defs \"],\"EPSG:2337\":[\"EPSG:2337\",\"+proj=tmerc +lat_0=0 +lon_0=135 +k=1 +x_0=23500000 +y_0=0 +a=6378140 +b=6356755.288157528 +units=m +no_defs \"],\"EPSG:2338\":[\"EPSG:2338\",\"+proj=tmerc +lat_0=0 +lon_0=75 +k=1 +x_0=500000 +y_0=0 +a=6378140 +b=6356755.288157528 +units=m +no_defs \"],\"EPSG:2339\":[\"EPSG:2339\",\"+proj=tmerc +lat_0=0 +lon_0=81 +k=1 +x_0=500000 +y_0=0 +a=6378140 +b=6356755.288157528 +units=m +no_defs \"],\"EPSG:2340\":[\"EPSG:2340\",\"+proj=tmerc +lat_0=0 +lon_0=87 +k=1 +x_0=500000 +y_0=0 +a=6378140 +b=6356755.288157528 +units=m +no_defs \"],\"EPSG:2341\":[\"EPSG:2341\",\"+proj=tmerc +lat_0=0 +lon_0=93 +k=1 +x_0=500000 +y_0=0 +a=6378140 +b=6356755.288157528 +units=m +no_defs \"],\"EPSG:2342\":[\"EPSG:2342\",\"+proj=tmerc +lat_0=0 +lon_0=99 +k=1 +x_0=500000 +y_0=0 +a=6378140 +b=6356755.288157528 +units=m +no_defs \"],\"EPSG:2343\":[\"EPSG:2343\",\"+proj=tmerc +lat_0=0 +lon_0=105 +k=1 +x_0=500000 +y_0=0 +a=6378140 +b=6356755.288157528 +units=m +no_defs \"],\"EPSG:2344\":[\"EPSG:2344\",\"+proj=tmerc +lat_0=0 +lon_0=111 +k=1 +x_0=500000 +y_0=0 +a=6378140 +b=6356755.288157528 +units=m +no_defs \"],\"EPSG:2346\":[\"EPSG:2346\",\"+proj=tmerc +lat_0=0 +lon_0=123 +k=1 +x_0=500000 +y_0=0 +a=6378140 +b=6356755.288157528 +units=m +no_defs \"],\"EPSG:2347\":[\"EPSG:2347\",\"+proj=tmerc +lat_0=0 +lon_0=129 +k=1 +x_0=500000 +y_0=0 +a=6378140 +b=6356755.288157528 +units=m +no_defs \"],\"EPSG:2348\":[\"EPSG:2348\",\"+proj=tmerc +lat_0=0 +lon_0=135 +k=1 +x_0=500000 +y_0=0 +a=6378140 +b=6356755.288157528 +units=m +no_defs \"],\"EPSG:2349\":[\"EPSG:2349\",\"+proj=tmerc +lat_0=0 +lon_0=75 +k=1 +x_0=25500000 +y_0=0 +a=6378140 +b=6356755.288157528 +units=m +no_defs \"],\"EPSG:2350\":[\"EPSG:2350\",\"+proj=tmerc +lat_0=0 +lon_0=78 +k=1 +x_0=26500000 +y_0=0 +a=6378140 +b=6356755.288157528 +units=m +no_defs \"],\"EPSG:2351\":[\"EPSG:2351\",\"+proj=tmerc +lat_0=0 +lon_0=81 +k=1 +x_0=27500000 +y_0=0 +a=6378140 +b=6356755.288157528 +units=m +no_defs \"],\"EPSG:2352\":[\"EPSG:2352\",\"+proj=tmerc +lat_0=0 +lon_0=84 +k=1 +x_0=28500000 +y_0=0 +a=6378140 +b=6356755.288157528 +units=m +no_defs \"],\"EPSG:2353\":[\"EPSG:2353\",\"+proj=tmerc +lat_0=0 +lon_0=87 +k=1 +x_0=29500000 +y_0=0 +a=6378140 +b=6356755.288157528 +units=m +no_defs \"],\"EPSG:2354\":[\"EPSG:2354\",\"+proj=tmerc +lat_0=0 +lon_0=90 +k=1 +x_0=30500000 +y_0=0 +a=6378140 +b=6356755.288157528 +units=m +no_defs \"],\"EPSG:2355\":[\"EPSG:2355\",\"+proj=tmerc +lat_0=0 +lon_0=93 +k=1 +x_0=31500000 +y_0=0 +a=6378140 +b=6356755.288157528 +units=m +no_defs \"],\"EPSG:2356\":[\"EPSG:2356\",\"+proj=tmerc +lat_0=0 +lon_0=96 +k=1 +x_0=32500000 +y_0=0 +a=6378140 +b=6356755.288157528 +units=m +no_defs \"],\"EPSG:2357\":[\"EPSG:2357\",\"+proj=tmerc +lat_0=0 +lon_0=99 +k=1 +x_0=33500000 +y_0=0 +a=6378140 +b=6356755.288157528 +units=m +no_defs \"],\"EPSG:2358\":[\"EPSG:2358\",\"+proj=tmerc +lat_0=0 +lon_0=102 +k=1 +x_0=34500000 +y_0=0 +a=6378140 +b=6356755.288157528 +units=m +no_defs \"],\"EPSG:2359\":[\"EPSG:2359\",\"+proj=tmerc +lat_0=0 +lon_0=105 +k=1 +x_0=35500000 +y_0=0 +a=6378140 +b=6356755.288157528 +units=m +no_defs \"],\"EPSG:2360\":[\"EPSG:2360\",\"+proj=tmerc +lat_0=0 +lon_0=108 +k=1 +x_0=36500000 +y_0=0 +a=6378140 +b=6356755.288157528 +units=m +no_defs \"],\"EPSG:2361\":[\"EPSG:2361\",\"+proj=tmerc +lat_0=0 +lon_0=111 +k=1 +x_0=37500000 +y_0=0 +a=6378140 +b=6356755.288157528 +units=m +no_defs \"],\"EPSG:2362\":[\"EPSG:2362\",\"+proj=tmerc +lat_0=0 +lon_0=114 +k=1 +x_0=38500000 +y_0=0 +a=6378140 +b=6356755.288157528 +units=m +no_defs \"],\"EPSG:2363\":[\"EPSG:2363\",\"+proj=tmerc +lat_0=0 +lon_0=117 +k=1 +x_0=39500000 +y_0=0 +a=6378140 +b=6356755.288157528 +units=m +no_defs \"],\"EPSG:2364\":[\"EPSG:2364\",\"+proj=tmerc +lat_0=0 +lon_0=120 +k=1 +x_0=40500000 +y_0=0 +a=6378140 +b=6356755.288157528 +units=m +no_defs \"],\"EPSG:2365\":[\"EPSG:2365\",\"+proj=tmerc +lat_0=0 +lon_0=123 +k=1 +x_0=41500000 +y_0=0 +a=6378140 +b=6356755.288157528 +units=m +no_defs \"],\"EPSG:2366\":[\"EPSG:2366\",\"+proj=tmerc +lat_0=0 +lon_0=126 +k=1 +x_0=42500000 +y_0=0 +a=6378140 +b=6356755.288157528 +units=m +no_defs \"],\"EPSG:2367\":[\"EPSG:2367\",\"+proj=tmerc +lat_0=0 +lon_0=129 +k=1 +x_0=43500000 +y_0=0 +a=6378140 +b=6356755.288157528 +units=m +no_defs \"],\"EPSG:2368\":[\"EPSG:2368\",\"+proj=tmerc +lat_0=0 +lon_0=132 +k=1 +x_0=44500000 +y_0=0 +a=6378140 +b=6356755.288157528 +units=m +no_defs \"],\"EPSG:2369\":[\"EPSG:2369\",\"+proj=tmerc +lat_0=0 +lon_0=135 +k=1 +x_0=45500000 +y_0=0 +a=6378140 +b=6356755.288157528 +units=m +no_defs \"],\"EPSG:2370\":[\"EPSG:2370\",\"+proj=tmerc +lat_0=0 +lon_0=75 +k=1 +x_0=500000 +y_0=0 +a=6378140 +b=6356755.288157528 +units=m +no_defs \"],\"EPSG:2371\":[\"EPSG:2371\",\"+proj=tmerc +lat_0=0 +lon_0=78 +k=1 +x_0=500000 +y_0=0 +a=6378140 +b=6356755.288157528 +units=m +no_defs \"],\"EPSG:2372\":[\"EPSG:2372\",\"+proj=tmerc +lat_0=0 +lon_0=81 +k=1 +x_0=500000 +y_0=0 +a=6378140 +b=6356755.288157528 +units=m +no_defs \"],\"EPSG:2373\":[\"EPSG:2373\",\"+proj=tmerc +lat_0=0 +lon_0=84 +k=1 +x_0=500000 +y_0=0 +a=6378140 +b=6356755.288157528 +units=m +no_defs \"],\"EPSG:2374\":[\"EPSG:2374\",\"+proj=tmerc +lat_0=0 +lon_0=87 +k=1 +x_0=500000 +y_0=0 +a=6378140 +b=6356755.288157528 +units=m +no_defs \"],\"EPSG:2375\":[\"EPSG:2375\",\"+proj=tmerc +lat_0=0 +lon_0=90 +k=1 +x_0=500000 +y_0=0 +a=6378140 +b=6356755.288157528 +units=m +no_defs \"],\"EPSG:2376\":[\"EPSG:2376\",\"+proj=tmerc +lat_0=0 +lon_0=93 +k=1 +x_0=500000 +y_0=0 +a=6378140 +b=6356755.288157528 +units=m +no_defs \"],\"EPSG:2377\":[\"EPSG:2377\",\"+proj=tmerc +lat_0=0 +lon_0=96 +k=1 +x_0=500000 +y_0=0 +a=6378140 +b=6356755.288157528 +units=m +no_defs \"],\"EPSG:2378\":[\"EPSG:2378\",\"+proj=tmerc +lat_0=0 +lon_0=99 +k=1 +x_0=500000 +y_0=0 +a=6378140 +b=6356755.288157528 +units=m +no_defs \"],\"EPSG:2379\":[\"EPSG:2379\",\"+proj=tmerc +lat_0=0 +lon_0=102 +k=1 +x_0=500000 +y_0=0 +a=6378140 +b=6356755.288157528 +units=m +no_defs \"],\"EPSG:2380\":[\"EPSG:2380\",\"+proj=tmerc +lat_0=0 +lon_0=105 +k=1 +x_0=500000 +y_0=0 +a=6378140 +b=6356755.288157528 +units=m +no_defs \"],\"EPSG:2381\":[\"EPSG:2381\",\"+proj=tmerc +lat_0=0 +lon_0=108 +k=1 +x_0=500000 +y_0=0 +a=6378140 +b=6356755.288157528 +units=m +no_defs \"],\"EPSG:2382\":[\"EPSG:2382\",\"+proj=tmerc +lat_0=0 +lon_0=111 +k=1 +x_0=500000 +y_0=0 +a=6378140 +b=6356755.288157528 +units=m +no_defs \"],\"EPSG:2383\":[\"EPSG:2383\",\"+proj=tmerc +lat_0=0 +lon_0=114 +k=1 +x_0=500000 +y_0=0 +a=6378140 +b=6356755.288157528 +units=m +no_defs \"],\"EPSG:2384\":[\"EPSG:2384\",\"+proj=tmerc +lat_0=0 +lon_0=117 +k=1 +x_0=500000 +y_0=0 +a=6378140 +b=6356755.288157528 +units=m +no_defs \"],\"EPSG:2386\":[\"EPSG:2386\",\"+proj=tmerc +lat_0=0 +lon_0=123 +k=1 +x_0=500000 +y_0=0 +a=6378140 +b=6356755.288157528 +units=m +no_defs \"],\"EPSG:2387\":[\"EPSG:2387\",\"+proj=tmerc +lat_0=0 +lon_0=126 +k=1 +x_0=500000 +y_0=0 +a=6378140 +b=6356755.288157528 +units=m +no_defs \"],\"EPSG:2388\":[\"EPSG:2388\",\"+proj=tmerc +lat_0=0 +lon_0=129 +k=1 +x_0=500000 +y_0=0 +a=6378140 +b=6356755.288157528 +units=m +no_defs \"],\"EPSG:2389\":[\"EPSG:2389\",\"+proj=tmerc +lat_0=0 +lon_0=132 +k=1 +x_0=500000 +y_0=0 +a=6378140 +b=6356755.288157528 +units=m +no_defs \"],\"EPSG:2390\":[\"EPSG:2390\",\"+proj=tmerc +lat_0=0 +lon_0=135 +k=1 +x_0=500000 +y_0=0 +a=6378140 +b=6356755.288157528 +units=m +no_defs \"],\"EPSG:2391\":[\"EPSG:2391\",\"+proj=tmerc +lat_0=0 +lon_0=21 +k=1 +x_0=1500000 +y_0=0 +ellps=intl +towgs84=-96.062,-82.428,-121.753,4.801,0.345,-1.376,1.496 +units=m +no_defs \"],\"EPSG:2392\":[\"EPSG:2392\",\"+proj=tmerc +lat_0=0 +lon_0=24 +k=1 +x_0=2500000 +y_0=0 +ellps=intl +towgs84=-96.062,-82.428,-121.753,4.801,0.345,-1.376,1.496 +units=m +no_defs \"],\"EPSG:2394\":[\"EPSG:2394\",\"+proj=tmerc +lat_0=0 +lon_0=30 +k=1 +x_0=4500000 +y_0=0 +ellps=intl +towgs84=-96.062,-82.428,-121.753,4.801,0.345,-1.376,1.496 +units=m +no_defs \"],\"EPSG:2395\":[\"EPSG:2395\",\"+proj=tmerc +lat_0=0 +lon_0=45 +k=1 +x_0=8500000 +y_0=0 +ellps=krass +towgs84=-76,-138,67,0,0,0,0 +units=m +no_defs \"],\"EPSG:2396\":[\"EPSG:2396\",\"+proj=tmerc +lat_0=0 +lon_0=51 +k=1 +x_0=9500000 +y_0=0 +ellps=krass +towgs84=-76,-138,67,0,0,0,0 +units=m +no_defs \"],\"EPSG:2397\":[\"EPSG:2397\",\"+proj=tmerc +lat_0=0 +lon_0=9 +k=1 +x_0=3500000 +y_0=0 +ellps=krass +towgs84=26,-121,-78,0,0,0,0 +units=m +no_defs \"],\"EPSG:2398\":[\"EPSG:2398\",\"+proj=tmerc +lat_0=0 +lon_0=12 +k=1 +x_0=4500000 +y_0=0 +ellps=krass +towgs84=26,-121,-78,0,0,0,0 +units=m +no_defs \"],\"EPSG:2399\":[\"EPSG:2399\",\"+proj=tmerc +lat_0=0 +lon_0=15 +k=1 +x_0=5500000 +y_0=0 +ellps=krass +towgs84=26,-121,-78,0,0,0,0 +units=m +no_defs \"],\"EPSG:2401\":[\"EPSG:2401\",\"+proj=tmerc +lat_0=0 +lon_0=75 +k=1 +x_0=25500000 +y_0=0 +ellps=krass +towgs84=15.8,-154.4,-82.3,0,0,0,0 +units=m +no_defs \"],\"EPSG:2402\":[\"EPSG:2402\",\"+proj=tmerc +lat_0=0 +lon_0=78 +k=1 +x_0=26500000 +y_0=0 +ellps=krass +towgs84=15.8,-154.4,-82.3,0,0,0,0 +units=m +no_defs \"],\"EPSG:2403\":[\"EPSG:2403\",\"+proj=tmerc +lat_0=0 +lon_0=81 +k=1 +x_0=27500000 +y_0=0 +ellps=krass +towgs84=15.8,-154.4,-82.3,0,0,0,0 +units=m +no_defs \"],\"EPSG:2404\":[\"EPSG:2404\",\"+proj=tmerc +lat_0=0 +lon_0=84 +k=1 +x_0=28500000 +y_0=0 +ellps=krass +towgs84=15.8,-154.4,-82.3,0,0,0,0 +units=m +no_defs \"],\"EPSG:2405\":[\"EPSG:2405\",\"+proj=tmerc +lat_0=0 +lon_0=87 +k=1 +x_0=29500000 +y_0=0 +ellps=krass +towgs84=15.8,-154.4,-82.3,0,0,0,0 +units=m +no_defs \"],\"EPSG:2406\":[\"EPSG:2406\",\"+proj=tmerc +lat_0=0 +lon_0=90 +k=1 +x_0=30500000 +y_0=0 +ellps=krass +towgs84=15.8,-154.4,-82.3,0,0,0,0 +units=m +no_defs \"],\"EPSG:2407\":[\"EPSG:2407\",\"+proj=tmerc +lat_0=0 +lon_0=93 +k=1 +x_0=31500000 +y_0=0 +ellps=krass +towgs84=15.8,-154.4,-82.3,0,0,0,0 +units=m +no_defs \"],\"EPSG:2408\":[\"EPSG:2408\",\"+proj=tmerc +lat_0=0 +lon_0=96 +k=1 +x_0=32500000 +y_0=0 +ellps=krass +towgs84=15.8,-154.4,-82.3,0,0,0,0 +units=m +no_defs \"],\"EPSG:2409\":[\"EPSG:2409\",\"+proj=tmerc +lat_0=0 +lon_0=99 +k=1 +x_0=33500000 +y_0=0 +ellps=krass +towgs84=15.8,-154.4,-82.3,0,0,0,0 +units=m +no_defs \"],\"EPSG:2410\":[\"EPSG:2410\",\"+proj=tmerc +lat_0=0 +lon_0=102 +k=1 +x_0=34500000 +y_0=0 +ellps=krass +towgs84=15.8,-154.4,-82.3,0,0,0,0 +units=m +no_defs \"],\"EPSG:2411\":[\"EPSG:2411\",\"+proj=tmerc +lat_0=0 +lon_0=105 +k=1 +x_0=35500000 +y_0=0 +ellps=krass +towgs84=15.8,-154.4,-82.3,0,0,0,0 +units=m +no_defs \"],\"EPSG:2412\":[\"EPSG:2412\",\"+proj=tmerc +lat_0=0 +lon_0=108 +k=1 +x_0=36500000 +y_0=0 +ellps=krass +towgs84=15.8,-154.4,-82.3,0,0,0,0 +units=m +no_defs \"],\"EPSG:2413\":[\"EPSG:2413\",\"+proj=tmerc +lat_0=0 +lon_0=111 +k=1 +x_0=37500000 +y_0=0 +ellps=krass +towgs84=15.8,-154.4,-82.3,0,0,0,0 +units=m +no_defs \"],\"EPSG:2414\":[\"EPSG:2414\",\"+proj=tmerc +lat_0=0 +lon_0=114 +k=1 +x_0=38500000 +y_0=0 +ellps=krass +towgs84=15.8,-154.4,-82.3,0,0,0,0 +units=m +no_defs \"],\"EPSG:2415\":[\"EPSG:2415\",\"+proj=tmerc +lat_0=0 +lon_0=117 +k=1 +x_0=39500000 +y_0=0 +ellps=krass +towgs84=15.8,-154.4,-82.3,0,0,0,0 +units=m +no_defs \"],\"EPSG:2416\":[\"EPSG:2416\",\"+proj=tmerc +lat_0=0 +lon_0=120 +k=1 +x_0=40500000 +y_0=0 +ellps=krass +towgs84=15.8,-154.4,-82.3,0,0,0,0 +units=m +no_defs \"],\"EPSG:2417\":[\"EPSG:2417\",\"+proj=tmerc +lat_0=0 +lon_0=123 +k=1 +x_0=41500000 +y_0=0 +ellps=krass +towgs84=15.8,-154.4,-82.3,0,0,0,0 +units=m +no_defs \"],\"EPSG:2418\":[\"EPSG:2418\",\"+proj=tmerc +lat_0=0 +lon_0=126 +k=1 +x_0=42500000 +y_0=0 +ellps=krass +towgs84=15.8,-154.4,-82.3,0,0,0,0 +units=m +no_defs \"],\"EPSG:2419\":[\"EPSG:2419\",\"+proj=tmerc +lat_0=0 +lon_0=129 +k=1 +x_0=43500000 +y_0=0 +ellps=krass +towgs84=15.8,-154.4,-82.3,0,0,0,0 +units=m +no_defs \"],\"EPSG:2420\":[\"EPSG:2420\",\"+proj=tmerc +lat_0=0 +lon_0=132 +k=1 +x_0=44500000 +y_0=0 +ellps=krass +towgs84=15.8,-154.4,-82.3,0,0,0,0 +units=m +no_defs \"],\"EPSG:2421\":[\"EPSG:2421\",\"+proj=tmerc +lat_0=0 +lon_0=135 +k=1 +x_0=45500000 +y_0=0 +ellps=krass +towgs84=15.8,-154.4,-82.3,0,0,0,0 +units=m +no_defs \"],\"EPSG:2422\":[\"EPSG:2422\",\"+proj=tmerc +lat_0=0 +lon_0=75 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=15.8,-154.4,-82.3,0,0,0,0 +units=m +no_defs \"],\"EPSG:2423\":[\"EPSG:2423\",\"+proj=tmerc +lat_0=0 +lon_0=78 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=15.8,-154.4,-82.3,0,0,0,0 +units=m +no_defs \"],\"EPSG:2424\":[\"EPSG:2424\",\"+proj=tmerc +lat_0=0 +lon_0=81 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=15.8,-154.4,-82.3,0,0,0,0 +units=m +no_defs \"],\"EPSG:2425\":[\"EPSG:2425\",\"+proj=tmerc +lat_0=0 +lon_0=84 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=15.8,-154.4,-82.3,0,0,0,0 +units=m +no_defs \"],\"EPSG:2426\":[\"EPSG:2426\",\"+proj=tmerc +lat_0=0 +lon_0=87 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=15.8,-154.4,-82.3,0,0,0,0 +units=m +no_defs \"],\"EPSG:2427\":[\"EPSG:2427\",\"+proj=tmerc +lat_0=0 +lon_0=90 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=15.8,-154.4,-82.3,0,0,0,0 +units=m +no_defs \"],\"EPSG:2428\":[\"EPSG:2428\",\"+proj=tmerc +lat_0=0 +lon_0=93 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=15.8,-154.4,-82.3,0,0,0,0 +units=m +no_defs \"],\"EPSG:2429\":[\"EPSG:2429\",\"+proj=tmerc +lat_0=0 +lon_0=96 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=15.8,-154.4,-82.3,0,0,0,0 +units=m +no_defs \"],\"EPSG:2430\":[\"EPSG:2430\",\"+proj=tmerc +lat_0=0 +lon_0=99 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=15.8,-154.4,-82.3,0,0,0,0 +units=m +no_defs \"],\"EPSG:2431\":[\"EPSG:2431\",\"+proj=tmerc +lat_0=0 +lon_0=102 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=15.8,-154.4,-82.3,0,0,0,0 +units=m +no_defs \"],\"EPSG:2432\":[\"EPSG:2432\",\"+proj=tmerc +lat_0=0 +lon_0=105 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=15.8,-154.4,-82.3,0,0,0,0 +units=m +no_defs \"],\"EPSG:2433\":[\"EPSG:2433\",\"+proj=tmerc +lat_0=0 +lon_0=108 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=15.8,-154.4,-82.3,0,0,0,0 +units=m +no_defs \"],\"EPSG:2435\":[\"EPSG:2435\",\"+proj=tmerc +lat_0=0 +lon_0=114 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=15.8,-154.4,-82.3,0,0,0,0 +units=m +no_defs \"],\"EPSG:2436\":[\"EPSG:2436\",\"+proj=tmerc +lat_0=0 +lon_0=117 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=15.8,-154.4,-82.3,0,0,0,0 +units=m +no_defs \"],\"EPSG:2437\":[\"EPSG:2437\",\"+proj=tmerc +lat_0=0 +lon_0=120 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=15.8,-154.4,-82.3,0,0,0,0 +units=m +no_defs \"],\"EPSG:2438\":[\"EPSG:2438\",\"+proj=tmerc +lat_0=0 +lon_0=123 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=15.8,-154.4,-82.3,0,0,0,0 +units=m +no_defs \"],\"EPSG:2439\":[\"EPSG:2439\",\"+proj=tmerc +lat_0=0 +lon_0=126 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=15.8,-154.4,-82.3,0,0,0,0 +units=m +no_defs \"],\"EPSG:2440\":[\"EPSG:2440\",\"+proj=tmerc +lat_0=0 +lon_0=129 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=15.8,-154.4,-82.3,0,0,0,0 +units=m +no_defs \"],\"EPSG:2441\":[\"EPSG:2441\",\"+proj=tmerc +lat_0=0 +lon_0=132 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=15.8,-154.4,-82.3,0,0,0,0 +units=m +no_defs \"],\"EPSG:2442\":[\"EPSG:2442\",\"+proj=tmerc +lat_0=0 +lon_0=135 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=15.8,-154.4,-82.3,0,0,0,0 +units=m +no_defs \"],\"EPSG:2443\":[\"EPSG:2443\",\"+proj=tmerc +lat_0=33 +lon_0=129.5 +k=0.9999 +x_0=0 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2444\":[\"EPSG:2444\",\"+proj=tmerc +lat_0=33 +lon_0=131 +k=0.9999 +x_0=0 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2445\":[\"EPSG:2445\",\"+proj=tmerc +lat_0=36 +lon_0=132.1666666666667 +k=0.9999 +x_0=0 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2446\":[\"EPSG:2446\",\"+proj=tmerc +lat_0=33 +lon_0=133.5 +k=0.9999 +x_0=0 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2447\":[\"EPSG:2447\",\"+proj=tmerc +lat_0=36 +lon_0=134.3333333333333 +k=0.9999 +x_0=0 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2448\":[\"EPSG:2448\",\"+proj=tmerc +lat_0=36 +lon_0=136 +k=0.9999 +x_0=0 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2449\":[\"EPSG:2449\",\"+proj=tmerc +lat_0=36 +lon_0=137.1666666666667 +k=0.9999 +x_0=0 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2451\":[\"EPSG:2451\",\"+proj=tmerc +lat_0=36 +lon_0=139.8333333333333 +k=0.9999 +x_0=0 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2452\":[\"EPSG:2452\",\"+proj=tmerc +lat_0=40 +lon_0=140.8333333333333 +k=0.9999 +x_0=0 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2453\":[\"EPSG:2453\",\"+proj=tmerc +lat_0=44 +lon_0=140.25 +k=0.9999 +x_0=0 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2454\":[\"EPSG:2454\",\"+proj=tmerc +lat_0=44 +lon_0=142.25 +k=0.9999 +x_0=0 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2455\":[\"EPSG:2455\",\"+proj=tmerc +lat_0=44 +lon_0=144.25 +k=0.9999 +x_0=0 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2456\":[\"EPSG:2456\",\"+proj=tmerc +lat_0=26 +lon_0=142 +k=0.9999 +x_0=0 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2457\":[\"EPSG:2457\",\"+proj=tmerc +lat_0=26 +lon_0=127.5 +k=0.9999 +x_0=0 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2458\":[\"EPSG:2458\",\"+proj=tmerc +lat_0=26 +lon_0=124 +k=0.9999 +x_0=0 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2459\":[\"EPSG:2459\",\"+proj=tmerc +lat_0=26 +lon_0=131 +k=0.9999 +x_0=0 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2460\":[\"EPSG:2460\",\"+proj=tmerc +lat_0=20 +lon_0=136 +k=0.9999 +x_0=0 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2461\":[\"EPSG:2461\",\"+proj=tmerc +lat_0=26 +lon_0=154 +k=0.9999 +x_0=0 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2462\":[\"EPSG:2462\",\"+proj=tmerc +lat_0=0 +lon_0=21 +k=1 +x_0=4500000 +y_0=0 +ellps=krass +towgs84=-44.183,-0.58,-38.489,-2.3867,-2.7072,3.5196,-8.2703 +units=m +no_defs \"],\"EPSG:2463\":[\"EPSG:2463\",\"+proj=tmerc +lat_0=0 +lon_0=21 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2464\":[\"EPSG:2464\",\"+proj=tmerc +lat_0=0 +lon_0=27 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2465\":[\"EPSG:2465\",\"+proj=tmerc +lat_0=0 +lon_0=33 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2466\":[\"EPSG:2466\",\"+proj=tmerc +lat_0=0 +lon_0=39 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2467\":[\"EPSG:2467\",\"+proj=tmerc +lat_0=0 +lon_0=45 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2468\":[\"EPSG:2468\",\"+proj=tmerc +lat_0=0 +lon_0=51 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2469\":[\"EPSG:2469\",\"+proj=tmerc +lat_0=0 +lon_0=57 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2470\":[\"EPSG:2470\",\"+proj=tmerc +lat_0=0 +lon_0=63 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2471\":[\"EPSG:2471\",\"+proj=tmerc +lat_0=0 +lon_0=69 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2472\":[\"EPSG:2472\",\"+proj=tmerc +lat_0=0 +lon_0=75 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2473\":[\"EPSG:2473\",\"+proj=tmerc +lat_0=0 +lon_0=81 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2474\":[\"EPSG:2474\",\"+proj=tmerc +lat_0=0 +lon_0=87 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2475\":[\"EPSG:2475\",\"+proj=tmerc +lat_0=0 +lon_0=93 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2476\":[\"EPSG:2476\",\"+proj=tmerc +lat_0=0 +lon_0=99 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2477\":[\"EPSG:2477\",\"+proj=tmerc +lat_0=0 +lon_0=105 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2478\":[\"EPSG:2478\",\"+proj=tmerc +lat_0=0 +lon_0=111 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2479\":[\"EPSG:2479\",\"+proj=tmerc +lat_0=0 +lon_0=117 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2480\":[\"EPSG:2480\",\"+proj=tmerc +lat_0=0 +lon_0=123 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2481\":[\"EPSG:2481\",\"+proj=tmerc +lat_0=0 +lon_0=129 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2482\":[\"EPSG:2482\",\"+proj=tmerc +lat_0=0 +lon_0=135 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2483\":[\"EPSG:2483\",\"+proj=tmerc +lat_0=0 +lon_0=141 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2484\":[\"EPSG:2484\",\"+proj=tmerc +lat_0=0 +lon_0=147 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2485\":[\"EPSG:2485\",\"+proj=tmerc +lat_0=0 +lon_0=153 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2486\":[\"EPSG:2486\",\"+proj=tmerc +lat_0=0 +lon_0=159 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2487\":[\"EPSG:2487\",\"+proj=tmerc +lat_0=0 +lon_0=165 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2488\":[\"EPSG:2488\",\"+proj=tmerc +lat_0=0 +lon_0=171 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2489\":[\"EPSG:2489\",\"+proj=tmerc +lat_0=0 +lon_0=177 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2490\":[\"EPSG:2490\",\"+proj=tmerc +lat_0=0 +lon_0=-177 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2491\":[\"EPSG:2491\",\"+proj=tmerc +lat_0=0 +lon_0=-171 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2492\":[\"EPSG:2492\",\"+proj=tmerc +lat_0=0 +lon_0=9 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2493\":[\"EPSG:2493\",\"+proj=tmerc +lat_0=0 +lon_0=15 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2494\":[\"EPSG:2494\",\"+proj=tmerc +lat_0=0 +lon_0=21 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2495\":[\"EPSG:2495\",\"+proj=tmerc +lat_0=0 +lon_0=27 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2496\":[\"EPSG:2496\",\"+proj=tmerc +lat_0=0 +lon_0=33 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2497\":[\"EPSG:2497\",\"+proj=tmerc +lat_0=0 +lon_0=39 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2498\":[\"EPSG:2498\",\"+proj=tmerc +lat_0=0 +lon_0=45 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2499\":[\"EPSG:2499\",\"+proj=tmerc +lat_0=0 +lon_0=51 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2500\":[\"EPSG:2500\",\"+proj=tmerc +lat_0=0 +lon_0=57 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2501\":[\"EPSG:2501\",\"+proj=tmerc +lat_0=0 +lon_0=63 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2502\":[\"EPSG:2502\",\"+proj=tmerc +lat_0=0 +lon_0=69 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2503\":[\"EPSG:2503\",\"+proj=tmerc +lat_0=0 +lon_0=75 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2504\":[\"EPSG:2504\",\"+proj=tmerc +lat_0=0 +lon_0=81 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2505\":[\"EPSG:2505\",\"+proj=tmerc +lat_0=0 +lon_0=87 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2506\":[\"EPSG:2506\",\"+proj=tmerc +lat_0=0 +lon_0=93 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2507\":[\"EPSG:2507\",\"+proj=tmerc +lat_0=0 +lon_0=99 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2508\":[\"EPSG:2508\",\"+proj=tmerc +lat_0=0 +lon_0=105 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2509\":[\"EPSG:2509\",\"+proj=tmerc +lat_0=0 +lon_0=111 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2510\":[\"EPSG:2510\",\"+proj=tmerc +lat_0=0 +lon_0=117 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2511\":[\"EPSG:2511\",\"+proj=tmerc +lat_0=0 +lon_0=123 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2512\":[\"EPSG:2512\",\"+proj=tmerc +lat_0=0 +lon_0=129 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2513\":[\"EPSG:2513\",\"+proj=tmerc +lat_0=0 +lon_0=135 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2514\":[\"EPSG:2514\",\"+proj=tmerc +lat_0=0 +lon_0=141 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2515\":[\"EPSG:2515\",\"+proj=tmerc +lat_0=0 +lon_0=147 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2516\":[\"EPSG:2516\",\"+proj=tmerc +lat_0=0 +lon_0=153 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2517\":[\"EPSG:2517\",\"+proj=tmerc +lat_0=0 +lon_0=159 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2518\":[\"EPSG:2518\",\"+proj=tmerc +lat_0=0 +lon_0=165 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2519\":[\"EPSG:2519\",\"+proj=tmerc +lat_0=0 +lon_0=171 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2520\":[\"EPSG:2520\",\"+proj=tmerc +lat_0=0 +lon_0=177 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2521\":[\"EPSG:2521\",\"+proj=tmerc +lat_0=0 +lon_0=-177 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2522\":[\"EPSG:2522\",\"+proj=tmerc +lat_0=0 +lon_0=-171 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2523\":[\"EPSG:2523\",\"+proj=tmerc +lat_0=0 +lon_0=21 +k=1 +x_0=7500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2524\":[\"EPSG:2524\",\"+proj=tmerc +lat_0=0 +lon_0=24 +k=1 +x_0=8500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2526\":[\"EPSG:2526\",\"+proj=tmerc +lat_0=0 +lon_0=30 +k=1 +x_0=10500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2527\":[\"EPSG:2527\",\"+proj=tmerc +lat_0=0 +lon_0=33 +k=1 +x_0=11500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2528\":[\"EPSG:2528\",\"+proj=tmerc +lat_0=0 +lon_0=36 +k=1 +x_0=12500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2529\":[\"EPSG:2529\",\"+proj=tmerc +lat_0=0 +lon_0=39 +k=1 +x_0=13500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2943\":[\"EPSG:2943\",\"+proj=utm +zone=28 +ellps=intl +towgs84=-289,-124,60,0,0,0,0 +units=m +no_defs \"],\"EPSG:2530\":[\"EPSG:2530\",\"+proj=tmerc +lat_0=0 +lon_0=42 +k=1 +x_0=14500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2531\":[\"EPSG:2531\",\"+proj=tmerc +lat_0=0 +lon_0=45 +k=1 +x_0=15500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2532\":[\"EPSG:2532\",\"+proj=tmerc +lat_0=0 +lon_0=48 +k=1 +x_0=16500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2533\":[\"EPSG:2533\",\"+proj=tmerc +lat_0=0 +lon_0=51 +k=1 +x_0=17500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2534\":[\"EPSG:2534\",\"+proj=tmerc +lat_0=0 +lon_0=54 +k=1 +x_0=18500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2535\":[\"EPSG:2535\",\"+proj=tmerc +lat_0=0 +lon_0=57 +k=1 +x_0=19500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2536\":[\"EPSG:2536\",\"+proj=tmerc +lat_0=0 +lon_0=60 +k=1 +x_0=20500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2537\":[\"EPSG:2537\",\"+proj=tmerc +lat_0=0 +lon_0=63 +k=1 +x_0=21500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2538\":[\"EPSG:2538\",\"+proj=tmerc +lat_0=0 +lon_0=66 +k=1 +x_0=22500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2539\":[\"EPSG:2539\",\"+proj=tmerc +lat_0=0 +lon_0=69 +k=1 +x_0=23500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2540\":[\"EPSG:2540\",\"+proj=tmerc +lat_0=0 +lon_0=72 +k=1 +x_0=24500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2541\":[\"EPSG:2541\",\"+proj=tmerc +lat_0=0 +lon_0=75 +k=1 +x_0=25500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2542\":[\"EPSG:2542\",\"+proj=tmerc +lat_0=0 +lon_0=78 +k=1 +x_0=26500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2543\":[\"EPSG:2543\",\"+proj=tmerc +lat_0=0 +lon_0=81 +k=1 +x_0=27500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2544\":[\"EPSG:2544\",\"+proj=tmerc +lat_0=0 +lon_0=84 +k=1 +x_0=28500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2545\":[\"EPSG:2545\",\"+proj=tmerc +lat_0=0 +lon_0=87 +k=1 +x_0=29500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2546\":[\"EPSG:2546\",\"+proj=tmerc +lat_0=0 +lon_0=90 +k=1 +x_0=30500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2547\":[\"EPSG:2547\",\"+proj=tmerc +lat_0=0 +lon_0=93 +k=1 +x_0=31500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2548\":[\"EPSG:2548\",\"+proj=tmerc +lat_0=0 +lon_0=96 +k=1 +x_0=32500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2549\":[\"EPSG:2549\",\"+proj=tmerc +lat_0=0 +lon_0=99 +k=1 +x_0=33500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2550\":[\"EPSG:2550\",\"+proj=utm +zone=50 +south +ellps=bessel +towgs84=-404.78,685.68,45.47,0,0,0,0 +units=m +no_defs \"],\"EPSG:2551\":[\"EPSG:2551\",\"+proj=tmerc +lat_0=0 +lon_0=102 +k=1 +x_0=34500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2552\":[\"EPSG:2552\",\"+proj=tmerc +lat_0=0 +lon_0=105 +k=1 +x_0=35500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2553\":[\"EPSG:2553\",\"+proj=tmerc +lat_0=0 +lon_0=108 +k=1 +x_0=36500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2554\":[\"EPSG:2554\",\"+proj=tmerc +lat_0=0 +lon_0=111 +k=1 +x_0=37500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2555\":[\"EPSG:2555\",\"+proj=tmerc +lat_0=0 +lon_0=114 +k=1 +x_0=38500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2556\":[\"EPSG:2556\",\"+proj=tmerc +lat_0=0 +lon_0=117 +k=1 +x_0=39500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2557\":[\"EPSG:2557\",\"+proj=tmerc +lat_0=0 +lon_0=120 +k=1 +x_0=40500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2558\":[\"EPSG:2558\",\"+proj=tmerc +lat_0=0 +lon_0=123 +k=1 +x_0=41500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2559\":[\"EPSG:2559\",\"+proj=tmerc +lat_0=0 +lon_0=126 +k=1 +x_0=42500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2560\":[\"EPSG:2560\",\"+proj=tmerc +lat_0=0 +lon_0=129 +k=1 +x_0=43500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2561\":[\"EPSG:2561\",\"+proj=tmerc +lat_0=0 +lon_0=132 +k=1 +x_0=44500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2562\":[\"EPSG:2562\",\"+proj=tmerc +lat_0=0 +lon_0=135 +k=1 +x_0=45500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2563\":[\"EPSG:2563\",\"+proj=tmerc +lat_0=0 +lon_0=138 +k=1 +x_0=46500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2564\":[\"EPSG:2564\",\"+proj=tmerc +lat_0=0 +lon_0=141 +k=1 +x_0=47500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2565\":[\"EPSG:2565\",\"+proj=tmerc +lat_0=0 +lon_0=144 +k=1 +x_0=48500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2566\":[\"EPSG:2566\",\"+proj=tmerc +lat_0=0 +lon_0=147 +k=1 +x_0=49500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2567\":[\"EPSG:2567\",\"+proj=tmerc +lat_0=0 +lon_0=150 +k=1 +x_0=50500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2568\":[\"EPSG:2568\",\"+proj=tmerc +lat_0=0 +lon_0=153 +k=1 +x_0=51500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2569\":[\"EPSG:2569\",\"+proj=tmerc +lat_0=0 +lon_0=156 +k=1 +x_0=52500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2570\":[\"EPSG:2570\",\"+proj=tmerc +lat_0=0 +lon_0=159 +k=1 +x_0=53500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2571\":[\"EPSG:2571\",\"+proj=tmerc +lat_0=0 +lon_0=162 +k=1 +x_0=54500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2572\":[\"EPSG:2572\",\"+proj=tmerc +lat_0=0 +lon_0=165 +k=1 +x_0=55500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2573\":[\"EPSG:2573\",\"+proj=tmerc +lat_0=0 +lon_0=168 +k=1 +x_0=56500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2574\":[\"EPSG:2574\",\"+proj=tmerc +lat_0=0 +lon_0=171 +k=1 +x_0=57500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:3010\":[\"EPSG:3010\",\"+proj=tmerc +lat_0=0 +lon_0=16.5 +k=1 +x_0=150000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2575\":[\"EPSG:2575\",\"+proj=tmerc +lat_0=0 +lon_0=174 +k=1 +x_0=58500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2576\":[\"EPSG:2576\",\"+proj=tmerc +lat_0=0 +lon_0=177 +k=1 +x_0=59500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2577\":[\"EPSG:2577\",\"+proj=tmerc +lat_0=0 +lon_0=180 +k=1 +x_0=60000000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2578\":[\"EPSG:2578\",\"+proj=tmerc +lat_0=0 +lon_0=-177 +k=1 +x_0=61500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2579\":[\"EPSG:2579\",\"+proj=tmerc +lat_0=0 +lon_0=-174 +k=1 +x_0=62500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2580\":[\"EPSG:2580\",\"+proj=tmerc +lat_0=0 +lon_0=-171 +k=1 +x_0=63500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2581\":[\"EPSG:2581\",\"+proj=tmerc +lat_0=0 +lon_0=-168 +k=1 +x_0=64500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2582\":[\"EPSG:2582\",\"+proj=tmerc +lat_0=0 +lon_0=21 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2583\":[\"EPSG:2583\",\"+proj=tmerc +lat_0=0 +lon_0=24 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2584\":[\"EPSG:2584\",\"+proj=tmerc +lat_0=0 +lon_0=27 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2585\":[\"EPSG:2585\",\"+proj=tmerc +lat_0=0 +lon_0=30 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2586\":[\"EPSG:2586\",\"+proj=tmerc +lat_0=0 +lon_0=33 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2587\":[\"EPSG:2587\",\"+proj=tmerc +lat_0=0 +lon_0=36 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2588\":[\"EPSG:2588\",\"+proj=tmerc +lat_0=0 +lon_0=39 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2589\":[\"EPSG:2589\",\"+proj=tmerc +lat_0=0 +lon_0=42 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2590\":[\"EPSG:2590\",\"+proj=tmerc +lat_0=0 +lon_0=45 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2591\":[\"EPSG:2591\",\"+proj=tmerc +lat_0=0 +lon_0=48 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2592\":[\"EPSG:2592\",\"+proj=tmerc +lat_0=0 +lon_0=51 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:3012\":[\"EPSG:3012\",\"+proj=tmerc +lat_0=0 +lon_0=14.25 +k=1 +x_0=150000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2593\":[\"EPSG:2593\",\"+proj=tmerc +lat_0=0 +lon_0=54 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2594\":[\"EPSG:2594\",\"+proj=tmerc +lat_0=0 +lon_0=57 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2595\":[\"EPSG:2595\",\"+proj=tmerc +lat_0=0 +lon_0=60 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2596\":[\"EPSG:2596\",\"+proj=tmerc +lat_0=0 +lon_0=63 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2597\":[\"EPSG:2597\",\"+proj=tmerc +lat_0=0 +lon_0=66 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2598\":[\"EPSG:2598\",\"+proj=tmerc +lat_0=0 +lon_0=69 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2599\":[\"EPSG:2599\",\"+proj=tmerc +lat_0=0 +lon_0=72 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2600\":[\"EPSG:2600\",\"+proj=tmerc +lat_0=0 +lon_0=24 +k=0.9998 +x_0=500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2601\":[\"EPSG:2601\",\"+proj=tmerc +lat_0=0 +lon_0=75 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2602\":[\"EPSG:2602\",\"+proj=tmerc +lat_0=0 +lon_0=78 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2603\":[\"EPSG:2603\",\"+proj=tmerc +lat_0=0 +lon_0=81 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2604\":[\"EPSG:2604\",\"+proj=tmerc +lat_0=0 +lon_0=84 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2605\":[\"EPSG:2605\",\"+proj=tmerc +lat_0=0 +lon_0=87 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2606\":[\"EPSG:2606\",\"+proj=tmerc +lat_0=0 +lon_0=90 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2607\":[\"EPSG:2607\",\"+proj=tmerc +lat_0=0 +lon_0=93 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2608\":[\"EPSG:2608\",\"+proj=tmerc +lat_0=0 +lon_0=96 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2609\":[\"EPSG:2609\",\"+proj=tmerc +lat_0=0 +lon_0=99 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2610\":[\"EPSG:2610\",\"+proj=tmerc +lat_0=0 +lon_0=102 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2611\":[\"EPSG:2611\",\"+proj=tmerc +lat_0=0 +lon_0=105 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:3013\":[\"EPSG:3013\",\"+proj=tmerc +lat_0=0 +lon_0=15.75 +k=1 +x_0=150000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2612\":[\"EPSG:2612\",\"+proj=tmerc +lat_0=0 +lon_0=108 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2613\":[\"EPSG:2613\",\"+proj=tmerc +lat_0=0 +lon_0=111 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2614\":[\"EPSG:2614\",\"+proj=tmerc +lat_0=0 +lon_0=114 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2615\":[\"EPSG:2615\",\"+proj=tmerc +lat_0=0 +lon_0=117 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2616\":[\"EPSG:2616\",\"+proj=tmerc +lat_0=0 +lon_0=120 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2617\":[\"EPSG:2617\",\"+proj=tmerc +lat_0=0 +lon_0=123 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2618\":[\"EPSG:2618\",\"+proj=tmerc +lat_0=0 +lon_0=126 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2619\":[\"EPSG:2619\",\"+proj=tmerc +lat_0=0 +lon_0=129 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2620\":[\"EPSG:2620\",\"+proj=tmerc +lat_0=0 +lon_0=132 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:3014\":[\"EPSG:3014\",\"+proj=tmerc +lat_0=0 +lon_0=17.25 +k=1 +x_0=150000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2621\":[\"EPSG:2621\",\"+proj=tmerc +lat_0=0 +lon_0=135 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2622\":[\"EPSG:2622\",\"+proj=tmerc +lat_0=0 +lon_0=138 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2623\":[\"EPSG:2623\",\"+proj=tmerc +lat_0=0 +lon_0=141 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2624\":[\"EPSG:2624\",\"+proj=tmerc +lat_0=0 +lon_0=144 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2625\":[\"EPSG:2625\",\"+proj=tmerc +lat_0=0 +lon_0=147 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2626\":[\"EPSG:2626\",\"+proj=tmerc +lat_0=0 +lon_0=150 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2627\":[\"EPSG:2627\",\"+proj=tmerc +lat_0=0 +lon_0=153 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2628\":[\"EPSG:2628\",\"+proj=tmerc +lat_0=0 +lon_0=156 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2629\":[\"EPSG:2629\",\"+proj=tmerc +lat_0=0 +lon_0=159 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2630\":[\"EPSG:2630\",\"+proj=tmerc +lat_0=0 +lon_0=162 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2631\":[\"EPSG:2631\",\"+proj=tmerc +lat_0=0 +lon_0=165 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2632\":[\"EPSG:2632\",\"+proj=tmerc +lat_0=0 +lon_0=168 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2633\":[\"EPSG:2633\",\"+proj=tmerc +lat_0=0 +lon_0=171 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2634\":[\"EPSG:2634\",\"+proj=tmerc +lat_0=0 +lon_0=174 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2635\":[\"EPSG:2635\",\"+proj=tmerc +lat_0=0 +lon_0=177 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2636\":[\"EPSG:2636\",\"+proj=tmerc +lat_0=0 +lon_0=180 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2637\":[\"EPSG:2637\",\"+proj=tmerc +lat_0=0 +lon_0=-177 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2638\":[\"EPSG:2638\",\"+proj=tmerc +lat_0=0 +lon_0=-174 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:3016\":[\"EPSG:3016\",\"+proj=tmerc +lat_0=0 +lon_0=20.25 +k=1 +x_0=150000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2639\":[\"EPSG:2639\",\"+proj=tmerc +lat_0=0 +lon_0=-171 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2640\":[\"EPSG:2640\",\"+proj=tmerc +lat_0=0 +lon_0=-168 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2641\":[\"EPSG:2641\",\"+proj=tmerc +lat_0=0 +lon_0=21 +k=1 +x_0=7500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2642\":[\"EPSG:2642\",\"+proj=tmerc +lat_0=0 +lon_0=24 +k=1 +x_0=8500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2643\":[\"EPSG:2643\",\"+proj=tmerc +lat_0=0 +lon_0=27 +k=1 +x_0=9500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2644\":[\"EPSG:2644\",\"+proj=tmerc +lat_0=0 +lon_0=30 +k=1 +x_0=10500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2645\":[\"EPSG:2645\",\"+proj=tmerc +lat_0=0 +lon_0=33 +k=1 +x_0=11500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2646\":[\"EPSG:2646\",\"+proj=tmerc +lat_0=0 +lon_0=36 +k=1 +x_0=12500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2647\":[\"EPSG:2647\",\"+proj=tmerc +lat_0=0 +lon_0=39 +k=1 +x_0=13500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2973\":[\"EPSG:2973\",\"+proj=utm +zone=20 +ellps=intl +towgs84=186,482,151,0,0,0,0 +units=m +no_defs \"],\"EPSG:2648\":[\"EPSG:2648\",\"+proj=tmerc +lat_0=0 +lon_0=42 +k=1 +x_0=14500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2649\":[\"EPSG:2649\",\"+proj=tmerc +lat_0=0 +lon_0=45 +k=1 +x_0=15500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2650\":[\"EPSG:2650\",\"+proj=tmerc +lat_0=0 +lon_0=48 +k=1 +x_0=16500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2651\":[\"EPSG:2651\",\"+proj=tmerc +lat_0=0 +lon_0=51 +k=1 +x_0=17500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2652\":[\"EPSG:2652\",\"+proj=tmerc +lat_0=0 +lon_0=54 +k=1 +x_0=18500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2653\":[\"EPSG:2653\",\"+proj=tmerc +lat_0=0 +lon_0=57 +k=1 +x_0=19500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2654\":[\"EPSG:2654\",\"+proj=tmerc +lat_0=0 +lon_0=60 +k=1 +x_0=20500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2655\":[\"EPSG:2655\",\"+proj=tmerc +lat_0=0 +lon_0=63 +k=1 +x_0=21500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2656\":[\"EPSG:2656\",\"+proj=tmerc +lat_0=0 +lon_0=66 +k=1 +x_0=22500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:3017\":[\"EPSG:3017\",\"+proj=tmerc +lat_0=0 +lon_0=21.75 +k=1 +x_0=150000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2657\":[\"EPSG:2657\",\"+proj=tmerc +lat_0=0 +lon_0=69 +k=1 +x_0=23500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2658\":[\"EPSG:2658\",\"+proj=tmerc +lat_0=0 +lon_0=72 +k=1 +x_0=24500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2659\":[\"EPSG:2659\",\"+proj=tmerc +lat_0=0 +lon_0=75 +k=1 +x_0=25500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2660\":[\"EPSG:2660\",\"+proj=tmerc +lat_0=0 +lon_0=78 +k=1 +x_0=26500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2661\":[\"EPSG:2661\",\"+proj=tmerc +lat_0=0 +lon_0=81 +k=1 +x_0=27500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2662\":[\"EPSG:2662\",\"+proj=tmerc +lat_0=0 +lon_0=84 +k=1 +x_0=28500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2663\":[\"EPSG:2663\",\"+proj=tmerc +lat_0=0 +lon_0=87 +k=1 +x_0=29500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2664\":[\"EPSG:2664\",\"+proj=tmerc +lat_0=0 +lon_0=90 +k=1 +x_0=30500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2665\":[\"EPSG:2665\",\"+proj=tmerc +lat_0=0 +lon_0=93 +k=1 +x_0=31500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:3018\":[\"EPSG:3018\",\"+proj=tmerc +lat_0=0 +lon_0=23.25 +k=1 +x_0=150000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2666\":[\"EPSG:2666\",\"+proj=tmerc +lat_0=0 +lon_0=96 +k=1 +x_0=32500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2667\":[\"EPSG:2667\",\"+proj=tmerc +lat_0=0 +lon_0=99 +k=1 +x_0=33500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2668\":[\"EPSG:2668\",\"+proj=tmerc +lat_0=0 +lon_0=102 +k=1 +x_0=34500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2669\":[\"EPSG:2669\",\"+proj=tmerc +lat_0=0 +lon_0=105 +k=1 +x_0=35500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2670\":[\"EPSG:2670\",\"+proj=tmerc +lat_0=0 +lon_0=108 +k=1 +x_0=36500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2671\":[\"EPSG:2671\",\"+proj=tmerc +lat_0=0 +lon_0=111 +k=1 +x_0=37500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2672\":[\"EPSG:2672\",\"+proj=tmerc +lat_0=0 +lon_0=114 +k=1 +x_0=38500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2673\":[\"EPSG:2673\",\"+proj=tmerc +lat_0=0 +lon_0=117 +k=1 +x_0=39500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2674\":[\"EPSG:2674\",\"+proj=tmerc +lat_0=0 +lon_0=120 +k=1 +x_0=40500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:3029\":[\"EPSG:3029\",\"+proj=tmerc +lat_0=0 +lon_0=20.30827777777778 +k=1 +x_0=1500000 +y_0=0 +ellps=bessel +units=m +no_defs \"],\"EPSG:2675\":[\"EPSG:2675\",\"+proj=tmerc +lat_0=0 +lon_0=123 +k=1 +x_0=41500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2676\":[\"EPSG:2676\",\"+proj=tmerc +lat_0=0 +lon_0=126 +k=1 +x_0=42500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2677\":[\"EPSG:2677\",\"+proj=tmerc +lat_0=0 +lon_0=129 +k=1 +x_0=43500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2678\":[\"EPSG:2678\",\"+proj=tmerc +lat_0=0 +lon_0=132 +k=1 +x_0=44500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2679\":[\"EPSG:2679\",\"+proj=tmerc +lat_0=0 +lon_0=135 +k=1 +x_0=45500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2680\":[\"EPSG:2680\",\"+proj=tmerc +lat_0=0 +lon_0=138 +k=1 +x_0=46500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2681\":[\"EPSG:2681\",\"+proj=tmerc +lat_0=0 +lon_0=141 +k=1 +x_0=47500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2682\":[\"EPSG:2682\",\"+proj=tmerc +lat_0=0 +lon_0=144 +k=1 +x_0=48500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2683\":[\"EPSG:2683\",\"+proj=tmerc +lat_0=0 +lon_0=147 +k=1 +x_0=49500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:3030\":[\"EPSG:3030\",\"+proj=tmerc +lat_0=0 +lon_0=22.55827777777778 +k=1 +x_0=1500000 +y_0=0 +ellps=bessel +units=m +no_defs \"],\"EPSG:2684\":[\"EPSG:2684\",\"+proj=tmerc +lat_0=0 +lon_0=150 +k=1 +x_0=50500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2685\":[\"EPSG:2685\",\"+proj=tmerc +lat_0=0 +lon_0=153 +k=1 +x_0=51500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2686\":[\"EPSG:2686\",\"+proj=tmerc +lat_0=0 +lon_0=156 +k=1 +x_0=52500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2687\":[\"EPSG:2687\",\"+proj=tmerc +lat_0=0 +lon_0=159 +k=1 +x_0=53500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2688\":[\"EPSG:2688\",\"+proj=tmerc +lat_0=0 +lon_0=162 +k=1 +x_0=54500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2689\":[\"EPSG:2689\",\"+proj=tmerc +lat_0=0 +lon_0=165 +k=1 +x_0=55500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2690\":[\"EPSG:2690\",\"+proj=tmerc +lat_0=0 +lon_0=168 +k=1 +x_0=56500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2691\":[\"EPSG:2691\",\"+proj=tmerc +lat_0=0 +lon_0=171 +k=1 +x_0=57500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2692\":[\"EPSG:2692\",\"+proj=tmerc +lat_0=0 +lon_0=174 +k=1 +x_0=58500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:3031\":[\"EPSG:3031\",\"+proj=stere +lat_0=-90 +lat_ts=-71 +lon_0=0 +k=1 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:2693\":[\"EPSG:2693\",\"+proj=tmerc +lat_0=0 +lon_0=177 +k=1 +x_0=59500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2694\":[\"EPSG:2694\",\"+proj=tmerc +lat_0=0 +lon_0=180 +k=1 +x_0=60000000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2695\":[\"EPSG:2695\",\"+proj=tmerc +lat_0=0 +lon_0=-177 +k=1 +x_0=61500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2696\":[\"EPSG:2696\",\"+proj=tmerc +lat_0=0 +lon_0=-174 +k=1 +x_0=62500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2697\":[\"EPSG:2697\",\"+proj=tmerc +lat_0=0 +lon_0=-171 +k=1 +x_0=63500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2698\":[\"EPSG:2698\",\"+proj=tmerc +lat_0=0 +lon_0=-168 +k=1 +x_0=64500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2699\":[\"EPSG:2699\",\"+proj=tmerc +lat_0=0 +lon_0=21 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2700\":[\"EPSG:2700\",\"+proj=tmerc +lat_0=0 +lon_0=24 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2701\":[\"EPSG:2701\",\"+proj=tmerc +lat_0=0 +lon_0=27 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2702\":[\"EPSG:2702\",\"+proj=tmerc +lat_0=0 +lon_0=30 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2703\":[\"EPSG:2703\",\"+proj=tmerc +lat_0=0 +lon_0=33 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2704\":[\"EPSG:2704\",\"+proj=tmerc +lat_0=0 +lon_0=36 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2705\":[\"EPSG:2705\",\"+proj=tmerc +lat_0=0 +lon_0=39 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2706\":[\"EPSG:2706\",\"+proj=tmerc +lat_0=0 +lon_0=42 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2707\":[\"EPSG:2707\",\"+proj=tmerc +lat_0=0 +lon_0=45 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2708\":[\"EPSG:2708\",\"+proj=tmerc +lat_0=0 +lon_0=48 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2709\":[\"EPSG:2709\",\"+proj=tmerc +lat_0=0 +lon_0=51 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2710\":[\"EPSG:2710\",\"+proj=tmerc +lat_0=0 +lon_0=54 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2711\":[\"EPSG:2711\",\"+proj=tmerc +lat_0=0 +lon_0=57 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2712\":[\"EPSG:2712\",\"+proj=tmerc +lat_0=0 +lon_0=60 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2713\":[\"EPSG:2713\",\"+proj=tmerc +lat_0=0 +lon_0=63 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2714\":[\"EPSG:2714\",\"+proj=tmerc +lat_0=0 +lon_0=66 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2715\":[\"EPSG:2715\",\"+proj=tmerc +lat_0=0 +lon_0=69 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2716\":[\"EPSG:2716\",\"+proj=tmerc +lat_0=0 +lon_0=72 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2717\":[\"EPSG:2717\",\"+proj=tmerc +lat_0=0 +lon_0=75 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2718\":[\"EPSG:2718\",\"+proj=tmerc +lat_0=0 +lon_0=78 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2719\":[\"EPSG:2719\",\"+proj=tmerc +lat_0=0 +lon_0=81 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2720\":[\"EPSG:2720\",\"+proj=tmerc +lat_0=0 +lon_0=84 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2721\":[\"EPSG:2721\",\"+proj=tmerc +lat_0=0 +lon_0=87 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2722\":[\"EPSG:2722\",\"+proj=tmerc +lat_0=0 +lon_0=90 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2723\":[\"EPSG:2723\",\"+proj=tmerc +lat_0=0 +lon_0=93 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2724\":[\"EPSG:2724\",\"+proj=tmerc +lat_0=0 +lon_0=96 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2725\":[\"EPSG:2725\",\"+proj=tmerc +lat_0=0 +lon_0=99 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2726\":[\"EPSG:2726\",\"+proj=tmerc +lat_0=0 +lon_0=102 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2727\":[\"EPSG:2727\",\"+proj=tmerc +lat_0=0 +lon_0=105 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2728\":[\"EPSG:2728\",\"+proj=tmerc +lat_0=0 +lon_0=108 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2729\":[\"EPSG:2729\",\"+proj=tmerc +lat_0=0 +lon_0=111 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2730\":[\"EPSG:2730\",\"+proj=tmerc +lat_0=0 +lon_0=114 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2731\":[\"EPSG:2731\",\"+proj=tmerc +lat_0=0 +lon_0=117 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2732\":[\"EPSG:2732\",\"+proj=tmerc +lat_0=0 +lon_0=120 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2733\":[\"EPSG:2733\",\"+proj=tmerc +lat_0=0 +lon_0=123 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2734\":[\"EPSG:2734\",\"+proj=tmerc +lat_0=0 +lon_0=126 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2735\":[\"EPSG:2735\",\"+proj=tmerc +lat_0=0 +lon_0=129 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2736\":[\"EPSG:2736\",\"+proj=utm +zone=36 +south +ellps=clrk66 +towgs84=-80,-100,-228,0,0,0,0 +units=m +no_defs \"],\"EPSG:2737\":[\"EPSG:2737\",\"+proj=utm +zone=37 +south +ellps=clrk66 +towgs84=-80,-100,-228,0,0,0,0 +units=m +no_defs \"],\"EPSG:2738\":[\"EPSG:2738\",\"+proj=tmerc +lat_0=0 +lon_0=132 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2739\":[\"EPSG:2739\",\"+proj=tmerc +lat_0=0 +lon_0=135 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2740\":[\"EPSG:2740\",\"+proj=tmerc +lat_0=0 +lon_0=138 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2741\":[\"EPSG:2741\",\"+proj=tmerc +lat_0=0 +lon_0=141 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2742\":[\"EPSG:2742\",\"+proj=tmerc +lat_0=0 +lon_0=144 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2743\":[\"EPSG:2743\",\"+proj=tmerc +lat_0=0 +lon_0=147 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2744\":[\"EPSG:2744\",\"+proj=tmerc +lat_0=0 +lon_0=150 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2745\":[\"EPSG:2745\",\"+proj=tmerc +lat_0=0 +lon_0=153 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2746\":[\"EPSG:2746\",\"+proj=tmerc +lat_0=0 +lon_0=156 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2747\":[\"EPSG:2747\",\"+proj=tmerc +lat_0=0 +lon_0=159 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2748\":[\"EPSG:2748\",\"+proj=tmerc +lat_0=0 +lon_0=162 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2749\":[\"EPSG:2749\",\"+proj=tmerc +lat_0=0 +lon_0=165 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2750\":[\"EPSG:2750\",\"+proj=tmerc +lat_0=0 +lon_0=168 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2751\":[\"EPSG:2751\",\"+proj=tmerc +lat_0=0 +lon_0=171 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2752\":[\"EPSG:2752\",\"+proj=tmerc +lat_0=0 +lon_0=174 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2753\":[\"EPSG:2753\",\"+proj=tmerc +lat_0=0 +lon_0=177 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2754\":[\"EPSG:2754\",\"+proj=tmerc +lat_0=0 +lon_0=180 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2755\":[\"EPSG:2755\",\"+proj=tmerc +lat_0=0 +lon_0=-177 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2756\":[\"EPSG:2756\",\"+proj=tmerc +lat_0=0 +lon_0=-174 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2757\":[\"EPSG:2757\",\"+proj=tmerc +lat_0=0 +lon_0=-171 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2758\":[\"EPSG:2758\",\"+proj=tmerc +lat_0=0 +lon_0=-168 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:2759\":[\"EPSG:2759\",\"+proj=tmerc +lat_0=30.5 +lon_0=-85.83333333333333 +k=0.99996 +x_0=200000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2760\":[\"EPSG:2760\",\"+proj=tmerc +lat_0=30 +lon_0=-87.5 +k=0.999933333 +x_0=600000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2761\":[\"EPSG:2761\",\"+proj=tmerc +lat_0=31 +lon_0=-110.1666666666667 +k=0.9999 +x_0=213360 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2762\":[\"EPSG:2762\",\"+proj=tmerc +lat_0=31 +lon_0=-111.9166666666667 +k=0.9999 +x_0=213360 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2763\":[\"EPSG:2763\",\"+proj=tmerc +lat_0=31 +lon_0=-113.75 +k=0.999933333 +x_0=213360 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2764\":[\"EPSG:2764\",\"+proj=lcc +lat_1=36.23333333333333 +lat_2=34.93333333333333 +lat_0=34.33333333333334 +lon_0=-92 +x_0=400000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2765\":[\"EPSG:2765\",\"+proj=lcc +lat_1=34.76666666666667 +lat_2=33.3 +lat_0=32.66666666666666 +lon_0=-92 +x_0=400000 +y_0=400000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2766\":[\"EPSG:2766\",\"+proj=lcc +lat_1=41.66666666666666 +lat_2=40 +lat_0=39.33333333333334 +lon_0=-122 +x_0=2000000 +y_0=500000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2767\":[\"EPSG:2767\",\"+proj=lcc +lat_1=39.83333333333334 +lat_2=38.33333333333334 +lat_0=37.66666666666666 +lon_0=-122 +x_0=2000000 +y_0=500000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2769\":[\"EPSG:2769\",\"+proj=lcc +lat_1=37.25 +lat_2=36 +lat_0=35.33333333333334 +lon_0=-119 +x_0=2000000 +y_0=500000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2770\":[\"EPSG:2770\",\"+proj=lcc +lat_1=35.46666666666667 +lat_2=34.03333333333333 +lat_0=33.5 +lon_0=-118 +x_0=2000000 +y_0=500000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2771\":[\"EPSG:2771\",\"+proj=lcc +lat_1=33.88333333333333 +lat_2=32.78333333333333 +lat_0=32.16666666666666 +lon_0=-116.25 +x_0=2000000 +y_0=500000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2772\":[\"EPSG:2772\",\"+proj=lcc +lat_1=40.78333333333333 +lat_2=39.71666666666667 +lat_0=39.33333333333334 +lon_0=-105.5 +x_0=914401.8289 +y_0=304800.6096 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2773\":[\"EPSG:2773\",\"+proj=lcc +lat_1=39.75 +lat_2=38.45 +lat_0=37.83333333333334 +lon_0=-105.5 +x_0=914401.8289 +y_0=304800.6096 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2774\":[\"EPSG:2774\",\"+proj=lcc +lat_1=38.43333333333333 +lat_2=37.23333333333333 +lat_0=36.66666666666666 +lon_0=-105.5 +x_0=914401.8289 +y_0=304800.6096 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2775\":[\"EPSG:2775\",\"+proj=lcc +lat_1=41.86666666666667 +lat_2=41.2 +lat_0=40.83333333333334 +lon_0=-72.75 +x_0=304800.6096 +y_0=152400.3048 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2776\":[\"EPSG:2776\",\"+proj=tmerc +lat_0=38 +lon_0=-75.41666666666667 +k=0.999995 +x_0=200000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:4384\":[\"EPSG:4384\",\"+proj=geocent +ellps=WGS84 +units=m +no_defs \"],\"EPSG:2777\":[\"EPSG:2777\",\"+proj=tmerc +lat_0=24.33333333333333 +lon_0=-81 +k=0.999941177 +x_0=200000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2778\":[\"EPSG:2778\",\"+proj=tmerc +lat_0=24.33333333333333 +lon_0=-82 +k=0.999941177 +x_0=200000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2779\":[\"EPSG:2779\",\"+proj=lcc +lat_1=30.75 +lat_2=29.58333333333333 +lat_0=29 +lon_0=-84.5 +x_0=600000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2780\":[\"EPSG:2780\",\"+proj=tmerc +lat_0=30 +lon_0=-82.16666666666667 +k=0.9999 +x_0=200000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2781\":[\"EPSG:2781\",\"+proj=tmerc +lat_0=30 +lon_0=-84.16666666666667 +k=0.9999 +x_0=700000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2782\":[\"EPSG:2782\",\"+proj=tmerc +lat_0=18.83333333333333 +lon_0=-155.5 +k=0.999966667 +x_0=500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2783\":[\"EPSG:2783\",\"+proj=tmerc +lat_0=20.33333333333333 +lon_0=-156.6666666666667 +k=0.999966667 +x_0=500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2784\":[\"EPSG:2784\",\"+proj=tmerc +lat_0=21.16666666666667 +lon_0=-158 +k=0.99999 +x_0=500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2785\":[\"EPSG:2785\",\"+proj=tmerc +lat_0=21.83333333333333 +lon_0=-159.5 +k=0.99999 +x_0=500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2786\":[\"EPSG:2786\",\"+proj=tmerc +lat_0=21.66666666666667 +lon_0=-160.1666666666667 +k=1 +x_0=500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2787\":[\"EPSG:2787\",\"+proj=tmerc +lat_0=41.66666666666666 +lon_0=-112.1666666666667 +k=0.9999473679999999 +x_0=200000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2788\":[\"EPSG:2788\",\"+proj=tmerc +lat_0=41.66666666666666 +lon_0=-114 +k=0.9999473679999999 +x_0=500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2789\":[\"EPSG:2789\",\"+proj=tmerc +lat_0=41.66666666666666 +lon_0=-115.75 +k=0.999933333 +x_0=800000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2791\":[\"EPSG:2791\",\"+proj=tmerc +lat_0=36.66666666666666 +lon_0=-90.16666666666667 +k=0.999941177 +x_0=700000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2792\":[\"EPSG:2792\",\"+proj=tmerc +lat_0=37.5 +lon_0=-85.66666666666667 +k=0.999966667 +x_0=100000 +y_0=250000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2793\":[\"EPSG:2793\",\"+proj=tmerc +lat_0=37.5 +lon_0=-87.08333333333333 +k=0.999966667 +x_0=900000 +y_0=250000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2794\":[\"EPSG:2794\",\"+proj=lcc +lat_1=43.26666666666667 +lat_2=42.06666666666667 +lat_0=41.5 +lon_0=-93.5 +x_0=1500000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2795\":[\"EPSG:2795\",\"+proj=lcc +lat_1=41.78333333333333 +lat_2=40.61666666666667 +lat_0=40 +lon_0=-93.5 +x_0=500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2796\":[\"EPSG:2796\",\"+proj=lcc +lat_1=39.78333333333333 +lat_2=38.71666666666667 +lat_0=38.33333333333334 +lon_0=-98 +x_0=400000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2797\":[\"EPSG:2797\",\"+proj=lcc +lat_1=38.56666666666667 +lat_2=37.26666666666667 +lat_0=36.66666666666666 +lon_0=-98.5 +x_0=400000 +y_0=400000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2798\":[\"EPSG:2798\",\"+proj=lcc +lat_1=37.96666666666667 +lat_2=38.96666666666667 +lat_0=37.5 +lon_0=-84.25 +x_0=500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2799\":[\"EPSG:2799\",\"+proj=lcc +lat_1=37.93333333333333 +lat_2=36.73333333333333 +lat_0=36.33333333333334 +lon_0=-85.75 +x_0=500000 +y_0=500000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2800\":[\"EPSG:2800\",\"+proj=lcc +lat_1=32.66666666666666 +lat_2=31.16666666666667 +lat_0=30.5 +lon_0=-92.5 +x_0=1000000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2801\":[\"EPSG:2801\",\"+proj=lcc +lat_1=30.7 +lat_2=29.3 +lat_0=28.5 +lon_0=-91.33333333333333 +x_0=1000000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2802\":[\"EPSG:2802\",\"+proj=tmerc +lat_0=43.66666666666666 +lon_0=-68.5 +k=0.9999 +x_0=300000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2803\":[\"EPSG:2803\",\"+proj=tmerc +lat_0=42.83333333333334 +lon_0=-70.16666666666667 +k=0.999966667 +x_0=900000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2804\":[\"EPSG:2804\",\"+proj=lcc +lat_1=39.45 +lat_2=38.3 +lat_0=37.66666666666666 +lon_0=-77 +x_0=400000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2805\":[\"EPSG:2805\",\"+proj=lcc +lat_1=42.68333333333333 +lat_2=41.71666666666667 +lat_0=41 +lon_0=-71.5 +x_0=200000 +y_0=750000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2806\":[\"EPSG:2806\",\"+proj=lcc +lat_1=41.48333333333333 +lat_2=41.28333333333333 +lat_0=41 +lon_0=-70.5 +x_0=500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2807\":[\"EPSG:2807\",\"+proj=lcc +lat_1=47.08333333333334 +lat_2=45.48333333333333 +lat_0=44.78333333333333 +lon_0=-87 +x_0=8000000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2808\":[\"EPSG:2808\",\"+proj=lcc +lat_1=45.7 +lat_2=44.18333333333333 +lat_0=43.31666666666667 +lon_0=-84.36666666666666 +x_0=6000000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2809\":[\"EPSG:2809\",\"+proj=lcc +lat_1=43.66666666666666 +lat_2=42.1 +lat_0=41.5 +lon_0=-84.36666666666666 +x_0=4000000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2810\":[\"EPSG:2810\",\"+proj=lcc +lat_1=48.63333333333333 +lat_2=47.03333333333333 +lat_0=46.5 +lon_0=-93.09999999999999 +x_0=800000 +y_0=100000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:4387\":[\"EPSG:4387\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:2813\":[\"EPSG:2813\",\"+proj=tmerc +lat_0=29.5 +lon_0=-88.83333333333333 +k=0.99995 +x_0=300000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2814\":[\"EPSG:2814\",\"+proj=tmerc +lat_0=29.5 +lon_0=-90.33333333333333 +k=0.99995 +x_0=700000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2818\":[\"EPSG:2818\",\"+proj=lcc +lat_1=49 +lat_2=45 +lat_0=44.25 +lon_0=-109.5 +x_0=600000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2820\":[\"EPSG:2820\",\"+proj=tmerc +lat_0=34.75 +lon_0=-115.5833333333333 +k=0.9999 +x_0=200000 +y_0=8000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2821\":[\"EPSG:2821\",\"+proj=tmerc +lat_0=34.75 +lon_0=-116.6666666666667 +k=0.9999 +x_0=500000 +y_0=6000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2822\":[\"EPSG:2822\",\"+proj=tmerc +lat_0=34.75 +lon_0=-118.5833333333333 +k=0.9999 +x_0=800000 +y_0=4000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2823\":[\"EPSG:2823\",\"+proj=tmerc +lat_0=42.5 +lon_0=-71.66666666666667 +k=0.999966667 +x_0=300000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2824\":[\"EPSG:2824\",\"+proj=tmerc +lat_0=38.83333333333334 +lon_0=-74.5 +k=0.9999 +x_0=150000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2825\":[\"EPSG:2825\",\"+proj=tmerc +lat_0=31 +lon_0=-104.3333333333333 +k=0.999909091 +x_0=165000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2826\":[\"EPSG:2826\",\"+proj=tmerc +lat_0=31 +lon_0=-106.25 +k=0.9999 +x_0=500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2827\":[\"EPSG:2827\",\"+proj=tmerc +lat_0=31 +lon_0=-107.8333333333333 +k=0.999916667 +x_0=830000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2830\":[\"EPSG:2830\",\"+proj=tmerc +lat_0=40 +lon_0=-78.58333333333333 +k=0.9999375 +x_0=350000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2831\":[\"EPSG:2831\",\"+proj=lcc +lat_1=41.03333333333333 +lat_2=40.66666666666666 +lat_0=40.16666666666666 +lon_0=-74 +x_0=300000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2832\":[\"EPSG:2832\",\"+proj=lcc +lat_1=48.73333333333333 +lat_2=47.43333333333333 +lat_0=47 +lon_0=-100.5 +x_0=600000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2833\":[\"EPSG:2833\",\"+proj=lcc +lat_1=47.48333333333333 +lat_2=46.18333333333333 +lat_0=45.66666666666666 +lon_0=-100.5 +x_0=600000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2834\":[\"EPSG:2834\",\"+proj=lcc +lat_1=41.7 +lat_2=40.43333333333333 +lat_0=39.66666666666666 +lon_0=-82.5 +x_0=600000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2835\":[\"EPSG:2835\",\"+proj=lcc +lat_1=40.03333333333333 +lat_2=38.73333333333333 +lat_0=38 +lon_0=-82.5 +x_0=600000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2836\":[\"EPSG:2836\",\"+proj=lcc +lat_1=36.76666666666667 +lat_2=35.56666666666667 +lat_0=35 +lon_0=-98 +x_0=600000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:4087\":[\"EPSG:4087\",\"+proj=eqc +lat_ts=0 +lat_0=0 +lon_0=0 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:2837\":[\"EPSG:2837\",\"+proj=lcc +lat_1=35.23333333333333 +lat_2=33.93333333333333 +lat_0=33.33333333333334 +lon_0=-98 +x_0=600000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2838\":[\"EPSG:2838\",\"+proj=lcc +lat_1=46 +lat_2=44.33333333333334 +lat_0=43.66666666666666 +lon_0=-120.5 +x_0=2500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2839\":[\"EPSG:2839\",\"+proj=lcc +lat_1=44 +lat_2=42.33333333333334 +lat_0=41.66666666666666 +lon_0=-120.5 +x_0=1500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2840\":[\"EPSG:2840\",\"+proj=tmerc +lat_0=41.08333333333334 +lon_0=-71.5 +k=0.99999375 +x_0=100000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2841\":[\"EPSG:2841\",\"+proj=lcc +lat_1=45.68333333333333 +lat_2=44.41666666666666 +lat_0=43.83333333333334 +lon_0=-100 +x_0=600000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2842\":[\"EPSG:2842\",\"+proj=lcc +lat_1=44.4 +lat_2=42.83333333333334 +lat_0=42.33333333333334 +lon_0=-100.3333333333333 +x_0=600000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2843\":[\"EPSG:2843\",\"+proj=lcc +lat_1=36.41666666666666 +lat_2=35.25 +lat_0=34.33333333333334 +lon_0=-86 +x_0=600000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2844\":[\"EPSG:2844\",\"+proj=lcc +lat_1=36.18333333333333 +lat_2=34.65 +lat_0=34 +lon_0=-101.5 +x_0=200000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:4389\":[\"EPSG:4389\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:2846\":[\"EPSG:2846\",\"+proj=lcc +lat_1=31.88333333333333 +lat_2=30.11666666666667 +lat_0=29.66666666666667 +lon_0=-100.3333333333333 +x_0=700000 +y_0=3000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2847\":[\"EPSG:2847\",\"+proj=lcc +lat_1=30.28333333333333 +lat_2=28.38333333333333 +lat_0=27.83333333333333 +lon_0=-99 +x_0=600000 +y_0=4000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2848\":[\"EPSG:2848\",\"+proj=lcc +lat_1=27.83333333333333 +lat_2=26.16666666666667 +lat_0=25.66666666666667 +lon_0=-98.5 +x_0=300000 +y_0=5000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2849\":[\"EPSG:2849\",\"+proj=lcc +lat_1=41.78333333333333 +lat_2=40.71666666666667 +lat_0=40.33333333333334 +lon_0=-111.5 +x_0=500000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2850\":[\"EPSG:2850\",\"+proj=lcc +lat_1=40.65 +lat_2=39.01666666666667 +lat_0=38.33333333333334 +lon_0=-111.5 +x_0=500000 +y_0=2000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2851\":[\"EPSG:2851\",\"+proj=lcc +lat_1=38.35 +lat_2=37.21666666666667 +lat_0=36.66666666666666 +lon_0=-111.5 +x_0=500000 +y_0=3000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:6133\":[\"EPSG:6133\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:2853\":[\"EPSG:2853\",\"+proj=lcc +lat_1=39.2 +lat_2=38.03333333333333 +lat_0=37.66666666666666 +lon_0=-78.5 +x_0=3500000 +y_0=2000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2854\":[\"EPSG:2854\",\"+proj=lcc +lat_1=37.96666666666667 +lat_2=36.76666666666667 +lat_0=36.33333333333334 +lon_0=-78.5 +x_0=3500000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2855\":[\"EPSG:2855\",\"+proj=lcc +lat_1=48.73333333333333 +lat_2=47.5 +lat_0=47 +lon_0=-120.8333333333333 +x_0=500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2856\":[\"EPSG:2856\",\"+proj=lcc +lat_1=47.33333333333334 +lat_2=45.83333333333334 +lat_0=45.33333333333334 +lon_0=-120.5 +x_0=500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2857\":[\"EPSG:2857\",\"+proj=lcc +lat_1=40.25 +lat_2=39 +lat_0=38.5 +lon_0=-79.5 +x_0=600000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2858\":[\"EPSG:2858\",\"+proj=lcc +lat_1=38.88333333333333 +lat_2=37.48333333333333 +lat_0=37 +lon_0=-81 +x_0=600000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2859\":[\"EPSG:2859\",\"+proj=lcc +lat_1=46.76666666666667 +lat_2=45.56666666666667 +lat_0=45.16666666666666 +lon_0=-90 +x_0=600000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2860\":[\"EPSG:2860\",\"+proj=lcc +lat_1=45.5 +lat_2=44.25 +lat_0=43.83333333333334 +lon_0=-90 +x_0=600000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:4465\":[\"EPSG:4465\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:2861\":[\"EPSG:2861\",\"+proj=lcc +lat_1=44.06666666666667 +lat_2=42.73333333333333 +lat_0=42 +lon_0=-90 +x_0=600000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2862\":[\"EPSG:2862\",\"+proj=tmerc +lat_0=40.5 +lon_0=-105.1666666666667 +k=0.9999375 +x_0=200000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2863\":[\"EPSG:2863\",\"+proj=tmerc +lat_0=40.5 +lon_0=-107.3333333333333 +k=0.9999375 +x_0=400000 +y_0=100000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2864\":[\"EPSG:2864\",\"+proj=tmerc +lat_0=40.5 +lon_0=-108.75 +k=0.9999375 +x_0=600000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2865\":[\"EPSG:2865\",\"+proj=tmerc +lat_0=40.5 +lon_0=-110.0833333333333 +k=0.9999375 +x_0=800000 +y_0=100000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2866\":[\"EPSG:2866\",\"+proj=lcc +lat_1=18.43333333333333 +lat_2=18.03333333333333 +lat_0=17.83333333333333 +lon_0=-66.43333333333334 +x_0=200000 +y_0=200000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2867\":[\"EPSG:2867\",\"+proj=tmerc +lat_0=31 +lon_0=-110.1666666666667 +k=0.9999 +x_0=213360 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=ft +no_defs \"],\"EPSG:2868\":[\"EPSG:2868\",\"+proj=tmerc +lat_0=31 +lon_0=-111.9166666666667 +k=0.9999 +x_0=213360 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=ft +no_defs \"],\"EPSG:2869\":[\"EPSG:2869\",\"+proj=tmerc +lat_0=31 +lon_0=-113.75 +k=0.999933333 +x_0=213360 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=ft +no_defs \"],\"EPSG:2870\":[\"EPSG:2870\",\"+proj=lcc +lat_1=41.66666666666666 +lat_2=40 +lat_0=39.33333333333334 +lon_0=-122 +x_0=2000000.0001016 +y_0=500000.0001016001 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:2871\":[\"EPSG:2871\",\"+proj=lcc +lat_1=39.83333333333334 +lat_2=38.33333333333334 +lat_0=37.66666666666666 +lon_0=-122 +x_0=2000000.0001016 +y_0=500000.0001016001 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:2874\":[\"EPSG:2874\",\"+proj=lcc +lat_1=35.46666666666667 +lat_2=34.03333333333333 +lat_0=33.5 +lon_0=-118 +x_0=2000000.0001016 +y_0=500000.0001016001 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:2876\":[\"EPSG:2876\",\"+proj=lcc +lat_1=40.78333333333333 +lat_2=39.71666666666667 +lat_0=39.33333333333334 +lon_0=-105.5 +x_0=914401.8288036576 +y_0=304800.6096012192 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:2885\":[\"EPSG:2885\",\"+proj=tmerc +lat_0=30 +lon_0=-84.16666666666667 +k=0.9999 +x_0=699999.9998983998 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:2877\":[\"EPSG:2877\",\"+proj=lcc +lat_1=39.75 +lat_2=38.45 +lat_0=37.83333333333334 +lon_0=-105.5 +x_0=914401.8288036576 +y_0=304800.6096012192 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:2878\":[\"EPSG:2878\",\"+proj=lcc +lat_1=38.43333333333333 +lat_2=37.23333333333333 +lat_0=36.66666666666666 +lon_0=-105.5 +x_0=914401.8288036576 +y_0=304800.6096012192 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:2879\":[\"EPSG:2879\",\"+proj=lcc +lat_1=41.86666666666667 +lat_2=41.2 +lat_0=40.83333333333334 +lon_0=-72.75 +x_0=304800.6096012192 +y_0=152400.3048006096 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:2880\":[\"EPSG:2880\",\"+proj=tmerc +lat_0=38 +lon_0=-75.41666666666667 +k=0.999995 +x_0=200000.0001016002 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:2881\":[\"EPSG:2881\",\"+proj=tmerc +lat_0=24.33333333333333 +lon_0=-81 +k=0.999941177 +x_0=200000.0001016002 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:2882\":[\"EPSG:2882\",\"+proj=tmerc +lat_0=24.33333333333333 +lon_0=-82 +k=0.999941177 +x_0=200000.0001016002 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:2883\":[\"EPSG:2883\",\"+proj=lcc +lat_1=30.75 +lat_2=29.58333333333333 +lat_0=29 +lon_0=-84.5 +x_0=600000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:2884\":[\"EPSG:2884\",\"+proj=tmerc +lat_0=30 +lon_0=-82.16666666666667 +k=0.9999 +x_0=200000.0001016002 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:4468\":[\"EPSG:4468\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:2886\":[\"EPSG:2886\",\"+proj=tmerc +lat_0=41.66666666666666 +lon_0=-112.1666666666667 +k=0.9999473679999999 +x_0=200000.0001016002 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:2887\":[\"EPSG:2887\",\"+proj=tmerc +lat_0=41.66666666666666 +lon_0=-114 +k=0.9999473679999999 +x_0=500000.0001016001 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:2888\":[\"EPSG:2888\",\"+proj=tmerc +lat_0=41.66666666666666 +lon_0=-115.75 +k=0.999933333 +x_0=800000.0001016001 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:2889\":[\"EPSG:2889\",\"+proj=tmerc +lat_0=37.5 +lon_0=-85.66666666666667 +k=0.999966667 +x_0=99999.99989839978 +y_0=249364.9987299975 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:2890\":[\"EPSG:2890\",\"+proj=tmerc +lat_0=37.5 +lon_0=-87.08333333333333 +k=0.999966667 +x_0=900000 +y_0=249364.9987299975 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:2891\":[\"EPSG:2891\",\"+proj=lcc +lat_1=37.96666666666667 +lat_2=38.96666666666667 +lat_0=37.5 +lon_0=-84.25 +x_0=500000.0001016001 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:2892\":[\"EPSG:2892\",\"+proj=lcc +lat_1=37.93333333333333 +lat_2=36.73333333333333 +lat_0=36.33333333333334 +lon_0=-85.75 +x_0=500000.0001016001 +y_0=500000.0001016001 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:2893\":[\"EPSG:2893\",\"+proj=lcc +lat_1=39.45 +lat_2=38.3 +lat_0=37.66666666666666 +lon_0=-77 +x_0=399999.9998983998 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:4473\":[\"EPSG:4473\",\"+proj=geocent +ellps=intl +units=m +no_defs \"],\"EPSG:2894\":[\"EPSG:2894\",\"+proj=lcc +lat_1=42.68333333333333 +lat_2=41.71666666666667 +lat_0=41 +lon_0=-71.5 +x_0=200000.0001016002 +y_0=750000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:2895\":[\"EPSG:2895\",\"+proj=lcc +lat_1=41.48333333333333 +lat_2=41.28333333333333 +lat_0=41 +lon_0=-70.5 +x_0=500000.0001016001 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:2896\":[\"EPSG:2896\",\"+proj=lcc +lat_1=47.08333333333334 +lat_2=45.48333333333333 +lat_0=44.78333333333333 +lon_0=-87 +x_0=7999999.999968001 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=ft +no_defs \"],\"EPSG:2897\":[\"EPSG:2897\",\"+proj=lcc +lat_1=45.7 +lat_2=44.18333333333333 +lat_0=43.31666666666667 +lon_0=-84.36666666666666 +x_0=5999999.999976001 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=ft +no_defs \"],\"EPSG:2898\":[\"EPSG:2898\",\"+proj=lcc +lat_1=43.66666666666666 +lat_2=42.1 +lat_0=41.5 +lon_0=-84.36666666666666 +x_0=3999999.999984 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=ft +no_defs \"],\"EPSG:2899\":[\"EPSG:2899\",\"+proj=tmerc +lat_0=29.5 +lon_0=-88.83333333333333 +k=0.99995 +x_0=300000.0000000001 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:2901\":[\"EPSG:2901\",\"+proj=lcc +lat_1=49 +lat_2=45 +lat_0=44.25 +lon_0=-109.5 +x_0=599999.9999976 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=ft +no_defs \"],\"EPSG:2904\":[\"EPSG:2904\",\"+proj=tmerc +lat_0=31 +lon_0=-107.8333333333333 +k=0.999916667 +x_0=830000.0001016001 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:2908\":[\"EPSG:2908\",\"+proj=lcc +lat_1=41.03333333333333 +lat_2=40.66666666666666 +lat_0=40.16666666666666 +lon_0=-74 +x_0=300000.0000000001 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:2909\":[\"EPSG:2909\",\"+proj=lcc +lat_1=48.73333333333333 +lat_2=47.43333333333333 +lat_0=47 +lon_0=-100.5 +x_0=599999.9999976 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=ft +no_defs \"],\"EPSG:4569\":[\"EPSG:4569\",\"+proj=tmerc +lat_0=0 +lon_0=81 +k=1 +x_0=14500000 +y_0=0 +ellps=krass +units=m +no_defs \"],\"EPSG:2910\":[\"EPSG:2910\",\"+proj=lcc +lat_1=47.48333333333333 +lat_2=46.18333333333333 +lat_0=45.66666666666666 +lon_0=-100.5 +x_0=599999.9999976 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=ft +no_defs \"],\"EPSG:2912\":[\"EPSG:2912\",\"+proj=lcc +lat_1=35.23333333333333 +lat_2=33.93333333333333 +lat_0=33.33333333333334 +lon_0=-98 +x_0=600000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:2913\":[\"EPSG:2913\",\"+proj=lcc +lat_1=46 +lat_2=44.33333333333334 +lat_0=43.66666666666666 +lon_0=-120.5 +x_0=2500000.0001424 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=ft +no_defs \"],\"EPSG:2914\":[\"EPSG:2914\",\"+proj=lcc +lat_1=44 +lat_2=42.33333333333334 +lat_0=41.66666666666666 +lon_0=-120.5 +x_0=1500000.0001464 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=ft +no_defs \"],\"EPSG:2915\":[\"EPSG:2915\",\"+proj=lcc +lat_1=36.41666666666666 +lat_2=35.25 +lat_0=34.33333333333334 +lon_0=-86 +x_0=600000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:2916\":[\"EPSG:2916\",\"+proj=lcc +lat_1=36.18333333333333 +lat_2=34.65 +lat_0=34 +lon_0=-101.5 +x_0=200000.0001016002 +y_0=999999.9998983998 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:2917\":[\"EPSG:2917\",\"+proj=lcc +lat_1=33.96666666666667 +lat_2=32.13333333333333 +lat_0=31.66666666666667 +lon_0=-98.5 +x_0=600000 +y_0=2000000.0001016 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:2918\":[\"EPSG:2918\",\"+proj=lcc +lat_1=31.88333333333333 +lat_2=30.11666666666667 +lat_0=29.66666666666667 +lon_0=-100.3333333333333 +x_0=699999.9998983998 +y_0=3000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:2919\":[\"EPSG:2919\",\"+proj=lcc +lat_1=30.28333333333333 +lat_2=28.38333333333333 +lat_0=27.83333333333333 +lon_0=-99 +x_0=600000 +y_0=3999999.9998984 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:2920\":[\"EPSG:2920\",\"+proj=lcc +lat_1=27.83333333333333 +lat_2=26.16666666666667 +lat_0=25.66666666666667 +lon_0=-98.5 +x_0=300000.0000000001 +y_0=5000000.0001016 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:2921\":[\"EPSG:2921\",\"+proj=lcc +lat_1=41.78333333333333 +lat_2=40.71666666666667 +lat_0=40.33333333333334 +lon_0=-111.5 +x_0=500000.0001504 +y_0=999999.9999960001 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=ft +no_defs \"],\"EPSG:2922\":[\"EPSG:2922\",\"+proj=lcc +lat_1=40.65 +lat_2=39.01666666666667 +lat_0=38.33333333333334 +lon_0=-111.5 +x_0=500000.0001504 +y_0=1999999.999992 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=ft +no_defs \"],\"EPSG:2923\":[\"EPSG:2923\",\"+proj=lcc +lat_1=38.35 +lat_2=37.21666666666667 +lat_0=36.66666666666666 +lon_0=-111.5 +x_0=500000.0001504 +y_0=2999999.999988 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=ft +no_defs \"],\"EPSG:2924\":[\"EPSG:2924\",\"+proj=lcc +lat_1=39.2 +lat_2=38.03333333333333 +lat_0=37.66666666666666 +lon_0=-78.5 +x_0=3500000.0001016 +y_0=2000000.0001016 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:2933\":[\"EPSG:2933\",\"+proj=utm +zone=50 +south +ellps=bessel +towgs84=-403,684,41,0,0,0,0 +units=m +no_defs \"],\"EPSG:2925\":[\"EPSG:2925\",\"+proj=lcc +lat_1=37.96666666666667 +lat_2=36.76666666666667 +lat_0=36.33333333333334 +lon_0=-78.5 +x_0=3500000.0001016 +y_0=999999.9998983998 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:2928\":[\"EPSG:2928\",\"+proj=lcc +lat_1=46.76666666666667 +lat_2=45.56666666666667 +lat_0=45.16666666666666 +lon_0=-90 +x_0=600000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:2929\":[\"EPSG:2929\",\"+proj=lcc +lat_1=45.5 +lat_2=44.25 +lat_0=43.83333333333334 +lon_0=-90 +x_0=600000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:2930\":[\"EPSG:2930\",\"+proj=lcc +lat_1=44.06666666666667 +lat_2=42.73333333333333 +lat_0=42 +lon_0=-90 +x_0=600000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:2931\":[\"EPSG:2931\",\"+proj=tmerc +lat_0=0 +lon_0=13 +k=0.9996 +x_0=500000 +y_0=0 +a=6378249.2 +b=6356515 +towgs84=-106,-87,188,0,0,0,0 +units=m +no_defs \"],\"EPSG:2932\":[\"EPSG:2932\",\"+proj=tmerc +lat_0=24.45 +lon_0=51.21666666666667 +k=0.99999 +x_0=200000 +y_0=300000 +ellps=intl +towgs84=-119.4248,-303.65872,-11.00061,1.164298,0.174458,1.096259,3.657065 +units=m +no_defs \"],\"EPSG:2934\":[\"EPSG:2934\",\"+proj=merc +lon_0=110 +k=0.997 +x_0=3900000 +y_0=900000 +ellps=bessel +towgs84=-403,684,41,0,0,0,0 +pm=jakarta +units=m +no_defs \"],\"EPSG:2935\":[\"EPSG:2935\",\"+proj=tmerc +lat_0=0.1166666666666667 +lon_0=41.53333333333333 +k=1 +x_0=1300000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2936\":[\"EPSG:2936\",\"+proj=tmerc +lat_0=0.1166666666666667 +lon_0=44.53333333333333 +k=1 +x_0=2300000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2937\":[\"EPSG:2937\",\"+proj=tmerc +lat_0=0.1166666666666667 +lon_0=47.53333333333333 +k=1 +x_0=3300000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2938\":[\"EPSG:2938\",\"+proj=tmerc +lat_0=0.1166666666666667 +lon_0=50.53333333333333 +k=1 +x_0=4300000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2939\":[\"EPSG:2939\",\"+proj=tmerc +lat_0=0.1333333333333333 +lon_0=50.76666666666667 +k=1 +x_0=2300000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2940\":[\"EPSG:2940\",\"+proj=tmerc +lat_0=0.1333333333333333 +lon_0=53.76666666666667 +k=1 +x_0=3300000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2941\":[\"EPSG:2941\",\"+proj=tmerc +lat_0=0.1333333333333333 +lon_0=56.76666666666667 +k=1 +x_0=4300000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:2942\":[\"EPSG:2942\",\"+proj=utm +zone=28 +ellps=intl +towgs84=-499,-249,314,0,0,0,0 +units=m +no_defs \"],\"EPSG:2944\":[\"EPSG:2944\",\"+proj=tmerc +lat_0=0 +lon_0=-55.5 +k=0.9999 +x_0=304800 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2945\":[\"EPSG:2945\",\"+proj=tmerc +lat_0=0 +lon_0=-58.5 +k=0.9999 +x_0=304800 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2946\":[\"EPSG:2946\",\"+proj=tmerc +lat_0=0 +lon_0=-61.5 +k=0.9999 +x_0=304800 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2947\":[\"EPSG:2947\",\"+proj=tmerc +lat_0=0 +lon_0=-64.5 +k=0.9999 +x_0=304800 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2948\":[\"EPSG:2948\",\"+proj=tmerc +lat_0=0 +lon_0=-67.5 +k=0.9999 +x_0=304800 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2949\":[\"EPSG:2949\",\"+proj=tmerc +lat_0=0 +lon_0=-70.5 +k=0.9999 +x_0=304800 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2950\":[\"EPSG:2950\",\"+proj=tmerc +lat_0=0 +lon_0=-73.5 +k=0.9999 +x_0=304800 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2951\":[\"EPSG:2951\",\"+proj=tmerc +lat_0=0 +lon_0=-76.5 +k=0.9999 +x_0=304800 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2952\":[\"EPSG:2952\",\"+proj=tmerc +lat_0=0 +lon_0=-79.5 +k=0.9999 +x_0=304800 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:4570\":[\"EPSG:4570\",\"+proj=tmerc +lat_0=0 +lon_0=87 +k=1 +x_0=15500000 +y_0=0 +ellps=krass +units=m +no_defs \"],\"EPSG:2954\":[\"EPSG:2954\",\"+proj=sterea +lat_0=47.25 +lon_0=-63 +k=0.999912 +x_0=400000 +y_0=800000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2955\":[\"EPSG:2955\",\"+proj=utm +zone=11 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2957\":[\"EPSG:2957\",\"+proj=utm +zone=13 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2959\":[\"EPSG:2959\",\"+proj=utm +zone=18 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2960\":[\"EPSG:2960\",\"+proj=utm +zone=19 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2961\":[\"EPSG:2961\",\"+proj=utm +zone=20 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2962\":[\"EPSG:2962\",\"+proj=utm +zone=21 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2964\":[\"EPSG:2964\",\"+proj=aea +lat_1=55 +lat_2=65 +lat_0=50 +lon_0=-154 +x_0=0 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:2965\":[\"EPSG:2965\",\"+proj=tmerc +lat_0=37.5 +lon_0=-85.66666666666667 +k=0.999966667 +x_0=99999.99989839978 +y_0=249999.9998983998 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:2966\":[\"EPSG:2966\",\"+proj=tmerc +lat_0=37.5 +lon_0=-87.08333333333333 +k=0.999966667 +x_0=900000 +y_0=249999.9998983998 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:2967\":[\"EPSG:2967\",\"+proj=tmerc +lat_0=37.5 +lon_0=-85.66666666666667 +k=0.999966667 +x_0=99999.99989839978 +y_0=249999.9998983998 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:2968\":[\"EPSG:2968\",\"+proj=tmerc +lat_0=37.5 +lon_0=-87.08333333333333 +k=0.999966667 +x_0=900000 +y_0=249999.9998983998 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:2969\":[\"EPSG:2969\",\"+proj=utm +zone=20 +ellps=intl +towgs84=137,248,-430,0,0,0,0 +units=m +no_defs \"],\"EPSG:2970\":[\"EPSG:2970\",\"+proj=utm +zone=20 +ellps=intl +towgs84=-467,-16,-300,0,0,0,0 +units=m +no_defs \"],\"EPSG:2971\":[\"EPSG:2971\",\"+proj=utm +zone=22 +ellps=intl +towgs84=-186,230,110,0,0,0,0 +units=m +no_defs \"],\"EPSG:2972\":[\"EPSG:2972\",\"+proj=utm +zone=22 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2975\":[\"EPSG:2975\",\"+proj=utm +zone=40 +south +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2976\":[\"EPSG:2976\",\"+proj=utm +zone=6 +south +ellps=intl +towgs84=162,117,154,0,0,0,0 +units=m +no_defs \"],\"EPSG:2977\":[\"EPSG:2977\",\"+proj=utm +zone=5 +south +ellps=intl +towgs84=72.438,345.918,79.486,1.6045,0.8823,0.5565,1.3746 +units=m +no_defs \"],\"EPSG:2978\":[\"EPSG:2978\",\"+proj=utm +zone=7 +south +ellps=intl +towgs84=84,274,65,0,0,0,0 +units=m +no_defs \"],\"EPSG:2979\":[\"EPSG:2979\",\"+proj=utm +zone=42 +south +ellps=intl +towgs84=145,-187,103,0,0,0,0 +units=m +no_defs \"],\"EPSG:2980\":[\"EPSG:2980\",\"+proj=utm +zone=38 +south +ellps=intl +towgs84=-382,-59,-262,0,0,0,0 +units=m +no_defs \"],\"EPSG:2981\":[\"EPSG:2981\",\"+proj=utm +zone=58 +south +ellps=intl +towgs84=335.47,222.58,-230.94,0,0,0,0 +units=m +no_defs \"],\"EPSG:2982\":[\"EPSG:2982\",\"+proj=utm +zone=58 +south +ellps=intl +towgs84=-13,-348,292,0,0,0,0 +units=m +no_defs \"],\"EPSG:2983\":[\"EPSG:2983\",\"+proj=utm +zone=58 +south +ellps=intl +towgs84=-122.383,-188.696,103.344,3.5107,-4.9668,-5.7047,4.4798 +units=m +no_defs \"],\"EPSG:2995\":[\"EPSG:2995\",\"+proj=utm +zone=58 +south +ellps=intl +towgs84=287.58,177.78,-135.41,0,0,0,0 +units=m +no_defs \"],\"EPSG:2984\":[\"EPSG:2984\",\"+proj=lcc +lat_1=-20.66666666666667 +lat_2=-22.33333333333333 +lat_0=-21.5 +lon_0=166 +x_0=400000 +y_0=300000 +ellps=intl +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2987\":[\"EPSG:2987\",\"+proj=utm +zone=21 +ellps=clrk66 +towgs84=30,430,368,0,0,0,0 +units=m +no_defs \"],\"EPSG:2988\":[\"EPSG:2988\",\"+proj=utm +zone=1 +south +ellps=intl +towgs84=253,-132,-127,0,0,0,0 +units=m +no_defs \"],\"EPSG:2990\":[\"EPSG:2990\",\"+proj=tmerc +lat_0=-21.11666666666667 +lon_0=55.53333333333333 +k=1 +x_0=50000 +y_0=160000 +ellps=intl +towgs84=94,-948,-1262,0,0,0,0 +units=m +no_defs \"],\"EPSG:2991\":[\"EPSG:2991\",\"+proj=lcc +lat_1=43 +lat_2=45.5 +lat_0=41.75 +lon_0=-120.5 +x_0=400000 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:2992\":[\"EPSG:2992\",\"+proj=lcc +lat_1=43 +lat_2=45.5 +lat_0=41.75 +lon_0=-120.5 +x_0=399999.9999984 +y_0=0 +datum=NAD83 +units=ft +no_defs \"],\"EPSG:2993\":[\"EPSG:2993\",\"+proj=lcc +lat_1=43 +lat_2=45.5 +lat_0=41.75 +lon_0=-120.5 +x_0=400000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2994\":[\"EPSG:2994\",\"+proj=lcc +lat_1=43 +lat_2=45.5 +lat_0=41.75 +lon_0=-120.5 +x_0=399999.9999984 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=ft +no_defs \"],\"EPSG:2996\":[\"EPSG:2996\",\"+proj=utm +zone=58 +south +ellps=intl +towgs84=-13,-348,292,0,0,0,0 +units=m +no_defs \"],\"EPSG:2997\":[\"EPSG:2997\",\"+proj=utm +zone=58 +south +ellps=intl +towgs84=-480.26,-438.32,-643.429,16.3119,20.1721,-4.0349,-111.7002 +units=m +no_defs \"],\"EPSG:2998\":[\"EPSG:2998\",\"+proj=utm +zone=58 +south +ellps=intl +towgs84=-10.18,-350.43,291.37,0,0,0,0 +units=m +no_defs \"],\"EPSG:2999\":[\"EPSG:2999\",\"+proj=utm +zone=38 +south +ellps=intl +towgs84=-963,510,-359,0,0,0,0 +units=m +no_defs \"],\"EPSG:3000\":[\"EPSG:3000\",\"+proj=merc +lon_0=110 +k=0.997 +x_0=3900000 +y_0=900000 +ellps=bessel +towgs84=-403,684,41,0,0,0,0 +units=m +no_defs \"],\"EPSG:3001\":[\"EPSG:3001\",\"+proj=merc +lon_0=110 +k=0.997 +x_0=3900000 +y_0=900000 +ellps=bessel +towgs84=-377,681,-50,0,0,0,0 +units=m +no_defs \"],\"EPSG:3002\":[\"EPSG:3002\",\"+proj=merc +lon_0=110 +k=0.997 +x_0=3900000 +y_0=900000 +ellps=bessel +towgs84=-587.8,519.75,145.76,0,0,0,0 +units=m +no_defs \"],\"EPSG:3019\":[\"EPSG:3019\",\"+proj=tmerc +lat_0=0 +lon_0=11.30827777777778 +k=1 +x_0=1500000 +y_0=0 +ellps=bessel +towgs84=414.1,41.3,603.1,-0.855,2.141,-7.023,0 +units=m +no_defs \"],\"EPSG:3020\":[\"EPSG:3020\",\"+proj=tmerc +lat_0=0 +lon_0=13.55827777777778 +k=1 +x_0=1500000 +y_0=0 +ellps=bessel +towgs84=414.1,41.3,603.1,-0.855,2.141,-7.023,0 +units=m +no_defs \"],\"EPSG:3023\":[\"EPSG:3023\",\"+proj=tmerc +lat_0=0 +lon_0=20.30827777777778 +k=1 +x_0=1500000 +y_0=0 +ellps=bessel +towgs84=414.1,41.3,603.1,-0.855,2.141,-7.023,0 +units=m +no_defs \"],\"EPSG:3024\":[\"EPSG:3024\",\"+proj=tmerc +lat_0=0 +lon_0=22.55827777777778 +k=1 +x_0=1500000 +y_0=0 +ellps=bessel +towgs84=414.1,41.3,603.1,-0.855,2.141,-7.023,0 +units=m +no_defs \"],\"EPSG:3025\":[\"EPSG:3025\",\"+proj=tmerc +lat_0=0 +lon_0=11.30827777777778 +k=1 +x_0=1500000 +y_0=0 +ellps=bessel +units=m +no_defs \"],\"EPSG:3026\":[\"EPSG:3026\",\"+proj=tmerc +lat_0=0 +lon_0=13.55827777777778 +k=1 +x_0=1500000 +y_0=0 +ellps=bessel +units=m +no_defs \"],\"EPSG:3028\":[\"EPSG:3028\",\"+proj=tmerc +lat_0=0 +lon_0=18.05827777777778 +k=1 +x_0=1500000 +y_0=0 +ellps=bessel +units=m +no_defs \"],\"EPSG:3032\":[\"EPSG:3032\",\"+proj=stere +lat_0=-90 +lat_ts=-71 +lon_0=70 +k=1 +x_0=6000000 +y_0=6000000 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3033\":[\"EPSG:3033\",\"+proj=lcc +lat_1=-68.5 +lat_2=-74.5 +lat_0=-50 +lon_0=70 +x_0=6000000 +y_0=6000000 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3037\":[\"EPSG:3037\",\"+proj=utm +zone=37 +south +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3038\":[\"EPSG:3038\",\"+proj=utm +zone=26 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3039\":[\"EPSG:3039\",\"+proj=utm +zone=27 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3040\":[\"EPSG:3040\",\"+proj=utm +zone=28 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3041\":[\"EPSG:3041\",\"+proj=utm +zone=29 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3048\":[\"EPSG:3048\",\"+proj=utm +zone=36 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3050\":[\"EPSG:3050\",\"+proj=utm +zone=38 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3051\":[\"EPSG:3051\",\"+proj=utm +zone=39 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3054\":[\"EPSG:3054\",\"+proj=utm +zone=26 +ellps=intl +towgs84=-73,47,-83,0,0,0,0 +units=m +no_defs \"],\"EPSG:3055\":[\"EPSG:3055\",\"+proj=utm +zone=27 +ellps=intl +towgs84=-73,47,-83,0,0,0,0 +units=m +no_defs \"],\"EPSG:3056\":[\"EPSG:3056\",\"+proj=utm +zone=28 +ellps=intl +towgs84=-73,47,-83,0,0,0,0 +units=m +no_defs \"],\"EPSG:4556\":[\"EPSG:4556\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:3058\":[\"EPSG:3058\",\"+proj=tmerc +lat_0=0 +lon_0=-8.5 +k=1 +x_0=50000 +y_0=-7800000 +ellps=intl +towgs84=982.6087,552.753,-540.873,6.6816266,-31.6114924,-19.84816,16.805 +units=m +no_defs \"],\"EPSG:3060\":[\"EPSG:3060\",\"+proj=utm +zone=58 +south +ellps=intl +towgs84=-11.64,-348.6,291.98,0,0,0,0 +units=m +no_defs \"],\"EPSG:3061\":[\"EPSG:3061\",\"+proj=utm +zone=28 +ellps=intl +towgs84=-502.862,-247.438,312.724,0,0,0,0 +units=m +no_defs \"],\"EPSG:3063\":[\"EPSG:3063\",\"+proj=utm +zone=26 +ellps=intl +towgs84=-106.226,166.366,-37.893,0,0,0,0 +units=m +no_defs \"],\"EPSG:3066\":[\"EPSG:3066\",\"+proj=tmerc +lat_0=0 +lon_0=37 +k=0.9998 +x_0=500000 +y_0=-3000000 +ellps=intl +towgs84=-87,-98,-121,0,0,0,0 +units=m +no_defs \"],\"EPSG:3068\":[\"EPSG:3068\",\"+proj=cass +lat_0=52.41864827777778 +lon_0=13.62720366666667 +x_0=40000 +y_0=10000 +datum=potsdam +units=m +no_defs \"],\"EPSG:3069\":[\"EPSG:3069\",\"+proj=tmerc +lat_0=0 +lon_0=-90 +k=0.9996 +x_0=500000 +y_0=-4500000 +datum=NAD27 +units=m +no_defs \"],\"EPSG:3072\":[\"EPSG:3072\",\"+proj=tmerc +lat_0=43.83333333333334 +lon_0=-67.875 +k=0.99998 +x_0=700000 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:3073\":[\"EPSG:3073\",\"+proj=tmerc +lat_0=43 +lon_0=-69.125 +k=0.99998 +x_0=500000 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:3074\":[\"EPSG:3074\",\"+proj=tmerc +lat_0=42.83333333333334 +lon_0=-70.375 +k=0.99998 +x_0=300000 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:3075\":[\"EPSG:3075\",\"+proj=tmerc +lat_0=43.83333333333334 +lon_0=-67.875 +k=0.99998 +x_0=700000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3076\":[\"EPSG:3076\",\"+proj=tmerc +lat_0=43 +lon_0=-69.125 +k=0.99998 +x_0=500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3077\":[\"EPSG:3077\",\"+proj=tmerc +lat_0=42.83333333333334 +lon_0=-70.375 +k=0.99998 +x_0=300000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3078\":[\"EPSG:3078\",\"+proj=omerc +lat_0=45.30916666666666 +lonc=-86 +alpha=337.25556 +k=0.9996 +x_0=2546731.496 +y_0=-4354009.816 +no_uoff +gamma=337.25556 +datum=NAD83 +units=m +no_defs \"],\"EPSG:3079\":[\"EPSG:3079\",\"+proj=omerc +lat_0=45.30916666666666 +lonc=-86 +alpha=337.25556 +k=0.9996 +x_0=2546731.496 +y_0=-4354009.816 +no_uoff +gamma=337.25556 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3080\":[\"EPSG:3080\",\"+proj=lcc +lat_1=27.41666666666667 +lat_2=34.91666666666666 +lat_0=31.16666666666667 +lon_0=-100 +x_0=914400 +y_0=914400 +datum=NAD27 +units=ft +no_defs \"],\"EPSG:3081\":[\"EPSG:3081\",\"+proj=lcc +lat_1=27.41666666666667 +lat_2=34.91666666666666 +lat_0=31.16666666666667 +lon_0=-100 +x_0=1000000 +y_0=1000000 +datum=NAD83 +units=m +no_defs \"],\"EPSG:3082\":[\"EPSG:3082\",\"+proj=lcc +lat_1=27.5 +lat_2=35 +lat_0=18 +lon_0=-100 +x_0=1500000 +y_0=5000000 +datum=NAD83 +units=m +no_defs \"],\"EPSG:3083\":[\"EPSG:3083\",\"+proj=aea +lat_1=27.5 +lat_2=35 +lat_0=18 +lon_0=-100 +x_0=1500000 +y_0=6000000 +datum=NAD83 +units=m +no_defs \"],\"EPSG:3084\":[\"EPSG:3084\",\"+proj=lcc +lat_1=27.5 +lat_2=35 +lat_0=18 +lon_0=-100 +x_0=1500000 +y_0=5000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3103\":[\"EPSG:3103\",\"+proj=utm +zone=28 +ellps=clrk80 +units=m +no_defs \"],\"EPSG:3085\":[\"EPSG:3085\",\"+proj=aea +lat_1=27.5 +lat_2=35 +lat_0=18 +lon_0=-100 +x_0=1500000 +y_0=6000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3086\":[\"EPSG:3086\",\"+proj=aea +lat_1=24 +lat_2=31.5 +lat_0=24 +lon_0=-84 +x_0=400000 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:3087\":[\"EPSG:3087\",\"+proj=aea +lat_1=24 +lat_2=31.5 +lat_0=24 +lon_0=-84 +x_0=400000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3088\":[\"EPSG:3088\",\"+proj=lcc +lat_1=37.08333333333334 +lat_2=38.66666666666666 +lat_0=36.33333333333334 +lon_0=-85.75 +x_0=1500000 +y_0=1000000 +datum=NAD83 +units=m +no_defs \"],\"EPSG:3089\":[\"EPSG:3089\",\"+proj=lcc +lat_1=37.08333333333334 +lat_2=38.66666666666666 +lat_0=36.33333333333334 +lon_0=-85.75 +x_0=1500000 +y_0=999999.9998983998 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:3090\":[\"EPSG:3090\",\"+proj=lcc +lat_1=37.08333333333334 +lat_2=38.66666666666666 +lat_0=36.33333333333334 +lon_0=-85.75 +x_0=1500000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3091\":[\"EPSG:3091\",\"+proj=lcc +lat_1=37.08333333333334 +lat_2=38.66666666666666 +lat_0=36.33333333333334 +lon_0=-85.75 +x_0=1500000 +y_0=999999.9998983998 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3092\":[\"EPSG:3092\",\"+proj=utm +zone=51 +ellps=bessel +towgs84=-146.414,507.337,680.507,0,0,0,0 +units=m +no_defs \"],\"EPSG:3369\":[\"EPSG:3369\",\"+proj=utm +zone=30 +ellps=clrk80 +units=m +no_defs \"],\"EPSG:3093\":[\"EPSG:3093\",\"+proj=utm +zone=52 +ellps=bessel +towgs84=-146.414,507.337,680.507,0,0,0,0 +units=m +no_defs \"],\"EPSG:3094\":[\"EPSG:3094\",\"+proj=utm +zone=53 +ellps=bessel +towgs84=-146.414,507.337,680.507,0,0,0,0 +units=m +no_defs \"],\"EPSG:3095\":[\"EPSG:3095\",\"+proj=utm +zone=54 +ellps=bessel +towgs84=-146.414,507.337,680.507,0,0,0,0 +units=m +no_defs \"],\"EPSG:3096\":[\"EPSG:3096\",\"+proj=utm +zone=55 +ellps=bessel +towgs84=-146.414,507.337,680.507,0,0,0,0 +units=m +no_defs \"],\"EPSG:3097\":[\"EPSG:3097\",\"+proj=utm +zone=51 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3099\":[\"EPSG:3099\",\"+proj=utm +zone=53 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3100\":[\"EPSG:3100\",\"+proj=utm +zone=54 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3101\":[\"EPSG:3101\",\"+proj=utm +zone=55 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3102\":[\"EPSG:3102\",\"+proj=lcc +lat_1=-14.26666666666667 +lat_0=-14.26666666666667 +lon_0=-170 +k_0=1 +x_0=152400.3048006096 +y_0=95169.31165862332 +ellps=clrk66 +towgs84=-115,118,426,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3104\":[\"EPSG:3104\",\"+proj=utm +zone=29 +ellps=clrk80 +units=m +no_defs \"],\"EPSG:3105\":[\"EPSG:3105\",\"+proj=utm +zone=30 +ellps=clrk80 +units=m +no_defs \"],\"EPSG:3106\":[\"EPSG:3106\",\"+proj=tmerc +lat_0=0 +lon_0=90 +k=0.9996 +x_0=500000 +y_0=0 +a=6377276.345 +b=6356075.41314024 +towgs84=283.7,735.9,261.1,0,0,0,0 +units=m +no_defs \"],\"EPSG:3107\":[\"EPSG:3107\",\"+proj=lcc +lat_1=-28 +lat_2=-36 +lat_0=-32 +lon_0=135 +x_0=1000000 +y_0=2000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3108\":[\"EPSG:3108\",\"+proj=tmerc +lat_0=49.5 +lon_0=-2.416666666666667 +k=0.999997 +x_0=47000 +y_0=50000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3109\":[\"EPSG:3109\",\"+proj=tmerc +lat_0=49.225 +lon_0=-2.135 +k=0.9999999000000001 +x_0=40000 +y_0=70000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3110\":[\"EPSG:3110\",\"+proj=lcc +lat_1=-36 +lat_2=-38 +lat_0=-37 +lon_0=145 +x_0=2500000 +y_0=4500000 +ellps=aust_SA +towgs84=-117.808,-51.536,137.784,0.303,0.446,0.234,-0.29 +units=m +no_defs \"],\"EPSG:3114\":[\"EPSG:3114\",\"+proj=tmerc +lat_0=4.596200416666666 +lon_0=-80.07750791666666 +k=1 +x_0=1000000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3117\":[\"EPSG:3117\",\"+proj=tmerc +lat_0=4.596200416666666 +lon_0=-71.07750791666666 +k=1 +x_0=1000000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3118\":[\"EPSG:3118\",\"+proj=tmerc +lat_0=4.596200416666666 +lon_0=-68.07750791666666 +k=1 +x_0=1000000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3119\":[\"EPSG:3119\",\"+proj=tmerc +lat_0=0 +lon_0=10.5 +k=0.999 +x_0=1000000 +y_0=1000000 +ellps=intl +towgs84=-206.1,-174.7,-87.7,0,0,0,0 +units=m +no_defs \"],\"EPSG:3120\":[\"EPSG:3120\",\"+proj=sterea +lat_0=50.625 +lon_0=21.08333333333333 +k=0.9998 +x_0=4637000 +y_0=5467000 +ellps=krass +towgs84=2.3287,-147.0425,-92.0802,-0.3092483,0.32482185,0.49729934,5.68906266 +units=m +no_defs \"],\"EPSG:3121\":[\"EPSG:3121\",\"+proj=tmerc +lat_0=0 +lon_0=117 +k=0.99995 +x_0=500000 +y_0=0 +ellps=clrk66 +towgs84=-127.62,-67.24,-47.04,-3.068,4.903,1.578,-1.06 +units=m +no_defs \"],\"EPSG:3122\":[\"EPSG:3122\",\"+proj=tmerc +lat_0=0 +lon_0=119 +k=0.99995 +x_0=500000 +y_0=0 +ellps=clrk66 +towgs84=-127.62,-67.24,-47.04,-3.068,4.903,1.578,-1.06 +units=m +no_defs \"],\"EPSG:3123\":[\"EPSG:3123\",\"+proj=tmerc +lat_0=0 +lon_0=121 +k=0.99995 +x_0=500000 +y_0=0 +ellps=clrk66 +towgs84=-127.62,-67.24,-47.04,-3.068,4.903,1.578,-1.06 +units=m +no_defs \"],\"EPSG:3124\":[\"EPSG:3124\",\"+proj=tmerc +lat_0=0 +lon_0=123 +k=0.99995 +x_0=500000 +y_0=0 +ellps=clrk66 +towgs84=-127.62,-67.24,-47.04,-3.068,4.903,1.578,-1.06 +units=m +no_defs \"],\"EPSG:3125\":[\"EPSG:3125\",\"+proj=tmerc +lat_0=0 +lon_0=125 +k=0.99995 +x_0=500000 +y_0=0 +ellps=clrk66 +towgs84=-127.62,-67.24,-47.04,-3.068,4.903,1.578,-1.06 +units=m +no_defs \"],\"EPSG:3126\":[\"EPSG:3126\",\"+proj=tmerc +lat_0=0 +lon_0=19 +k=1 +x_0=500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3127\":[\"EPSG:3127\",\"+proj=tmerc +lat_0=0 +lon_0=20 +k=1 +x_0=500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3128\":[\"EPSG:3128\",\"+proj=tmerc +lat_0=0 +lon_0=21 +k=1 +x_0=500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3129\":[\"EPSG:3129\",\"+proj=tmerc +lat_0=0 +lon_0=22 +k=1 +x_0=500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3130\":[\"EPSG:3130\",\"+proj=tmerc +lat_0=0 +lon_0=23 +k=1 +x_0=500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3131\":[\"EPSG:3131\",\"+proj=tmerc +lat_0=0 +lon_0=24 +k=1 +x_0=500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3133\":[\"EPSG:3133\",\"+proj=tmerc +lat_0=0 +lon_0=26 +k=1 +x_0=500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3134\":[\"EPSG:3134\",\"+proj=tmerc +lat_0=0 +lon_0=27 +k=1 +x_0=500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3135\":[\"EPSG:3135\",\"+proj=tmerc +lat_0=0 +lon_0=28 +k=1 +x_0=500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3136\":[\"EPSG:3136\",\"+proj=tmerc +lat_0=0 +lon_0=29 +k=1 +x_0=500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3137\":[\"EPSG:3137\",\"+proj=tmerc +lat_0=0 +lon_0=30 +k=1 +x_0=500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3138\":[\"EPSG:3138\",\"+proj=tmerc +lat_0=0 +lon_0=31 +k=1 +x_0=500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3140\":[\"EPSG:3140\",\"+proj=cass +lat_0=-18 +lon_0=178 +x_0=109435.392 +y_0=141622.272 +a=6378306.3696 +b=6356571.996 +towgs84=98,390,-22,0,0,0,0 +to_meter=0.201168 +no_defs \"],\"EPSG:3141\":[\"EPSG:3141\",\"+proj=utm +zone=60 +south +ellps=intl +towgs84=265.025,384.929,-194.046,0,0,0,0 +units=m +no_defs \"],\"EPSG:3142\":[\"EPSG:3142\",\"+proj=utm +zone=1 +south +ellps=intl +towgs84=265.025,384.929,-194.046,0,0,0,0 +units=m +no_defs \"],\"EPSG:3143\":[\"EPSG:3143\",\"+proj=tmerc +lat_0=-17 +lon_0=178.75 +k=0.99985 +x_0=2000000 +y_0=4000000 +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:3146\":[\"EPSG:3146\",\"+proj=tmerc +lat_0=0 +lon_0=18 +k=1 +x_0=6500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:3147\":[\"EPSG:3147\",\"+proj=tmerc +lat_0=0 +lon_0=18 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:3148\":[\"EPSG:3148\",\"+proj=utm +zone=48 +a=6377276.345 +b=6356075.41314024 +towgs84=198,881,317,0,0,0,0 +units=m +no_defs \"],\"EPSG:3149\":[\"EPSG:3149\",\"+proj=utm +zone=49 +a=6377276.345 +b=6356075.41314024 +towgs84=198,881,317,0,0,0,0 +units=m +no_defs \"],\"EPSG:3150\":[\"EPSG:3150\",\"+proj=tmerc +lat_0=0 +lon_0=18 +k=1 +x_0=6500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:3151\":[\"EPSG:3151\",\"+proj=tmerc +lat_0=0 +lon_0=18 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:3152\":[\"EPSG:3152\",\"+proj=tmerc +lat_0=0 +lon_0=18.05779 +k=0.99999425 +x_0=100178.1808 +y_0=-6500614.7836 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:4882\":[\"EPSG:4882\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:3154\":[\"EPSG:3154\",\"+proj=utm +zone=7 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3156\":[\"EPSG:3156\",\"+proj=utm +zone=9 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3161\":[\"EPSG:3161\",\"+proj=lcc +lat_1=44.5 +lat_2=53.5 +lat_0=0 +lon_0=-85 +x_0=930000 +y_0=6430000 +datum=NAD83 +units=m +no_defs \"],\"EPSG:3162\":[\"EPSG:3162\",\"+proj=lcc +lat_1=44.5 +lat_2=53.5 +lat_0=0 +lon_0=-85 +x_0=930000 +y_0=6430000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3172\":[\"EPSG:3172\",\"+proj=utm +zone=59 +south +ellps=intl +towgs84=287.58,177.78,-135.41,0,0,0,0 +units=m +no_defs \"],\"EPSG:3164\":[\"EPSG:3164\",\"+proj=utm +zone=58 +south +ellps=WGS84 +towgs84=-56.263,16.136,-22.856,0,0,0,0 +units=m +no_defs \"],\"EPSG:3165\":[\"EPSG:3165\",\"+proj=lcc +lat_1=-22.24469175 +lat_2=-22.29469175 +lat_0=-22.26969175 +lon_0=166.44242575 +x_0=0.66 +y_0=1.02 +ellps=intl +towgs84=-10.18,-350.43,291.37,0,0,0,0 +units=m +no_defs \"],\"EPSG:3166\":[\"EPSG:3166\",\"+proj=lcc +lat_1=-22.24472222222222 +lat_2=-22.29472222222222 +lat_0=-22.26972222222222 +lon_0=166.4425 +x_0=8.313000000000001 +y_0=-2.354 +ellps=intl +towgs84=-10.18,-350.43,291.37,0,0,0,0 +units=m +no_defs \"],\"EPSG:3167\":[\"EPSG:3167\",\"+proj=omerc +lat_0=4 +lonc=102.25 +alpha=323.0257905 +k=0.99984 +x_0=40000 +y_0=0 +no_uoff +gamma=323.1301023611111 +a=6377295.664 +b=6356094.667915204 +to_meter=20.116756 +no_defs \"],\"EPSG:3168\":[\"EPSG:3168\",\"+proj=omerc +lat_0=4 +lonc=102.25 +alpha=323.0257905 +k=0.99984 +x_0=804670.24 +y_0=0 +no_uoff +gamma=323.1301023611111 +a=6377295.664 +b=6356094.667915204 +units=m +no_defs \"],\"EPSG:3169\":[\"EPSG:3169\",\"+proj=utm +zone=57 +south +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3170\":[\"EPSG:3170\",\"+proj=utm +zone=58 +south +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3171\":[\"EPSG:3171\",\"+proj=utm +zone=59 +south +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3174\":[\"EPSG:3174\",\"+proj=aea +lat_1=42.122774 +lat_2=49.01518 +lat_0=45.568977 +lon_0=-84.455955 +x_0=1000000 +y_0=1000000 +datum=NAD83 +units=m +no_defs \"],\"EPSG:3175\":[\"EPSG:3175\",\"+proj=aea +lat_1=42.122774 +lat_2=49.01518 +lat_0=45.568977 +lon_0=-83.248627 +x_0=1000000 +y_0=1000000 +datum=NAD83 +units=m +no_defs \"],\"EPSG:3176\":[\"EPSG:3176\",\"+proj=tmerc +lat_0=0 +lon_0=106 +k=0.9996 +x_0=500000 +y_0=0 +a=6377276.345 +b=6356075.41314024 +towgs84=198,881,317,0,0,0,0 +units=m +no_defs \"],\"EPSG:3177\":[\"EPSG:3177\",\"+proj=tmerc +lat_0=0 +lon_0=17 +k=0.9965000000000001 +x_0=1000000 +y_0=0 +ellps=intl +towgs84=-208.4058,-109.8777,-2.5764,0,0,0,0 +units=m +no_defs \"],\"EPSG:3178\":[\"EPSG:3178\",\"+proj=utm +zone=18 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3179\":[\"EPSG:3179\",\"+proj=utm +zone=19 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3180\":[\"EPSG:3180\",\"+proj=utm +zone=20 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3181\":[\"EPSG:3181\",\"+proj=utm +zone=21 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3183\":[\"EPSG:3183\",\"+proj=utm +zone=23 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3184\":[\"EPSG:3184\",\"+proj=utm +zone=24 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3185\":[\"EPSG:3185\",\"+proj=utm +zone=25 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3186\":[\"EPSG:3186\",\"+proj=utm +zone=26 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3187\":[\"EPSG:3187\",\"+proj=utm +zone=27 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3188\":[\"EPSG:3188\",\"+proj=utm +zone=28 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3189\":[\"EPSG:3189\",\"+proj=utm +zone=29 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3190\":[\"EPSG:3190\",\"+proj=tmerc +lat_0=0 +lon_0=9 +k=0.99995 +x_0=200000 +y_0=0 +ellps=intl +towgs84=-208.4058,-109.8777,-2.5764,0,0,0,0 +units=m +no_defs \"],\"EPSG:3191\":[\"EPSG:3191\",\"+proj=tmerc +lat_0=0 +lon_0=11 +k=0.99995 +x_0=200000 +y_0=0 +ellps=intl +towgs84=-208.4058,-109.8777,-2.5764,0,0,0,0 +units=m +no_defs \"],\"EPSG:3192\":[\"EPSG:3192\",\"+proj=tmerc +lat_0=0 +lon_0=13 +k=0.99995 +x_0=200000 +y_0=0 +ellps=intl +towgs84=-208.4058,-109.8777,-2.5764,0,0,0,0 +units=m +no_defs \"],\"EPSG:3193\":[\"EPSG:3193\",\"+proj=tmerc +lat_0=0 +lon_0=15 +k=0.99995 +x_0=200000 +y_0=0 +ellps=intl +towgs84=-208.4058,-109.8777,-2.5764,0,0,0,0 +units=m +no_defs \"],\"EPSG:3194\":[\"EPSG:3194\",\"+proj=tmerc +lat_0=0 +lon_0=17 +k=0.99995 +x_0=200000 +y_0=0 +ellps=intl +towgs84=-208.4058,-109.8777,-2.5764,0,0,0,0 +units=m +no_defs \"],\"EPSG:3195\":[\"EPSG:3195\",\"+proj=tmerc +lat_0=0 +lon_0=19 +k=0.99995 +x_0=200000 +y_0=0 +ellps=intl +towgs84=-208.4058,-109.8777,-2.5764,0,0,0,0 +units=m +no_defs \"],\"EPSG:3196\":[\"EPSG:3196\",\"+proj=tmerc +lat_0=0 +lon_0=21 +k=0.99995 +x_0=200000 +y_0=0 +ellps=intl +towgs84=-208.4058,-109.8777,-2.5764,0,0,0,0 +units=m +no_defs \"],\"EPSG:3197\":[\"EPSG:3197\",\"+proj=tmerc +lat_0=0 +lon_0=23 +k=0.99995 +x_0=200000 +y_0=0 +ellps=intl +towgs84=-208.4058,-109.8777,-2.5764,0,0,0,0 +units=m +no_defs \"],\"EPSG:3198\":[\"EPSG:3198\",\"+proj=tmerc +lat_0=0 +lon_0=25 +k=0.99995 +x_0=200000 +y_0=0 +ellps=intl +towgs84=-208.4058,-109.8777,-2.5764,0,0,0,0 +units=m +no_defs \"],\"EPSG:3199\":[\"EPSG:3199\",\"+proj=utm +zone=32 +ellps=intl +towgs84=-208.4058,-109.8777,-2.5764,0,0,0,0 +units=m +no_defs \"],\"EPSG:3200\":[\"EPSG:3200\",\"+proj=lcc +lat_1=32.5 +lat_0=32.5 +lon_0=45 +k_0=0.9987864078000001 +x_0=1500000 +y_0=1166200 +ellps=clrk80 +towgs84=-241.54,-163.64,396.06,0,0,0,0 +units=m +no_defs \"],\"EPSG:3201\":[\"EPSG:3201\",\"+proj=utm +zone=33 +ellps=intl +towgs84=-208.4058,-109.8777,-2.5764,0,0,0,0 +units=m +no_defs \"],\"EPSG:3202\":[\"EPSG:3202\",\"+proj=utm +zone=34 +ellps=intl +towgs84=-208.4058,-109.8777,-2.5764,0,0,0,0 +units=m +no_defs \"],\"EPSG:4884\":[\"EPSG:4884\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:3203\":[\"EPSG:3203\",\"+proj=utm +zone=35 +ellps=intl +towgs84=-208.4058,-109.8777,-2.5764,0,0,0,0 +units=m +no_defs \"],\"EPSG:3204\":[\"EPSG:3204\",\"+proj=lcc +lat_1=-60.66666666666666 +lat_2=-63.33333333333334 +lat_0=-90 +lon_0=-66 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3205\":[\"EPSG:3205\",\"+proj=lcc +lat_1=-60.66666666666666 +lat_2=-63.33333333333334 +lat_0=-90 +lon_0=-54 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3206\":[\"EPSG:3206\",\"+proj=lcc +lat_1=-60.66666666666666 +lat_2=-63.33333333333334 +lat_0=-90 +lon_0=-42 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3207\":[\"EPSG:3207\",\"+proj=lcc +lat_1=-64.66666666666667 +lat_2=-67.33333333333333 +lat_0=-90 +lon_0=-174 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3208\":[\"EPSG:3208\",\"+proj=lcc +lat_1=-64.66666666666667 +lat_2=-67.33333333333333 +lat_0=-90 +lon_0=-66 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3209\":[\"EPSG:3209\",\"+proj=lcc +lat_1=-64.66666666666667 +lat_2=-67.33333333333333 +lat_0=-90 +lon_0=-54 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3210\":[\"EPSG:3210\",\"+proj=lcc +lat_1=-64.66666666666667 +lat_2=-67.33333333333333 +lat_0=-90 +lon_0=42 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3211\":[\"EPSG:3211\",\"+proj=lcc +lat_1=-64.66666666666667 +lat_2=-67.33333333333333 +lat_0=-90 +lon_0=54 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:4886\":[\"EPSG:4886\",\"+proj=geocent +ellps=WGS84 +units=m +no_defs \"],\"EPSG:3212\":[\"EPSG:3212\",\"+proj=lcc +lat_1=-64.66666666666667 +lat_2=-67.33333333333333 +lat_0=-90 +lon_0=66 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3213\":[\"EPSG:3213\",\"+proj=lcc +lat_1=-64.66666666666667 +lat_2=-67.33333333333333 +lat_0=-90 +lon_0=78 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3214\":[\"EPSG:3214\",\"+proj=lcc +lat_1=-64.66666666666667 +lat_2=-67.33333333333333 +lat_0=-90 +lon_0=90 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3215\":[\"EPSG:3215\",\"+proj=lcc +lat_1=-64.66666666666667 +lat_2=-67.33333333333333 +lat_0=-90 +lon_0=102 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3216\":[\"EPSG:3216\",\"+proj=lcc +lat_1=-64.66666666666667 +lat_2=-67.33333333333333 +lat_0=-90 +lon_0=114 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3217\":[\"EPSG:3217\",\"+proj=lcc +lat_1=-64.66666666666667 +lat_2=-67.33333333333333 +lat_0=-90 +lon_0=126 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3218\":[\"EPSG:3218\",\"+proj=lcc +lat_1=-64.66666666666667 +lat_2=-67.33333333333333 +lat_0=-90 +lon_0=138 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3219\":[\"EPSG:3219\",\"+proj=lcc +lat_1=-64.66666666666667 +lat_2=-67.33333333333333 +lat_0=-90 +lon_0=150 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3220\":[\"EPSG:3220\",\"+proj=lcc +lat_1=-64.66666666666667 +lat_2=-67.33333333333333 +lat_0=-90 +lon_0=162 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3221\":[\"EPSG:3221\",\"+proj=lcc +lat_1=-68.66666666666667 +lat_2=-71.33333333333333 +lat_0=-90 +lon_0=-102 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3222\":[\"EPSG:3222\",\"+proj=lcc +lat_1=-68.66666666666667 +lat_2=-71.33333333333333 +lat_0=-90 +lon_0=-90 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3223\":[\"EPSG:3223\",\"+proj=lcc +lat_1=-68.66666666666667 +lat_2=-71.33333333333333 +lat_0=-90 +lon_0=-78 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3224\":[\"EPSG:3224\",\"+proj=lcc +lat_1=-68.66666666666667 +lat_2=-71.33333333333333 +lat_0=-90 +lon_0=-66 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3225\":[\"EPSG:3225\",\"+proj=lcc +lat_1=-68.66666666666667 +lat_2=-71.33333333333333 +lat_0=-90 +lon_0=-18 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3226\":[\"EPSG:3226\",\"+proj=lcc +lat_1=-68.66666666666667 +lat_2=-71.33333333333333 +lat_0=-90 +lon_0=-6 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3227\":[\"EPSG:3227\",\"+proj=lcc +lat_1=-68.66666666666667 +lat_2=-71.33333333333333 +lat_0=-90 +lon_0=6 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3228\":[\"EPSG:3228\",\"+proj=lcc +lat_1=-68.66666666666667 +lat_2=-71.33333333333333 +lat_0=-90 +lon_0=18 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3229\":[\"EPSG:3229\",\"+proj=lcc +lat_1=-68.66666666666667 +lat_2=-71.33333333333333 +lat_0=-90 +lon_0=30 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3230\":[\"EPSG:3230\",\"+proj=lcc +lat_1=-68.66666666666667 +lat_2=-71.33333333333333 +lat_0=-90 +lon_0=42 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3231\":[\"EPSG:3231\",\"+proj=lcc +lat_1=-68.66666666666667 +lat_2=-71.33333333333333 +lat_0=-90 +lon_0=54 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3232\":[\"EPSG:3232\",\"+proj=lcc +lat_1=-68.66666666666667 +lat_2=-71.33333333333333 +lat_0=-90 +lon_0=66 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3233\":[\"EPSG:3233\",\"+proj=lcc +lat_1=-68.66666666666667 +lat_2=-71.33333333333333 +lat_0=-90 +lon_0=78 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3234\":[\"EPSG:3234\",\"+proj=lcc +lat_1=-68.66666666666667 +lat_2=-71.33333333333333 +lat_0=-90 +lon_0=90 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3235\":[\"EPSG:3235\",\"+proj=lcc +lat_1=-68.66666666666667 +lat_2=-71.33333333333333 +lat_0=-90 +lon_0=102 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3236\":[\"EPSG:3236\",\"+proj=lcc +lat_1=-68.66666666666667 +lat_2=-71.33333333333333 +lat_0=-90 +lon_0=114 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3237\":[\"EPSG:3237\",\"+proj=lcc +lat_1=-68.66666666666667 +lat_2=-71.33333333333333 +lat_0=-90 +lon_0=126 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3238\":[\"EPSG:3238\",\"+proj=lcc +lat_1=-68.66666666666667 +lat_2=-71.33333333333333 +lat_0=-90 +lon_0=138 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3239\":[\"EPSG:3239\",\"+proj=lcc +lat_1=-68.66666666666667 +lat_2=-71.33333333333333 +lat_0=-90 +lon_0=150 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3240\":[\"EPSG:3240\",\"+proj=lcc +lat_1=-68.66666666666667 +lat_2=-71.33333333333333 +lat_0=-90 +lon_0=162 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3241\":[\"EPSG:3241\",\"+proj=lcc +lat_1=-68.66666666666667 +lat_2=-71.33333333333333 +lat_0=-90 +lon_0=174 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3242\":[\"EPSG:3242\",\"+proj=lcc +lat_1=-72.66666666666667 +lat_2=-75.33333333333333 +lat_0=-90 +lon_0=-153 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3243\":[\"EPSG:3243\",\"+proj=lcc +lat_1=-72.66666666666667 +lat_2=-75.33333333333333 +lat_0=-90 +lon_0=-135 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3244\":[\"EPSG:3244\",\"+proj=lcc +lat_1=-72.66666666666667 +lat_2=-75.33333333333333 +lat_0=-90 +lon_0=-117 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3245\":[\"EPSG:3245\",\"+proj=lcc +lat_1=-72.66666666666667 +lat_2=-75.33333333333333 +lat_0=-90 +lon_0=-99 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3246\":[\"EPSG:3246\",\"+proj=lcc +lat_1=-72.66666666666667 +lat_2=-75.33333333333333 +lat_0=-90 +lon_0=-81 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3247\":[\"EPSG:3247\",\"+proj=lcc +lat_1=-72.66666666666667 +lat_2=-75.33333333333333 +lat_0=-90 +lon_0=-63 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3248\":[\"EPSG:3248\",\"+proj=lcc +lat_1=-72.66666666666667 +lat_2=-75.33333333333333 +lat_0=-90 +lon_0=-27 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3249\":[\"EPSG:3249\",\"+proj=lcc +lat_1=-72.66666666666667 +lat_2=-75.33333333333333 +lat_0=-90 +lon_0=-9 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3250\":[\"EPSG:3250\",\"+proj=lcc +lat_1=-72.66666666666667 +lat_2=-75.33333333333333 +lat_0=-90 +lon_0=9 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3251\":[\"EPSG:3251\",\"+proj=lcc +lat_1=-72.66666666666667 +lat_2=-75.33333333333333 +lat_0=-90 +lon_0=27 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3252\":[\"EPSG:3252\",\"+proj=lcc +lat_1=-72.66666666666667 +lat_2=-75.33333333333333 +lat_0=-90 +lon_0=45 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3253\":[\"EPSG:3253\",\"+proj=lcc +lat_1=-72.66666666666667 +lat_2=-75.33333333333333 +lat_0=-90 +lon_0=63 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3254\":[\"EPSG:3254\",\"+proj=lcc +lat_1=-72.66666666666667 +lat_2=-75.33333333333333 +lat_0=-90 +lon_0=81 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3255\":[\"EPSG:3255\",\"+proj=lcc +lat_1=-72.66666666666667 +lat_2=-75.33333333333333 +lat_0=-90 +lon_0=99 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3256\":[\"EPSG:3256\",\"+proj=lcc +lat_1=-72.66666666666667 +lat_2=-75.33333333333333 +lat_0=-90 +lon_0=117 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3257\":[\"EPSG:3257\",\"+proj=lcc +lat_1=-72.66666666666667 +lat_2=-75.33333333333333 +lat_0=-90 +lon_0=135 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3258\":[\"EPSG:3258\",\"+proj=lcc +lat_1=-72.66666666666667 +lat_2=-75.33333333333333 +lat_0=-90 +lon_0=153 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3259\":[\"EPSG:3259\",\"+proj=lcc +lat_1=-72.66666666666667 +lat_2=-75.33333333333333 +lat_0=-90 +lon_0=171 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3260\":[\"EPSG:3260\",\"+proj=lcc +lat_1=-76.66666666666667 +lat_2=-79.33333333333333 +lat_0=-90 +lon_0=-168 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3261\":[\"EPSG:3261\",\"+proj=lcc +lat_1=-76.66666666666667 +lat_2=-79.33333333333333 +lat_0=-90 +lon_0=-144 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3262\":[\"EPSG:3262\",\"+proj=lcc +lat_1=-76.66666666666667 +lat_2=-79.33333333333333 +lat_0=-90 +lon_0=-120 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3263\":[\"EPSG:3263\",\"+proj=lcc +lat_1=-76.66666666666667 +lat_2=-79.33333333333333 +lat_0=-90 +lon_0=-96 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3264\":[\"EPSG:3264\",\"+proj=lcc +lat_1=-76.66666666666667 +lat_2=-79.33333333333333 +lat_0=-90 +lon_0=-72 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3265\":[\"EPSG:3265\",\"+proj=lcc +lat_1=-76.66666666666667 +lat_2=-79.33333333333333 +lat_0=-90 +lon_0=-48 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3266\":[\"EPSG:3266\",\"+proj=lcc +lat_1=-76.66666666666667 +lat_2=-79.33333333333333 +lat_0=-90 +lon_0=-24 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3267\":[\"EPSG:3267\",\"+proj=lcc +lat_1=-76.66666666666667 +lat_2=-79.33333333333333 +lat_0=-90 +lon_0=0 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3268\":[\"EPSG:3268\",\"+proj=lcc +lat_1=-76.66666666666667 +lat_2=-79.33333333333333 +lat_0=-90 +lon_0=24 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3269\":[\"EPSG:3269\",\"+proj=lcc +lat_1=-76.66666666666667 +lat_2=-79.33333333333333 +lat_0=-90 +lon_0=48 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3270\":[\"EPSG:3270\",\"+proj=lcc +lat_1=-76.66666666666667 +lat_2=-79.33333333333333 +lat_0=-90 +lon_0=72 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3271\":[\"EPSG:3271\",\"+proj=lcc +lat_1=-76.66666666666667 +lat_2=-79.33333333333333 +lat_0=-90 +lon_0=96 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3272\":[\"EPSG:3272\",\"+proj=lcc +lat_1=-76.66666666666667 +lat_2=-79.33333333333333 +lat_0=-90 +lon_0=120 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3273\":[\"EPSG:3273\",\"+proj=lcc +lat_1=-76.66666666666667 +lat_2=-79.33333333333333 +lat_0=-90 +lon_0=144 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3274\":[\"EPSG:3274\",\"+proj=lcc +lat_1=-76.66666666666667 +lat_2=-79.33333333333333 +lat_0=-90 +lon_0=168 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3275\":[\"EPSG:3275\",\"+proj=stere +lat_0=-90 +lat_ts=-80.23861111111111 +lon_0=-165 +k=1 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3276\":[\"EPSG:3276\",\"+proj=stere +lat_0=-90 +lat_ts=-80.23861111111111 +lon_0=-135 +k=1 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3277\":[\"EPSG:3277\",\"+proj=stere +lat_0=-90 +lat_ts=-80.23861111111111 +lon_0=-105 +k=1 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3278\":[\"EPSG:3278\",\"+proj=stere +lat_0=-90 +lat_ts=-80.23861111111111 +lon_0=-75 +k=1 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3279\":[\"EPSG:3279\",\"+proj=stere +lat_0=-90 +lat_ts=-80.23861111111111 +lon_0=-45 +k=1 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3280\":[\"EPSG:3280\",\"+proj=stere +lat_0=-90 +lat_ts=-80.23861111111111 +lon_0=-15 +k=1 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3281\":[\"EPSG:3281\",\"+proj=stere +lat_0=-90 +lat_ts=-80.23861111111111 +lon_0=15 +k=1 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3282\":[\"EPSG:3282\",\"+proj=stere +lat_0=-90 +lat_ts=-80.23861111111111 +lon_0=45 +k=1 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3283\":[\"EPSG:3283\",\"+proj=stere +lat_0=-90 +lat_ts=-80.23861111111111 +lon_0=75 +k=1 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3284\":[\"EPSG:3284\",\"+proj=stere +lat_0=-90 +lat_ts=-80.23861111111111 +lon_0=105 +k=1 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3285\":[\"EPSG:3285\",\"+proj=stere +lat_0=-90 +lat_ts=-80.23861111111111 +lon_0=135 +k=1 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3286\":[\"EPSG:3286\",\"+proj=stere +lat_0=-90 +lat_ts=-80.23861111111111 +lon_0=165 +k=1 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3287\":[\"EPSG:3287\",\"+proj=stere +lat_0=-90 +lat_ts=-80.23861111111111 +lon_0=-150 +k=1 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3288\":[\"EPSG:3288\",\"+proj=stere +lat_0=-90 +lat_ts=-80.23861111111111 +lon_0=-90 +k=1 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3289\":[\"EPSG:3289\",\"+proj=stere +lat_0=-90 +lat_ts=-80.23861111111111 +lon_0=-30 +k=1 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3291\":[\"EPSG:3291\",\"+proj=stere +lat_0=-90 +lat_ts=-80.23861111111111 +lon_0=90 +k=1 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3292\":[\"EPSG:3292\",\"+proj=stere +lat_0=-90 +lat_ts=-80.23861111111111 +lon_0=150 +k=1 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3293\":[\"EPSG:3293\",\"+proj=stere +lat_0=-90 +lat_ts=-80.23861111111111 +lon_0=0 +k=1 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3294\":[\"EPSG:3294\",\"+proj=lcc +lat_1=-76.66666666666667 +lat_2=-79.33333333333333 +lat_0=-78 +lon_0=162 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3296\":[\"EPSG:3296\",\"+proj=utm +zone=5 +south +ellps=GRS80 +towgs84=0.072,-0.507,-0.245,-0.0183,0.0003,-0.007,-0.0093 +units=m +no_defs \"],\"EPSG:3297\":[\"EPSG:3297\",\"+proj=utm +zone=6 +south +ellps=GRS80 +towgs84=0.072,-0.507,-0.245,-0.0183,0.0003,-0.007,-0.0093 +units=m +no_defs \"],\"EPSG:3298\":[\"EPSG:3298\",\"+proj=utm +zone=7 +south +ellps=GRS80 +towgs84=0.072,-0.507,-0.245,-0.0183,0.0003,-0.007,-0.0093 +units=m +no_defs \"],\"EPSG:3299\":[\"EPSG:3299\",\"+proj=utm +zone=8 +south +ellps=GRS80 +towgs84=0.072,-0.507,-0.245,-0.0183,0.0003,-0.007,-0.0093 +units=m +no_defs \"],\"EPSG:3302\":[\"EPSG:3302\",\"+proj=utm +zone=7 +south +ellps=intl +towgs84=410.721,55.049,80.746,2.5779,2.3514,0.6664,17.3311 +units=m +no_defs \"],\"EPSG:3303\":[\"EPSG:3303\",\"+proj=utm +zone=7 +south +ellps=intl +towgs84=347.103,1078.125,2623.922,-33.8875,70.6773,-9.3943,186.074 +units=m +no_defs \"],\"EPSG:3304\":[\"EPSG:3304\",\"+proj=utm +zone=6 +south +ellps=intl +towgs84=221.525,152.948,176.768,-2.3847,-1.3896,-0.877,11.4741 +units=m +no_defs \"],\"EPSG:3305\":[\"EPSG:3305\",\"+proj=utm +zone=6 +south +ellps=intl +towgs84=215.525,149.593,176.229,-3.2624,-1.692,-1.1571,10.4773 +units=m +no_defs \"],\"EPSG:3306\":[\"EPSG:3306\",\"+proj=utm +zone=5 +south +ellps=intl +towgs84=217.037,86.959,23.956,0,0,0,0 +units=m +no_defs \"],\"EPSG:3307\":[\"EPSG:3307\",\"+proj=utm +zone=39 +ellps=WGS84 +towgs84=0,-0.15,0.68,0,0,0,0 +units=m +no_defs \"],\"EPSG:3308\":[\"EPSG:3308\",\"+proj=lcc +lat_1=-30.75 +lat_2=-35.75 +lat_0=-33.25 +lon_0=147 +x_0=9300000 +y_0=4500000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3309\":[\"EPSG:3309\",\"+proj=aea +lat_1=34 +lat_2=40.5 +lat_0=0 +lon_0=-120 +x_0=0 +y_0=-4000000 +datum=NAD27 +units=m +no_defs \"],\"EPSG:3311\":[\"EPSG:3311\",\"+proj=aea +lat_1=34 +lat_2=40.5 +lat_0=0 +lon_0=-120 +x_0=0 +y_0=-4000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3312\":[\"EPSG:3312\",\"+proj=utm +zone=21 +ellps=intl +towgs84=-186,230,110,0,0,0,0 +units=m +no_defs \"],\"EPSG:3313\":[\"EPSG:3313\",\"+proj=utm +zone=21 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:4571\":[\"EPSG:4571\",\"+proj=tmerc +lat_0=0 +lon_0=93 +k=1 +x_0=16500000 +y_0=0 +ellps=krass +units=m +no_defs \"],\"EPSG:3314\":[\"EPSG:3314\",\"+proj=lcc +lat_1=-6.5 +lat_2=-11.5 +lat_0=0 +lon_0=26 +x_0=0 +y_0=0 +ellps=clrk66 +towgs84=-103.746,-9.614,-255.95,0,0,0,0 +units=m +no_defs \"],\"EPSG:3315\":[\"EPSG:3315\",\"+proj=tmerc +lat_0=-9 +lon_0=26 +k=0.9998 +x_0=0 +y_0=0 +ellps=clrk66 +towgs84=-103.746,-9.614,-255.95,0,0,0,0 +units=m +no_defs \"],\"EPSG:3316\":[\"EPSG:3316\",\"+proj=tmerc +lat_0=0 +lon_0=22 +k=0.9999 +x_0=500000 +y_0=10000000 +ellps=clrk80 +units=m +no_defs \"],\"EPSG:3317\":[\"EPSG:3317\",\"+proj=tmerc +lat_0=0 +lon_0=24 +k=0.9999 +x_0=500000 +y_0=10000000 +ellps=clrk80 +units=m +no_defs \"],\"EPSG:3318\":[\"EPSG:3318\",\"+proj=tmerc +lat_0=0 +lon_0=12 +k=0.9999 +x_0=500000 +y_0=10000000 +ellps=clrk80 +units=m +no_defs \"],\"EPSG:3319\":[\"EPSG:3319\",\"+proj=tmerc +lat_0=0 +lon_0=14 +k=0.9999 +x_0=500000 +y_0=10000000 +ellps=clrk80 +units=m +no_defs \"],\"EPSG:3320\":[\"EPSG:3320\",\"+proj=tmerc +lat_0=0 +lon_0=16 +k=0.9999 +x_0=500000 +y_0=10000000 +ellps=clrk80 +units=m +no_defs \"],\"EPSG:3321\":[\"EPSG:3321\",\"+proj=tmerc +lat_0=0 +lon_0=18 +k=0.9999 +x_0=500000 +y_0=10000000 +ellps=clrk80 +units=m +no_defs \"],\"EPSG:3322\":[\"EPSG:3322\",\"+proj=tmerc +lat_0=0 +lon_0=20 +k=0.9999 +x_0=500000 +y_0=10000000 +ellps=clrk80 +units=m +no_defs \"],\"EPSG:4572\":[\"EPSG:4572\",\"+proj=tmerc +lat_0=0 +lon_0=99 +k=1 +x_0=17500000 +y_0=0 +ellps=krass +units=m +no_defs \"],\"EPSG:3323\":[\"EPSG:3323\",\"+proj=tmerc +lat_0=0 +lon_0=22 +k=0.9999 +x_0=500000 +y_0=10000000 +ellps=clrk80 +units=m +no_defs \"],\"EPSG:3324\":[\"EPSG:3324\",\"+proj=tmerc +lat_0=0 +lon_0=24 +k=0.9999 +x_0=500000 +y_0=10000000 +ellps=clrk80 +units=m +no_defs \"],\"EPSG:3325\":[\"EPSG:3325\",\"+proj=tmerc +lat_0=0 +lon_0=26 +k=0.9999 +x_0=500000 +y_0=10000000 +ellps=clrk80 +units=m +no_defs \"],\"EPSG:3326\":[\"EPSG:3326\",\"+proj=tmerc +lat_0=0 +lon_0=28 +k=0.9999 +x_0=500000 +y_0=10000000 +ellps=clrk80 +units=m +no_defs \"],\"EPSG:3327\":[\"EPSG:3327\",\"+proj=tmerc +lat_0=0 +lon_0=30 +k=0.9999 +x_0=500000 +y_0=10000000 +ellps=clrk80 +units=m +no_defs \"],\"EPSG:3328\":[\"EPSG:3328\",\"+proj=sterea +lat_0=52.16666666666666 +lon_0=19.16666666666667 +k=0.999714 +x_0=500000 +y_0=500000 +ellps=krass +towgs84=2.3287,-147.0425,-92.0802,-0.3092483,0.32482185,0.49729934,5.68906266 +units=m +no_defs \"],\"EPSG:3329\":[\"EPSG:3329\",\"+proj=tmerc +lat_0=0 +lon_0=15 +k=1 +x_0=5500000 +y_0=0 +ellps=krass +towgs84=2.3287,-147.0425,-92.0802,-0.3092483,0.32482185,0.49729934,5.68906266 +units=m +no_defs \"],\"EPSG:3330\":[\"EPSG:3330\",\"+proj=tmerc +lat_0=0 +lon_0=18 +k=1 +x_0=6500000 +y_0=0 +ellps=krass +towgs84=2.3287,-147.0425,-92.0802,-0.3092483,0.32482185,0.49729934,5.68906266 +units=m +no_defs \"],\"EPSG:3332\":[\"EPSG:3332\",\"+proj=tmerc +lat_0=0 +lon_0=24 +k=1 +x_0=8500000 +y_0=0 +ellps=krass +towgs84=2.3287,-147.0425,-92.0802,-0.3092483,0.32482185,0.49729934,5.68906266 +units=m +no_defs \"],\"EPSG:3333\":[\"EPSG:3333\",\"+proj=tmerc +lat_0=0 +lon_0=15 +k=1 +x_0=3500000 +y_0=0 +ellps=krass +towgs84=2.3287,-147.0425,-92.0802,-0.3092483,0.32482185,0.49729934,5.68906266 +units=m +no_defs \"],\"EPSG:3334\":[\"EPSG:3334\",\"+proj=tmerc +lat_0=0 +lon_0=21 +k=1 +x_0=4500000 +y_0=0 +ellps=krass +towgs84=2.3287,-147.0425,-92.0802,-0.3092483,0.32482185,0.49729934,5.68906266 +units=m +no_defs \"],\"EPSG:3335\":[\"EPSG:3335\",\"+proj=tmerc +lat_0=0 +lon_0=27 +k=1 +x_0=5500000 +y_0=0 +ellps=krass +towgs84=2.3287,-147.0425,-92.0802,-0.3092483,0.32482185,0.49729934,5.68906266 +units=m +no_defs \"],\"EPSG:3336\":[\"EPSG:3336\",\"+proj=utm +zone=42 +south +ellps=intl +towgs84=145,-187,103,0,0,0,0 +units=m +no_defs \"],\"EPSG:3337\":[\"EPSG:3337\",\"+proj=lcc +lat_1=-20.19506944444445 +lat_0=-20.19506944444445 +lon_0=57.52182777777778 +k_0=1 +x_0=1000000 +y_0=1000000 +ellps=clrk80 +towgs84=-770.1,158.4,-498.2,0,0,0,0 +units=m +no_defs \"],\"EPSG:3339\":[\"EPSG:3339\",\"+proj=tmerc +lat_0=0 +lon_0=12 +k=0.9999 +x_0=500000 +y_0=10000000 +ellps=clrk80 +towgs84=-79.9,-158,-168.9,0,0,0,0 +units=m +no_defs \"],\"EPSG:3340\":[\"EPSG:3340\",\"+proj=tmerc +lat_0=0 +lon_0=14 +k=0.9999 +x_0=500000 +y_0=10000000 +ellps=clrk80 +towgs84=-79.9,-158,-168.9,0,0,0,0 +units=m +no_defs \"],\"EPSG:3341\":[\"EPSG:3341\",\"+proj=tmerc +lat_0=0 +lon_0=16 +k=0.9999 +x_0=500000 +y_0=10000000 +ellps=clrk80 +towgs84=-79.9,-158,-168.9,0,0,0,0 +units=m +no_defs \"],\"EPSG:3342\":[\"EPSG:3342\",\"+proj=utm +zone=33 +south +ellps=clrk80 +towgs84=-79.9,-158,-168.9,0,0,0,0 +units=m +no_defs \"],\"EPSG:3343\":[\"EPSG:3343\",\"+proj=utm +zone=28 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3344\":[\"EPSG:3344\",\"+proj=utm +zone=29 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3345\":[\"EPSG:3345\",\"+proj=utm +zone=30 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3348\":[\"EPSG:3348\",\"+proj=lcc +lat_1=49 +lat_2=77 +lat_0=63.390675 +lon_0=-91.86666666666666 +x_0=6200000 +y_0=3000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3350\":[\"EPSG:3350\",\"+proj=tmerc +lat_0=0.1 +lon_0=21.95 +k=1 +x_0=250000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:3351\":[\"EPSG:3351\",\"+proj=tmerc +lat_0=0.1 +lon_0=24.95 +k=1 +x_0=1250000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:3352\":[\"EPSG:3352\",\"+proj=tmerc +lat_0=0.1 +lon_0=27.95 +k=1 +x_0=2250000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:3353\":[\"EPSG:3353\",\"+proj=utm +zone=32 +south +ellps=intl +units=m +no_defs \"],\"EPSG:3354\":[\"EPSG:3354\",\"+proj=utm +zone=32 +south +ellps=intl +units=m +no_defs \"],\"EPSG:3355\":[\"EPSG:3355\",\"+proj=tmerc +lat_0=30 +lon_0=31 +k=1 +x_0=615000 +y_0=810000 +ellps=helmert +towgs84=-146.21,112.63,4.05,0,0,0,0 +units=m +no_defs \"],\"EPSG:3356\":[\"EPSG:3356\",\"+proj=utm +zone=17 +ellps=clrk66 +towgs84=-179.483,-69.379,-27.584,-7.862,8.163,6.042,-13.925 +units=m +no_defs \"],\"EPSG:3357\":[\"EPSG:3357\",\"+proj=utm +zone=17 +ellps=clrk66 +towgs84=8.853,-52.644,180.304,-0.393,-2.323,2.96,-24.081 +units=m +no_defs \"],\"EPSG:3358\":[\"EPSG:3358\",\"+proj=lcc +lat_1=36.16666666666666 +lat_2=34.33333333333334 +lat_0=33.75 +lon_0=-79 +x_0=609601.22 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3359\":[\"EPSG:3359\",\"+proj=lcc +lat_1=36.16666666666666 +lat_2=34.33333333333334 +lat_0=33.75 +lon_0=-79 +x_0=609601.2192024385 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=ft +no_defs \"],\"EPSG:4888\":[\"EPSG:4888\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:3360\":[\"EPSG:3360\",\"+proj=lcc +lat_1=34.83333333333334 +lat_2=32.5 +lat_0=31.83333333333333 +lon_0=-81 +x_0=609600 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3361\":[\"EPSG:3361\",\"+proj=lcc +lat_1=34.83333333333334 +lat_2=32.5 +lat_0=31.83333333333333 +lon_0=-81 +x_0=609600 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=ft +no_defs \"],\"EPSG:3362\":[\"EPSG:3362\",\"+proj=lcc +lat_1=41.95 +lat_2=40.88333333333333 +lat_0=40.16666666666666 +lon_0=-77.75 +x_0=600000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3363\":[\"EPSG:3363\",\"+proj=lcc +lat_1=41.95 +lat_2=40.88333333333333 +lat_0=40.16666666666666 +lon_0=-77.75 +x_0=600000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3364\":[\"EPSG:3364\",\"+proj=lcc +lat_1=40.96666666666667 +lat_2=39.93333333333333 +lat_0=39.33333333333334 +lon_0=-77.75 +x_0=600000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3365\":[\"EPSG:3365\",\"+proj=lcc +lat_1=40.96666666666667 +lat_2=39.93333333333333 +lat_0=39.33333333333334 +lon_0=-77.75 +x_0=600000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3366\":[\"EPSG:3366\",\"+proj=cass +lat_0=22.31213333333334 +lon_0=114.1785555555556 +x_0=40243.57775604237 +y_0=19069.93351512578 +a=6378293.645208759 +b=6356617.987679838 +units=m +no_defs \"],\"EPSG:3367\":[\"EPSG:3367\",\"+proj=utm +zone=28 +ellps=clrk80 +units=m +no_defs \"],\"EPSG:3368\":[\"EPSG:3368\",\"+proj=utm +zone=29 +ellps=clrk80 +units=m +no_defs \"],\"EPSG:3370\":[\"EPSG:3370\",\"+proj=utm +zone=59 +datum=NAD27 +units=m +no_defs \"],\"EPSG:3371\":[\"EPSG:3371\",\"+proj=utm +zone=60 +datum=NAD27 +units=m +no_defs \"],\"EPSG:3372\":[\"EPSG:3372\",\"+proj=utm +zone=59 +datum=NAD83 +units=m +no_defs \"],\"EPSG:3373\":[\"EPSG:3373\",\"+proj=utm +zone=60 +datum=NAD83 +units=m +no_defs \"],\"EPSG:3374\":[\"EPSG:3374\",\"+proj=utm +zone=29 +ellps=intl +units=m +no_defs \"],\"EPSG:3376\":[\"EPSG:3376\",\"+proj=omerc +lat_0=4 +lonc=115 +alpha=53.31580995 +k=0.99984 +x_0=0 +y_0=0 +no_uoff +gamma=53.13010236111111 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:3377\":[\"EPSG:3377\",\"+proj=cass +lat_0=2.121679744444445 +lon_0=103.4279362361111 +x_0=-14810.562 +y_0=8758.32 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:3378\":[\"EPSG:3378\",\"+proj=cass +lat_0=2.682347636111111 +lon_0=101.9749050416667 +x_0=3673.785 +y_0=-4240.573 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:3379\":[\"EPSG:3379\",\"+proj=cass +lat_0=3.769388088888889 +lon_0=102.3682989833333 +x_0=-7368.228 +y_0=6485.858 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:3380\":[\"EPSG:3380\",\"+proj=cass +lat_0=3.68464905 +lon_0=101.3891079138889 +x_0=-34836.161 +y_0=56464.049 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:3381\":[\"EPSG:3381\",\"+proj=cass +lat_0=4.9762852 +lon_0=103.070275625 +x_0=19594.245 +y_0=3371.895 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:3382\":[\"EPSG:3382\",\"+proj=cass +lat_0=5.421517541666667 +lon_0=100.3443769638889 +x_0=-23.414 +y_0=62.283 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:3383\":[\"EPSG:3383\",\"+proj=cass +lat_0=5.964672713888889 +lon_0=100.6363711111111 +x_0=0 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:3384\":[\"EPSG:3384\",\"+proj=cass +lat_0=4.859063022222222 +lon_0=100.8154105861111 +x_0=-1.769 +y_0=133454.779 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:3385\":[\"EPSG:3385\",\"+proj=cass +lat_0=5.972543658333334 +lon_0=102.2952416694444 +x_0=13227.851 +y_0=8739.894 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:3386\":[\"EPSG:3386\",\"+proj=tmerc +lat_0=0 +lon_0=18 +k=1 +x_0=500000 +y_0=0 +ellps=intl +towgs84=-96.062,-82.428,-121.753,4.801,0.345,-1.376,1.496 +units=m +no_defs \"],\"EPSG:3387\":[\"EPSG:3387\",\"+proj=tmerc +lat_0=0 +lon_0=33 +k=1 +x_0=5500000 +y_0=0 +ellps=intl +towgs84=-96.062,-82.428,-121.753,4.801,0.345,-1.376,1.496 +units=m +no_defs \"],\"EPSG:3388\":[\"EPSG:3388\",\"+proj=merc +lon_0=51 +lat_ts=42 +x_0=0 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:3389\":[\"EPSG:3389\",\"+proj=tmerc +lat_0=0 +lon_0=180 +k=1 +x_0=60500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:3390\":[\"EPSG:3390\",\"+proj=tmerc +lat_0=0 +lon_0=180 +k=1 +x_0=60500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:3391\":[\"EPSG:3391\",\"+proj=utm +zone=37 +ellps=clrk80 +towgs84=70.995,-335.916,262.898,0,0,0,0 +units=m +no_defs \"],\"EPSG:3392\":[\"EPSG:3392\",\"+proj=utm +zone=38 +ellps=clrk80 +towgs84=70.995,-335.916,262.898,0,0,0,0 +units=m +no_defs \"],\"EPSG:3393\":[\"EPSG:3393\",\"+proj=utm +zone=39 +ellps=clrk80 +towgs84=70.995,-335.916,262.898,0,0,0,0 +units=m +no_defs \"],\"EPSG:3394\":[\"EPSG:3394\",\"+proj=lcc +lat_1=32.5 +lat_0=32.5 +lon_0=45 +k_0=0.9987864078000001 +x_0=1500000 +y_0=1166200 +ellps=clrk80 +towgs84=-242.2,-144.9,370.3,0,0,0,0 +units=m +no_defs \"],\"EPSG:3396\":[\"EPSG:3396\",\"+proj=tmerc +lat_0=0 +lon_0=9 +k=1 +x_0=3500000 +y_0=0 +ellps=bessel +units=m +no_defs \"],\"EPSG:3398\":[\"EPSG:3398\",\"+proj=tmerc +lat_0=0 +lon_0=12 +k=1 +x_0=4500000 +y_0=0 +ellps=bessel +units=m +no_defs \"],\"EPSG:3399\":[\"EPSG:3399\",\"+proj=tmerc +lat_0=0 +lon_0=15 +k=1 +x_0=5500000 +y_0=0 +ellps=bessel +units=m +no_defs \"],\"EPSG:4890\":[\"EPSG:4890\",\"+proj=geocent +ellps=WGS66 +units=m +no_defs \"],\"EPSG:3400\":[\"EPSG:3400\",\"+proj=tmerc +lat_0=0 +lon_0=-115 +k=0.9992 +x_0=500000 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:3401\":[\"EPSG:3401\",\"+proj=tmerc +lat_0=0 +lon_0=-115 +k=0.9992 +x_0=0 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:3402\":[\"EPSG:3402\",\"+proj=tmerc +lat_0=0 +lon_0=-115 +k=0.9992 +x_0=500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3404\":[\"EPSG:3404\",\"+proj=lcc +lat_1=36.16666666666666 +lat_2=34.33333333333334 +lat_0=33.75 +lon_0=-79 +x_0=609601.2192024384 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3405\":[\"EPSG:3405\",\"+proj=utm +zone=48 +ellps=WGS84 +towgs84=-191.90441429,-39.30318279,-111.45032835,0.00928836,-0.01975479,0.00427372,0.252906278 +units=m +no_defs \"],\"EPSG:3406\":[\"EPSG:3406\",\"+proj=utm +zone=49 +ellps=WGS84 +towgs84=-191.90441429,-39.30318279,-111.45032835,0.00928836,-0.01975479,0.00427372,0.252906278 +units=m +no_defs \"],\"EPSG:3407\":[\"EPSG:3407\",\"+proj=cass +lat_0=22.31213333333334 +lon_0=114.1785555555556 +x_0=40243.57775604237 +y_0=19069.93351512578 +a=6378293.645208759 +b=6356617.987679838 +to_meter=0.3047972654 +no_defs \"],\"EPSG:3408\":[\"EPSG:3408\",\"+proj=laea +lat_0=90 +lon_0=0 +x_0=0 +y_0=0 +a=6371228 +b=6371228 +units=m +no_defs \"],\"EPSG:3409\":[\"EPSG:3409\",\"+proj=laea +lat_0=-90 +lon_0=0 +x_0=0 +y_0=0 +a=6371228 +b=6371228 +units=m +no_defs \"],\"EPSG:3410\":[\"EPSG:3410\",\"+proj=cea +lon_0=0 +lat_ts=30 +x_0=0 +y_0=0 +a=6371228 +b=6371228 +units=m +no_defs \"],\"EPSG:3411\":[\"EPSG:3411\",\"+proj=stere +lat_0=90 +lat_ts=70 +lon_0=-45 +k=1 +x_0=0 +y_0=0 +a=6378273 +b=6356889.449 +units=m +no_defs \"],\"EPSG:3412\":[\"EPSG:3412\",\"+proj=stere +lat_0=-90 +lat_ts=-70 +lon_0=0 +k=1 +x_0=0 +y_0=0 +a=6378273 +b=6356889.449 +units=m +no_defs \"],\"EPSG:3414\":[\"EPSG:3414\",\"+proj=tmerc +lat_0=1.366666666666667 +lon_0=103.8333333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +units=m +no_defs \"],\"EPSG:3415\":[\"EPSG:3415\",\"+proj=lcc +lat_1=18 +lat_2=24 +lat_0=21 +lon_0=114 +x_0=500000 +y_0=500000 +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:3416\":[\"EPSG:3416\",\"+proj=lcc +lat_1=49 +lat_2=46 +lat_0=47.5 +lon_0=13.33333333333333 +x_0=400000 +y_0=400000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3417\":[\"EPSG:3417\",\"+proj=lcc +lat_1=43.26666666666667 +lat_2=42.06666666666667 +lat_0=41.5 +lon_0=-93.5 +x_0=1500000 +y_0=999999.9999898402 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:4892\":[\"EPSG:4892\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:3418\":[\"EPSG:3418\",\"+proj=lcc +lat_1=41.78333333333333 +lat_2=40.61666666666667 +lat_0=40 +lon_0=-93.5 +x_0=500000.00001016 +y_0=0 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:3419\":[\"EPSG:3419\",\"+proj=lcc +lat_1=39.78333333333333 +lat_2=38.71666666666667 +lat_0=38.33333333333334 +lon_0=-98 +x_0=399999.99998984 +y_0=0 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:3420\":[\"EPSG:3420\",\"+proj=lcc +lat_1=38.56666666666667 +lat_2=37.26666666666667 +lat_0=36.66666666666666 +lon_0=-98.5 +x_0=399999.99998984 +y_0=399999.99998984 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:3421\":[\"EPSG:3421\",\"+proj=tmerc +lat_0=34.75 +lon_0=-115.5833333333333 +k=0.9999 +x_0=200000.00001016 +y_0=8000000.000010163 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:3422\":[\"EPSG:3422\",\"+proj=tmerc +lat_0=34.75 +lon_0=-116.6666666666667 +k=0.9999 +x_0=500000.00001016 +y_0=6000000 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:3424\":[\"EPSG:3424\",\"+proj=tmerc +lat_0=38.83333333333334 +lon_0=-74.5 +k=0.9999 +x_0=150000 +y_0=0 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:3425\":[\"EPSG:3425\",\"+proj=lcc +lat_1=43.26666666666667 +lat_2=42.06666666666667 +lat_0=41.5 +lon_0=-93.5 +x_0=1500000 +y_0=999999.9999898402 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:4584\":[\"EPSG:4584\",\"+proj=tmerc +lat_0=0 +lon_0=105 +k=1 +x_0=500000 +y_0=0 +ellps=krass +units=m +no_defs \"],\"EPSG:3426\":[\"EPSG:3426\",\"+proj=lcc +lat_1=41.78333333333333 +lat_2=40.61666666666667 +lat_0=40 +lon_0=-93.5 +x_0=500000.00001016 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3427\":[\"EPSG:3427\",\"+proj=lcc +lat_1=39.78333333333333 +lat_2=38.71666666666667 +lat_0=38.33333333333334 +lon_0=-98 +x_0=399999.99998984 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3428\":[\"EPSG:3428\",\"+proj=lcc +lat_1=38.56666666666667 +lat_2=37.26666666666667 +lat_0=36.66666666666666 +lon_0=-98.5 +x_0=399999.99998984 +y_0=399999.99998984 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3429\":[\"EPSG:3429\",\"+proj=tmerc +lat_0=34.75 +lon_0=-115.5833333333333 +k=0.9999 +x_0=200000.00001016 +y_0=8000000.000010163 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3430\":[\"EPSG:3430\",\"+proj=tmerc +lat_0=34.75 +lon_0=-116.6666666666667 +k=0.9999 +x_0=500000.00001016 +y_0=6000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3431\":[\"EPSG:3431\",\"+proj=tmerc +lat_0=34.75 +lon_0=-118.5833333333333 +k=0.9999 +x_0=800000.0000101599 +y_0=3999999.99998984 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3433\":[\"EPSG:3433\",\"+proj=lcc +lat_1=36.23333333333333 +lat_2=34.93333333333333 +lat_0=34.33333333333334 +lon_0=-92 +x_0=399999.99998984 +y_0=0 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:4894\":[\"EPSG:4894\",\"+proj=geocent +ellps=WGS84 +units=m +no_defs \"],\"EPSG:3434\":[\"EPSG:3434\",\"+proj=lcc +lat_1=34.76666666666667 +lat_2=33.3 +lat_0=32.66666666666666 +lon_0=-92 +x_0=399999.99998984 +y_0=399999.99998984 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:3435\":[\"EPSG:3435\",\"+proj=tmerc +lat_0=36.66666666666666 +lon_0=-88.33333333333333 +k=0.9999749999999999 +x_0=300000.0000000001 +y_0=0 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:3436\":[\"EPSG:3436\",\"+proj=tmerc +lat_0=36.66666666666666 +lon_0=-90.16666666666667 +k=0.999941177 +x_0=699999.9999898402 +y_0=0 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:3438\":[\"EPSG:3438\",\"+proj=tmerc +lat_0=41.08333333333334 +lon_0=-71.5 +k=0.99999375 +x_0=99999.99998983997 +y_0=0 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:3439\":[\"EPSG:3439\",\"+proj=utm +zone=39 +ellps=clrk80 +towgs84=-180.624,-225.516,173.919,-0.81,-1.898,8.336,16.71006 +units=m +no_defs \"],\"EPSG:3440\":[\"EPSG:3440\",\"+proj=utm +zone=40 +ellps=clrk80 +towgs84=-180.624,-225.516,173.919,-0.81,-1.898,8.336,16.71006 +units=m +no_defs \"],\"EPSG:3441\":[\"EPSG:3441\",\"+proj=lcc +lat_1=36.23333333333333 +lat_2=34.93333333333333 +lat_0=34.33333333333334 +lon_0=-92 +x_0=399999.99998984 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3442\":[\"EPSG:3442\",\"+proj=lcc +lat_1=34.76666666666667 +lat_2=33.3 +lat_0=32.66666666666666 +lon_0=-92 +x_0=399999.99998984 +y_0=399999.99998984 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3443\":[\"EPSG:3443\",\"+proj=tmerc +lat_0=36.66666666666666 +lon_0=-88.33333333333333 +k=0.9999749999999999 +x_0=300000.0000000001 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3444\":[\"EPSG:3444\",\"+proj=tmerc +lat_0=36.66666666666666 +lon_0=-90.16666666666667 +k=0.999941177 +x_0=699999.9999898402 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3445\":[\"EPSG:3445\",\"+proj=tmerc +lat_0=42.5 +lon_0=-71.66666666666667 +k=0.999966667 +x_0=300000.0000000001 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3446\":[\"EPSG:3446\",\"+proj=tmerc +lat_0=41.08333333333334 +lon_0=-71.5 +k=0.99999375 +x_0=99999.99998983997 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3448\":[\"EPSG:3448\",\"+proj=lcc +lat_1=18 +lat_0=18 +lon_0=-77 +k_0=1 +x_0=750000 +y_0=650000 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3450\":[\"EPSG:3450\",\"+proj=utm +zone=18 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3451\":[\"EPSG:3451\",\"+proj=lcc +lat_1=32.66666666666666 +lat_2=31.16666666666667 +lat_0=30.5 +lon_0=-92.5 +x_0=999999.9999898402 +y_0=0 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:3454\":[\"EPSG:3454\",\"+proj=lcc +lat_1=44.4 +lat_2=42.83333333333334 +lat_0=42.33333333333334 +lon_0=-100.3333333333333 +x_0=600000 +y_0=0 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:3455\":[\"EPSG:3455\",\"+proj=lcc +lat_1=44.4 +lat_2=42.83333333333334 +lat_0=42.33333333333334 +lon_0=-100.3333333333333 +x_0=600000 +y_0=0 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:3456\":[\"EPSG:3456\",\"+proj=lcc +lat_1=32.66666666666666 +lat_2=31.16666666666667 +lat_0=30.5 +lon_0=-92.5 +x_0=999999.9999898402 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3458\":[\"EPSG:3458\",\"+proj=lcc +lat_1=45.68333333333333 +lat_2=44.41666666666666 +lat_0=43.83333333333334 +lon_0=-100 +x_0=600000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3459\":[\"EPSG:3459\",\"+proj=lcc +lat_1=44.4 +lat_2=42.83333333333334 +lat_0=42.33333333333334 +lon_0=-100.3333333333333 +x_0=600000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3460\":[\"EPSG:3460\",\"+proj=tmerc +lat_0=-17 +lon_0=178.75 +k=0.99985 +x_0=2000000 +y_0=4000000 +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:3461\":[\"EPSG:3461\",\"+proj=utm +zone=28 +a=6378249.2 +b=6356515 +towgs84=-83,37,124,0,0,0,0 +units=m +no_defs \"],\"EPSG:3462\":[\"EPSG:3462\",\"+proj=utm +zone=29 +a=6378249.2 +b=6356515 +towgs84=-83,37,124,0,0,0,0 +units=m +no_defs \"],\"EPSG:3463\":[\"EPSG:3463\",\"+proj=tmerc +lat_0=43.5 +lon_0=-69.125 +k=0.99998 +x_0=500000 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:3464\":[\"EPSG:3464\",\"+proj=tmerc +lat_0=43.5 +lon_0=-69.125 +k=0.99998 +x_0=500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3465\":[\"EPSG:3465\",\"+proj=tmerc +lat_0=30.5 +lon_0=-85.83333333333333 +k=0.99996 +x_0=200000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3466\":[\"EPSG:3466\",\"+proj=tmerc +lat_0=30 +lon_0=-87.5 +k=0.999933333 +x_0=600000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3467\":[\"EPSG:3467\",\"+proj=aea +lat_1=55 +lat_2=65 +lat_0=50 +lon_0=-154 +x_0=0 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3468\":[\"EPSG:3468\",\"+proj=omerc +lat_0=57 +lonc=-133.6666666666667 +alpha=323.1301023611111 +k=0.9999 +x_0=5000000 +y_0=-5000000 +no_uoff +gamma=323.1301023611111 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3469\":[\"EPSG:3469\",\"+proj=tmerc +lat_0=54 +lon_0=-142 +k=0.9999 +x_0=500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3470\":[\"EPSG:3470\",\"+proj=tmerc +lat_0=54 +lon_0=-146 +k=0.9999 +x_0=500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3471\":[\"EPSG:3471\",\"+proj=tmerc +lat_0=54 +lon_0=-150 +k=0.9999 +x_0=500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3472\":[\"EPSG:3472\",\"+proj=tmerc +lat_0=54 +lon_0=-154 +k=0.9999 +x_0=500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3473\":[\"EPSG:3473\",\"+proj=tmerc +lat_0=54 +lon_0=-158 +k=0.9999 +x_0=500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3474\":[\"EPSG:3474\",\"+proj=tmerc +lat_0=54 +lon_0=-162 +k=0.9999 +x_0=500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3475\":[\"EPSG:3475\",\"+proj=tmerc +lat_0=54 +lon_0=-166 +k=0.9999 +x_0=500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3476\":[\"EPSG:3476\",\"+proj=tmerc +lat_0=54 +lon_0=-170 +k=0.9999 +x_0=500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3477\":[\"EPSG:3477\",\"+proj=lcc +lat_1=53.83333333333334 +lat_2=51.83333333333334 +lat_0=51 +lon_0=-176 +x_0=1000000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3478\":[\"EPSG:3478\",\"+proj=tmerc +lat_0=31 +lon_0=-111.9166666666667 +k=0.9999 +x_0=213360 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3479\":[\"EPSG:3479\",\"+proj=tmerc +lat_0=31 +lon_0=-111.9166666666667 +k=0.9999 +x_0=213360 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=ft +no_defs \"],\"EPSG:3480\":[\"EPSG:3480\",\"+proj=tmerc +lat_0=31 +lon_0=-110.1666666666667 +k=0.9999 +x_0=213360 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3481\":[\"EPSG:3481\",\"+proj=tmerc +lat_0=31 +lon_0=-110.1666666666667 +k=0.9999 +x_0=213360 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=ft +no_defs \"],\"EPSG:3482\":[\"EPSG:3482\",\"+proj=tmerc +lat_0=31 +lon_0=-113.75 +k=0.999933333 +x_0=213360 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3483\":[\"EPSG:3483\",\"+proj=tmerc +lat_0=31 +lon_0=-113.75 +k=0.999933333 +x_0=213360 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=ft +no_defs \"],\"EPSG:3484\":[\"EPSG:3484\",\"+proj=lcc +lat_1=36.23333333333333 +lat_2=34.93333333333333 +lat_0=34.33333333333334 +lon_0=-92 +x_0=400000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3493\":[\"EPSG:3493\",\"+proj=lcc +lat_1=38.43333333333333 +lat_2=37.06666666666667 +lat_0=36.5 +lon_0=-120.5 +x_0=2000000 +y_0=500000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3485\":[\"EPSG:3485\",\"+proj=lcc +lat_1=36.23333333333333 +lat_2=34.93333333333333 +lat_0=34.33333333333334 +lon_0=-92 +x_0=399999.99998984 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3486\":[\"EPSG:3486\",\"+proj=lcc +lat_1=34.76666666666667 +lat_2=33.3 +lat_0=32.66666666666666 +lon_0=-92 +x_0=400000 +y_0=400000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3487\":[\"EPSG:3487\",\"+proj=lcc +lat_1=34.76666666666667 +lat_2=33.3 +lat_0=32.66666666666666 +lon_0=-92 +x_0=399999.99998984 +y_0=399999.99998984 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3488\":[\"EPSG:3488\",\"+proj=aea +lat_1=34 +lat_2=40.5 +lat_0=0 +lon_0=-120 +x_0=0 +y_0=-4000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3489\":[\"EPSG:3489\",\"+proj=lcc +lat_1=41.66666666666666 +lat_2=40 +lat_0=39.33333333333334 +lon_0=-122 +x_0=2000000 +y_0=500000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3490\":[\"EPSG:3490\",\"+proj=lcc +lat_1=41.66666666666666 +lat_2=40 +lat_0=39.33333333333334 +lon_0=-122 +x_0=2000000.0001016 +y_0=500000.0001016001 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3492\":[\"EPSG:3492\",\"+proj=lcc +lat_1=39.83333333333334 +lat_2=38.33333333333334 +lat_0=37.66666666666666 +lon_0=-122 +x_0=2000000.0001016 +y_0=500000.0001016001 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3494\":[\"EPSG:3494\",\"+proj=lcc +lat_1=38.43333333333333 +lat_2=37.06666666666667 +lat_0=36.5 +lon_0=-120.5 +x_0=2000000.0001016 +y_0=500000.0001016001 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3495\":[\"EPSG:3495\",\"+proj=lcc +lat_1=37.25 +lat_2=36 +lat_0=35.33333333333334 +lon_0=-119 +x_0=2000000 +y_0=500000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3497\":[\"EPSG:3497\",\"+proj=lcc +lat_1=35.46666666666667 +lat_2=34.03333333333333 +lat_0=33.5 +lon_0=-118 +x_0=2000000 +y_0=500000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3498\":[\"EPSG:3498\",\"+proj=lcc +lat_1=35.46666666666667 +lat_2=34.03333333333333 +lat_0=33.5 +lon_0=-118 +x_0=2000000.0001016 +y_0=500000.0001016001 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3499\":[\"EPSG:3499\",\"+proj=lcc +lat_1=33.88333333333333 +lat_2=32.78333333333333 +lat_0=32.16666666666666 +lon_0=-116.25 +x_0=2000000 +y_0=500000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3500\":[\"EPSG:3500\",\"+proj=lcc +lat_1=33.88333333333333 +lat_2=32.78333333333333 +lat_0=32.16666666666666 +lon_0=-116.25 +x_0=2000000.0001016 +y_0=500000.0001016001 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3501\":[\"EPSG:3501\",\"+proj=lcc +lat_1=39.75 +lat_2=38.45 +lat_0=37.83333333333334 +lon_0=-105.5 +x_0=914401.8289 +y_0=304800.6096 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3502\":[\"EPSG:3502\",\"+proj=lcc +lat_1=39.75 +lat_2=38.45 +lat_0=37.83333333333334 +lon_0=-105.5 +x_0=914401.8288036576 +y_0=304800.6096012192 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3503\":[\"EPSG:3503\",\"+proj=lcc +lat_1=40.78333333333333 +lat_2=39.71666666666667 +lat_0=39.33333333333334 +lon_0=-105.5 +x_0=914401.8289 +y_0=304800.6096 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3504\":[\"EPSG:3504\",\"+proj=lcc +lat_1=40.78333333333333 +lat_2=39.71666666666667 +lat_0=39.33333333333334 +lon_0=-105.5 +x_0=914401.8288036576 +y_0=304800.6096012192 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3505\":[\"EPSG:3505\",\"+proj=lcc +lat_1=38.43333333333333 +lat_2=37.23333333333333 +lat_0=36.66666666666666 +lon_0=-105.5 +x_0=914401.8289 +y_0=304800.6096 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3506\":[\"EPSG:3506\",\"+proj=lcc +lat_1=38.43333333333333 +lat_2=37.23333333333333 +lat_0=36.66666666666666 +lon_0=-105.5 +x_0=914401.8288036576 +y_0=304800.6096012192 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3507\":[\"EPSG:3507\",\"+proj=lcc +lat_1=41.86666666666667 +lat_2=41.2 +lat_0=40.83333333333334 +lon_0=-72.75 +x_0=304800.6096 +y_0=152400.3048 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3508\":[\"EPSG:3508\",\"+proj=lcc +lat_1=41.86666666666667 +lat_2=41.2 +lat_0=40.83333333333334 +lon_0=-72.75 +x_0=304800.6096012192 +y_0=152400.3048006096 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3509\":[\"EPSG:3509\",\"+proj=tmerc +lat_0=38 +lon_0=-75.41666666666667 +k=0.999995 +x_0=200000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3510\":[\"EPSG:3510\",\"+proj=tmerc +lat_0=38 +lon_0=-75.41666666666667 +k=0.999995 +x_0=200000.0001016002 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3512\":[\"EPSG:3512\",\"+proj=tmerc +lat_0=24.33333333333333 +lon_0=-81 +k=0.999941177 +x_0=200000.0001016002 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3513\":[\"EPSG:3513\",\"+proj=aea +lat_1=24 +lat_2=31.5 +lat_0=24 +lon_0=-84 +x_0=400000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3514\":[\"EPSG:3514\",\"+proj=lcc +lat_1=30.75 +lat_2=29.58333333333333 +lat_0=29 +lon_0=-84.5 +x_0=600000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3515\":[\"EPSG:3515\",\"+proj=lcc +lat_1=30.75 +lat_2=29.58333333333333 +lat_0=29 +lon_0=-84.5 +x_0=600000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3516\":[\"EPSG:3516\",\"+proj=tmerc +lat_0=24.33333333333333 +lon_0=-82 +k=0.999941177 +x_0=200000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3576\":[\"EPSG:3576\",\"+proj=laea +lat_0=90 +lon_0=90 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3519\":[\"EPSG:3519\",\"+proj=tmerc +lat_0=30 +lon_0=-82.16666666666667 +k=0.9999 +x_0=200000.0001016002 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3520\":[\"EPSG:3520\",\"+proj=tmerc +lat_0=30 +lon_0=-84.16666666666667 +k=0.9999 +x_0=700000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3521\":[\"EPSG:3521\",\"+proj=tmerc +lat_0=30 +lon_0=-84.16666666666667 +k=0.9999 +x_0=699999.9998983998 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3522\":[\"EPSG:3522\",\"+proj=tmerc +lat_0=41.66666666666666 +lon_0=-114 +k=0.9999473679999999 +x_0=500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3523\":[\"EPSG:3523\",\"+proj=tmerc +lat_0=41.66666666666666 +lon_0=-114 +k=0.9999473679999999 +x_0=500000.0001016001 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3524\":[\"EPSG:3524\",\"+proj=tmerc +lat_0=41.66666666666666 +lon_0=-112.1666666666667 +k=0.9999473679999999 +x_0=200000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3525\":[\"EPSG:3525\",\"+proj=tmerc +lat_0=41.66666666666666 +lon_0=-112.1666666666667 +k=0.9999473679999999 +x_0=200000.0001016002 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3526\":[\"EPSG:3526\",\"+proj=tmerc +lat_0=41.66666666666666 +lon_0=-115.75 +k=0.999933333 +x_0=800000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3527\":[\"EPSG:3527\",\"+proj=tmerc +lat_0=41.66666666666666 +lon_0=-115.75 +k=0.999933333 +x_0=800000.0001016001 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3528\":[\"EPSG:3528\",\"+proj=tmerc +lat_0=36.66666666666666 +lon_0=-88.33333333333333 +k=0.9999749999999999 +x_0=300000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3529\":[\"EPSG:3529\",\"+proj=tmerc +lat_0=36.66666666666666 +lon_0=-88.33333333333333 +k=0.9999749999999999 +x_0=300000.0000000001 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3530\":[\"EPSG:3530\",\"+proj=tmerc +lat_0=36.66666666666666 +lon_0=-90.16666666666667 +k=0.999941177 +x_0=700000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3531\":[\"EPSG:3531\",\"+proj=tmerc +lat_0=36.66666666666666 +lon_0=-90.16666666666667 +k=0.999941177 +x_0=699999.9999898402 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3532\":[\"EPSG:3532\",\"+proj=tmerc +lat_0=37.5 +lon_0=-85.66666666666667 +k=0.999966667 +x_0=100000 +y_0=250000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3533\":[\"EPSG:3533\",\"+proj=tmerc +lat_0=37.5 +lon_0=-85.66666666666667 +k=0.999966667 +x_0=99999.99989839978 +y_0=249999.9998983998 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3534\":[\"EPSG:3534\",\"+proj=tmerc +lat_0=37.5 +lon_0=-87.08333333333333 +k=0.999966667 +x_0=900000 +y_0=250000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:4585\":[\"EPSG:4585\",\"+proj=tmerc +lat_0=0 +lon_0=111 +k=1 +x_0=500000 +y_0=0 +ellps=krass +units=m +no_defs \"],\"EPSG:3535\":[\"EPSG:3535\",\"+proj=tmerc +lat_0=37.5 +lon_0=-87.08333333333333 +k=0.999966667 +x_0=900000 +y_0=249999.9998983998 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3536\":[\"EPSG:3536\",\"+proj=lcc +lat_1=43.26666666666667 +lat_2=42.06666666666667 +lat_0=41.5 +lon_0=-93.5 +x_0=1500000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3537\":[\"EPSG:3537\",\"+proj=lcc +lat_1=43.26666666666667 +lat_2=42.06666666666667 +lat_0=41.5 +lon_0=-93.5 +x_0=1500000 +y_0=999999.9999898402 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3538\":[\"EPSG:3538\",\"+proj=lcc +lat_1=41.78333333333333 +lat_2=40.61666666666667 +lat_0=40 +lon_0=-93.5 +x_0=500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3539\":[\"EPSG:3539\",\"+proj=lcc +lat_1=41.78333333333333 +lat_2=40.61666666666667 +lat_0=40 +lon_0=-93.5 +x_0=500000.00001016 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3540\":[\"EPSG:3540\",\"+proj=lcc +lat_1=39.78333333333333 +lat_2=38.71666666666667 +lat_0=38.33333333333334 +lon_0=-98 +x_0=400000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3541\":[\"EPSG:3541\",\"+proj=lcc +lat_1=39.78333333333333 +lat_2=38.71666666666667 +lat_0=38.33333333333334 +lon_0=-98 +x_0=399999.99998984 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3542\":[\"EPSG:3542\",\"+proj=lcc +lat_1=38.56666666666667 +lat_2=37.26666666666667 +lat_0=36.66666666666666 +lon_0=-98.5 +x_0=400000 +y_0=400000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3543\":[\"EPSG:3543\",\"+proj=lcc +lat_1=38.56666666666667 +lat_2=37.26666666666667 +lat_0=36.66666666666666 +lon_0=-98.5 +x_0=399999.99998984 +y_0=399999.99998984 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3544\":[\"EPSG:3544\",\"+proj=lcc +lat_1=37.96666666666667 +lat_2=38.96666666666667 +lat_0=37.5 +lon_0=-84.25 +x_0=500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3545\":[\"EPSG:3545\",\"+proj=lcc +lat_1=37.96666666666667 +lat_2=38.96666666666667 +lat_0=37.5 +lon_0=-84.25 +x_0=500000.0001016001 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3546\":[\"EPSG:3546\",\"+proj=lcc +lat_1=37.08333333333334 +lat_2=38.66666666666666 +lat_0=36.33333333333334 +lon_0=-85.75 +x_0=1500000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3547\":[\"EPSG:3547\",\"+proj=lcc +lat_1=37.08333333333334 +lat_2=38.66666666666666 +lat_0=36.33333333333334 +lon_0=-85.75 +x_0=1500000 +y_0=999999.9998983998 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3548\":[\"EPSG:3548\",\"+proj=lcc +lat_1=37.93333333333333 +lat_2=36.73333333333333 +lat_0=36.33333333333334 +lon_0=-85.75 +x_0=500000 +y_0=500000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3549\":[\"EPSG:3549\",\"+proj=lcc +lat_1=37.93333333333333 +lat_2=36.73333333333333 +lat_0=36.33333333333334 +lon_0=-85.75 +x_0=500000.0001016001 +y_0=500000.0001016001 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3550\":[\"EPSG:3550\",\"+proj=lcc +lat_1=32.66666666666666 +lat_2=31.16666666666667 +lat_0=30.5 +lon_0=-92.5 +x_0=1000000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3551\":[\"EPSG:3551\",\"+proj=lcc +lat_1=32.66666666666666 +lat_2=31.16666666666667 +lat_0=30.5 +lon_0=-92.5 +x_0=999999.9999898402 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3552\":[\"EPSG:3552\",\"+proj=lcc +lat_1=30.7 +lat_2=29.3 +lat_0=28.5 +lon_0=-91.33333333333333 +x_0=1000000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3554\":[\"EPSG:3554\",\"+proj=tmerc +lat_0=43.5 +lon_0=-69.125 +k=0.99998 +x_0=500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3555\":[\"EPSG:3555\",\"+proj=tmerc +lat_0=43.83333333333334 +lon_0=-67.875 +k=0.99998 +x_0=700000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3556\":[\"EPSG:3556\",\"+proj=tmerc +lat_0=42.83333333333334 +lon_0=-70.375 +k=0.99998 +x_0=300000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3557\":[\"EPSG:3557\",\"+proj=tmerc +lat_0=43.66666666666666 +lon_0=-68.5 +k=0.9999 +x_0=300000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3558\":[\"EPSG:3558\",\"+proj=tmerc +lat_0=42.83333333333334 +lon_0=-70.16666666666667 +k=0.999966667 +x_0=900000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3709\":[\"EPSG:3709\",\"+proj=utm +zone=2 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3559\":[\"EPSG:3559\",\"+proj=lcc +lat_1=39.45 +lat_2=38.3 +lat_0=37.66666666666666 +lon_0=-77 +x_0=400000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3560\":[\"EPSG:3560\",\"+proj=lcc +lat_1=41.78333333333333 +lat_2=40.71666666666667 +lat_0=40.33333333333334 +lon_0=-111.5 +x_0=500000.00001016 +y_0=999999.9999898402 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:3561\":[\"EPSG:3561\",\"+proj=tmerc +lat_0=18.83333333333333 +lon_0=-155.5 +k=0.999966667 +x_0=152400.3048006096 +y_0=0 +ellps=clrk66 +towgs84=61,-285,-181,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3562\":[\"EPSG:3562\",\"+proj=tmerc +lat_0=20.33333333333333 +lon_0=-156.6666666666667 +k=0.999966667 +x_0=152400.3048006096 +y_0=0 +ellps=clrk66 +towgs84=61,-285,-181,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3563\":[\"EPSG:3563\",\"+proj=tmerc +lat_0=21.16666666666667 +lon_0=-158 +k=0.99999 +x_0=152400.3048006096 +y_0=0 +ellps=clrk66 +towgs84=61,-285,-181,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3564\":[\"EPSG:3564\",\"+proj=tmerc +lat_0=21.83333333333333 +lon_0=-159.5 +k=0.99999 +x_0=152400.3048006096 +y_0=0 +ellps=clrk66 +towgs84=61,-285,-181,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3565\":[\"EPSG:3565\",\"+proj=tmerc +lat_0=21.66666666666667 +lon_0=-160.1666666666667 +k=1 +x_0=152400.3048006096 +y_0=0 +ellps=clrk66 +towgs84=61,-285,-181,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3566\":[\"EPSG:3566\",\"+proj=lcc +lat_1=40.65 +lat_2=39.01666666666667 +lat_0=38.33333333333334 +lon_0=-111.5 +x_0=500000.00001016 +y_0=2000000.00001016 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:3567\":[\"EPSG:3567\",\"+proj=lcc +lat_1=38.35 +lat_2=37.21666666666667 +lat_0=36.66666666666666 +lon_0=-111.5 +x_0=500000.00001016 +y_0=3000000 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:3568\":[\"EPSG:3568\",\"+proj=lcc +lat_1=41.78333333333333 +lat_2=40.71666666666667 +lat_0=40.33333333333334 +lon_0=-111.5 +x_0=500000.00001016 +y_0=999999.9999898402 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3569\":[\"EPSG:3569\",\"+proj=lcc +lat_1=40.65 +lat_2=39.01666666666667 +lat_0=38.33333333333334 +lon_0=-111.5 +x_0=500000.00001016 +y_0=2000000.00001016 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3570\":[\"EPSG:3570\",\"+proj=lcc +lat_1=38.35 +lat_2=37.21666666666667 +lat_0=36.66666666666666 +lon_0=-111.5 +x_0=500000.00001016 +y_0=3000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3572\":[\"EPSG:3572\",\"+proj=laea +lat_0=90 +lon_0=-150 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3573\":[\"EPSG:3573\",\"+proj=laea +lat_0=90 +lon_0=-100 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3574\":[\"EPSG:3574\",\"+proj=laea +lat_0=90 +lon_0=-40 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:4899\":[\"EPSG:4899\",\"+proj=geocent +ellps=intl +units=m +no_defs \"],\"EPSG:3579\":[\"EPSG:3579\",\"+proj=aea +lat_1=61.66666666666666 +lat_2=68 +lat_0=59 +lon_0=-132.5 +x_0=500000 +y_0=500000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3580\":[\"EPSG:3580\",\"+proj=lcc +lat_1=62 +lat_2=70 +lat_0=0 +lon_0=-112 +x_0=0 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:3581\":[\"EPSG:3581\",\"+proj=lcc +lat_1=62 +lat_2=70 +lat_0=0 +lon_0=-112 +x_0=0 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3582\":[\"EPSG:3582\",\"+proj=lcc +lat_1=39.45 +lat_2=38.3 +lat_0=37.66666666666666 +lon_0=-77 +x_0=399999.9998983998 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3583\":[\"EPSG:3583\",\"+proj=lcc +lat_1=41.48333333333333 +lat_2=41.28333333333333 +lat_0=41 +lon_0=-70.5 +x_0=500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3584\":[\"EPSG:3584\",\"+proj=lcc +lat_1=41.48333333333333 +lat_2=41.28333333333333 +lat_0=41 +lon_0=-70.5 +x_0=500000.0001016001 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3585\":[\"EPSG:3585\",\"+proj=lcc +lat_1=42.68333333333333 +lat_2=41.71666666666667 +lat_0=41 +lon_0=-71.5 +x_0=200000 +y_0=750000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:4906\":[\"EPSG:4906\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:3586\":[\"EPSG:3586\",\"+proj=lcc +lat_1=42.68333333333333 +lat_2=41.71666666666667 +lat_0=41 +lon_0=-71.5 +x_0=200000.0001016002 +y_0=750000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3587\":[\"EPSG:3587\",\"+proj=lcc +lat_1=45.7 +lat_2=44.18333333333333 +lat_0=43.31666666666667 +lon_0=-84.36666666666666 +x_0=6000000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3588\":[\"EPSG:3588\",\"+proj=lcc +lat_1=45.7 +lat_2=44.18333333333333 +lat_0=43.31666666666667 +lon_0=-84.36666666666666 +x_0=5999999.999976001 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=ft +no_defs \"],\"EPSG:3589\":[\"EPSG:3589\",\"+proj=lcc +lat_1=47.08333333333334 +lat_2=45.48333333333333 +lat_0=44.78333333333333 +lon_0=-87 +x_0=8000000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3590\":[\"EPSG:3590\",\"+proj=lcc +lat_1=47.08333333333334 +lat_2=45.48333333333333 +lat_0=44.78333333333333 +lon_0=-87 +x_0=7999999.999968001 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=ft +no_defs \"],\"EPSG:3591\":[\"EPSG:3591\",\"+proj=omerc +lat_0=45.30916666666666 +lonc=-86 +alpha=337.25556 +k=0.9996 +x_0=2546731.496 +y_0=-4354009.816 +no_uoff +gamma=337.25556 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3592\":[\"EPSG:3592\",\"+proj=lcc +lat_1=43.66666666666666 +lat_2=42.1 +lat_0=41.5 +lon_0=-84.36666666666666 +x_0=4000000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3593\":[\"EPSG:3593\",\"+proj=lcc +lat_1=43.66666666666666 +lat_2=42.1 +lat_0=41.5 +lon_0=-84.36666666666666 +x_0=3999999.999984 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=ft +no_defs \"],\"EPSG:3594\":[\"EPSG:3594\",\"+proj=lcc +lat_1=47.05 +lat_2=45.61666666666667 +lat_0=45 +lon_0=-94.25 +x_0=800000 +y_0=100000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3595\":[\"EPSG:3595\",\"+proj=lcc +lat_1=48.63333333333333 +lat_2=47.03333333333333 +lat_0=46.5 +lon_0=-93.09999999999999 +x_0=800000 +y_0=100000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3596\":[\"EPSG:3596\",\"+proj=lcc +lat_1=45.21666666666667 +lat_2=43.78333333333333 +lat_0=43 +lon_0=-94 +x_0=800000 +y_0=100000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3597\":[\"EPSG:3597\",\"+proj=tmerc +lat_0=29.5 +lon_0=-88.83333333333333 +k=0.99995 +x_0=300000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3598\":[\"EPSG:3598\",\"+proj=tmerc +lat_0=29.5 +lon_0=-88.83333333333333 +k=0.99995 +x_0=300000.0000000001 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3599\":[\"EPSG:3599\",\"+proj=tmerc +lat_0=29.5 +lon_0=-90.33333333333333 +k=0.99995 +x_0=700000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3600\":[\"EPSG:3600\",\"+proj=tmerc +lat_0=29.5 +lon_0=-90.33333333333333 +k=0.99995 +x_0=699999.9998983998 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3601\":[\"EPSG:3601\",\"+proj=tmerc +lat_0=35.83333333333334 +lon_0=-92.5 +k=0.999933333 +x_0=500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3602\":[\"EPSG:3602\",\"+proj=tmerc +lat_0=35.83333333333334 +lon_0=-90.5 +k=0.999933333 +x_0=250000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3603\":[\"EPSG:3603\",\"+proj=tmerc +lat_0=36.16666666666666 +lon_0=-94.5 +k=0.999941177 +x_0=850000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3604\":[\"EPSG:3604\",\"+proj=lcc +lat_1=49 +lat_2=45 +lat_0=44.25 +lon_0=-109.5 +x_0=600000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3605\":[\"EPSG:3605\",\"+proj=lcc +lat_1=49 +lat_2=45 +lat_0=44.25 +lon_0=-109.5 +x_0=599999.9999976 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=ft +no_defs \"],\"EPSG:3606\":[\"EPSG:3606\",\"+proj=lcc +lat_1=43 +lat_2=40 +lat_0=39.83333333333334 +lon_0=-100 +x_0=500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3607\":[\"EPSG:3607\",\"+proj=tmerc +lat_0=34.75 +lon_0=-116.6666666666667 +k=0.9999 +x_0=500000 +y_0=6000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3608\":[\"EPSG:3608\",\"+proj=tmerc +lat_0=34.75 +lon_0=-116.6666666666667 +k=0.9999 +x_0=500000.00001016 +y_0=6000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3609\":[\"EPSG:3609\",\"+proj=tmerc +lat_0=34.75 +lon_0=-115.5833333333333 +k=0.9999 +x_0=200000 +y_0=8000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3619\":[\"EPSG:3619\",\"+proj=tmerc +lat_0=31 +lon_0=-104.3333333333333 +k=0.999909091 +x_0=165000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3610\":[\"EPSG:3610\",\"+proj=tmerc +lat_0=34.75 +lon_0=-115.5833333333333 +k=0.9999 +x_0=200000.00001016 +y_0=8000000.000010163 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3611\":[\"EPSG:3611\",\"+proj=tmerc +lat_0=34.75 +lon_0=-118.5833333333333 +k=0.9999 +x_0=800000 +y_0=4000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3612\":[\"EPSG:3612\",\"+proj=tmerc +lat_0=34.75 +lon_0=-118.5833333333333 +k=0.9999 +x_0=800000.0000101599 +y_0=3999999.99998984 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3613\":[\"EPSG:3613\",\"+proj=tmerc +lat_0=42.5 +lon_0=-71.66666666666667 +k=0.999966667 +x_0=300000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3614\":[\"EPSG:3614\",\"+proj=tmerc +lat_0=42.5 +lon_0=-71.66666666666667 +k=0.999966667 +x_0=300000.0000000001 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3615\":[\"EPSG:3615\",\"+proj=tmerc +lat_0=38.83333333333334 +lon_0=-74.5 +k=0.9999 +x_0=150000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3617\":[\"EPSG:3617\",\"+proj=tmerc +lat_0=31 +lon_0=-106.25 +k=0.9999 +x_0=500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3618\":[\"EPSG:3618\",\"+proj=tmerc +lat_0=31 +lon_0=-106.25 +k=0.9999 +x_0=500000.0001016001 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3620\":[\"EPSG:3620\",\"+proj=tmerc +lat_0=31 +lon_0=-104.3333333333333 +k=0.999909091 +x_0=165000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3621\":[\"EPSG:3621\",\"+proj=tmerc +lat_0=31 +lon_0=-107.8333333333333 +k=0.999916667 +x_0=830000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3622\":[\"EPSG:3622\",\"+proj=tmerc +lat_0=31 +lon_0=-107.8333333333333 +k=0.999916667 +x_0=830000.0001016001 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3623\":[\"EPSG:3623\",\"+proj=tmerc +lat_0=40 +lon_0=-76.58333333333333 +k=0.9999375 +x_0=250000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3624\":[\"EPSG:3624\",\"+proj=tmerc +lat_0=40 +lon_0=-76.58333333333333 +k=0.9999375 +x_0=249999.9998983998 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3625\":[\"EPSG:3625\",\"+proj=tmerc +lat_0=38.83333333333334 +lon_0=-74.5 +k=0.9999 +x_0=150000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3626\":[\"EPSG:3626\",\"+proj=tmerc +lat_0=38.83333333333334 +lon_0=-74.5 +k=0.9999 +x_0=150000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3627\":[\"EPSG:3627\",\"+proj=lcc +lat_1=41.03333333333333 +lat_2=40.66666666666666 +lat_0=40.16666666666666 +lon_0=-74 +x_0=300000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3710\":[\"EPSG:3710\",\"+proj=utm +zone=3 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3628\":[\"EPSG:3628\",\"+proj=lcc +lat_1=41.03333333333333 +lat_2=40.66666666666666 +lat_0=40.16666666666666 +lon_0=-74 +x_0=300000.0000000001 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3629\":[\"EPSG:3629\",\"+proj=tmerc +lat_0=40 +lon_0=-78.58333333333333 +k=0.9999375 +x_0=350000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3631\":[\"EPSG:3631\",\"+proj=lcc +lat_1=36.16666666666666 +lat_2=34.33333333333334 +lat_0=33.75 +lon_0=-79 +x_0=609601.22 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3632\":[\"EPSG:3632\",\"+proj=lcc +lat_1=36.16666666666666 +lat_2=34.33333333333334 +lat_0=33.75 +lon_0=-79 +x_0=609601.2192024384 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3633\":[\"EPSG:3633\",\"+proj=lcc +lat_1=48.73333333333333 +lat_2=47.43333333333333 +lat_0=47 +lon_0=-100.5 +x_0=600000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3634\":[\"EPSG:3634\",\"+proj=lcc +lat_1=48.73333333333333 +lat_2=47.43333333333333 +lat_0=47 +lon_0=-100.5 +x_0=599999.9999976 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=ft +no_defs \"],\"EPSG:3635\":[\"EPSG:3635\",\"+proj=lcc +lat_1=47.48333333333333 +lat_2=46.18333333333333 +lat_0=45.66666666666666 +lon_0=-100.5 +x_0=600000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3636\":[\"EPSG:3636\",\"+proj=lcc +lat_1=47.48333333333333 +lat_2=46.18333333333333 +lat_0=45.66666666666666 +lon_0=-100.5 +x_0=599999.9999976 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=ft +no_defs \"],\"EPSG:3637\":[\"EPSG:3637\",\"+proj=lcc +lat_1=41.7 +lat_2=40.43333333333333 +lat_0=39.66666666666666 +lon_0=-82.5 +x_0=600000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3638\":[\"EPSG:3638\",\"+proj=lcc +lat_1=40.03333333333333 +lat_2=38.73333333333333 +lat_0=38 +lon_0=-82.5 +x_0=600000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3639\":[\"EPSG:3639\",\"+proj=lcc +lat_1=36.76666666666667 +lat_2=35.56666666666667 +lat_0=35 +lon_0=-98 +x_0=600000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3640\":[\"EPSG:3640\",\"+proj=lcc +lat_1=36.76666666666667 +lat_2=35.56666666666667 +lat_0=35 +lon_0=-98 +x_0=600000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3641\":[\"EPSG:3641\",\"+proj=lcc +lat_1=35.23333333333333 +lat_2=33.93333333333333 +lat_0=33.33333333333334 +lon_0=-98 +x_0=600000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3642\":[\"EPSG:3642\",\"+proj=lcc +lat_1=35.23333333333333 +lat_2=33.93333333333333 +lat_0=33.33333333333334 +lon_0=-98 +x_0=600000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3643\":[\"EPSG:3643\",\"+proj=lcc +lat_1=43 +lat_2=45.5 +lat_0=41.75 +lon_0=-120.5 +x_0=400000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3644\":[\"EPSG:3644\",\"+proj=lcc +lat_1=43 +lat_2=45.5 +lat_0=41.75 +lon_0=-120.5 +x_0=399999.9999984 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=ft +no_defs \"],\"EPSG:3645\":[\"EPSG:3645\",\"+proj=lcc +lat_1=46 +lat_2=44.33333333333334 +lat_0=43.66666666666666 +lon_0=-120.5 +x_0=2500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3646\":[\"EPSG:3646\",\"+proj=lcc +lat_1=46 +lat_2=44.33333333333334 +lat_0=43.66666666666666 +lon_0=-120.5 +x_0=2500000.0001424 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=ft +no_defs \"],\"EPSG:3647\":[\"EPSG:3647\",\"+proj=lcc +lat_1=44 +lat_2=42.33333333333334 +lat_0=41.66666666666666 +lon_0=-120.5 +x_0=1500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3648\":[\"EPSG:3648\",\"+proj=lcc +lat_1=44 +lat_2=42.33333333333334 +lat_0=41.66666666666666 +lon_0=-120.5 +x_0=1500000.0001464 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=ft +no_defs \"],\"EPSG:3649\":[\"EPSG:3649\",\"+proj=lcc +lat_1=41.95 +lat_2=40.88333333333333 +lat_0=40.16666666666666 +lon_0=-77.75 +x_0=600000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3650\":[\"EPSG:3650\",\"+proj=lcc +lat_1=41.95 +lat_2=40.88333333333333 +lat_0=40.16666666666666 +lon_0=-77.75 +x_0=600000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3653\":[\"EPSG:3653\",\"+proj=tmerc +lat_0=41.08333333333334 +lon_0=-71.5 +k=0.99999375 +x_0=100000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3654\":[\"EPSG:3654\",\"+proj=tmerc +lat_0=41.08333333333334 +lon_0=-71.5 +k=0.99999375 +x_0=99999.99998983997 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3655\":[\"EPSG:3655\",\"+proj=lcc +lat_1=34.83333333333334 +lat_2=32.5 +lat_0=31.83333333333333 +lon_0=-81 +x_0=609600 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3656\":[\"EPSG:3656\",\"+proj=lcc +lat_1=34.83333333333334 +lat_2=32.5 +lat_0=31.83333333333333 +lon_0=-81 +x_0=609600 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=ft +no_defs \"],\"EPSG:3657\":[\"EPSG:3657\",\"+proj=lcc +lat_1=45.68333333333333 +lat_2=44.41666666666666 +lat_0=43.83333333333334 +lon_0=-100 +x_0=600000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3658\":[\"EPSG:3658\",\"+proj=lcc +lat_1=45.68333333333333 +lat_2=44.41666666666666 +lat_0=43.83333333333334 +lon_0=-100 +x_0=600000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3659\":[\"EPSG:3659\",\"+proj=lcc +lat_1=44.4 +lat_2=42.83333333333334 +lat_0=42.33333333333334 +lon_0=-100.3333333333333 +x_0=600000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3660\":[\"EPSG:3660\",\"+proj=lcc +lat_1=44.4 +lat_2=42.83333333333334 +lat_0=42.33333333333334 +lon_0=-100.3333333333333 +x_0=600000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3661\":[\"EPSG:3661\",\"+proj=lcc +lat_1=36.41666666666666 +lat_2=35.25 +lat_0=34.33333333333334 +lon_0=-86 +x_0=600000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3662\":[\"EPSG:3662\",\"+proj=lcc +lat_1=36.41666666666666 +lat_2=35.25 +lat_0=34.33333333333334 +lon_0=-86 +x_0=600000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3663\":[\"EPSG:3663\",\"+proj=lcc +lat_1=31.88333333333333 +lat_2=30.11666666666667 +lat_0=29.66666666666667 +lon_0=-100.3333333333333 +x_0=700000 +y_0=3000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3664\":[\"EPSG:3664\",\"+proj=lcc +lat_1=31.88333333333333 +lat_2=30.11666666666667 +lat_0=29.66666666666667 +lon_0=-100.3333333333333 +x_0=699999.9998983998 +y_0=3000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3665\":[\"EPSG:3665\",\"+proj=aea +lat_1=27.5 +lat_2=35 +lat_0=18 +lon_0=-100 +x_0=1500000 +y_0=6000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3666\":[\"EPSG:3666\",\"+proj=lcc +lat_1=27.5 +lat_2=35 +lat_0=18 +lon_0=-100 +x_0=1500000 +y_0=5000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3667\":[\"EPSG:3667\",\"+proj=lcc +lat_1=36.18333333333333 +lat_2=34.65 +lat_0=34 +lon_0=-101.5 +x_0=200000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3668\":[\"EPSG:3668\",\"+proj=lcc +lat_1=36.18333333333333 +lat_2=34.65 +lat_0=34 +lon_0=-101.5 +x_0=200000.0001016002 +y_0=999999.9998983998 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3669\":[\"EPSG:3669\",\"+proj=lcc +lat_1=33.96666666666667 +lat_2=32.13333333333333 +lat_0=31.66666666666667 +lon_0=-98.5 +x_0=600000 +y_0=2000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3670\":[\"EPSG:3670\",\"+proj=lcc +lat_1=33.96666666666667 +lat_2=32.13333333333333 +lat_0=31.66666666666667 +lon_0=-98.5 +x_0=600000 +y_0=2000000.0001016 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3671\":[\"EPSG:3671\",\"+proj=lcc +lat_1=27.83333333333333 +lat_2=26.16666666666667 +lat_0=25.66666666666667 +lon_0=-98.5 +x_0=300000 +y_0=5000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3672\":[\"EPSG:3672\",\"+proj=lcc +lat_1=27.83333333333333 +lat_2=26.16666666666667 +lat_0=25.66666666666667 +lon_0=-98.5 +x_0=300000.0000000001 +y_0=5000000.0001016 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3673\":[\"EPSG:3673\",\"+proj=lcc +lat_1=30.28333333333333 +lat_2=28.38333333333333 +lat_0=27.83333333333333 +lon_0=-99 +x_0=600000 +y_0=4000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3674\":[\"EPSG:3674\",\"+proj=lcc +lat_1=30.28333333333333 +lat_2=28.38333333333333 +lat_0=27.83333333333333 +lon_0=-99 +x_0=600000 +y_0=3999999.9998984 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3699\":[\"EPSG:3699\",\"+proj=lcc +lat_1=44.06666666666667 +lat_2=42.73333333333333 +lat_0=42 +lon_0=-90 +x_0=600000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3675\":[\"EPSG:3675\",\"+proj=lcc +lat_1=40.65 +lat_2=39.01666666666667 +lat_0=38.33333333333334 +lon_0=-111.5 +x_0=500000 +y_0=2000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3676\":[\"EPSG:3676\",\"+proj=lcc +lat_1=40.65 +lat_2=39.01666666666667 +lat_0=38.33333333333334 +lon_0=-111.5 +x_0=500000.0001504 +y_0=1999999.999992 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=ft +no_defs \"],\"EPSG:3677\":[\"EPSG:3677\",\"+proj=lcc +lat_1=40.65 +lat_2=39.01666666666667 +lat_0=38.33333333333334 +lon_0=-111.5 +x_0=500000.00001016 +y_0=2000000.00001016 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3678\":[\"EPSG:3678\",\"+proj=lcc +lat_1=41.78333333333333 +lat_2=40.71666666666667 +lat_0=40.33333333333334 +lon_0=-111.5 +x_0=500000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3679\":[\"EPSG:3679\",\"+proj=lcc +lat_1=41.78333333333333 +lat_2=40.71666666666667 +lat_0=40.33333333333334 +lon_0=-111.5 +x_0=500000.0001504 +y_0=999999.9999960001 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=ft +no_defs \"],\"EPSG:3680\":[\"EPSG:3680\",\"+proj=lcc +lat_1=41.78333333333333 +lat_2=40.71666666666667 +lat_0=40.33333333333334 +lon_0=-111.5 +x_0=500000.00001016 +y_0=999999.9999898402 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3681\":[\"EPSG:3681\",\"+proj=lcc +lat_1=38.35 +lat_2=37.21666666666667 +lat_0=36.66666666666666 +lon_0=-111.5 +x_0=500000 +y_0=3000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3682\":[\"EPSG:3682\",\"+proj=lcc +lat_1=38.35 +lat_2=37.21666666666667 +lat_0=36.66666666666666 +lon_0=-111.5 +x_0=500000.0001504 +y_0=2999999.999988 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=ft +no_defs \"],\"EPSG:3683\":[\"EPSG:3683\",\"+proj=lcc +lat_1=38.35 +lat_2=37.21666666666667 +lat_0=36.66666666666666 +lon_0=-111.5 +x_0=500000.00001016 +y_0=3000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3684\":[\"EPSG:3684\",\"+proj=tmerc +lat_0=42.5 +lon_0=-72.5 +k=0.999964286 +x_0=500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3685\":[\"EPSG:3685\",\"+proj=lcc +lat_1=39.2 +lat_2=38.03333333333333 +lat_0=37.66666666666666 +lon_0=-78.5 +x_0=3500000 +y_0=2000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3686\":[\"EPSG:3686\",\"+proj=lcc +lat_1=39.2 +lat_2=38.03333333333333 +lat_0=37.66666666666666 +lon_0=-78.5 +x_0=3500000.0001016 +y_0=2000000.0001016 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3687\":[\"EPSG:3687\",\"+proj=lcc +lat_1=37.96666666666667 +lat_2=36.76666666666667 +lat_0=36.33333333333334 +lon_0=-78.5 +x_0=3500000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3688\":[\"EPSG:3688\",\"+proj=lcc +lat_1=37.96666666666667 +lat_2=36.76666666666667 +lat_0=36.33333333333334 +lon_0=-78.5 +x_0=3500000.0001016 +y_0=999999.9998983998 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3689\":[\"EPSG:3689\",\"+proj=lcc +lat_1=48.73333333333333 +lat_2=47.5 +lat_0=47 +lon_0=-120.8333333333333 +x_0=500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3691\":[\"EPSG:3691\",\"+proj=lcc +lat_1=47.33333333333334 +lat_2=45.83333333333334 +lat_0=45.33333333333334 +lon_0=-120.5 +x_0=500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3692\":[\"EPSG:3692\",\"+proj=lcc +lat_1=47.33333333333334 +lat_2=45.83333333333334 +lat_0=45.33333333333334 +lon_0=-120.5 +x_0=500000.0001016001 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3693\":[\"EPSG:3693\",\"+proj=lcc +lat_1=40.25 +lat_2=39 +lat_0=38.5 +lon_0=-79.5 +x_0=600000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3694\":[\"EPSG:3694\",\"+proj=lcc +lat_1=38.88333333333333 +lat_2=37.48333333333333 +lat_0=37 +lon_0=-81 +x_0=600000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3695\":[\"EPSG:3695\",\"+proj=lcc +lat_1=45.5 +lat_2=44.25 +lat_0=43.83333333333334 +lon_0=-90 +x_0=600000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3696\":[\"EPSG:3696\",\"+proj=lcc +lat_1=45.5 +lat_2=44.25 +lat_0=43.83333333333334 +lon_0=-90 +x_0=600000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3697\":[\"EPSG:3697\",\"+proj=lcc +lat_1=46.76666666666667 +lat_2=45.56666666666667 +lat_0=45.16666666666666 +lon_0=-90 +x_0=600000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3698\":[\"EPSG:3698\",\"+proj=lcc +lat_1=46.76666666666667 +lat_2=45.56666666666667 +lat_0=45.16666666666666 +lon_0=-90 +x_0=600000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3700\":[\"EPSG:3700\",\"+proj=lcc +lat_1=44.06666666666667 +lat_2=42.73333333333333 +lat_0=42 +lon_0=-90 +x_0=600000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3701\":[\"EPSG:3701\",\"+proj=tmerc +lat_0=0 +lon_0=-90 +k=0.9996 +x_0=520000 +y_0=-4480000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3702\":[\"EPSG:3702\",\"+proj=tmerc +lat_0=40.5 +lon_0=-105.1666666666667 +k=0.9999375 +x_0=200000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3703\":[\"EPSG:3703\",\"+proj=tmerc +lat_0=40.5 +lon_0=-107.3333333333333 +k=0.9999375 +x_0=400000 +y_0=100000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3704\":[\"EPSG:3704\",\"+proj=tmerc +lat_0=40.5 +lon_0=-108.75 +k=0.9999375 +x_0=600000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3705\":[\"EPSG:3705\",\"+proj=tmerc +lat_0=40.5 +lon_0=-110.0833333333333 +k=0.9999375 +x_0=800000 +y_0=100000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3706\":[\"EPSG:3706\",\"+proj=utm +zone=59 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3707\":[\"EPSG:3707\",\"+proj=utm +zone=60 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3708\":[\"EPSG:3708\",\"+proj=utm +zone=1 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3711\":[\"EPSG:3711\",\"+proj=utm +zone=4 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3712\":[\"EPSG:3712\",\"+proj=utm +zone=5 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3713\":[\"EPSG:3713\",\"+proj=utm +zone=6 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3714\":[\"EPSG:3714\",\"+proj=utm +zone=7 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3715\":[\"EPSG:3715\",\"+proj=utm +zone=8 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3716\":[\"EPSG:3716\",\"+proj=utm +zone=9 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3718\":[\"EPSG:3718\",\"+proj=utm +zone=11 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3719\":[\"EPSG:3719\",\"+proj=utm +zone=12 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3720\":[\"EPSG:3720\",\"+proj=utm +zone=13 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3721\":[\"EPSG:3721\",\"+proj=utm +zone=14 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3722\":[\"EPSG:3722\",\"+proj=utm +zone=15 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3723\":[\"EPSG:3723\",\"+proj=utm +zone=16 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3724\":[\"EPSG:3724\",\"+proj=utm +zone=17 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3726\":[\"EPSG:3726\",\"+proj=utm +zone=19 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3727\":[\"EPSG:3727\",\"+proj=tmerc +lat_0=-21.11666666666667 +lon_0=55.53333333333333 +k=1 +x_0=160000 +y_0=50000 +ellps=intl +towgs84=94,-948,-1262,0,0,0,0 +units=m +no_defs \"],\"EPSG:3728\":[\"EPSG:3728\",\"+proj=lcc +lat_1=41.7 +lat_2=40.43333333333333 +lat_0=39.66666666666666 +lon_0=-82.5 +x_0=600000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3729\":[\"EPSG:3729\",\"+proj=lcc +lat_1=40.03333333333333 +lat_2=38.73333333333333 +lat_0=38 +lon_0=-82.5 +x_0=600000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:4908\":[\"EPSG:4908\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:3730\":[\"EPSG:3730\",\"+proj=tmerc +lat_0=40.5 +lon_0=-105.1666666666667 +k=0.9999375 +x_0=200000.00001016 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3731\":[\"EPSG:3731\",\"+proj=tmerc +lat_0=40.5 +lon_0=-107.3333333333333 +k=0.9999375 +x_0=399999.99998984 +y_0=99999.99998983997 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3732\":[\"EPSG:3732\",\"+proj=tmerc +lat_0=40.5 +lon_0=-108.75 +k=0.9999375 +x_0=600000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3733\":[\"EPSG:3733\",\"+proj=tmerc +lat_0=40.5 +lon_0=-110.0833333333333 +k=0.9999375 +x_0=800000.0000101599 +y_0=99999.99998983997 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3735\":[\"EPSG:3735\",\"+proj=lcc +lat_1=40.03333333333333 +lat_2=38.73333333333333 +lat_0=38 +lon_0=-82.5 +x_0=600000 +y_0=0 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:3736\":[\"EPSG:3736\",\"+proj=tmerc +lat_0=40.5 +lon_0=-105.1666666666667 +k=0.9999375 +x_0=200000.00001016 +y_0=0 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:3737\":[\"EPSG:3737\",\"+proj=tmerc +lat_0=40.5 +lon_0=-107.3333333333333 +k=0.9999375 +x_0=399999.99998984 +y_0=99999.99998983997 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:3880\":[\"EPSG:3880\",\"+proj=tmerc +lat_0=0 +lon_0=26 +k=1 +x_0=26500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3738\":[\"EPSG:3738\",\"+proj=tmerc +lat_0=40.5 +lon_0=-108.75 +k=0.9999375 +x_0=600000 +y_0=0 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:3739\":[\"EPSG:3739\",\"+proj=tmerc +lat_0=40.5 +lon_0=-110.0833333333333 +k=0.9999375 +x_0=800000.0000101599 +y_0=99999.99998983997 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:3741\":[\"EPSG:3741\",\"+proj=utm +zone=11 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3743\":[\"EPSG:3743\",\"+proj=utm +zone=13 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3744\":[\"EPSG:3744\",\"+proj=utm +zone=14 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3746\":[\"EPSG:3746\",\"+proj=utm +zone=16 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3747\":[\"EPSG:3747\",\"+proj=utm +zone=17 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3748\":[\"EPSG:3748\",\"+proj=utm +zone=18 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3749\":[\"EPSG:3749\",\"+proj=utm +zone=19 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3750\":[\"EPSG:3750\",\"+proj=utm +zone=4 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3751\":[\"EPSG:3751\",\"+proj=utm +zone=5 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3752\":[\"EPSG:3752\",\"+proj=merc +lon_0=100 +lat_ts=-41 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3753\":[\"EPSG:3753\",\"+proj=lcc +lat_1=41.7 +lat_2=40.43333333333333 +lat_0=39.66666666666666 +lon_0=-82.5 +x_0=600000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3754\":[\"EPSG:3754\",\"+proj=lcc +lat_1=40.03333333333333 +lat_2=38.73333333333333 +lat_0=38 +lon_0=-82.5 +x_0=600000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3755\":[\"EPSG:3755\",\"+proj=tmerc +lat_0=40.5 +lon_0=-105.1666666666667 +k=0.9999375 +x_0=200000.00001016 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3756\":[\"EPSG:3756\",\"+proj=tmerc +lat_0=40.5 +lon_0=-107.3333333333333 +k=0.9999375 +x_0=399999.99998984 +y_0=99999.99998983997 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:4910\":[\"EPSG:4910\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:3757\":[\"EPSG:3757\",\"+proj=tmerc +lat_0=40.5 +lon_0=-108.75 +k=0.9999375 +x_0=600000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3758\":[\"EPSG:3758\",\"+proj=tmerc +lat_0=40.5 +lon_0=-110.0833333333333 +k=0.9999375 +x_0=800000.0000101599 +y_0=99999.99998983997 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3759\":[\"EPSG:3759\",\"+proj=tmerc +lat_0=21.16666666666667 +lon_0=-158 +k=0.99999 +x_0=500000.00001016 +y_0=0 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:3760\":[\"EPSG:3760\",\"+proj=tmerc +lat_0=21.16666666666667 +lon_0=-158 +k=0.99999 +x_0=500000.00001016 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3761\":[\"EPSG:3761\",\"+proj=utm +zone=22 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3762\":[\"EPSG:3762\",\"+proj=lcc +lat_1=-54 +lat_2=-54.75 +lat_0=-55 +lon_0=-37 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3764\":[\"EPSG:3764\",\"+proj=tmerc +lat_0=-44 +lon_0=-176.5 +k=1 +x_0=400000 +y_0=800000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:4911\":[\"EPSG:4911\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:3766\":[\"EPSG:3766\",\"+proj=lcc +lat_1=45.91666666666666 +lat_2=43.08333333333334 +lat_0=0 +lon_0=16.5 +x_0=0 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3767\":[\"EPSG:3767\",\"+proj=utm +zone=33 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3768\":[\"EPSG:3768\",\"+proj=utm +zone=34 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3769\":[\"EPSG:3769\",\"+proj=utm +zone=20 +ellps=clrk66 +towgs84=-73,213,296,0,0,0,0 +units=m +no_defs \"],\"EPSG:3770\":[\"EPSG:3770\",\"+proj=tmerc +lat_0=32 +lon_0=-64.75 +k=1 +x_0=550000 +y_0=100000 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3771\":[\"EPSG:3771\",\"+proj=tmerc +lat_0=0 +lon_0=-111 +k=0.9999 +x_0=0 +y_0=0 +datum=NAD27 +units=m +no_defs \"],\"EPSG:3772\":[\"EPSG:3772\",\"+proj=tmerc +lat_0=0 +lon_0=-114 +k=0.9999 +x_0=0 +y_0=0 +datum=NAD27 +units=m +no_defs \"],\"EPSG:3773\":[\"EPSG:3773\",\"+proj=tmerc +lat_0=0 +lon_0=-117 +k=0.9999 +x_0=0 +y_0=0 +datum=NAD27 +units=m +no_defs \"],\"EPSG:3774\":[\"EPSG:3774\",\"+proj=tmerc +lat_0=0 +lon_0=-120 +k=0.9999 +x_0=0 +y_0=0 +datum=NAD27 +units=m +no_defs \"],\"EPSG:3775\":[\"EPSG:3775\",\"+proj=tmerc +lat_0=0 +lon_0=-111 +k=0.9999 +x_0=0 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:3776\":[\"EPSG:3776\",\"+proj=tmerc +lat_0=0 +lon_0=-114 +k=0.9999 +x_0=0 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:3777\":[\"EPSG:3777\",\"+proj=tmerc +lat_0=0 +lon_0=-117 +k=0.9999 +x_0=0 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:3778\":[\"EPSG:3778\",\"+proj=tmerc +lat_0=0 +lon_0=-120 +k=0.9999 +x_0=0 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:3779\":[\"EPSG:3779\",\"+proj=tmerc +lat_0=0 +lon_0=-111 +k=0.9999 +x_0=0 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3780\":[\"EPSG:3780\",\"+proj=tmerc +lat_0=0 +lon_0=-114 +k=0.9999 +x_0=0 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3781\":[\"EPSG:3781\",\"+proj=tmerc +lat_0=0 +lon_0=-117 +k=0.9999 +x_0=0 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3782\":[\"EPSG:3782\",\"+proj=tmerc +lat_0=0 +lon_0=-120 +k=0.9999 +x_0=0 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3783\":[\"EPSG:3783\",\"+proj=tmerc +lat_0=-25.06855261111111 +lon_0=-130.1129671111111 +k=1 +x_0=14200 +y_0=15500 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3784\":[\"EPSG:3784\",\"+proj=utm +zone=9 +south +ellps=intl +towgs84=185,165,42,0,0,0,0 +units=m +no_defs \"],\"EPSG:3787\":[\"EPSG:3787\",\"+proj=tmerc +lat_0=0 +lon_0=15 +k=0.9999 +x_0=500000 +y_0=-5000000 +datum=hermannskogel +units=m +no_defs \"],\"EPSG:3788\":[\"EPSG:3788\",\"+proj=tmerc +lat_0=0 +lon_0=166 +k=1 +x_0=3500000 +y_0=10000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3789\":[\"EPSG:3789\",\"+proj=tmerc +lat_0=0 +lon_0=169 +k=1 +x_0=3500000 +y_0=10000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3790\":[\"EPSG:3790\",\"+proj=tmerc +lat_0=0 +lon_0=179 +k=1 +x_0=3500000 +y_0=10000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3791\":[\"EPSG:3791\",\"+proj=tmerc +lat_0=0 +lon_0=-178 +k=1 +x_0=3500000 +y_0=10000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3793\":[\"EPSG:3793\",\"+proj=tmerc +lat_0=0 +lon_0=-176.5 +k=1 +x_0=3500000 +y_0=10000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3794\":[\"EPSG:3794\",\"+proj=tmerc +lat_0=0 +lon_0=15 +k=0.9999 +x_0=500000 +y_0=-5000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3974\":[\"EPSG:3974\",\"+proj=laea +lat_0=-90 +lon_0=0 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3795\":[\"EPSG:3795\",\"+proj=lcc +lat_1=23 +lat_2=21.7 +lat_0=22.35 +lon_0=-81 +x_0=500000 +y_0=280296.016 +datum=NAD27 +units=m +no_defs \"],\"EPSG:3796\":[\"EPSG:3796\",\"+proj=lcc +lat_1=21.3 +lat_2=20.13333333333333 +lat_0=20.71666666666667 +lon_0=-76.83333333333333 +x_0=500000 +y_0=229126.939 +datum=NAD27 +units=m +no_defs \"],\"EPSG:3797\":[\"EPSG:3797\",\"+proj=lcc +lat_1=50 +lat_2=46 +lat_0=44 +lon_0=-70 +x_0=800000 +y_0=0 +datum=NAD27 +units=m +no_defs \"],\"EPSG:3798\":[\"EPSG:3798\",\"+proj=lcc +lat_1=50 +lat_2=46 +lat_0=44 +lon_0=-70 +x_0=800000 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:3799\":[\"EPSG:3799\",\"+proj=lcc +lat_1=50 +lat_2=46 +lat_0=44 +lon_0=-70 +x_0=800000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3800\":[\"EPSG:3800\",\"+proj=tmerc +lat_0=0 +lon_0=-120 +k=0.9999 +x_0=0 +y_0=0 +datum=NAD27 +units=m +no_defs \"],\"EPSG:3801\":[\"EPSG:3801\",\"+proj=tmerc +lat_0=0 +lon_0=-120 +k=0.9999 +x_0=0 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:3802\":[\"EPSG:3802\",\"+proj=tmerc +lat_0=0 +lon_0=-120 +k=0.9999 +x_0=0 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:4912\":[\"EPSG:4912\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:3814\":[\"EPSG:3814\",\"+proj=tmerc +lat_0=32.5 +lon_0=-89.75 +k=0.9998335 +x_0=500000 +y_0=1300000 +datum=NAD83 +units=m +no_defs \"],\"EPSG:3816\":[\"EPSG:3816\",\"+proj=tmerc +lat_0=32.5 +lon_0=-89.75 +k=0.9998335 +x_0=500000 +y_0=1300000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3825\":[\"EPSG:3825\",\"+proj=tmerc +lat_0=0 +lon_0=119 +k=0.9999 +x_0=250000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3827\":[\"EPSG:3827\",\"+proj=tmerc +lat_0=0 +lon_0=119 +k=0.9999 +x_0=250000 +y_0=0 +ellps=aust_SA +units=m +no_defs \"],\"EPSG:3829\":[\"EPSG:3829\",\"+proj=utm +zone=51 +ellps=intl +towgs84=-637,-549,-203,0,0,0,0 +units=m +no_defs \"],\"EPSG:3833\":[\"EPSG:3833\",\"+proj=tmerc +lat_0=0 +lon_0=9 +k=1 +x_0=2500000 +y_0=0 +ellps=krass +towgs84=2.3287,-147.0425,-92.0802,-0.3092483,0.32482185,0.49729934,5.68906266 +units=m +no_defs \"],\"EPSG:3834\":[\"EPSG:3834\",\"+proj=tmerc +lat_0=0 +lon_0=9 +k=1 +x_0=2500000 +y_0=0 +ellps=krass +towgs84=26,-121,-78,0,0,0,0 +units=m +no_defs \"],\"EPSG:3835\":[\"EPSG:3835\",\"+proj=tmerc +lat_0=0 +lon_0=15 +k=1 +x_0=3500000 +y_0=0 +ellps=krass +towgs84=26,-121,-78,0,0,0,0 +units=m +no_defs \"],\"EPSG:3836\":[\"EPSG:3836\",\"+proj=tmerc +lat_0=0 +lon_0=21 +k=1 +x_0=4500000 +y_0=0 +ellps=krass +towgs84=26,-121,-78,0,0,0,0 +units=m +no_defs \"],\"EPSG:3837\":[\"EPSG:3837\",\"+proj=tmerc +lat_0=0 +lon_0=9 +k=1 +x_0=3500000 +y_0=0 +ellps=krass +towgs84=2.3287,-147.0425,-92.0802,-0.3092483,0.32482185,0.49729934,5.68906266 +units=m +no_defs \"],\"EPSG:3838\":[\"EPSG:3838\",\"+proj=tmerc +lat_0=0 +lon_0=12 +k=1 +x_0=4500000 +y_0=0 +ellps=krass +towgs84=2.3287,-147.0425,-92.0802,-0.3092483,0.32482185,0.49729934,5.68906266 +units=m +no_defs \"],\"EPSG:3839\":[\"EPSG:3839\",\"+proj=tmerc +lat_0=0 +lon_0=27 +k=1 +x_0=9500000 +y_0=0 +ellps=krass +towgs84=2.3287,-147.0425,-92.0802,-0.3092483,0.32482185,0.49729934,5.68906266 +units=m +no_defs \"],\"EPSG:3840\":[\"EPSG:3840\",\"+proj=tmerc +lat_0=0 +lon_0=30 +k=1 +x_0=10500000 +y_0=0 +ellps=krass +towgs84=2.3287,-147.0425,-92.0802,-0.3092483,0.32482185,0.49729934,5.68906266 +units=m +no_defs \"],\"EPSG:3841\":[\"EPSG:3841\",\"+proj=tmerc +lat_0=0 +lon_0=18 +k=1 +x_0=6500000 +y_0=0 +ellps=krass +towgs84=26,-121,-78,0,0,0,0 +units=m +no_defs \"],\"EPSG:3842\":[\"EPSG:3842\",\"+proj=tmerc +lat_0=0 +lon_0=18 +k=1 +x_0=6500000 +y_0=0 +ellps=krass +towgs84=26,-121,-78,0,0,0,0 +units=m +no_defs \"],\"EPSG:3843\":[\"EPSG:3843\",\"+proj=tmerc +lat_0=0 +lon_0=18 +k=1 +x_0=6500000 +y_0=0 +ellps=krass +towgs84=26,-121,-78,0,0,0,0 +units=m +no_defs \"],\"EPSG:3844\":[\"EPSG:3844\",\"+proj=sterea +lat_0=46 +lon_0=25 +k=0.99975 +x_0=500000 +y_0=500000 +ellps=krass +towgs84=2.329,-147.042,-92.08,0.309,-0.325,-0.497,5.69 +units=m +no_defs \"],\"EPSG:3845\":[\"EPSG:3845\",\"+proj=tmerc +lat_0=0 +lon_0=11.30625 +k=1.000006 +x_0=1500025.141 +y_0=-667.282 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3846\":[\"EPSG:3846\",\"+proj=tmerc +lat_0=0 +lon_0=13.55626666666667 +k=1.0000058 +x_0=1500044.695 +y_0=-667.13 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3847\":[\"EPSG:3847\",\"+proj=tmerc +lat_0=0 +lon_0=15.80628452944445 +k=1.00000561024 +x_0=1500064.274 +y_0=-667.711 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3848\":[\"EPSG:3848\",\"+proj=tmerc +lat_0=0 +lon_0=18.0563 +k=1.0000054 +x_0=1500083.521 +y_0=-668.8440000000001 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3849\":[\"EPSG:3849\",\"+proj=tmerc +lat_0=0 +lon_0=20.30631666666667 +k=1.0000052 +x_0=1500102.765 +y_0=-670.706 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3850\":[\"EPSG:3850\",\"+proj=tmerc +lat_0=0 +lon_0=22.55633333333333 +k=1.0000049 +x_0=1500121.846 +y_0=-672.557 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3851\":[\"EPSG:3851\",\"+proj=lcc +lat_1=-37.5 +lat_2=-44.5 +lat_0=-41 +lon_0=173 +x_0=3000000 +y_0=7000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3852\":[\"EPSG:3852\",\"+proj=lcc +lat_1=-76.66666666666667 +lat_2=-79.33333333333333 +lat_0=-90 +lon_0=157 +x_0=500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3854\":[\"EPSG:3854\",\"+proj=tmerc +lat_0=0 +lon_0=18.05787 +k=0.99999506 +x_0=100182.7406 +y_0=-6500620.1207 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3873\":[\"EPSG:3873\",\"+proj=tmerc +lat_0=0 +lon_0=19 +k=1 +x_0=19500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3874\":[\"EPSG:3874\",\"+proj=tmerc +lat_0=0 +lon_0=20 +k=1 +x_0=20500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3875\":[\"EPSG:3875\",\"+proj=tmerc +lat_0=0 +lon_0=21 +k=1 +x_0=21500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3876\":[\"EPSG:3876\",\"+proj=tmerc +lat_0=0 +lon_0=22 +k=1 +x_0=22500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3877\":[\"EPSG:3877\",\"+proj=tmerc +lat_0=0 +lon_0=23 +k=1 +x_0=23500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3878\":[\"EPSG:3878\",\"+proj=tmerc +lat_0=0 +lon_0=24 +k=1 +x_0=24500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3881\":[\"EPSG:3881\",\"+proj=tmerc +lat_0=0 +lon_0=27 +k=1 +x_0=27500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3882\":[\"EPSG:3882\",\"+proj=tmerc +lat_0=0 +lon_0=28 +k=1 +x_0=28500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3883\":[\"EPSG:3883\",\"+proj=tmerc +lat_0=0 +lon_0=29 +k=1 +x_0=29500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3884\":[\"EPSG:3884\",\"+proj=tmerc +lat_0=0 +lon_0=30 +k=1 +x_0=30500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3885\":[\"EPSG:3885\",\"+proj=tmerc +lat_0=0 +lon_0=31 +k=1 +x_0=31500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3890\":[\"EPSG:3890\",\"+proj=utm +zone=37 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3891\":[\"EPSG:3891\",\"+proj=utm +zone=38 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3892\":[\"EPSG:3892\",\"+proj=utm +zone=39 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3893\":[\"EPSG:3893\",\"+proj=tmerc +lat_0=29.02626833333333 +lon_0=46.5 +k=0.9994 +x_0=800000 +y_0=0 +ellps=intl +towgs84=-87,-98,-121,0,0,0,0 +units=m +no_defs \"],\"EPSG:3909\":[\"EPSG:3909\",\"+proj=tmerc +lat_0=0 +lon_0=21 +k=0.9999 +x_0=7500000 +y_0=0 +ellps=bessel +towgs84=682,-203,480,0,0,0,0 +units=m +no_defs \"],\"EPSG:3910\":[\"EPSG:3910\",\"+proj=tmerc +lat_0=0 +lon_0=24 +k=0.9999 +x_0=8500000 +y_0=0 +ellps=bessel +towgs84=682,-203,480,0,0,0,0 +units=m +no_defs \"],\"EPSG:3911\":[\"EPSG:3911\",\"+proj=tmerc +lat_0=0 +lon_0=15 +k=0.9999 +x_0=500000 +y_0=0 +ellps=bessel +towgs84=682,-203,480,0,0,0,0 +units=m +no_defs \"],\"EPSG:3912\":[\"EPSG:3912\",\"+proj=tmerc +lat_0=0 +lon_0=15 +k=0.9999 +x_0=500000 +y_0=-5000000 +ellps=bessel +towgs84=682,-203,480,0,0,0,0 +units=m +no_defs \"],\"EPSG:3920\":[\"EPSG:3920\",\"+proj=utm +zone=20 +ellps=clrk66 +towgs84=11,72,-101,0,0,0,0 +units=m +no_defs \"],\"EPSG:3942\":[\"EPSG:3942\",\"+proj=lcc +lat_1=41.25 +lat_2=42.75 +lat_0=42 +lon_0=3 +x_0=1700000 +y_0=1200000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3944\":[\"EPSG:3944\",\"+proj=lcc +lat_1=43.25 +lat_2=44.75 +lat_0=44 +lon_0=3 +x_0=1700000 +y_0=3200000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3976\":[\"EPSG:3976\",\"+proj=stere +lat_0=-90 +lat_ts=-70 +lon_0=0 +k=1 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3945\":[\"EPSG:3945\",\"+proj=lcc +lat_1=44.25 +lat_2=45.75 +lat_0=45 +lon_0=3 +x_0=1700000 +y_0=4200000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3946\":[\"EPSG:3946\",\"+proj=lcc +lat_1=45.25 +lat_2=46.75 +lat_0=46 +lon_0=3 +x_0=1700000 +y_0=5200000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3947\":[\"EPSG:3947\",\"+proj=lcc +lat_1=46.25 +lat_2=47.75 +lat_0=47 +lon_0=3 +x_0=1700000 +y_0=6200000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3948\":[\"EPSG:3948\",\"+proj=lcc +lat_1=47.25 +lat_2=48.75 +lat_0=48 +lon_0=3 +x_0=1700000 +y_0=7200000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3949\":[\"EPSG:3949\",\"+proj=lcc +lat_1=48.25 +lat_2=49.75 +lat_0=49 +lon_0=3 +x_0=1700000 +y_0=8200000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3950\":[\"EPSG:3950\",\"+proj=lcc +lat_1=49.25 +lat_2=50.75 +lat_0=50 +lon_0=3 +x_0=1700000 +y_0=9200000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3968\":[\"EPSG:3968\",\"+proj=lcc +lat_1=37 +lat_2=39.5 +lat_0=36 +lon_0=-79.5 +x_0=0 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:3969\":[\"EPSG:3969\",\"+proj=lcc +lat_1=37 +lat_2=39.5 +lat_0=36 +lon_0=-79.5 +x_0=0 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3970\":[\"EPSG:3970\",\"+proj=lcc +lat_1=37 +lat_2=39.5 +lat_0=36 +lon_0=-79.5 +x_0=0 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3979\":[\"EPSG:3979\",\"+proj=lcc +lat_1=49 +lat_2=77 +lat_0=49 +lon_0=-95 +x_0=0 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:3985\":[\"EPSG:3985\",\"+proj=lcc +lat_1=-6.5 +lat_2=-11.5 +lat_0=9 +lon_0=26 +x_0=500000 +y_0=500000 +ellps=clrk66 +towgs84=-103.746,-9.614,-255.95,0,0,0,0 +units=m +no_defs \"],\"EPSG:3986\":[\"EPSG:3986\",\"+proj=tmerc +lat_0=-9 +lon_0=30 +k=1 +x_0=200000 +y_0=500000 +ellps=clrk66 +towgs84=-103.746,-9.614,-255.95,0,0,0,0 +units=m +no_defs \"],\"EPSG:3987\":[\"EPSG:3987\",\"+proj=tmerc +lat_0=-9 +lon_0=28 +k=1 +x_0=200000 +y_0=500000 +ellps=clrk66 +towgs84=-103.746,-9.614,-255.95,0,0,0,0 +units=m +no_defs \"],\"EPSG:3988\":[\"EPSG:3988\",\"+proj=tmerc +lat_0=-9 +lon_0=26 +k=1 +x_0=200000 +y_0=500000 +ellps=clrk66 +towgs84=-103.746,-9.614,-255.95,0,0,0,0 +units=m +no_defs \"],\"EPSG:3989\":[\"EPSG:3989\",\"+proj=tmerc +lat_0=-9 +lon_0=24 +k=1 +x_0=200000 +y_0=500000 +ellps=clrk66 +towgs84=-103.746,-9.614,-255.95,0,0,0,0 +units=m +no_defs \"],\"EPSG:3991\":[\"EPSG:3991\",\"+proj=lcc +lat_1=18.43333333333333 +lat_2=18.03333333333333 +lat_0=17.83333333333333 +lon_0=-66.43333333333334 +x_0=152400.3048006096 +y_0=0 +ellps=clrk66 +towgs84=11,72,-101,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3992\":[\"EPSG:3992\",\"+proj=lcc +lat_1=18.43333333333333 +lat_2=18.03333333333333 +lat_0=17.83333333333333 +lon_0=-66.43333333333334 +x_0=152400.3048006096 +y_0=30480.06096012192 +ellps=clrk66 +towgs84=11,72,-101,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:3996\":[\"EPSG:3996\",\"+proj=stere +lat_0=90 +lat_ts=75 +lon_0=0 +k=1 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3997\":[\"EPSG:3997\",\"+proj=tmerc +lat_0=0 +lon_0=55.33333333333334 +k=1 +x_0=500000 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:4026\":[\"EPSG:4026\",\"+proj=tmerc +lat_0=0 +lon_0=28.4 +k=0.9999400000000001 +x_0=200000 +y_0=-5000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:4038\":[\"EPSG:4038\",\"+proj=utm +zone=36 +datum=WGS84 +units=m +no_defs \"],\"EPSG:4048\":[\"EPSG:4048\",\"+proj=tmerc +lat_0=0 +lon_0=12 +k=0.9999 +x_0=500000 +y_0=10000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:4049\":[\"EPSG:4049\",\"+proj=tmerc +lat_0=0 +lon_0=14 +k=0.9999 +x_0=500000 +y_0=10000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:4050\":[\"EPSG:4050\",\"+proj=tmerc +lat_0=0 +lon_0=16 +k=0.9999 +x_0=500000 +y_0=10000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:4051\":[\"EPSG:4051\",\"+proj=tmerc +lat_0=0 +lon_0=18 +k=0.9999 +x_0=500000 +y_0=10000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:4056\":[\"EPSG:4056\",\"+proj=tmerc +lat_0=0 +lon_0=20 +k=0.9999 +x_0=500000 +y_0=10000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:4057\":[\"EPSG:4057\",\"+proj=tmerc +lat_0=0 +lon_0=22 +k=0.9999 +x_0=500000 +y_0=10000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:4058\":[\"EPSG:4058\",\"+proj=tmerc +lat_0=0 +lon_0=24 +k=0.9999 +x_0=500000 +y_0=10000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:4059\":[\"EPSG:4059\",\"+proj=tmerc +lat_0=0 +lon_0=26 +k=0.9999 +x_0=500000 +y_0=10000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:4060\":[\"EPSG:4060\",\"+proj=tmerc +lat_0=0 +lon_0=28 +k=0.9999 +x_0=500000 +y_0=10000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:4061\":[\"EPSG:4061\",\"+proj=utm +zone=33 +south +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:4062\":[\"EPSG:4062\",\"+proj=utm +zone=34 +south +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:4063\":[\"EPSG:4063\",\"+proj=utm +zone=35 +south +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:4071\":[\"EPSG:4071\",\"+proj=utm +zone=23 +south +ellps=intl +towgs84=-143.87,243.37,-33.52,0,0,0,0 +units=m +no_defs \"],\"EPSG:4082\":[\"EPSG:4082\",\"+proj=utm +zone=27 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:4088\":[\"EPSG:4088\",\"+proj=eqc +lat_ts=0 +lat_0=0 +lon_0=0 +x_0=0 +y_0=0 +a=6371007 +b=6371007 +units=m +no_defs \"],\"EPSG:4093\":[\"EPSG:4093\",\"+proj=tmerc +lat_0=0 +lon_0=9 +k=0.99998 +x_0=200000 +y_0=-5000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:4095\":[\"EPSG:4095\",\"+proj=tmerc +lat_0=0 +lon_0=11.75 +k=0.99998 +x_0=600000 +y_0=-5000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:4096\":[\"EPSG:4096\",\"+proj=tmerc +lat_0=0 +lon_0=15 +k=1 +x_0=800000 +y_0=-5000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:4217\":[\"EPSG:4217\",\"+proj=tmerc +lat_0=0 +lon_0=171 +k=0.9996 +x_0=500000.001016002 +y_0=0 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:4390\":[\"EPSG:4390\",\"+proj=cass +lat_0=2.042583333333333 +lon_0=103.5627583333333 +x_0=0 +y_0=0 +a=6377304.063 +b=6356103.038993155 +towgs84=-11,851,5,0,0,0,0 +units=m +no_defs \"],\"EPSG:4391\":[\"EPSG:4391\",\"+proj=cass +lat_0=2.712283333333334 +lon_0=101.9411666666667 +x_0=-242.005 +y_0=-948.547 +a=6377304.063 +b=6356103.038993155 +towgs84=-11,851,5,0,0,0,0 +units=m +no_defs \"],\"EPSG:4392\":[\"EPSG:4392\",\"+proj=cass +lat_0=3.710972222222222 +lon_0=102.4361777777778 +x_0=0 +y_0=0 +a=6377304.063 +b=6356103.038993155 +towgs84=-11,851,5,0,0,0,0 +units=m +no_defs \"],\"EPSG:4914\":[\"EPSG:4914\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:4393\":[\"EPSG:4393\",\"+proj=cass +lat_0=3.680344444444444 +lon_0=101.5082444444444 +x_0=-21759.438 +y_0=55960.906 +a=6377304.063 +b=6356103.038993155 +towgs84=-11,851,5,0,0,0,0 +units=m +no_defs \"],\"EPSG:4394\":[\"EPSG:4394\",\"+proj=cass +lat_0=4.946141666666667 +lon_0=102.8952083333333 +x_0=0 +y_0=0 +a=6377304.063 +b=6356103.038993155 +towgs84=-11,851,5,0,0,0,0 +units=m +no_defs \"],\"EPSG:4395\":[\"EPSG:4395\",\"+proj=cass +lat_0=5.421325 +lon_0=100.3458694444444 +x_0=0 +y_0=0 +a=6377304.063 +b=6356103.038993155 +towgs84=-11,851,5,0,0,0,0 +units=m +no_defs \"],\"EPSG:4396\":[\"EPSG:4396\",\"+proj=cass +lat_0=5.965147222222223 +lon_0=100.6375944444444 +x_0=0 +y_0=0 +a=6377304.063 +b=6356103.038993155 +towgs84=-11,851,5,0,0,0,0 +units=m +no_defs \"],\"EPSG:4397\":[\"EPSG:4397\",\"+proj=cass +lat_0=4.859380555555555 +lon_0=100.8167666666667 +x_0=0 +y_0=133453.669 +a=6377304.063 +b=6356103.038993155 +towgs84=-11,851,5,0,0,0,0 +units=m +no_defs \"],\"EPSG:4398\":[\"EPSG:4398\",\"+proj=cass +lat_0=5.893922222222222 +lon_0=102.1772916666667 +x_0=0 +y_0=0 +a=6377304.063 +b=6356103.038993155 +towgs84=-11,851,5,0,0,0,0 +units=m +no_defs \"],\"EPSG:4399\":[\"EPSG:4399\",\"+proj=tmerc +lat_0=0 +lon_0=171 +k=0.9996 +x_0=500000.001016002 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:4400\":[\"EPSG:4400\",\"+proj=tmerc +lat_0=0 +lon_0=177 +k=0.9996 +x_0=500000.001016002 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:4401\":[\"EPSG:4401\",\"+proj=tmerc +lat_0=0 +lon_0=-177 +k=0.9996 +x_0=500000.001016002 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:4915\":[\"EPSG:4915\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:4402\":[\"EPSG:4402\",\"+proj=tmerc +lat_0=0 +lon_0=-171 +k=0.9996 +x_0=500000.001016002 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:4403\":[\"EPSG:4403\",\"+proj=tmerc +lat_0=0 +lon_0=-165 +k=0.9996 +x_0=500000.001016002 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:4404\":[\"EPSG:4404\",\"+proj=tmerc +lat_0=0 +lon_0=-159 +k=0.9996 +x_0=500000.001016002 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:4405\":[\"EPSG:4405\",\"+proj=tmerc +lat_0=0 +lon_0=-153 +k=0.9996 +x_0=500000.001016002 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:4406\":[\"EPSG:4406\",\"+proj=tmerc +lat_0=0 +lon_0=-147 +k=0.9996 +x_0=500000.001016002 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:4407\":[\"EPSG:4407\",\"+proj=tmerc +lat_0=0 +lon_0=-141 +k=0.9996 +x_0=500000.001016002 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:4408\":[\"EPSG:4408\",\"+proj=tmerc +lat_0=0 +lon_0=-135 +k=0.9996 +x_0=500000.001016002 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:4409\":[\"EPSG:4409\",\"+proj=tmerc +lat_0=0 +lon_0=-129 +k=0.9996 +x_0=500000.001016002 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:4410\":[\"EPSG:4410\",\"+proj=tmerc +lat_0=0 +lon_0=-123 +k=0.9996 +x_0=500000.001016002 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:4411\":[\"EPSG:4411\",\"+proj=tmerc +lat_0=0 +lon_0=-117 +k=0.9996 +x_0=500000.001016002 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:4412\":[\"EPSG:4412\",\"+proj=tmerc +lat_0=0 +lon_0=-111 +k=0.9996 +x_0=500000.001016002 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:4413\":[\"EPSG:4413\",\"+proj=tmerc +lat_0=0 +lon_0=-105 +k=0.9996 +x_0=500000.001016002 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:4414\":[\"EPSG:4414\",\"+proj=tmerc +lat_0=13.5 +lon_0=144.75 +k=1 +x_0=100000 +y_0=200000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:4415\":[\"EPSG:4415\",\"+proj=lcc +lat_1=-6.5 +lat_2=-11.5 +lat_0=-9 +lon_0=26 +x_0=500000 +y_0=500000 +ellps=clrk66 +towgs84=-103.746,-9.614,-255.95,0,0,0,0 +units=m +no_defs \"],\"EPSG:4417\":[\"EPSG:4417\",\"+proj=tmerc +lat_0=0 +lon_0=21 +k=1 +x_0=7500000 +y_0=0 +ellps=krass +towgs84=26,-121,-78,0,0,0,0 +units=m +no_defs \"],\"EPSG:4418\":[\"EPSG:4418\",\"+proj=tmerc +lat_0=0 +lon_0=-75 +k=0.9996 +x_0=500000.001016002 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:4419\":[\"EPSG:4419\",\"+proj=tmerc +lat_0=0 +lon_0=-69 +k=0.9996 +x_0=500000.001016002 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:4420\":[\"EPSG:4420\",\"+proj=tmerc +lat_0=0 +lon_0=177 +k=0.9996 +x_0=500000.001016002 +y_0=0 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:4421\":[\"EPSG:4421\",\"+proj=tmerc +lat_0=0 +lon_0=-177 +k=0.9996 +x_0=500000.001016002 +y_0=0 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:4491\":[\"EPSG:4491\",\"+proj=tmerc +lat_0=0 +lon_0=75 +k=1 +x_0=13500000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:4422\":[\"EPSG:4422\",\"+proj=tmerc +lat_0=0 +lon_0=-171 +k=0.9996 +x_0=500000.001016002 +y_0=0 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:4423\":[\"EPSG:4423\",\"+proj=tmerc +lat_0=0 +lon_0=-165 +k=0.9996 +x_0=500000.001016002 +y_0=0 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:4424\":[\"EPSG:4424\",\"+proj=tmerc +lat_0=0 +lon_0=-159 +k=0.9996 +x_0=500000.001016002 +y_0=0 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:4425\":[\"EPSG:4425\",\"+proj=tmerc +lat_0=0 +lon_0=-153 +k=0.9996 +x_0=500000.001016002 +y_0=0 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:4426\":[\"EPSG:4426\",\"+proj=tmerc +lat_0=0 +lon_0=-147 +k=0.9996 +x_0=500000.001016002 +y_0=0 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:4427\":[\"EPSG:4427\",\"+proj=tmerc +lat_0=0 +lon_0=-141 +k=0.9996 +x_0=500000.001016002 +y_0=0 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:4428\":[\"EPSG:4428\",\"+proj=tmerc +lat_0=0 +lon_0=-135 +k=0.9996 +x_0=500000.001016002 +y_0=0 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:4429\":[\"EPSG:4429\",\"+proj=tmerc +lat_0=0 +lon_0=-129 +k=0.9996 +x_0=500000.001016002 +y_0=0 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:4430\":[\"EPSG:4430\",\"+proj=tmerc +lat_0=0 +lon_0=-123 +k=0.9996 +x_0=500000.001016002 +y_0=0 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:4431\":[\"EPSG:4431\",\"+proj=tmerc +lat_0=0 +lon_0=-117 +k=0.9996 +x_0=500000.001016002 +y_0=0 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:4432\":[\"EPSG:4432\",\"+proj=tmerc +lat_0=0 +lon_0=-111 +k=0.9996 +x_0=500000.001016002 +y_0=0 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:4433\":[\"EPSG:4433\",\"+proj=tmerc +lat_0=0 +lon_0=-105 +k=0.9996 +x_0=500000.001016002 +y_0=0 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:4434\":[\"EPSG:4434\",\"+proj=tmerc +lat_0=0 +lon_0=24 +k=1 +x_0=8500000 +y_0=0 +ellps=krass +towgs84=26,-121,-78,0,0,0,0 +units=m +no_defs \"],\"EPSG:4437\":[\"EPSG:4437\",\"+proj=lcc +lat_1=18.43333333333333 +lat_2=18.03333333333333 +lat_0=17.83333333333333 +lon_0=-66.43333333333334 +x_0=200000 +y_0=200000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:4438\":[\"EPSG:4438\",\"+proj=tmerc +lat_0=0 +lon_0=-75 +k=0.9996 +x_0=500000.001016002 +y_0=0 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:4439\":[\"EPSG:4439\",\"+proj=tmerc +lat_0=0 +lon_0=-69 +k=0.9996 +x_0=500000.001016002 +y_0=0 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:4456\":[\"EPSG:4456\",\"+proj=lcc +lat_1=41.03333333333333 +lat_2=40.66666666666666 +lat_0=40.5 +lon_0=-74 +x_0=609601.2192024384 +y_0=30480.06096012192 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:4457\":[\"EPSG:4457\",\"+proj=lcc +lat_1=45.68333333333333 +lat_2=44.41666666666666 +lat_0=43.83333333333334 +lon_0=-100 +x_0=600000 +y_0=0 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:4462\":[\"EPSG:4462\",\"+proj=lcc +lat_1=-18 +lat_2=-36 +lat_0=-27 +lon_0=132 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:4467\":[\"EPSG:4467\",\"+proj=utm +zone=21 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:4474\":[\"EPSG:4474\",\"+proj=utm +zone=38 +south +ellps=intl +towgs84=-382,-59,-262,0,0,0,0 +units=m +no_defs \"],\"EPSG:4484\":[\"EPSG:4484\",\"+proj=utm +zone=11 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:4485\":[\"EPSG:4485\",\"+proj=utm +zone=12 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:4486\":[\"EPSG:4486\",\"+proj=utm +zone=13 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:4488\":[\"EPSG:4488\",\"+proj=utm +zone=15 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:4489\":[\"EPSG:4489\",\"+proj=utm +zone=16 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:4492\":[\"EPSG:4492\",\"+proj=tmerc +lat_0=0 +lon_0=81 +k=1 +x_0=14500000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:4493\":[\"EPSG:4493\",\"+proj=tmerc +lat_0=0 +lon_0=87 +k=1 +x_0=15500000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:4494\":[\"EPSG:4494\",\"+proj=tmerc +lat_0=0 +lon_0=93 +k=1 +x_0=16500000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:4495\":[\"EPSG:4495\",\"+proj=tmerc +lat_0=0 +lon_0=99 +k=1 +x_0=17500000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:4496\":[\"EPSG:4496\",\"+proj=tmerc +lat_0=0 +lon_0=105 +k=1 +x_0=18500000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:4498\":[\"EPSG:4498\",\"+proj=tmerc +lat_0=0 +lon_0=117 +k=1 +x_0=20500000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:4499\":[\"EPSG:4499\",\"+proj=tmerc +lat_0=0 +lon_0=123 +k=1 +x_0=21500000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:4500\":[\"EPSG:4500\",\"+proj=tmerc +lat_0=0 +lon_0=129 +k=1 +x_0=22500000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:4501\":[\"EPSG:4501\",\"+proj=tmerc +lat_0=0 +lon_0=135 +k=1 +x_0=23500000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:4502\":[\"EPSG:4502\",\"+proj=tmerc +lat_0=0 +lon_0=75 +k=1 +x_0=500000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:4503\":[\"EPSG:4503\",\"+proj=tmerc +lat_0=0 +lon_0=81 +k=1 +x_0=500000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:4504\":[\"EPSG:4504\",\"+proj=tmerc +lat_0=0 +lon_0=87 +k=1 +x_0=500000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:4505\":[\"EPSG:4505\",\"+proj=tmerc +lat_0=0 +lon_0=93 +k=1 +x_0=500000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:4506\":[\"EPSG:4506\",\"+proj=tmerc +lat_0=0 +lon_0=99 +k=1 +x_0=500000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:4507\":[\"EPSG:4507\",\"+proj=tmerc +lat_0=0 +lon_0=105 +k=1 +x_0=500000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:4509\":[\"EPSG:4509\",\"+proj=tmerc +lat_0=0 +lon_0=117 +k=1 +x_0=500000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:4510\":[\"EPSG:4510\",\"+proj=tmerc +lat_0=0 +lon_0=123 +k=1 +x_0=500000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:4511\":[\"EPSG:4511\",\"+proj=tmerc +lat_0=0 +lon_0=129 +k=1 +x_0=500000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:4512\":[\"EPSG:4512\",\"+proj=tmerc +lat_0=0 +lon_0=135 +k=1 +x_0=500000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:4513\":[\"EPSG:4513\",\"+proj=tmerc +lat_0=0 +lon_0=75 +k=1 +x_0=25500000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:4514\":[\"EPSG:4514\",\"+proj=tmerc +lat_0=0 +lon_0=78 +k=1 +x_0=26500000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:4515\":[\"EPSG:4515\",\"+proj=tmerc +lat_0=0 +lon_0=81 +k=1 +x_0=27500000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:4516\":[\"EPSG:4516\",\"+proj=tmerc +lat_0=0 +lon_0=84 +k=1 +x_0=28500000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:4517\":[\"EPSG:4517\",\"+proj=tmerc +lat_0=0 +lon_0=87 +k=1 +x_0=29500000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:4518\":[\"EPSG:4518\",\"+proj=tmerc +lat_0=0 +lon_0=90 +k=1 +x_0=30500000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:4519\":[\"EPSG:4519\",\"+proj=tmerc +lat_0=0 +lon_0=93 +k=1 +x_0=31500000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:4520\":[\"EPSG:4520\",\"+proj=tmerc +lat_0=0 +lon_0=96 +k=1 +x_0=32500000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:4521\":[\"EPSG:4521\",\"+proj=tmerc +lat_0=0 +lon_0=99 +k=1 +x_0=33500000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:4522\":[\"EPSG:4522\",\"+proj=tmerc +lat_0=0 +lon_0=102 +k=1 +x_0=34500000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:4523\":[\"EPSG:4523\",\"+proj=tmerc +lat_0=0 +lon_0=105 +k=1 +x_0=35500000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:4524\":[\"EPSG:4524\",\"+proj=tmerc +lat_0=0 +lon_0=108 +k=1 +x_0=36500000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:4525\":[\"EPSG:4525\",\"+proj=tmerc +lat_0=0 +lon_0=111 +k=1 +x_0=37500000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:4526\":[\"EPSG:4526\",\"+proj=tmerc +lat_0=0 +lon_0=114 +k=1 +x_0=38500000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:4527\":[\"EPSG:4527\",\"+proj=tmerc +lat_0=0 +lon_0=117 +k=1 +x_0=39500000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:4528\":[\"EPSG:4528\",\"+proj=tmerc +lat_0=0 +lon_0=120 +k=1 +x_0=40500000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:4529\":[\"EPSG:4529\",\"+proj=tmerc +lat_0=0 +lon_0=123 +k=1 +x_0=41500000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:4530\":[\"EPSG:4530\",\"+proj=tmerc +lat_0=0 +lon_0=126 +k=1 +x_0=42500000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:4531\":[\"EPSG:4531\",\"+proj=tmerc +lat_0=0 +lon_0=129 +k=1 +x_0=43500000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:4532\":[\"EPSG:4532\",\"+proj=tmerc +lat_0=0 +lon_0=132 +k=1 +x_0=44500000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:4533\":[\"EPSG:4533\",\"+proj=tmerc +lat_0=0 +lon_0=135 +k=1 +x_0=45500000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:4534\":[\"EPSG:4534\",\"+proj=tmerc +lat_0=0 +lon_0=75 +k=1 +x_0=500000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:4916\":[\"EPSG:4916\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:4535\":[\"EPSG:4535\",\"+proj=tmerc +lat_0=0 +lon_0=78 +k=1 +x_0=500000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:4536\":[\"EPSG:4536\",\"+proj=tmerc +lat_0=0 +lon_0=81 +k=1 +x_0=500000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:4537\":[\"EPSG:4537\",\"+proj=tmerc +lat_0=0 +lon_0=84 +k=1 +x_0=500000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:4538\":[\"EPSG:4538\",\"+proj=tmerc +lat_0=0 +lon_0=87 +k=1 +x_0=500000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:4539\":[\"EPSG:4539\",\"+proj=tmerc +lat_0=0 +lon_0=90 +k=1 +x_0=500000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:4540\":[\"EPSG:4540\",\"+proj=tmerc +lat_0=0 +lon_0=93 +k=1 +x_0=500000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:4541\":[\"EPSG:4541\",\"+proj=tmerc +lat_0=0 +lon_0=96 +k=1 +x_0=500000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:4542\":[\"EPSG:4542\",\"+proj=tmerc +lat_0=0 +lon_0=99 +k=1 +x_0=500000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:4543\":[\"EPSG:4543\",\"+proj=tmerc +lat_0=0 +lon_0=102 +k=1 +x_0=500000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:4544\":[\"EPSG:4544\",\"+proj=tmerc +lat_0=0 +lon_0=105 +k=1 +x_0=500000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:4545\":[\"EPSG:4545\",\"+proj=tmerc +lat_0=0 +lon_0=108 +k=1 +x_0=500000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:4546\":[\"EPSG:4546\",\"+proj=tmerc +lat_0=0 +lon_0=111 +k=1 +x_0=500000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:4547\":[\"EPSG:4547\",\"+proj=tmerc +lat_0=0 +lon_0=114 +k=1 +x_0=500000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:4548\":[\"EPSG:4548\",\"+proj=tmerc +lat_0=0 +lon_0=117 +k=1 +x_0=500000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:4549\":[\"EPSG:4549\",\"+proj=tmerc +lat_0=0 +lon_0=120 +k=1 +x_0=500000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:4550\":[\"EPSG:4550\",\"+proj=tmerc +lat_0=0 +lon_0=123 +k=1 +x_0=500000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:4551\":[\"EPSG:4551\",\"+proj=tmerc +lat_0=0 +lon_0=126 +k=1 +x_0=500000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:4552\":[\"EPSG:4552\",\"+proj=tmerc +lat_0=0 +lon_0=129 +k=1 +x_0=500000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:4553\":[\"EPSG:4553\",\"+proj=tmerc +lat_0=0 +lon_0=132 +k=1 +x_0=500000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:4554\":[\"EPSG:4554\",\"+proj=tmerc +lat_0=0 +lon_0=135 +k=1 +x_0=500000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:4559\":[\"EPSG:4559\",\"+proj=utm +zone=20 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:4568\":[\"EPSG:4568\",\"+proj=tmerc +lat_0=0 +lon_0=75 +k=1 +x_0=13500000 +y_0=0 +ellps=krass +units=m +no_defs \"],\"EPSG:4573\":[\"EPSG:4573\",\"+proj=tmerc +lat_0=0 +lon_0=105 +k=1 +x_0=18500000 +y_0=0 +ellps=krass +units=m +no_defs \"],\"EPSG:4574\":[\"EPSG:4574\",\"+proj=tmerc +lat_0=0 +lon_0=111 +k=1 +x_0=19500000 +y_0=0 +ellps=krass +units=m +no_defs \"],\"EPSG:4575\":[\"EPSG:4575\",\"+proj=tmerc +lat_0=0 +lon_0=117 +k=1 +x_0=20500000 +y_0=0 +ellps=krass +units=m +no_defs \"],\"EPSG:4576\":[\"EPSG:4576\",\"+proj=tmerc +lat_0=0 +lon_0=123 +k=1 +x_0=21500000 +y_0=0 +ellps=krass +units=m +no_defs \"],\"EPSG:4577\":[\"EPSG:4577\",\"+proj=tmerc +lat_0=0 +lon_0=129 +k=1 +x_0=22500000 +y_0=0 +ellps=krass +units=m +no_defs \"],\"EPSG:4578\":[\"EPSG:4578\",\"+proj=tmerc +lat_0=0 +lon_0=135 +k=1 +x_0=23500000 +y_0=0 +ellps=krass +units=m +no_defs \"],\"EPSG:4579\":[\"EPSG:4579\",\"+proj=tmerc +lat_0=0 +lon_0=75 +k=1 +x_0=500000 +y_0=0 +ellps=krass +units=m +no_defs \"],\"EPSG:4580\":[\"EPSG:4580\",\"+proj=tmerc +lat_0=0 +lon_0=81 +k=1 +x_0=500000 +y_0=0 +ellps=krass +units=m +no_defs \"],\"EPSG:4581\":[\"EPSG:4581\",\"+proj=tmerc +lat_0=0 +lon_0=87 +k=1 +x_0=500000 +y_0=0 +ellps=krass +units=m +no_defs \"],\"EPSG:4582\":[\"EPSG:4582\",\"+proj=tmerc +lat_0=0 +lon_0=93 +k=1 +x_0=500000 +y_0=0 +ellps=krass +units=m +no_defs \"],\"EPSG:4583\":[\"EPSG:4583\",\"+proj=tmerc +lat_0=0 +lon_0=99 +k=1 +x_0=500000 +y_0=0 +ellps=krass +units=m +no_defs \"],\"EPSG:4586\":[\"EPSG:4586\",\"+proj=tmerc +lat_0=0 +lon_0=117 +k=1 +x_0=500000 +y_0=0 +ellps=krass +units=m +no_defs \"],\"EPSG:4588\":[\"EPSG:4588\",\"+proj=tmerc +lat_0=0 +lon_0=129 +k=1 +x_0=500000 +y_0=0 +ellps=krass +units=m +no_defs \"],\"EPSG:4589\":[\"EPSG:4589\",\"+proj=tmerc +lat_0=0 +lon_0=135 +k=1 +x_0=500000 +y_0=0 +ellps=krass +units=m +no_defs \"],\"EPSG:4647\":[\"EPSG:4647\",\"+proj=tmerc +lat_0=0 +lon_0=9 +k=0.9996 +x_0=32500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:4652\":[\"EPSG:4652\",\"+proj=tmerc +lat_0=0 +lon_0=75 +k=1 +x_0=25500000 +y_0=0 +ellps=krass +units=m +no_defs \"],\"EPSG:4653\":[\"EPSG:4653\",\"+proj=tmerc +lat_0=0 +lon_0=78 +k=1 +x_0=26500000 +y_0=0 +ellps=krass +units=m +no_defs \"],\"EPSG:4654\":[\"EPSG:4654\",\"+proj=tmerc +lat_0=0 +lon_0=81 +k=1 +x_0=27500000 +y_0=0 +ellps=krass +units=m +no_defs \"],\"EPSG:4655\":[\"EPSG:4655\",\"+proj=tmerc +lat_0=0 +lon_0=84 +k=1 +x_0=28500000 +y_0=0 +ellps=krass +units=m +no_defs \"],\"EPSG:4656\":[\"EPSG:4656\",\"+proj=tmerc +lat_0=0 +lon_0=87 +k=1 +x_0=29500000 +y_0=0 +ellps=krass +units=m +no_defs \"],\"EPSG:4766\":[\"EPSG:4766\",\"+proj=tmerc +lat_0=0 +lon_0=90 +k=1 +x_0=30500000 +y_0=0 +ellps=krass +units=m +no_defs \"],\"EPSG:4767\":[\"EPSG:4767\",\"+proj=tmerc +lat_0=0 +lon_0=93 +k=1 +x_0=31500000 +y_0=0 +ellps=krass +units=m +no_defs \"],\"EPSG:4768\":[\"EPSG:4768\",\"+proj=tmerc +lat_0=0 +lon_0=96 +k=1 +x_0=32500000 +y_0=0 +ellps=krass +units=m +no_defs \"],\"EPSG:4769\":[\"EPSG:4769\",\"+proj=tmerc +lat_0=0 +lon_0=99 +k=1 +x_0=33500000 +y_0=0 +ellps=krass +units=m +no_defs \"],\"EPSG:4770\":[\"EPSG:4770\",\"+proj=tmerc +lat_0=0 +lon_0=102 +k=1 +x_0=34500000 +y_0=0 +ellps=krass +units=m +no_defs \"],\"EPSG:4771\":[\"EPSG:4771\",\"+proj=tmerc +lat_0=0 +lon_0=105 +k=1 +x_0=35500000 +y_0=0 +ellps=krass +units=m +no_defs \"],\"EPSG:4772\":[\"EPSG:4772\",\"+proj=tmerc +lat_0=0 +lon_0=108 +k=1 +x_0=36500000 +y_0=0 +ellps=krass +units=m +no_defs \"],\"EPSG:4773\":[\"EPSG:4773\",\"+proj=tmerc +lat_0=0 +lon_0=111 +k=1 +x_0=37500000 +y_0=0 +ellps=krass +units=m +no_defs \"],\"EPSG:4774\":[\"EPSG:4774\",\"+proj=tmerc +lat_0=0 +lon_0=114 +k=1 +x_0=38500000 +y_0=0 +ellps=krass +units=m +no_defs \"],\"EPSG:4775\":[\"EPSG:4775\",\"+proj=tmerc +lat_0=0 +lon_0=117 +k=1 +x_0=39500000 +y_0=0 +ellps=krass +units=m +no_defs \"],\"EPSG:4776\":[\"EPSG:4776\",\"+proj=tmerc +lat_0=0 +lon_0=120 +k=1 +x_0=40500000 +y_0=0 +ellps=krass +units=m +no_defs \"],\"EPSG:4777\":[\"EPSG:4777\",\"+proj=tmerc +lat_0=0 +lon_0=123 +k=1 +x_0=41500000 +y_0=0 +ellps=krass +units=m +no_defs \"],\"EPSG:4778\":[\"EPSG:4778\",\"+proj=tmerc +lat_0=0 +lon_0=126 +k=1 +x_0=42500000 +y_0=0 +ellps=krass +units=m +no_defs \"],\"EPSG:4779\":[\"EPSG:4779\",\"+proj=tmerc +lat_0=0 +lon_0=129 +k=1 +x_0=43500000 +y_0=0 +ellps=krass +units=m +no_defs \"],\"EPSG:4780\":[\"EPSG:4780\",\"+proj=tmerc +lat_0=0 +lon_0=132 +k=1 +x_0=44500000 +y_0=0 +ellps=krass +units=m +no_defs \"],\"EPSG:4781\":[\"EPSG:4781\",\"+proj=tmerc +lat_0=0 +lon_0=135 +k=1 +x_0=45500000 +y_0=0 +ellps=krass +units=m +no_defs \"],\"EPSG:4782\":[\"EPSG:4782\",\"+proj=tmerc +lat_0=0 +lon_0=75 +k=1 +x_0=500000 +y_0=0 +ellps=krass +units=m +no_defs \"],\"EPSG:4783\":[\"EPSG:4783\",\"+proj=tmerc +lat_0=0 +lon_0=78 +k=1 +x_0=500000 +y_0=0 +ellps=krass +units=m +no_defs \"],\"EPSG:4784\":[\"EPSG:4784\",\"+proj=tmerc +lat_0=0 +lon_0=81 +k=1 +x_0=500000 +y_0=0 +ellps=krass +units=m +no_defs \"],\"EPSG:4785\":[\"EPSG:4785\",\"+proj=tmerc +lat_0=0 +lon_0=84 +k=1 +x_0=500000 +y_0=0 +ellps=krass +units=m +no_defs \"],\"EPSG:4786\":[\"EPSG:4786\",\"+proj=tmerc +lat_0=0 +lon_0=87 +k=1 +x_0=500000 +y_0=0 +ellps=krass +units=m +no_defs \"],\"EPSG:4787\":[\"EPSG:4787\",\"+proj=tmerc +lat_0=0 +lon_0=90 +k=1 +x_0=500000 +y_0=0 +ellps=krass +units=m +no_defs \"],\"EPSG:4788\":[\"EPSG:4788\",\"+proj=tmerc +lat_0=0 +lon_0=93 +k=1 +x_0=500000 +y_0=0 +ellps=krass +units=m +no_defs \"],\"EPSG:4789\":[\"EPSG:4789\",\"+proj=tmerc +lat_0=0 +lon_0=96 +k=1 +x_0=500000 +y_0=0 +ellps=krass +units=m +no_defs \"],\"EPSG:4790\":[\"EPSG:4790\",\"+proj=tmerc +lat_0=0 +lon_0=99 +k=1 +x_0=500000 +y_0=0 +ellps=krass +units=m +no_defs \"],\"EPSG:4791\":[\"EPSG:4791\",\"+proj=tmerc +lat_0=0 +lon_0=102 +k=1 +x_0=500000 +y_0=0 +ellps=krass +units=m +no_defs \"],\"EPSG:4792\":[\"EPSG:4792\",\"+proj=tmerc +lat_0=0 +lon_0=105 +k=1 +x_0=500000 +y_0=0 +ellps=krass +units=m +no_defs \"],\"EPSG:4793\":[\"EPSG:4793\",\"+proj=tmerc +lat_0=0 +lon_0=108 +k=1 +x_0=500000 +y_0=0 +ellps=krass +units=m +no_defs \"],\"EPSG:4795\":[\"EPSG:4795\",\"+proj=tmerc +lat_0=0 +lon_0=114 +k=1 +x_0=500000 +y_0=0 +ellps=krass +units=m +no_defs \"],\"EPSG:4796\":[\"EPSG:4796\",\"+proj=tmerc +lat_0=0 +lon_0=117 +k=1 +x_0=500000 +y_0=0 +ellps=krass +units=m +no_defs \"],\"EPSG:4798\":[\"EPSG:4798\",\"+proj=tmerc +lat_0=0 +lon_0=123 +k=1 +x_0=500000 +y_0=0 +ellps=krass +units=m +no_defs \"],\"EPSG:4799\":[\"EPSG:4799\",\"+proj=tmerc +lat_0=0 +lon_0=126 +k=1 +x_0=500000 +y_0=0 +ellps=krass +units=m +no_defs \"],\"EPSG:4800\":[\"EPSG:4800\",\"+proj=tmerc +lat_0=0 +lon_0=129 +k=1 +x_0=500000 +y_0=0 +ellps=krass +units=m +no_defs \"],\"EPSG:4812\":[\"EPSG:4812\",\"+proj=tmerc +lat_0=0 +lon_0=132 +k=1 +x_0=500000 +y_0=0 +ellps=krass +units=m +no_defs \"],\"EPSG:4822\":[\"EPSG:4822\",\"+proj=tmerc +lat_0=0 +lon_0=135 +k=1 +x_0=500000 +y_0=0 +ellps=krass +units=m +no_defs \"],\"EPSG:4855\":[\"EPSG:4855\",\"+proj=tmerc +lat_0=0 +lon_0=5.5 +k=1 +x_0=100000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:4856\":[\"EPSG:4856\",\"+proj=tmerc +lat_0=0 +lon_0=6.5 +k=1 +x_0=100000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:4857\":[\"EPSG:4857\",\"+proj=tmerc +lat_0=0 +lon_0=7.5 +k=1 +x_0=100000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:4858\":[\"EPSG:4858\",\"+proj=tmerc +lat_0=0 +lon_0=8.5 +k=1 +x_0=100000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:4859\":[\"EPSG:4859\",\"+proj=tmerc +lat_0=0 +lon_0=9.5 +k=1 +x_0=100000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:4860\":[\"EPSG:4860\",\"+proj=tmerc +lat_0=0 +lon_0=10.5 +k=1 +x_0=100000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:4861\":[\"EPSG:4861\",\"+proj=tmerc +lat_0=0 +lon_0=11.5 +k=1 +x_0=100000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:4862\":[\"EPSG:4862\",\"+proj=tmerc +lat_0=0 +lon_0=12.5 +k=1 +x_0=100000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:4863\":[\"EPSG:4863\",\"+proj=tmerc +lat_0=0 +lon_0=13.5 +k=1 +x_0=100000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:4864\":[\"EPSG:4864\",\"+proj=tmerc +lat_0=0 +lon_0=14.5 +k=1 +x_0=100000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:4865\":[\"EPSG:4865\",\"+proj=tmerc +lat_0=0 +lon_0=15.5 +k=1 +x_0=100000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:4866\":[\"EPSG:4866\",\"+proj=tmerc +lat_0=0 +lon_0=16.5 +k=1 +x_0=100000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:4867\":[\"EPSG:4867\",\"+proj=tmerc +lat_0=0 +lon_0=17.5 +k=1 +x_0=100000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:4868\":[\"EPSG:4868\",\"+proj=tmerc +lat_0=0 +lon_0=18.5 +k=1 +x_0=100000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:4869\":[\"EPSG:4869\",\"+proj=tmerc +lat_0=0 +lon_0=19.5 +k=1 +x_0=100000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:4870\":[\"EPSG:4870\",\"+proj=tmerc +lat_0=0 +lon_0=20.5 +k=1 +x_0=100000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:4871\":[\"EPSG:4871\",\"+proj=tmerc +lat_0=0 +lon_0=21.5 +k=1 +x_0=100000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:4872\":[\"EPSG:4872\",\"+proj=tmerc +lat_0=0 +lon_0=22.5 +k=1 +x_0=100000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:4873\":[\"EPSG:4873\",\"+proj=tmerc +lat_0=0 +lon_0=23.5 +k=1 +x_0=100000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:4874\":[\"EPSG:4874\",\"+proj=tmerc +lat_0=0 +lon_0=24.5 +k=1 +x_0=100000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:4875\":[\"EPSG:4875\",\"+proj=tmerc +lat_0=0 +lon_0=25.5 +k=1 +x_0=100000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:4876\":[\"EPSG:4876\",\"+proj=tmerc +lat_0=0 +lon_0=26.5 +k=1 +x_0=100000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:4877\":[\"EPSG:4877\",\"+proj=tmerc +lat_0=0 +lon_0=27.5 +k=1 +x_0=100000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:4878\":[\"EPSG:4878\",\"+proj=tmerc +lat_0=0 +lon_0=28.5 +k=1 +x_0=100000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:4879\":[\"EPSG:4879\",\"+proj=tmerc +lat_0=0 +lon_0=29.5 +k=1 +x_0=100000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:4880\":[\"EPSG:4880\",\"+proj=tmerc +lat_0=0 +lon_0=30.5 +k=1 +x_0=100000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5014\":[\"EPSG:5014\",\"+proj=utm +zone=25 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5015\":[\"EPSG:5015\",\"+proj=utm +zone=26 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5016\":[\"EPSG:5016\",\"+proj=utm +zone=28 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5041\":[\"EPSG:5041\",\"+proj=stere +lat_0=90 +lat_ts=90 +lon_0=0 +k=0.994 +x_0=2000000 +y_0=2000000 +datum=WGS84 +units=m +no_defs \"],\"EPSG:5042\":[\"EPSG:5042\",\"+proj=stere +lat_0=-90 +lat_ts=-90 +lon_0=0 +k=0.994 +x_0=2000000 +y_0=2000000 +datum=WGS84 +units=m +no_defs \"],\"EPSG:5071\":[\"EPSG:5071\",\"+proj=aea +lat_1=29.5 +lat_2=45.5 +lat_0=23 +lon_0=-96 +x_0=0 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5105\":[\"EPSG:5105\",\"+proj=tmerc +lat_0=58 +lon_0=5.5 +k=1 +x_0=100000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5106\":[\"EPSG:5106\",\"+proj=tmerc +lat_0=58 +lon_0=6.5 +k=1 +x_0=100000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5107\":[\"EPSG:5107\",\"+proj=tmerc +lat_0=58 +lon_0=7.5 +k=1 +x_0=100000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5108\":[\"EPSG:5108\",\"+proj=tmerc +lat_0=58 +lon_0=8.5 +k=1 +x_0=100000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5109\":[\"EPSG:5109\",\"+proj=tmerc +lat_0=58 +lon_0=9.5 +k=1 +x_0=100000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5110\":[\"EPSG:5110\",\"+proj=tmerc +lat_0=58 +lon_0=10.5 +k=1 +x_0=100000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5111\":[\"EPSG:5111\",\"+proj=tmerc +lat_0=58 +lon_0=11.5 +k=1 +x_0=100000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5112\":[\"EPSG:5112\",\"+proj=tmerc +lat_0=58 +lon_0=12.5 +k=1 +x_0=100000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5113\":[\"EPSG:5113\",\"+proj=tmerc +lat_0=58 +lon_0=13.5 +k=1 +x_0=100000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5114\":[\"EPSG:5114\",\"+proj=tmerc +lat_0=58 +lon_0=14.5 +k=1 +x_0=100000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5115\":[\"EPSG:5115\",\"+proj=tmerc +lat_0=58 +lon_0=15.5 +k=1 +x_0=100000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5116\":[\"EPSG:5116\",\"+proj=tmerc +lat_0=58 +lon_0=16.5 +k=1 +x_0=100000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5117\":[\"EPSG:5117\",\"+proj=tmerc +lat_0=58 +lon_0=17.5 +k=1 +x_0=100000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5118\":[\"EPSG:5118\",\"+proj=tmerc +lat_0=58 +lon_0=18.5 +k=1 +x_0=100000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5119\":[\"EPSG:5119\",\"+proj=tmerc +lat_0=58 +lon_0=19.5 +k=1 +x_0=100000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5120\":[\"EPSG:5120\",\"+proj=tmerc +lat_0=58 +lon_0=20.5 +k=1 +x_0=100000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5121\":[\"EPSG:5121\",\"+proj=tmerc +lat_0=58 +lon_0=21.5 +k=1 +x_0=100000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5122\":[\"EPSG:5122\",\"+proj=tmerc +lat_0=58 +lon_0=22.5 +k=1 +x_0=100000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5123\":[\"EPSG:5123\",\"+proj=tmerc +lat_0=58 +lon_0=23.5 +k=1 +x_0=100000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5124\":[\"EPSG:5124\",\"+proj=tmerc +lat_0=58 +lon_0=24.5 +k=1 +x_0=100000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5125\":[\"EPSG:5125\",\"+proj=tmerc +lat_0=58 +lon_0=25.5 +k=1 +x_0=100000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5126\":[\"EPSG:5126\",\"+proj=tmerc +lat_0=58 +lon_0=26.5 +k=1 +x_0=100000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5127\":[\"EPSG:5127\",\"+proj=tmerc +lat_0=58 +lon_0=27.5 +k=1 +x_0=100000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5128\":[\"EPSG:5128\",\"+proj=tmerc +lat_0=58 +lon_0=28.5 +k=1 +x_0=100000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5129\":[\"EPSG:5129\",\"+proj=tmerc +lat_0=58 +lon_0=29.5 +k=1 +x_0=100000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5130\":[\"EPSG:5130\",\"+proj=tmerc +lat_0=58 +lon_0=30.5 +k=1 +x_0=100000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5167\":[\"EPSG:5167\",\"+proj=tmerc +lat_0=38 +lon_0=131 +k=1 +x_0=200000 +y_0=500000 +ellps=bessel +units=m +no_defs \"],\"EPSG:5168\":[\"EPSG:5168\",\"+proj=tmerc +lat_0=38 +lon_0=127 +k=1 +x_0=200000 +y_0=550000 +ellps=bessel +units=m +no_defs \"],\"EPSG:5169\":[\"EPSG:5169\",\"+proj=tmerc +lat_0=38 +lon_0=125 +k=1 +x_0=200000 +y_0=500000 +ellps=bessel +units=m +no_defs \"],\"EPSG:5170\":[\"EPSG:5170\",\"+proj=tmerc +lat_0=38 +lon_0=127 +k=1 +x_0=200000 +y_0=500000 +ellps=bessel +units=m +no_defs \"],\"EPSG:5171\":[\"EPSG:5171\",\"+proj=tmerc +lat_0=38 +lon_0=129 +k=1 +x_0=200000 +y_0=500000 +ellps=bessel +units=m +no_defs \"],\"EPSG:5172\":[\"EPSG:5172\",\"+proj=tmerc +lat_0=38 +lon_0=131 +k=1 +x_0=200000 +y_0=500000 +ellps=bessel +units=m +no_defs \"],\"EPSG:5173\":[\"EPSG:5173\",\"+proj=tmerc +lat_0=38 +lon_0=125.0028902777778 +k=1 +x_0=200000 +y_0=500000 +ellps=bessel +units=m +no_defs \"],\"EPSG:5174\":[\"EPSG:5174\",\"+proj=tmerc +lat_0=38 +lon_0=127.0028902777778 +k=1 +x_0=200000 +y_0=500000 +ellps=bessel +units=m +no_defs \"],\"EPSG:5175\":[\"EPSG:5175\",\"+proj=tmerc +lat_0=38 +lon_0=127.0028902777778 +k=1 +x_0=200000 +y_0=550000 +ellps=bessel +units=m +no_defs \"],\"EPSG:5176\":[\"EPSG:5176\",\"+proj=tmerc +lat_0=38 +lon_0=129.0028902777778 +k=1 +x_0=200000 +y_0=500000 +ellps=bessel +units=m +no_defs \"],\"EPSG:5177\":[\"EPSG:5177\",\"+proj=tmerc +lat_0=38 +lon_0=131.0028902777778 +k=1 +x_0=200000 +y_0=500000 +ellps=bessel +units=m +no_defs \"],\"EPSG:5178\":[\"EPSG:5178\",\"+proj=tmerc +lat_0=38 +lon_0=127.5 +k=0.9996 +x_0=1000000 +y_0=2000000 +ellps=bessel +units=m +no_defs \"],\"EPSG:5179\":[\"EPSG:5179\",\"+proj=tmerc +lat_0=38 +lon_0=127.5 +k=0.9996 +x_0=1000000 +y_0=2000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5180\":[\"EPSG:5180\",\"+proj=tmerc +lat_0=38 +lon_0=125 +k=1 +x_0=200000 +y_0=500000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5181\":[\"EPSG:5181\",\"+proj=tmerc +lat_0=38 +lon_0=127 +k=1 +x_0=200000 +y_0=500000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5182\":[\"EPSG:5182\",\"+proj=tmerc +lat_0=38 +lon_0=127 +k=1 +x_0=200000 +y_0=550000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5183\":[\"EPSG:5183\",\"+proj=tmerc +lat_0=38 +lon_0=129 +k=1 +x_0=200000 +y_0=500000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5184\":[\"EPSG:5184\",\"+proj=tmerc +lat_0=38 +lon_0=131 +k=1 +x_0=200000 +y_0=500000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5185\":[\"EPSG:5185\",\"+proj=tmerc +lat_0=38 +lon_0=125 +k=1 +x_0=200000 +y_0=600000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5186\":[\"EPSG:5186\",\"+proj=tmerc +lat_0=38 +lon_0=127 +k=1 +x_0=200000 +y_0=600000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5187\":[\"EPSG:5187\",\"+proj=tmerc +lat_0=38 +lon_0=129 +k=1 +x_0=200000 +y_0=600000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5188\":[\"EPSG:5188\",\"+proj=tmerc +lat_0=38 +lon_0=131 +k=1 +x_0=200000 +y_0=600000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5221\":[\"EPSG:5221\",\"+proj=krovak +lat_0=49.5 +lon_0=42.5 +alpha=30.28813972222222 +k=0.9999 +x_0=0 +y_0=0 +ellps=bessel +towgs84=589,76,480,0,0,0,0 +pm=ferro +units=m +no_defs \"],\"EPSG:5223\":[\"EPSG:5223\",\"+proj=tmerc +lat_0=0 +lon_0=12 +k=0.9996 +x_0=500000 +y_0=500000 +datum=WGS84 +units=m +no_defs \"],\"EPSG:5234\":[\"EPSG:5234\",\"+proj=tmerc +lat_0=7.000480277777778 +lon_0=80.77171111111112 +k=0.9999238418 +x_0=200000 +y_0=200000 +a=6377276.345 +b=6356075.41314024 +towgs84=-97,787,86,0,0,0,0 +units=m +no_defs \"],\"EPSG:5235\":[\"EPSG:5235\",\"+proj=tmerc +lat_0=7.000471527777778 +lon_0=80.77171308333334 +k=0.9999238418 +x_0=500000 +y_0=500000 +a=6377276.345 +b=6356075.41314024 +towgs84=-0.293,766.95,87.713,0.195704,1.695068,3.473016,-0.039338 +units=m +no_defs \"],\"EPSG:5247\":[\"EPSG:5247\",\"+proj=omerc +lat_0=4 +lonc=115 +alpha=53.31580995 +k=0.99984 +x_0=0 +y_0=0 +no_uoff +gamma=53.13010236111111 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5253\":[\"EPSG:5253\",\"+proj=tmerc +lat_0=0 +lon_0=27 +k=1 +x_0=500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5254\":[\"EPSG:5254\",\"+proj=tmerc +lat_0=0 +lon_0=30 +k=1 +x_0=500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5255\":[\"EPSG:5255\",\"+proj=tmerc +lat_0=0 +lon_0=33 +k=1 +x_0=500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5257\":[\"EPSG:5257\",\"+proj=tmerc +lat_0=0 +lon_0=39 +k=1 +x_0=500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5258\":[\"EPSG:5258\",\"+proj=tmerc +lat_0=0 +lon_0=42 +k=1 +x_0=500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5259\":[\"EPSG:5259\",\"+proj=tmerc +lat_0=0 +lon_0=45 +k=1 +x_0=500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5266\":[\"EPSG:5266\",\"+proj=tmerc +lat_0=0 +lon_0=90 +k=1 +x_0=250000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5269\":[\"EPSG:5269\",\"+proj=tmerc +lat_0=0 +lon_0=27 +k=1 +x_0=9500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5270\":[\"EPSG:5270\",\"+proj=tmerc +lat_0=0 +lon_0=30 +k=1 +x_0=10500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5271\":[\"EPSG:5271\",\"+proj=tmerc +lat_0=0 +lon_0=33 +k=1 +x_0=11500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5273\":[\"EPSG:5273\",\"+proj=tmerc +lat_0=0 +lon_0=39 +k=1 +x_0=13500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:6309\":[\"EPSG:6309\",\"+proj=geocent +ellps=WGS84 +units=m +no_defs \"],\"EPSG:5274\":[\"EPSG:5274\",\"+proj=tmerc +lat_0=0 +lon_0=42 +k=1 +x_0=14500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5275\":[\"EPSG:5275\",\"+proj=tmerc +lat_0=0 +lon_0=45 +k=1 +x_0=15500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5292\":[\"EPSG:5292\",\"+proj=tmerc +lat_0=0 +lon_0=90.73333333333333 +k=1 +x_0=250000 +y_0=-2500000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5293\":[\"EPSG:5293\",\"+proj=tmerc +lat_0=0 +lon_0=89.55 +k=1 +x_0=250000 +y_0=-2500000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5294\":[\"EPSG:5294\",\"+proj=tmerc +lat_0=0 +lon_0=89.84999999999999 +k=1 +x_0=250000 +y_0=-2500000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5295\":[\"EPSG:5295\",\"+proj=tmerc +lat_0=0 +lon_0=90.03333333333333 +k=1 +x_0=250000 +y_0=-2500000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5296\":[\"EPSG:5296\",\"+proj=tmerc +lat_0=0 +lon_0=90.15000000000001 +k=1 +x_0=250000 +y_0=-2500000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5297\":[\"EPSG:5297\",\"+proj=tmerc +lat_0=0 +lon_0=91.13333333333334 +k=1 +x_0=250000 +y_0=-2500000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5298\":[\"EPSG:5298\",\"+proj=tmerc +lat_0=0 +lon_0=91.23333333333333 +k=1 +x_0=250000 +y_0=-2500000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:4918\":[\"EPSG:4918\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:5299\":[\"EPSG:5299\",\"+proj=tmerc +lat_0=0 +lon_0=89.34999999999999 +k=1 +x_0=250000 +y_0=-2500000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5300\":[\"EPSG:5300\",\"+proj=tmerc +lat_0=0 +lon_0=91.34999999999999 +k=1 +x_0=250000 +y_0=-2500000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5301\":[\"EPSG:5301\",\"+proj=tmerc +lat_0=0 +lon_0=89.84999999999999 +k=1 +x_0=250000 +y_0=-2500000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5302\":[\"EPSG:5302\",\"+proj=tmerc +lat_0=0 +lon_0=91.56666666666666 +k=1 +x_0=250000 +y_0=-2500000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5303\":[\"EPSG:5303\",\"+proj=tmerc +lat_0=0 +lon_0=89.06666666666666 +k=1 +x_0=250000 +y_0=-2500000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5304\":[\"EPSG:5304\",\"+proj=tmerc +lat_0=0 +lon_0=90.26666666666667 +k=1 +x_0=250000 +y_0=-2500000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5305\":[\"EPSG:5305\",\"+proj=tmerc +lat_0=0 +lon_0=89.55 +k=1 +x_0=250000 +y_0=-2500000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5306\":[\"EPSG:5306\",\"+proj=tmerc +lat_0=0 +lon_0=91.75 +k=1 +x_0=250000 +y_0=-2500000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5307\":[\"EPSG:5307\",\"+proj=tmerc +lat_0=0 +lon_0=90.5 +k=1 +x_0=250000 +y_0=-2500000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:4919\":[\"EPSG:4919\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:5308\":[\"EPSG:5308\",\"+proj=tmerc +lat_0=0 +lon_0=90.16666666666667 +k=1 +x_0=250000 +y_0=-2500000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5309\":[\"EPSG:5309\",\"+proj=tmerc +lat_0=0 +lon_0=90.11666666666666 +k=1 +x_0=250000 +y_0=-2500000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5310\":[\"EPSG:5310\",\"+proj=tmerc +lat_0=0 +lon_0=91.56666666666666 +k=1 +x_0=250000 +y_0=-2500000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5311\":[\"EPSG:5311\",\"+proj=tmerc +lat_0=0 +lon_0=90.86666666666666 +k=1 +x_0=250000 +y_0=-2500000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5316\":[\"EPSG:5316\",\"+proj=tmerc +lat_0=0 +lon_0=-7 +k=0.999997 +x_0=200000 +y_0=-6000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5320\":[\"EPSG:5320\",\"+proj=lcc +lat_1=44.5 +lat_2=54.5 +lat_0=0 +lon_0=-84 +x_0=1000000 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:5321\":[\"EPSG:5321\",\"+proj=lcc +lat_1=44.5 +lat_2=54.5 +lat_0=0 +lon_0=-84 +x_0=1000000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5325\":[\"EPSG:5325\",\"+proj=lcc +lat_1=64.25 +lat_2=65.75 +lat_0=65 +lon_0=-19 +x_0=1700000 +y_0=300000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5329\":[\"EPSG:5329\",\"+proj=merc +lon_0=3.192280555555556 +k=0.997 +x_0=3900000 +y_0=900000 +ellps=bessel +towgs84=-403,684,41,0,0,0,0 +pm=jakarta +units=m +no_defs \"],\"EPSG:5330\":[\"EPSG:5330\",\"+proj=merc +lon_0=3.192280555555556 +k=0.997 +x_0=3900000 +y_0=900000 +ellps=bessel +towgs84=-377,681,-50,0,0,0,0 +pm=jakarta +units=m +no_defs \"],\"EPSG:5331\":[\"EPSG:5331\",\"+proj=merc +lon_0=3.192280555555556 +k=0.997 +x_0=3900000 +y_0=900000 +ellps=bessel +towgs84=-587.8,519.75,145.76,0,0,0,0 +pm=jakarta +units=m +no_defs \"],\"EPSG:5337\":[\"EPSG:5337\",\"+proj=utm +zone=25 +south +ellps=intl +towgs84=-151.99,287.04,-147.45,0,0,0,0 +units=m +no_defs \"],\"EPSG:5343\":[\"EPSG:5343\",\"+proj=tmerc +lat_0=-90 +lon_0=-72 +k=1 +x_0=1500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5344\":[\"EPSG:5344\",\"+proj=tmerc +lat_0=-90 +lon_0=-69 +k=1 +x_0=2500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5345\":[\"EPSG:5345\",\"+proj=tmerc +lat_0=-90 +lon_0=-66 +k=1 +x_0=3500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5346\":[\"EPSG:5346\",\"+proj=tmerc +lat_0=-90 +lon_0=-63 +k=1 +x_0=4500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5347\":[\"EPSG:5347\",\"+proj=tmerc +lat_0=-90 +lon_0=-60 +k=1 +x_0=5500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5348\":[\"EPSG:5348\",\"+proj=tmerc +lat_0=-90 +lon_0=-57 +k=1 +x_0=6500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5349\":[\"EPSG:5349\",\"+proj=tmerc +lat_0=-90 +lon_0=-54 +k=1 +x_0=7500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5355\":[\"EPSG:5355\",\"+proj=utm +zone=20 +south +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5356\":[\"EPSG:5356\",\"+proj=utm +zone=19 +south +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5357\":[\"EPSG:5357\",\"+proj=utm +zone=21 +south +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5361\":[\"EPSG:5361\",\"+proj=utm +zone=19 +south +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5362\":[\"EPSG:5362\",\"+proj=utm +zone=18 +south +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5382\":[\"EPSG:5382\",\"+proj=utm +zone=21 +south +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5383\":[\"EPSG:5383\",\"+proj=utm +zone=22 +south +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5387\":[\"EPSG:5387\",\"+proj=utm +zone=18 +south +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5388\":[\"EPSG:5388\",\"+proj=utm +zone=17 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:4922\":[\"EPSG:4922\",\"+proj=geocent +a=6378136 +b=6356751.361745712 +units=m +no_defs \"],\"EPSG:5389\":[\"EPSG:5389\",\"+proj=utm +zone=19 +south +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5396\":[\"EPSG:5396\",\"+proj=utm +zone=26 +south +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5456\":[\"EPSG:5456\",\"+proj=lcc +lat_1=10.46666666666667 +lat_0=10.46666666666667 +lon_0=-84.33333333333333 +k_0=0.99995696 +x_0=500000 +y_0=271820.522 +ellps=clrk66 +towgs84=205,96,-98,0,0,0,0 +units=m +no_defs \"],\"EPSG:5457\":[\"EPSG:5457\",\"+proj=lcc +lat_1=9 +lat_0=9 +lon_0=-83.66666666666667 +k_0=0.99995696 +x_0=500000 +y_0=327987.436 +ellps=clrk66 +towgs84=205,96,-98,0,0,0,0 +units=m +no_defs \"],\"EPSG:5458\":[\"EPSG:5458\",\"+proj=lcc +lat_1=16.81666666666667 +lat_0=16.81666666666667 +lon_0=-90.33333333333333 +k_0=0.99992226 +x_0=500000 +y_0=292209.579 +datum=NAD27 +units=m +no_defs \"],\"EPSG:5459\":[\"EPSG:5459\",\"+proj=lcc +lat_1=14.9 +lat_0=14.9 +lon_0=-90.33333333333333 +k_0=0.99989906 +x_0=500000 +y_0=325992.681 +ellps=clrk66 +towgs84=205,96,-98,0,0,0,0 +units=m +no_defs \"],\"EPSG:5460\":[\"EPSG:5460\",\"+proj=lcc +lat_1=13.78333333333333 +lat_0=13.78333333333333 +lon_0=-89 +k_0=0.99996704 +x_0=500000 +y_0=295809.184 +ellps=clrk66 +towgs84=205,96,-98,0,0,0,0 +units=m +no_defs \"],\"EPSG:5461\":[\"EPSG:5461\",\"+proj=lcc +lat_1=13.86666666666667 +lat_0=13.86666666666667 +lon_0=-85.5 +k_0=0.99990314 +x_0=500000 +y_0=359891.816 +ellps=clrk66 +towgs84=205,96,-98,0,0,0,0 +units=m +no_defs \"],\"EPSG:5462\":[\"EPSG:5462\",\"+proj=lcc +lat_1=11.73333333333333 +lat_0=11.73333333333333 +lon_0=-85.5 +k_0=0.9999222800000001 +x_0=500000 +y_0=288876.327 +ellps=clrk66 +towgs84=205,96,-98,0,0,0,0 +units=m +no_defs \"],\"EPSG:5463\":[\"EPSG:5463\",\"+proj=utm +zone=17 +ellps=aust_SA +towgs84=-66.87,4.37,-38.52,0,0,0,0 +units=m +no_defs \"],\"EPSG:5466\":[\"EPSG:5466\",\"+proj=tmerc +lat_0=17.06124194444444 +lon_0=-88.6318575 +k=1 +x_0=66220.02833082761 +y_0=135779.5099885299 +a=6378293.645208759 +b=6356617.987679838 +units=m +no_defs \"],\"EPSG:5469\":[\"EPSG:5469\",\"+proj=lcc +lat_1=8.416666666666666 +lat_0=8.416666666666666 +lon_0=-80 +k_0=0.99989909 +x_0=500000 +y_0=294865.303 +ellps=clrk66 +units=m +no_defs \"],\"EPSG:5472\":[\"EPSG:5472\",\"+proj=poly +lat_0=8.25 +lon_0=-81 +x_0=914391.7962 +y_0=999404.7217154861 +ellps=clrk66 +to_meter=0.9143917962 +no_defs \"],\"EPSG:5479\":[\"EPSG:5479\",\"+proj=lcc +lat_1=-76.66666666666667 +lat_2=-79.33333333333333 +lat_0=-78 +lon_0=163 +x_0=7000000 +y_0=5000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5480\":[\"EPSG:5480\",\"+proj=lcc +lat_1=-73.66666666666667 +lat_2=-75.33333333333333 +lat_0=-74.5 +lon_0=165 +x_0=5000000 +y_0=3000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5481\":[\"EPSG:5481\",\"+proj=lcc +lat_1=-70.66666666666667 +lat_2=-72.33333333333333 +lat_0=-71.5 +lon_0=166 +x_0=3000000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5482\":[\"EPSG:5482\",\"+proj=stere +lat_0=-90 +lat_ts=-90 +lon_0=180 +k=0.994 +x_0=5000000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5490\":[\"EPSG:5490\",\"+proj=utm +zone=20 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5518\":[\"EPSG:5518\",\"+proj=tmerc +lat_0=-44 +lon_0=-176.5 +k=1 +x_0=350000 +y_0=650000 +ellps=intl +towgs84=175,-38,113,0,0,0,0 +units=m +no_defs \"],\"EPSG:5519\":[\"EPSG:5519\",\"+proj=tmerc +lat_0=-44 +lon_0=-176.5 +k=1 +x_0=350000 +y_0=650000 +ellps=intl +towgs84=174.05,-25.49,112.57,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:5520\":[\"EPSG:5520\",\"+proj=tmerc +lat_0=0 +lon_0=3 +k=1 +x_0=1500000 +y_0=0 +datum=potsdam +units=m +no_defs \"],\"EPSG:5523\":[\"EPSG:5523\",\"+proj=tmerc +lat_0=0 +lon_0=11.5 +k=0.9996 +x_0=1500000 +y_0=5500000 +datum=WGS84 +units=m +no_defs \"],\"EPSG:5530\":[\"EPSG:5530\",\"+proj=poly +lat_0=0 +lon_0=-54 +x_0=5000000 +y_0=10000000 +ellps=aust_SA +towgs84=-67.35,3.88,-38.22,0,0,0,0 +units=m +no_defs \"],\"EPSG:4924\":[\"EPSG:4924\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:5535\":[\"EPSG:5535\",\"+proj=utm +zone=25 +south +ellps=aust_SA +towgs84=-67.35,3.88,-38.22,0,0,0,0 +units=m +no_defs \"],\"EPSG:5536\":[\"EPSG:5536\",\"+proj=utm +zone=21 +south +ellps=intl +units=m +no_defs \"],\"EPSG:5537\":[\"EPSG:5537\",\"+proj=utm +zone=22 +south +ellps=intl +units=m +no_defs \"],\"EPSG:5539\":[\"EPSG:5539\",\"+proj=utm +zone=24 +south +ellps=intl +units=m +no_defs \"],\"EPSG:5559\":[\"EPSG:5559\",\"+proj=lcc +lat_1=16.81666666666667 +lat_0=16.81666666666667 +lon_0=-90.33333333333333 +k_0=0.99992226 +x_0=500000 +y_0=292209.579 +ellps=clrk66 +towgs84=205,96,-98,0,0,0,0 +units=m +no_defs \"],\"EPSG:5562\":[\"EPSG:5562\",\"+proj=tmerc +lat_0=0 +lon_0=21 +k=1 +x_0=4500000 +y_0=0 +ellps=krass +towgs84=25,-141,-78.5,0,0.35,0.736,0 +units=m +no_defs \"],\"EPSG:5563\":[\"EPSG:5563\",\"+proj=tmerc +lat_0=0 +lon_0=27 +k=1 +x_0=5500000 +y_0=0 +ellps=krass +towgs84=25,-141,-78.5,0,0.35,0.736,0 +units=m +no_defs \"],\"EPSG:5564\":[\"EPSG:5564\",\"+proj=tmerc +lat_0=0 +lon_0=33 +k=1 +x_0=6500000 +y_0=0 +ellps=krass +towgs84=25,-141,-78.5,0,0.35,0.736,0 +units=m +no_defs \"],\"EPSG:5565\":[\"EPSG:5565\",\"+proj=tmerc +lat_0=0 +lon_0=39 +k=1 +x_0=7500000 +y_0=0 +ellps=krass +towgs84=25,-141,-78.5,0,0.35,0.736,0 +units=m +no_defs \"],\"EPSG:5566\":[\"EPSG:5566\",\"+proj=tmerc +lat_0=0 +lon_0=21 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=25,-141,-78.5,0,0.35,0.736,0 +units=m +no_defs \"],\"EPSG:5567\":[\"EPSG:5567\",\"+proj=tmerc +lat_0=0 +lon_0=27 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=25,-141,-78.5,0,0.35,0.736,0 +units=m +no_defs \"],\"EPSG:5568\":[\"EPSG:5568\",\"+proj=tmerc +lat_0=0 +lon_0=33 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=25,-141,-78.5,0,0.35,0.736,0 +units=m +no_defs \"],\"EPSG:5569\":[\"EPSG:5569\",\"+proj=tmerc +lat_0=0 +lon_0=39 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=25,-141,-78.5,0,0.35,0.736,0 +units=m +no_defs \"],\"EPSG:5570\":[\"EPSG:5570\",\"+proj=tmerc +lat_0=0 +lon_0=21 +k=1 +x_0=7500000 +y_0=0 +ellps=krass +towgs84=25,-141,-78.5,0,0.35,0.736,0 +units=m +no_defs \"],\"EPSG:5571\":[\"EPSG:5571\",\"+proj=tmerc +lat_0=0 +lon_0=24 +k=1 +x_0=8500000 +y_0=0 +ellps=krass +towgs84=25,-141,-78.5,0,0.35,0.736,0 +units=m +no_defs \"],\"EPSG:5572\":[\"EPSG:5572\",\"+proj=tmerc +lat_0=0 +lon_0=27 +k=1 +x_0=9500000 +y_0=0 +ellps=krass +towgs84=25,-141,-78.5,0,0.35,0.736,0 +units=m +no_defs \"],\"EPSG:5573\":[\"EPSG:5573\",\"+proj=tmerc +lat_0=0 +lon_0=30 +k=1 +x_0=10500000 +y_0=0 +ellps=krass +towgs84=25,-141,-78.5,0,0.35,0.736,0 +units=m +no_defs \"],\"EPSG:5574\":[\"EPSG:5574\",\"+proj=tmerc +lat_0=0 +lon_0=33 +k=1 +x_0=11500000 +y_0=0 +ellps=krass +towgs84=25,-141,-78.5,0,0.35,0.736,0 +units=m +no_defs \"],\"EPSG:5575\":[\"EPSG:5575\",\"+proj=tmerc +lat_0=0 +lon_0=36 +k=1 +x_0=12500000 +y_0=0 +ellps=krass +towgs84=25,-141,-78.5,0,0.35,0.736,0 +units=m +no_defs \"],\"EPSG:5576\":[\"EPSG:5576\",\"+proj=tmerc +lat_0=0 +lon_0=39 +k=1 +x_0=13500000 +y_0=0 +ellps=krass +towgs84=25,-141,-78.5,0,0.35,0.736,0 +units=m +no_defs \"],\"EPSG:5577\":[\"EPSG:5577\",\"+proj=tmerc +lat_0=0 +lon_0=21 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=25,-141,-78.5,0,0.35,0.736,0 +units=m +no_defs \"],\"EPSG:5578\":[\"EPSG:5578\",\"+proj=tmerc +lat_0=0 +lon_0=24 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=25,-141,-78.5,0,0.35,0.736,0 +units=m +no_defs \"],\"EPSG:5579\":[\"EPSG:5579\",\"+proj=tmerc +lat_0=0 +lon_0=27 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=25,-141,-78.5,0,0.35,0.736,0 +units=m +no_defs \"],\"EPSG:5580\":[\"EPSG:5580\",\"+proj=tmerc +lat_0=0 +lon_0=30 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=25,-141,-78.5,0,0.35,0.736,0 +units=m +no_defs \"],\"EPSG:5581\":[\"EPSG:5581\",\"+proj=tmerc +lat_0=0 +lon_0=33 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=25,-141,-78.5,0,0.35,0.736,0 +units=m +no_defs \"],\"EPSG:5582\":[\"EPSG:5582\",\"+proj=tmerc +lat_0=0 +lon_0=36 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=25,-141,-78.5,0,0.35,0.736,0 +units=m +no_defs \"],\"EPSG:5583\":[\"EPSG:5583\",\"+proj=tmerc +lat_0=0 +lon_0=39 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=25,-141,-78.5,0,0.35,0.736,0 +units=m +no_defs \"],\"EPSG:5588\":[\"EPSG:5588\",\"+proj=sterea +lat_0=46.5 +lon_0=-66.5 +k=0.999912 +x_0=304800 +y_0=304800 +datum=NAD27 +units=ft +no_defs \"],\"EPSG:5589\":[\"EPSG:5589\",\"+proj=tmerc +lat_0=17.06124194444444 +lon_0=-88.6318575 +k=1 +x_0=66220.02833082761 +y_0=135779.5099885299 +a=6378293.645208759 +b=6356617.987679838 +to_meter=0.3047972654 +no_defs \"],\"EPSG:5596\":[\"EPSG:5596\",\"+proj=tmerc +lat_0=0 +lon_0=11.33333333333333 +k=1 +x_0=1000000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5623\":[\"EPSG:5623\",\"+proj=tmerc +lat_0=41.5 +lon_0=-83.66666666666667 +k=0.999942857 +x_0=152400.3048006096 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:5624\":[\"EPSG:5624\",\"+proj=tmerc +lat_0=41.5 +lon_0=-85.75 +k=0.999909091 +x_0=152400.3048006096 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:5625\":[\"EPSG:5625\",\"+proj=tmerc +lat_0=41.5 +lon_0=-88.75 +k=0.999909091 +x_0=152400.3048006096 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:6686\":[\"EPSG:6686\",\"+proj=tmerc +lat_0=20 +lon_0=136 +k=0.9999 +x_0=0 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:5627\":[\"EPSG:5627\",\"+proj=tmerc +lat_0=0 +lon_0=6 +k=0.9996 +x_0=500000 +y_0=0 +ellps=intl +towgs84=-87,-98,-121,0,0,0,0 +units=m +no_defs \"],\"EPSG:5629\":[\"EPSG:5629\",\"+proj=utm +zone=38 +south +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5631\":[\"EPSG:5631\",\"+proj=tmerc +lat_0=0 +lon_0=9 +k=1 +x_0=2500000 +y_0=0 +ellps=krass +towgs84=2.3287,-147.0425,-92.0802,-0.3092483,0.32482185,0.49729934,5.68906266 +units=m +no_defs \"],\"EPSG:5632\":[\"EPSG:5632\",\"+proj=lcc +lat_1=35 +lat_2=65 +lat_0=52 +lon_0=10 +x_0=4000000 +y_0=2800000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5633\":[\"EPSG:5633\",\"+proj=laea +lat_0=52 +lon_0=10 +x_0=4321000 +y_0=3210000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5634\":[\"EPSG:5634\",\"+proj=lcc +lat_1=35 +lat_2=65 +lat_0=52 +lon_0=10 +x_0=4000000 +y_0=2800000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5635\":[\"EPSG:5635\",\"+proj=laea +lat_0=52 +lon_0=10 +x_0=4321000 +y_0=3210000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5636\":[\"EPSG:5636\",\"+proj=laea +lat_0=52 +lon_0=10 +x_0=4321000 +y_0=3210000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5637\":[\"EPSG:5637\",\"+proj=lcc +lat_1=35 +lat_2=65 +lat_0=52 +lon_0=10 +x_0=4000000 +y_0=2800000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5638\":[\"EPSG:5638\",\"+proj=laea +lat_0=52 +lon_0=10 +x_0=4321000 +y_0=3210000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5639\":[\"EPSG:5639\",\"+proj=lcc +lat_1=35 +lat_2=65 +lat_0=52 +lon_0=10 +x_0=4000000 +y_0=2800000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5641\":[\"EPSG:5641\",\"+proj=merc +lon_0=-43 +lat_ts=-2 +x_0=5000000 +y_0=10000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5643\":[\"EPSG:5643\",\"+proj=lcc +lat_1=52.66666666666666 +lat_2=54.33333333333334 +lat_0=48 +lon_0=10 +x_0=815000 +y_0=0 +ellps=intl +towgs84=-87,-98,-121,0,0,0,0 +units=m +no_defs \"],\"EPSG:5644\":[\"EPSG:5644\",\"+proj=utm +zone=39 +south +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5646\":[\"EPSG:5646\",\"+proj=tmerc +lat_0=42.5 +lon_0=-72.5 +k=0.999964286 +x_0=500000.00001016 +y_0=0 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:5649\":[\"EPSG:5649\",\"+proj=tmerc +lat_0=0 +lon_0=3 +k=0.9996 +x_0=31500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5650\":[\"EPSG:5650\",\"+proj=tmerc +lat_0=0 +lon_0=15 +k=0.9996 +x_0=33500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5651\":[\"EPSG:5651\",\"+proj=tmerc +lat_0=0 +lon_0=3 +k=0.9996 +x_0=31500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5652\":[\"EPSG:5652\",\"+proj=tmerc +lat_0=0 +lon_0=9 +k=0.9996 +x_0=32500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:6687\":[\"EPSG:6687\",\"+proj=tmerc +lat_0=26 +lon_0=154 +k=0.9999 +x_0=0 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:5653\":[\"EPSG:5653\",\"+proj=tmerc +lat_0=0 +lon_0=15 +k=0.9996 +x_0=33500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5654\":[\"EPSG:5654\",\"+proj=tmerc +lat_0=42.5 +lon_0=-72.5 +k=0.999964286 +x_0=500000.00001016 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:5655\":[\"EPSG:5655\",\"+proj=tmerc +lat_0=42.5 +lon_0=-72.5 +k=0.999964286 +x_0=500000.00001016 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:5659\":[\"EPSG:5659\",\"+proj=tmerc +lat_0=0 +lon_0=9 +k=0.9996 +x_0=500053 +y_0=-3999820 +ellps=intl +towgs84=-104.1,-49.1,-9.9,0.971,-2.917,0.714,-11.68 +units=m +no_defs \"],\"EPSG:5663\":[\"EPSG:5663\",\"+proj=tmerc +lat_0=0 +lon_0=15 +k=1 +x_0=3500000 +y_0=0 +ellps=krass +towgs84=2.3287,-147.0425,-92.0802,-0.3092483,0.32482185,0.49729934,5.68906266 +units=m +no_defs \"],\"EPSG:5664\":[\"EPSG:5664\",\"+proj=tmerc +lat_0=0 +lon_0=9 +k=1 +x_0=2500000 +y_0=0 +ellps=krass +towgs84=26,-121,-78,0,0,0,0 +units=m +no_defs \"],\"EPSG:5665\":[\"EPSG:5665\",\"+proj=tmerc +lat_0=0 +lon_0=15 +k=1 +x_0=3500000 +y_0=0 +ellps=krass +towgs84=26,-121,-78,0,0,0,0 +units=m +no_defs \"],\"EPSG:5666\":[\"EPSG:5666\",\"+proj=tmerc +lat_0=0 +lon_0=9 +k=1 +x_0=3500000 +y_0=0 +ellps=bessel +units=m +no_defs \"],\"EPSG:5667\":[\"EPSG:5667\",\"+proj=tmerc +lat_0=0 +lon_0=12 +k=1 +x_0=4500000 +y_0=0 +ellps=bessel +units=m +no_defs \"],\"EPSG:5668\":[\"EPSG:5668\",\"+proj=tmerc +lat_0=0 +lon_0=12 +k=1 +x_0=4500000 +y_0=0 +ellps=bessel +units=m +no_defs \"],\"EPSG:5669\":[\"EPSG:5669\",\"+proj=tmerc +lat_0=0 +lon_0=15 +k=1 +x_0=5500000 +y_0=0 +ellps=bessel +units=m +no_defs \"],\"EPSG:5670\":[\"EPSG:5670\",\"+proj=tmerc +lat_0=0 +lon_0=9 +k=1 +x_0=3500000 +y_0=0 +ellps=krass +towgs84=2.3287,-147.0425,-92.0802,-0.3092483,0.32482185,0.49729934,5.68906266 +units=m +no_defs \"],\"EPSG:5671\":[\"EPSG:5671\",\"+proj=tmerc +lat_0=0 +lon_0=12 +k=1 +x_0=4500000 +y_0=0 +ellps=krass +towgs84=2.3287,-147.0425,-92.0802,-0.3092483,0.32482185,0.49729934,5.68906266 +units=m +no_defs \"],\"EPSG:5672\":[\"EPSG:5672\",\"+proj=tmerc +lat_0=0 +lon_0=15 +k=1 +x_0=5500000 +y_0=0 +ellps=krass +towgs84=2.3287,-147.0425,-92.0802,-0.3092483,0.32482185,0.49729934,5.68906266 +units=m +no_defs \"],\"EPSG:5673\":[\"EPSG:5673\",\"+proj=tmerc +lat_0=0 +lon_0=9 +k=1 +x_0=3500000 +y_0=0 +ellps=krass +towgs84=26,-121,-78,0,0,0,0 +units=m +no_defs \"],\"EPSG:5674\":[\"EPSG:5674\",\"+proj=tmerc +lat_0=0 +lon_0=12 +k=1 +x_0=4500000 +y_0=0 +ellps=krass +towgs84=26,-121,-78,0,0,0,0 +units=m +no_defs \"],\"EPSG:5675\":[\"EPSG:5675\",\"+proj=tmerc +lat_0=0 +lon_0=15 +k=1 +x_0=5500000 +y_0=0 +ellps=krass +towgs84=26,-121,-78,0,0,0,0 +units=m +no_defs \"],\"EPSG:5676\":[\"EPSG:5676\",\"+proj=tmerc +lat_0=0 +lon_0=6 +k=1 +x_0=2500000 +y_0=0 +datum=potsdam +units=m +no_defs \"],\"EPSG:5677\":[\"EPSG:5677\",\"+proj=tmerc +lat_0=0 +lon_0=9 +k=1 +x_0=3500000 +y_0=0 +datum=potsdam +units=m +no_defs \"],\"EPSG:5678\":[\"EPSG:5678\",\"+proj=tmerc +lat_0=0 +lon_0=12 +k=1 +x_0=4500000 +y_0=0 +datum=potsdam +units=m +no_defs \"],\"EPSG:5679\":[\"EPSG:5679\",\"+proj=tmerc +lat_0=0 +lon_0=15 +k=1 +x_0=5500000 +y_0=0 +datum=potsdam +units=m +no_defs \"],\"EPSG:5680\":[\"EPSG:5680\",\"+proj=tmerc +lat_0=0 +lon_0=3 +k=1 +x_0=1500000 +y_0=0 +datum=potsdam +units=m +no_defs \"],\"EPSG:5682\":[\"EPSG:5682\",\"+proj=tmerc +lat_0=0 +lon_0=6 +k=1 +x_0=2500000 +y_0=0 +ellps=bessel +units=m +no_defs \"],\"EPSG:5683\":[\"EPSG:5683\",\"+proj=tmerc +lat_0=0 +lon_0=9 +k=1 +x_0=3500000 +y_0=0 +ellps=bessel +units=m +no_defs \"],\"EPSG:5684\":[\"EPSG:5684\",\"+proj=tmerc +lat_0=0 +lon_0=12 +k=1 +x_0=4500000 +y_0=0 +ellps=bessel +units=m +no_defs \"],\"EPSG:5685\":[\"EPSG:5685\",\"+proj=tmerc +lat_0=0 +lon_0=15 +k=1 +x_0=5500000 +y_0=0 +ellps=bessel +units=m +no_defs \"],\"EPSG:5700\":[\"EPSG:5700\",\"+proj=utm +zone=1 +south +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5879\":[\"EPSG:5879\",\"+proj=utm +zone=38 +south +ellps=intl +towgs84=-381.788,-57.501,-256.673,0,0,0,0 +units=m +no_defs \"],\"EPSG:5825\":[\"EPSG:5825\",\"+proj=tmerc +lat_0=-35.31773627777778 +lon_0=149.0092948305555 +k=1.000086 +x_0=200000 +y_0=600000 +ellps=aust_SA +towgs84=-117.808,-51.536,137.784,0.303,0.446,0.234,-0.29 +units=m +no_defs \"],\"EPSG:5836\":[\"EPSG:5836\",\"+proj=utm +zone=37 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5837\":[\"EPSG:5837\",\"+proj=utm +zone=40 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5839\":[\"EPSG:5839\",\"+proj=utm +zone=17 +south +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5842\":[\"EPSG:5842\",\"+proj=tmerc +lat_0=0 +lon_0=12 +k=0.9996 +x_0=500000 +y_0=10000000 +datum=WGS84 +units=m +no_defs \"],\"EPSG:5844\":[\"EPSG:5844\",\"+proj=tmerc +lat_0=0 +lon_0=30 +k=0.9999 +x_0=500000 +y_0=10000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5858\":[\"EPSG:5858\",\"+proj=utm +zone=22 +south +ellps=aust_SA +towgs84=-67.35,3.88,-38.22,0,0,0,0 +units=m +no_defs \"],\"EPSG:5875\":[\"EPSG:5875\",\"+proj=utm +zone=18 +south +ellps=aust_SA +towgs84=-67.35,3.88,-38.22,0,0,0,0 +units=m +no_defs \"],\"EPSG:5876\":[\"EPSG:5876\",\"+proj=utm +zone=19 +south +ellps=aust_SA +towgs84=-67.35,3.88,-38.22,0,0,0,0 +units=m +no_defs \"],\"EPSG:5877\":[\"EPSG:5877\",\"+proj=utm +zone=20 +south +ellps=aust_SA +towgs84=-67.35,3.88,-38.22,0,0,0,0 +units=m +no_defs \"],\"EPSG:5880\":[\"EPSG:5880\",\"+proj=poly +lat_0=0 +lon_0=-54 +x_0=5000000 +y_0=10000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5887\":[\"EPSG:5887\",\"+proj=tmerc +lat_0=0 +lon_0=-177 +k=0.9996 +x_0=1500000 +y_0=5000000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:5890\":[\"EPSG:5890\",\"+proj=stere +lat_0=90 +lat_ts=70 +lon_0=90 +k=1 +x_0=0 +y_0=0 +a=6378273 +b=6356889.449 +units=m +no_defs \"],\"EPSG:5921\":[\"EPSG:5921\",\"+proj=lcc +lat_1=85 +lat_2=77 +lat_0=81.31722600000001 +lon_0=-111 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:5922\":[\"EPSG:5922\",\"+proj=lcc +lat_1=85 +lat_2=77 +lat_0=81.31722600000001 +lon_0=-39 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:5923\":[\"EPSG:5923\",\"+proj=lcc +lat_1=85 +lat_2=77 +lat_0=81.31722600000001 +lon_0=33 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:5924\":[\"EPSG:5924\",\"+proj=lcc +lat_1=85 +lat_2=77 +lat_0=81.31722600000001 +lon_0=105 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:5925\":[\"EPSG:5925\",\"+proj=lcc +lat_1=85 +lat_2=77 +lat_0=81.31722600000001 +lon_0=177 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:5926\":[\"EPSG:5926\",\"+proj=lcc +lat_1=77 +lat_2=69 +lat_0=73.15574086111111 +lon_0=-111 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:6688\":[\"EPSG:6688\",\"+proj=utm +zone=51 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:5927\":[\"EPSG:5927\",\"+proj=lcc +lat_1=77 +lat_2=69 +lat_0=73.15574086111111 +lon_0=-39 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:5928\":[\"EPSG:5928\",\"+proj=lcc +lat_1=77 +lat_2=69 +lat_0=73.15574086111111 +lon_0=33 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:5929\":[\"EPSG:5929\",\"+proj=lcc +lat_1=77 +lat_2=69 +lat_0=73.15574086111111 +lon_0=105 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:5930\":[\"EPSG:5930\",\"+proj=lcc +lat_1=77 +lat_2=69 +lat_0=73.15574086111111 +lon_0=177 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:5931\":[\"EPSG:5931\",\"+proj=lcc +lat_1=69 +lat_2=61 +lat_0=65.10127088888888 +lon_0=-111 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:5932\":[\"EPSG:5932\",\"+proj=lcc +lat_1=69 +lat_2=61 +lat_0=65.10127088888888 +lon_0=-39 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:5933\":[\"EPSG:5933\",\"+proj=lcc +lat_1=69 +lat_2=61 +lat_0=65.10127088888888 +lon_0=33 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:5934\":[\"EPSG:5934\",\"+proj=lcc +lat_1=69 +lat_2=61 +lat_0=65.10127088888888 +lon_0=105 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:5935\":[\"EPSG:5935\",\"+proj=lcc +lat_1=69 +lat_2=61 +lat_0=65.10127088888888 +lon_0=177 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:4930\":[\"EPSG:4930\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:5936\":[\"EPSG:5936\",\"+proj=stere +lat_0=90 +lat_ts=90 +lon_0=-150 +k=0.994 +x_0=2000000 +y_0=2000000 +datum=WGS84 +units=m +no_defs \"],\"EPSG:5937\":[\"EPSG:5937\",\"+proj=stere +lat_0=90 +lat_ts=90 +lon_0=-100 +k=0.994 +x_0=2000000 +y_0=2000000 +datum=WGS84 +units=m +no_defs \"],\"EPSG:5938\":[\"EPSG:5938\",\"+proj=stere +lat_0=90 +lat_ts=90 +lon_0=-33 +k=0.994 +x_0=2000000 +y_0=2000000 +datum=WGS84 +units=m +no_defs \"],\"EPSG:5939\":[\"EPSG:5939\",\"+proj=stere +lat_0=90 +lat_ts=90 +lon_0=18 +k=0.994 +x_0=2000000 +y_0=2000000 +datum=WGS84 +units=m +no_defs \"],\"EPSG:5940\":[\"EPSG:5940\",\"+proj=stere +lat_0=90 +lat_ts=90 +lon_0=105 +k=0.994 +x_0=2000000 +y_0=2000000 +datum=WGS84 +units=m +no_defs \"],\"EPSG:6050\":[\"EPSG:6050\",\"+proj=lcc +lat_1=87 +lat_2=83.66666666666667 +lat_0=85.43711833333333 +lon_0=-30 +x_0=25500000 +y_0=1500000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:6051\":[\"EPSG:6051\",\"+proj=lcc +lat_1=83.66666666666667 +lat_2=80.33333333333333 +lat_0=82.05842488888888 +lon_0=-52 +x_0=18500000 +y_0=2500000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:6052\":[\"EPSG:6052\",\"+proj=lcc +lat_1=83.66666666666667 +lat_2=80.33333333333333 +lat_0=82.05842488888888 +lon_0=-12 +x_0=20500000 +y_0=2500000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:6053\":[\"EPSG:6053\",\"+proj=lcc +lat_1=80.33333333333333 +lat_2=77 +lat_0=78.70733752777778 +lon_0=-69 +x_0=29500000 +y_0=3500000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:4932\":[\"EPSG:4932\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6054\":[\"EPSG:6054\",\"+proj=lcc +lat_1=80.33333333333333 +lat_2=77 +lat_0=78.70733752777778 +lon_0=-39 +x_0=31500000 +y_0=3500000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:6055\":[\"EPSG:6055\",\"+proj=lcc +lat_1=80.33333333333333 +lat_2=77 +lat_0=78.70733752777778 +lon_0=-10 +x_0=33500000 +y_0=3500000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:6056\":[\"EPSG:6056\",\"+proj=lcc +lat_1=77 +lat_2=73.66666666666667 +lat_0=75.36440330555556 +lon_0=-64 +x_0=20500000 +y_0=4500000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:6057\":[\"EPSG:6057\",\"+proj=lcc +lat_1=77 +lat_2=73.66666666666667 +lat_0=75.36440330555556 +lon_0=-39 +x_0=22500000 +y_0=4500000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:6058\":[\"EPSG:6058\",\"+proj=lcc +lat_1=77 +lat_2=73.66666666666667 +lat_0=75.36440330555556 +lon_0=-14 +x_0=24500000 +y_0=4500000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:6059\":[\"EPSG:6059\",\"+proj=lcc +lat_1=73.66666666666667 +lat_2=70.33333333333333 +lat_0=72.02500919444445 +lon_0=-62 +x_0=41500000 +y_0=5500000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:6060\":[\"EPSG:6060\",\"+proj=lcc +lat_1=73.66666666666667 +lat_2=70.33333333333333 +lat_0=72.02500919444445 +lon_0=-42 +x_0=43500000 +y_0=5500000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:6061\":[\"EPSG:6061\",\"+proj=lcc +lat_1=73.66666666666667 +lat_2=70.33333333333333 +lat_0=72.02500919444445 +lon_0=-22 +x_0=45500000 +y_0=5500000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:4934\":[\"EPSG:4934\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6062\":[\"EPSG:6062\",\"+proj=lcc +lat_1=70.33333333333333 +lat_2=67 +lat_0=68.68747555555557 +lon_0=-56 +x_0=26500000 +y_0=6500000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:6063\":[\"EPSG:6063\",\"+proj=lcc +lat_1=70.33333333333333 +lat_2=67 +lat_0=68.68747555555557 +lon_0=-38 +x_0=28500000 +y_0=6500000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:6064\":[\"EPSG:6064\",\"+proj=lcc +lat_1=70.33333333333333 +lat_2=67 +lat_0=68.68747555555557 +lon_0=-20 +x_0=30500000 +y_0=6500000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:6065\":[\"EPSG:6065\",\"+proj=lcc +lat_1=67 +lat_2=63.66666666666666 +lat_0=65.35103930555555 +lon_0=-51 +x_0=11500000 +y_0=7500000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:6066\":[\"EPSG:6066\",\"+proj=lcc +lat_1=67 +lat_2=63.66666666666666 +lat_0=65.35103930555555 +lon_0=-34 +x_0=13500000 +y_0=7500000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:6067\":[\"EPSG:6067\",\"+proj=lcc +lat_1=63.66666666666666 +lat_2=60.33333333333334 +lat_0=62.01530688888889 +lon_0=-52 +x_0=20500000 +y_0=8500000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:6068\":[\"EPSG:6068\",\"+proj=lcc +lat_1=63.66666666666666 +lat_2=60.33333333333334 +lat_0=62.01530688888889 +lon_0=-37 +x_0=22500000 +y_0=8500000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:6069\":[\"EPSG:6069\",\"+proj=lcc +lat_1=83.66666666666667 +lat_2=80.33333333333333 +lat_0=82.05842488888888 +lon_0=16 +x_0=22500000 +y_0=2500000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:6070\":[\"EPSG:6070\",\"+proj=lcc +lat_1=80.33333333333333 +lat_2=77 +lat_0=78.70733752777778 +lon_0=21 +x_0=11500000 +y_0=3500000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:6071\":[\"EPSG:6071\",\"+proj=lcc +lat_1=77 +lat_2=73.66666666666667 +lat_0=75.36440330555556 +lon_0=10 +x_0=26500000 +y_0=4500000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:6072\":[\"EPSG:6072\",\"+proj=lcc +lat_1=77 +lat_2=73.66666666666667 +lat_0=75.36440330555556 +lon_0=34 +x_0=28500000 +y_0=4500000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:6073\":[\"EPSG:6073\",\"+proj=lcc +lat_1=73.66666666666667 +lat_2=70.33333333333333 +lat_0=72.02500919444445 +lon_0=14 +x_0=11500000 +y_0=5500000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:6074\":[\"EPSG:6074\",\"+proj=lcc +lat_1=73.66666666666667 +lat_2=70.33333333333333 +lat_0=72.02500919444445 +lon_0=34 +x_0=13500000 +y_0=5500000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:6075\":[\"EPSG:6075\",\"+proj=lcc +lat_1=83.66666666666667 +lat_2=80.33333333333333 +lat_0=82.05842488888888 +lon_0=53 +x_0=24500000 +y_0=2500000 +datum=WGS84 +units=m +no_defs \"],\"EPSG:6076\":[\"EPSG:6076\",\"+proj=lcc +lat_1=83.66666666666667 +lat_2=80.33333333333333 +lat_0=82.05842488888888 +lon_0=93 +x_0=26500000 +y_0=2500000 +datum=WGS84 +units=m +no_defs \"],\"EPSG:6077\":[\"EPSG:6077\",\"+proj=lcc +lat_1=80.33333333333333 +lat_2=77 +lat_0=78.70733752777778 +lon_0=52 +x_0=13500000 +y_0=3500000 +datum=WGS84 +units=m +no_defs \"],\"EPSG:6078\":[\"EPSG:6078\",\"+proj=lcc +lat_1=80.33333333333333 +lat_2=77 +lat_0=78.70733752777778 +lon_0=83 +x_0=15500000 +y_0=3500000 +datum=WGS84 +units=m +no_defs \"],\"EPSG:6079\":[\"EPSG:6079\",\"+proj=lcc +lat_1=80.33333333333333 +lat_2=77 +lat_0=78.70733752777778 +lon_0=114 +x_0=17500000 +y_0=3500000 +datum=WGS84 +units=m +no_defs \"],\"EPSG:6080\":[\"EPSG:6080\",\"+proj=lcc +lat_1=80.33333333333333 +lat_2=77 +lat_0=78.70733752777778 +lon_0=145 +x_0=19500000 +y_0=3500000 +datum=WGS84 +units=m +no_defs \"],\"EPSG:6081\":[\"EPSG:6081\",\"+proj=lcc +lat_1=77 +lat_2=73.66666666666667 +lat_0=75.36440330555556 +lon_0=58 +x_0=30500000 +y_0=4500000 +datum=WGS84 +units=m +no_defs \"],\"EPSG:6082\":[\"EPSG:6082\",\"+proj=lcc +lat_1=77 +lat_2=73.66666666666667 +lat_0=75.36440330555556 +lon_0=82 +x_0=32500000 +y_0=4500000 +datum=WGS84 +units=m +no_defs \"],\"EPSG:6083\":[\"EPSG:6083\",\"+proj=lcc +lat_1=77 +lat_2=73.66666666666667 +lat_0=75.36440330555556 +lon_0=106 +x_0=34500000 +y_0=4500000 +datum=WGS84 +units=m +no_defs \"],\"EPSG:6084\":[\"EPSG:6084\",\"+proj=lcc +lat_1=77 +lat_2=73.66666666666667 +lat_0=75.36440330555556 +lon_0=130 +x_0=36500000 +y_0=4500000 +datum=WGS84 +units=m +no_defs \"],\"EPSG:6085\":[\"EPSG:6085\",\"+proj=lcc +lat_1=77 +lat_2=73.66666666666667 +lat_0=75.36440330555556 +lon_0=154 +x_0=38500000 +y_0=4500000 +datum=WGS84 +units=m +no_defs \"],\"EPSG:6086\":[\"EPSG:6086\",\"+proj=lcc +lat_1=77 +lat_2=73.66666666666667 +lat_0=75.36440330555556 +lon_0=179 +x_0=40500000 +y_0=4500000 +datum=WGS84 +units=m +no_defs \"],\"EPSG:6087\":[\"EPSG:6087\",\"+proj=lcc +lat_1=73.66666666666667 +lat_2=70.33333333333333 +lat_0=72.02500919444445 +lon_0=54 +x_0=15500000 +y_0=5500000 +datum=WGS84 +units=m +no_defs \"],\"EPSG:6088\":[\"EPSG:6088\",\"+proj=lcc +lat_1=73.66666666666667 +lat_2=70.33333333333333 +lat_0=72.02500919444445 +lon_0=74 +x_0=17500000 +y_0=5500000 +datum=WGS84 +units=m +no_defs \"],\"EPSG:6089\":[\"EPSG:6089\",\"+proj=lcc +lat_1=73.66666666666667 +lat_2=70.33333333333333 +lat_0=72.02500919444445 +lon_0=95 +x_0=19500000 +y_0=5500000 +datum=WGS84 +units=m +no_defs \"],\"EPSG:6090\":[\"EPSG:6090\",\"+proj=lcc +lat_1=73.66666666666667 +lat_2=70.33333333333333 +lat_0=72.02500919444445 +lon_0=116 +x_0=21500000 +y_0=5500000 +datum=WGS84 +units=m +no_defs \"],\"EPSG:6091\":[\"EPSG:6091\",\"+proj=lcc +lat_1=73.66666666666667 +lat_2=70.33333333333333 +lat_0=72.02500919444445 +lon_0=137 +x_0=23500000 +y_0=5500000 +datum=WGS84 +units=m +no_defs \"],\"EPSG:6092\":[\"EPSG:6092\",\"+proj=lcc +lat_1=73.66666666666667 +lat_2=70.33333333333333 +lat_0=72.02500919444445 +lon_0=158 +x_0=25500000 +y_0=5500000 +datum=WGS84 +units=m +no_defs \"],\"EPSG:6093\":[\"EPSG:6093\",\"+proj=lcc +lat_1=73.66666666666667 +lat_2=70.33333333333333 +lat_0=72.02500919444445 +lon_0=179 +x_0=27500000 +y_0=5500000 +datum=WGS84 +units=m +no_defs \"],\"EPSG:6094\":[\"EPSG:6094\",\"+proj=lcc +lat_1=73.66666666666667 +lat_2=70.33333333333333 +lat_0=72.02500919444445 +lon_0=-163 +x_0=29500000 +y_0=5500000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:6095\":[\"EPSG:6095\",\"+proj=lcc +lat_1=73.66666666666667 +lat_2=70.33333333333333 +lat_0=72.02500919444445 +lon_0=-147 +x_0=31500000 +y_0=5500000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:6096\":[\"EPSG:6096\",\"+proj=lcc +lat_1=70.33333333333333 +lat_2=67 +lat_0=68.68747555555557 +lon_0=-165 +x_0=14500000 +y_0=6500000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:6097\":[\"EPSG:6097\",\"+proj=lcc +lat_1=70.33333333333333 +lat_2=67 +lat_0=68.68747555555557 +lon_0=-147 +x_0=16500000 +y_0=6500000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:6098\":[\"EPSG:6098\",\"+proj=lcc +lat_1=87 +lat_2=83.66666666666667 +lat_0=85.43711833333333 +lon_0=-90 +x_0=23500000 +y_0=1500000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:6099\":[\"EPSG:6099\",\"+proj=lcc +lat_1=83.66666666666667 +lat_2=80.33333333333333 +lat_0=82.05842488888888 +lon_0=-115 +x_0=14500000 +y_0=2500000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:6100\":[\"EPSG:6100\",\"+proj=lcc +lat_1=83.66666666666667 +lat_2=80.33333333333333 +lat_0=82.05842488888888 +lon_0=-75 +x_0=16500000 +y_0=2500000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:6101\":[\"EPSG:6101\",\"+proj=lcc +lat_1=80.33333333333333 +lat_2=77 +lat_0=78.70733752777778 +lon_0=-129 +x_0=25500000 +y_0=3500000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:6102\":[\"EPSG:6102\",\"+proj=lcc +lat_1=80.33333333333333 +lat_2=77 +lat_0=78.70733752777778 +lon_0=-99 +x_0=27500000 +y_0=3500000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:6103\":[\"EPSG:6103\",\"+proj=lcc +lat_1=80.33333333333333 +lat_2=77 +lat_0=78.70733752777778 +lon_0=-69 +x_0=29500000 +y_0=3500000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:6104\":[\"EPSG:6104\",\"+proj=lcc +lat_1=77 +lat_2=73.66666666666667 +lat_0=75.36440330555556 +lon_0=-129 +x_0=14500000 +y_0=4500000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:6105\":[\"EPSG:6105\",\"+proj=lcc +lat_1=77 +lat_2=73.66666666666667 +lat_0=75.36440330555556 +lon_0=-104 +x_0=16500000 +y_0=4500000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:6106\":[\"EPSG:6106\",\"+proj=lcc +lat_1=77 +lat_2=73.66666666666667 +lat_0=75.36440330555556 +lon_0=-79 +x_0=18500000 +y_0=4500000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:6107\":[\"EPSG:6107\",\"+proj=lcc +lat_1=73.66666666666667 +lat_2=70.33333333333333 +lat_0=72.02500919444445 +lon_0=-131 +x_0=33500000 +y_0=5500000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:6108\":[\"EPSG:6108\",\"+proj=lcc +lat_1=73.66666666666667 +lat_2=70.33333333333333 +lat_0=72.02500919444445 +lon_0=-111 +x_0=35500000 +y_0=5500000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:6109\":[\"EPSG:6109\",\"+proj=lcc +lat_1=73.66666666666667 +lat_2=70.33333333333333 +lat_0=72.02500919444445 +lon_0=-91 +x_0=37500000 +y_0=5500000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:6110\":[\"EPSG:6110\",\"+proj=lcc +lat_1=73.66666666666667 +lat_2=70.33333333333333 +lat_0=72.02500919444445 +lon_0=-71 +x_0=39500000 +y_0=5500000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:6111\":[\"EPSG:6111\",\"+proj=lcc +lat_1=70.33333333333333 +lat_2=67 +lat_0=68.68747555555557 +lon_0=-132 +x_0=18500000 +y_0=6500000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:6112\":[\"EPSG:6112\",\"+proj=lcc +lat_1=70.33333333333333 +lat_2=67 +lat_0=68.68747555555557 +lon_0=-113 +x_0=20500000 +y_0=6500000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:6113\":[\"EPSG:6113\",\"+proj=lcc +lat_1=70.33333333333333 +lat_2=67 +lat_0=68.68747555555557 +lon_0=-94 +x_0=22500000 +y_0=6500000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:6114\":[\"EPSG:6114\",\"+proj=lcc +lat_1=70.33333333333333 +lat_2=67 +lat_0=68.68747555555557 +lon_0=-75 +x_0=24500000 +y_0=6500000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:6115\":[\"EPSG:6115\",\"+proj=lcc +lat_1=87 +lat_2=83.66666666666667 +lat_0=85.43711833333333 +lon_0=30 +x_0=27500000 +y_0=1500000 +datum=WGS84 +units=m +no_defs \"],\"EPSG:6116\":[\"EPSG:6116\",\"+proj=lcc +lat_1=87 +lat_2=83.66666666666667 +lat_0=85.43711833333333 +lon_0=90 +x_0=29500000 +y_0=1500000 +datum=WGS84 +units=m +no_defs \"],\"EPSG:6117\":[\"EPSG:6117\",\"+proj=lcc +lat_1=87 +lat_2=83.66666666666667 +lat_0=85.43711833333333 +lon_0=150 +x_0=31500000 +y_0=1500000 +datum=WGS84 +units=m +no_defs \"],\"EPSG:6118\":[\"EPSG:6118\",\"+proj=lcc +lat_1=87 +lat_2=83.66666666666667 +lat_0=85.43711833333333 +lon_0=-150 +x_0=21500000 +y_0=1500000 +datum=WGS84 +units=m +no_defs \"],\"EPSG:6119\":[\"EPSG:6119\",\"+proj=lcc +lat_1=83.66666666666667 +lat_2=80.33333333333333 +lat_0=82.05842488888888 +lon_0=133 +x_0=28500000 +y_0=2500000 +datum=WGS84 +units=m +no_defs \"],\"EPSG:6120\":[\"EPSG:6120\",\"+proj=lcc +lat_1=83.66666666666667 +lat_2=80.33333333333333 +lat_0=82.05842488888888 +lon_0=166 +x_0=10500000 +y_0=2500000 +datum=WGS84 +units=m +no_defs \"],\"EPSG:6121\":[\"EPSG:6121\",\"+proj=lcc +lat_1=83.66666666666667 +lat_2=80.33333333333333 +lat_0=82.05842488888888 +lon_0=-154 +x_0=12500000 +y_0=2500000 +datum=WGS84 +units=m +no_defs \"],\"EPSG:6122\":[\"EPSG:6122\",\"+proj=lcc +lat_1=80.33333333333333 +lat_2=77 +lat_0=78.70733752777778 +lon_0=176 +x_0=21500000 +y_0=3500000 +datum=WGS84 +units=m +no_defs \"],\"EPSG:6123\":[\"EPSG:6123\",\"+proj=lcc +lat_1=80.33333333333333 +lat_2=77 +lat_0=78.70733752777778 +lon_0=-153 +x_0=23500000 +y_0=3500000 +datum=WGS84 +units=m +no_defs \"],\"EPSG:6124\":[\"EPSG:6124\",\"+proj=lcc +lat_1=77 +lat_2=73.66666666666667 +lat_0=75.36440330555556 +lon_0=-155 +x_0=12500000 +y_0=4500000 +datum=WGS84 +units=m +no_defs \"],\"EPSG:6125\":[\"EPSG:6125\",\"+proj=lcc +lat_1=73.66666666666667 +lat_2=70.33333333333333 +lat_0=72.02500919444445 +lon_0=-5 +x_0=47500000 +y_0=5500000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:6128\":[\"EPSG:6128\",\"+proj=utm +zone=17 +ellps=clrk66 +towgs84=-179.483,-69.379,-27.584,-7.862,8.163,6.042,-13.925 +units=ft +no_defs \"],\"EPSG:6129\":[\"EPSG:6129\",\"+proj=utm +zone=17 +ellps=clrk66 +towgs84=8.853,-52.644,180.304,-0.393,-2.323,2.96,-24.081 +units=ft +no_defs \"],\"EPSG:6141\":[\"EPSG:6141\",\"+proj=lcc +lat_1=19.33333333333333 +lat_2=19.7 +lat_0=19.33333333333333 +lon_0=80.56666666666666 +x_0=899160 +y_0=579120 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=ft +no_defs \"],\"EPSG:6204\":[\"EPSG:6204\",\"+proj=tmerc +lat_0=0 +lon_0=21 +k=0.9999 +x_0=500000 +y_0=0 +ellps=bessel +towgs84=682,-203,480,0,0,0,0 +units=m +no_defs \"],\"EPSG:6210\":[\"EPSG:6210\",\"+proj=utm +zone=23 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:6211\":[\"EPSG:6211\",\"+proj=utm +zone=24 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:6307\":[\"EPSG:6307\",\"+proj=lcc +lat_1=18.43333333333333 +lat_2=18.03333333333333 +lat_0=17.83333333333333 +lon_0=-66.43333333333334 +x_0=200000 +y_0=200000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6312\":[\"EPSG:6312\",\"+proj=tmerc +lat_0=0 +lon_0=33 +k=0.99995 +x_0=200000 +y_0=-3500000 +ellps=WGS84 +towgs84=8.846,-4.394,-1.122,0.00237,0.146528,-0.130428,0.783926 +units=m +no_defs \"],\"EPSG:6316\":[\"EPSG:6316\",\"+proj=tmerc +lat_0=0 +lon_0=21 +k=0.9999 +x_0=7500000 +y_0=0 +ellps=bessel +towgs84=682,-203,480,0,0,0,0 +units=m +no_defs \"],\"EPSG:6328\":[\"EPSG:6328\",\"+proj=utm +zone=59 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6329\":[\"EPSG:6329\",\"+proj=utm +zone=60 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:4942\":[\"EPSG:4942\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6330\":[\"EPSG:6330\",\"+proj=utm +zone=1 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6331\":[\"EPSG:6331\",\"+proj=utm +zone=2 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6332\":[\"EPSG:6332\",\"+proj=utm +zone=3 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6333\":[\"EPSG:6333\",\"+proj=utm +zone=4 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6334\":[\"EPSG:6334\",\"+proj=utm +zone=5 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6335\":[\"EPSG:6335\",\"+proj=utm +zone=6 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6336\":[\"EPSG:6336\",\"+proj=utm +zone=7 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6337\":[\"EPSG:6337\",\"+proj=utm +zone=8 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6338\":[\"EPSG:6338\",\"+proj=utm +zone=9 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6339\":[\"EPSG:6339\",\"+proj=utm +zone=10 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:4944\":[\"EPSG:4944\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6340\":[\"EPSG:6340\",\"+proj=utm +zone=11 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6341\":[\"EPSG:6341\",\"+proj=utm +zone=12 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6342\":[\"EPSG:6342\",\"+proj=utm +zone=13 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6343\":[\"EPSG:6343\",\"+proj=utm +zone=14 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6344\":[\"EPSG:6344\",\"+proj=utm +zone=15 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6345\":[\"EPSG:6345\",\"+proj=utm +zone=16 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6346\":[\"EPSG:6346\",\"+proj=utm +zone=17 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6347\":[\"EPSG:6347\",\"+proj=utm +zone=18 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6348\":[\"EPSG:6348\",\"+proj=utm +zone=19 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6350\":[\"EPSG:6350\",\"+proj=aea +lat_1=29.5 +lat_2=45.5 +lat_0=23 +lon_0=-96 +x_0=0 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:4946\":[\"EPSG:4946\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6351\":[\"EPSG:6351\",\"+proj=lcc +lat_1=73.66666666666667 +lat_2=70.33333333333333 +lat_0=72.02500919444445 +lon_0=-163 +x_0=29500000 +y_0=5500000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6352\":[\"EPSG:6352\",\"+proj=lcc +lat_1=73.66666666666667 +lat_2=70.33333333333333 +lat_0=72.02500919444445 +lon_0=-147 +x_0=31500000 +y_0=5500000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6353\":[\"EPSG:6353\",\"+proj=lcc +lat_1=70.33333333333333 +lat_2=67 +lat_0=68.68747555555557 +lon_0=-165 +x_0=14500000 +y_0=6500000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6354\":[\"EPSG:6354\",\"+proj=lcc +lat_1=70.33333333333333 +lat_2=67 +lat_0=68.68747555555557 +lon_0=-147 +x_0=16500000 +y_0=6500000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6355\":[\"EPSG:6355\",\"+proj=tmerc +lat_0=30.5 +lon_0=-85.83333333333333 +k=0.99996 +x_0=200000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6356\":[\"EPSG:6356\",\"+proj=tmerc +lat_0=30 +lon_0=-87.5 +k=0.999933333 +x_0=600000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6362\":[\"EPSG:6362\",\"+proj=lcc +lat_1=17.5 +lat_2=29.5 +lat_0=12 +lon_0=-102 +x_0=2500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:6366\":[\"EPSG:6366\",\"+proj=utm +zone=11 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:6367\":[\"EPSG:6367\",\"+proj=utm +zone=12 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:6368\":[\"EPSG:6368\",\"+proj=utm +zone=13 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:6369\":[\"EPSG:6369\",\"+proj=utm +zone=14 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:6370\":[\"EPSG:6370\",\"+proj=utm +zone=15 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:6371\":[\"EPSG:6371\",\"+proj=utm +zone=16 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:6372\":[\"EPSG:6372\",\"+proj=lcc +lat_1=17.5 +lat_2=29.5 +lat_0=12 +lon_0=-102 +x_0=2500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:6381\":[\"EPSG:6381\",\"+proj=tmerc +lat_0=0 +lon_0=21 +k=1 +x_0=300000 +y_0=0 +ellps=krass +towgs84=25,-141,-78.5,0,0.35,0.736,0 +units=m +no_defs \"],\"EPSG:6382\":[\"EPSG:6382\",\"+proj=tmerc +lat_0=0 +lon_0=24 +k=1 +x_0=300000 +y_0=0 +ellps=krass +towgs84=25,-141,-78.5,0,0.35,0.736,0 +units=m +no_defs \"],\"EPSG:6383\":[\"EPSG:6383\",\"+proj=tmerc +lat_0=0 +lon_0=27 +k=1 +x_0=300000 +y_0=0 +ellps=krass +towgs84=25,-141,-78.5,0,0.35,0.736,0 +units=m +no_defs \"],\"EPSG:6384\":[\"EPSG:6384\",\"+proj=tmerc +lat_0=0 +lon_0=30 +k=1 +x_0=300000 +y_0=0 +ellps=krass +towgs84=25,-141,-78.5,0,0.35,0.736,0 +units=m +no_defs \"],\"EPSG:6385\":[\"EPSG:6385\",\"+proj=tmerc +lat_0=0 +lon_0=33 +k=1 +x_0=300000 +y_0=0 +ellps=krass +towgs84=25,-141,-78.5,0,0.35,0.736,0 +units=m +no_defs \"],\"EPSG:6386\":[\"EPSG:6386\",\"+proj=tmerc +lat_0=0 +lon_0=36 +k=1 +x_0=300000 +y_0=0 +ellps=krass +towgs84=25,-141,-78.5,0,0.35,0.736,0 +units=m +no_defs \"],\"EPSG:6387\":[\"EPSG:6387\",\"+proj=tmerc +lat_0=0 +lon_0=39 +k=1 +x_0=300000 +y_0=0 +ellps=krass +towgs84=25,-141,-78.5,0,0.35,0.736,0 +units=m +no_defs \"],\"EPSG:6391\":[\"EPSG:6391\",\"+proj=lcc +lat_1=19.33333333333333 +lat_2=19.7 +lat_0=19.33333333333333 +lon_0=-80.56666666666666 +x_0=899160 +y_0=579120 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=ft +no_defs \"],\"EPSG:6393\":[\"EPSG:6393\",\"+proj=aea +lat_1=55 +lat_2=65 +lat_0=50 +lon_0=-154 +x_0=0 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6394\":[\"EPSG:6394\",\"+proj=omerc +lat_0=57 +lonc=-133.6666666666667 +alpha=323.1301023611111 +k=0.9999 +x_0=5000000 +y_0=-5000000 +no_uoff +gamma=323.1301023611111 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6395\":[\"EPSG:6395\",\"+proj=tmerc +lat_0=54 +lon_0=-142 +k=0.9999 +x_0=500000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6396\":[\"EPSG:6396\",\"+proj=tmerc +lat_0=54 +lon_0=-146 +k=0.9999 +x_0=500000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6397\":[\"EPSG:6397\",\"+proj=tmerc +lat_0=54 +lon_0=-150 +k=0.9999 +x_0=500000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6398\":[\"EPSG:6398\",\"+proj=tmerc +lat_0=54 +lon_0=-154 +k=0.9999 +x_0=500000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:4948\":[\"EPSG:4948\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6399\":[\"EPSG:6399\",\"+proj=tmerc +lat_0=54 +lon_0=-158 +k=0.9999 +x_0=500000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6400\":[\"EPSG:6400\",\"+proj=tmerc +lat_0=54 +lon_0=-162 +k=0.9999 +x_0=500000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6401\":[\"EPSG:6401\",\"+proj=tmerc +lat_0=54 +lon_0=-166 +k=0.9999 +x_0=500000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6402\":[\"EPSG:6402\",\"+proj=tmerc +lat_0=54 +lon_0=-170 +k=0.9999 +x_0=500000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6403\":[\"EPSG:6403\",\"+proj=lcc +lat_1=53.83333333333334 +lat_2=51.83333333333334 +lat_0=51 +lon_0=-176 +x_0=1000000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6404\":[\"EPSG:6404\",\"+proj=tmerc +lat_0=31 +lon_0=-111.9166666666667 +k=0.9999 +x_0=213360 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6405\":[\"EPSG:6405\",\"+proj=tmerc +lat_0=31 +lon_0=-111.9166666666667 +k=0.9999 +x_0=213360 +y_0=0 +ellps=GRS80 +units=ft +no_defs \"],\"EPSG:6406\":[\"EPSG:6406\",\"+proj=tmerc +lat_0=31 +lon_0=-110.1666666666667 +k=0.9999 +x_0=213360 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6407\":[\"EPSG:6407\",\"+proj=tmerc +lat_0=31 +lon_0=-110.1666666666667 +k=0.9999 +x_0=213360 +y_0=0 +ellps=GRS80 +units=ft +no_defs \"],\"EPSG:6408\":[\"EPSG:6408\",\"+proj=tmerc +lat_0=31 +lon_0=-113.75 +k=0.999933333 +x_0=213360 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6409\":[\"EPSG:6409\",\"+proj=tmerc +lat_0=31 +lon_0=-113.75 +k=0.999933333 +x_0=213360 +y_0=0 +ellps=GRS80 +units=ft +no_defs \"],\"EPSG:6410\":[\"EPSG:6410\",\"+proj=lcc +lat_1=36.23333333333333 +lat_2=34.93333333333333 +lat_0=34.33333333333334 +lon_0=-92 +x_0=400000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6411\":[\"EPSG:6411\",\"+proj=lcc +lat_1=36.23333333333333 +lat_2=34.93333333333333 +lat_0=34.33333333333334 +lon_0=-92 +x_0=399999.99998984 +y_0=0 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:6412\":[\"EPSG:6412\",\"+proj=lcc +lat_1=34.76666666666667 +lat_2=33.3 +lat_0=32.66666666666666 +lon_0=-92 +x_0=400000 +y_0=400000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6413\":[\"EPSG:6413\",\"+proj=lcc +lat_1=34.76666666666667 +lat_2=33.3 +lat_0=32.66666666666666 +lon_0=-92 +x_0=399999.99998984 +y_0=399999.99998984 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:6414\":[\"EPSG:6414\",\"+proj=aea +lat_1=34 +lat_2=40.5 +lat_0=0 +lon_0=-120 +x_0=0 +y_0=-4000000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6415\":[\"EPSG:6415\",\"+proj=lcc +lat_1=41.66666666666666 +lat_2=40 +lat_0=39.33333333333334 +lon_0=-122 +x_0=2000000 +y_0=500000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6416\":[\"EPSG:6416\",\"+proj=lcc +lat_1=41.66666666666666 +lat_2=40 +lat_0=39.33333333333334 +lon_0=-122 +x_0=2000000.0001016 +y_0=500000.0001016001 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:6528\":[\"EPSG:6528\",\"+proj=tmerc +lat_0=31 +lon_0=-106.25 +k=0.9999 +x_0=500000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6417\":[\"EPSG:6417\",\"+proj=lcc +lat_1=39.83333333333334 +lat_2=38.33333333333334 +lat_0=37.66666666666666 +lon_0=-122 +x_0=2000000 +y_0=500000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6418\":[\"EPSG:6418\",\"+proj=lcc +lat_1=39.83333333333334 +lat_2=38.33333333333334 +lat_0=37.66666666666666 +lon_0=-122 +x_0=2000000.0001016 +y_0=500000.0001016001 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:6419\":[\"EPSG:6419\",\"+proj=lcc +lat_1=38.43333333333333 +lat_2=37.06666666666667 +lat_0=36.5 +lon_0=-120.5 +x_0=2000000 +y_0=500000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6420\":[\"EPSG:6420\",\"+proj=lcc +lat_1=38.43333333333333 +lat_2=37.06666666666667 +lat_0=36.5 +lon_0=-120.5 +x_0=2000000.0001016 +y_0=500000.0001016001 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:6421\":[\"EPSG:6421\",\"+proj=lcc +lat_1=37.25 +lat_2=36 +lat_0=35.33333333333334 +lon_0=-119 +x_0=2000000 +y_0=500000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6422\":[\"EPSG:6422\",\"+proj=lcc +lat_1=37.25 +lat_2=36 +lat_0=35.33333333333334 +lon_0=-119 +x_0=2000000.0001016 +y_0=500000.0001016001 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:6423\":[\"EPSG:6423\",\"+proj=lcc +lat_1=35.46666666666667 +lat_2=34.03333333333333 +lat_0=33.5 +lon_0=-118 +x_0=2000000 +y_0=500000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6424\":[\"EPSG:6424\",\"+proj=lcc +lat_1=35.46666666666667 +lat_2=34.03333333333333 +lat_0=33.5 +lon_0=-118 +x_0=2000000.0001016 +y_0=500000.0001016001 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:4950\":[\"EPSG:4950\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6425\":[\"EPSG:6425\",\"+proj=lcc +lat_1=33.88333333333333 +lat_2=32.78333333333333 +lat_0=32.16666666666666 +lon_0=-116.25 +x_0=2000000 +y_0=500000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6426\":[\"EPSG:6426\",\"+proj=lcc +lat_1=33.88333333333333 +lat_2=32.78333333333333 +lat_0=32.16666666666666 +lon_0=-116.25 +x_0=2000000.0001016 +y_0=500000.0001016001 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:6427\":[\"EPSG:6427\",\"+proj=lcc +lat_1=39.75 +lat_2=38.45 +lat_0=37.83333333333334 +lon_0=-105.5 +x_0=914401.8289 +y_0=304800.6096 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6428\":[\"EPSG:6428\",\"+proj=lcc +lat_1=39.75 +lat_2=38.45 +lat_0=37.83333333333334 +lon_0=-105.5 +x_0=914401.8288036576 +y_0=304800.6096012192 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:6429\":[\"EPSG:6429\",\"+proj=lcc +lat_1=40.78333333333333 +lat_2=39.71666666666667 +lat_0=39.33333333333334 +lon_0=-105.5 +x_0=914401.8289 +y_0=304800.6096 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6430\":[\"EPSG:6430\",\"+proj=lcc +lat_1=40.78333333333333 +lat_2=39.71666666666667 +lat_0=39.33333333333334 +lon_0=-105.5 +x_0=914401.8288036576 +y_0=304800.6096012192 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:6431\":[\"EPSG:6431\",\"+proj=lcc +lat_1=38.43333333333333 +lat_2=37.23333333333333 +lat_0=36.66666666666666 +lon_0=-105.5 +x_0=914401.8289 +y_0=304800.6096 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6432\":[\"EPSG:6432\",\"+proj=lcc +lat_1=38.43333333333333 +lat_2=37.23333333333333 +lat_0=36.66666666666666 +lon_0=-105.5 +x_0=914401.8288036576 +y_0=304800.6096012192 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:6433\":[\"EPSG:6433\",\"+proj=lcc +lat_1=41.86666666666667 +lat_2=41.2 +lat_0=40.83333333333334 +lon_0=-72.75 +x_0=304800.6096 +y_0=152400.3048 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6434\":[\"EPSG:6434\",\"+proj=lcc +lat_1=41.86666666666667 +lat_2=41.2 +lat_0=40.83333333333334 +lon_0=-72.75 +x_0=304800.6096012192 +y_0=152400.3048006096 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:6435\":[\"EPSG:6435\",\"+proj=tmerc +lat_0=38 +lon_0=-75.41666666666667 +k=0.999995 +x_0=200000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6436\":[\"EPSG:6436\",\"+proj=tmerc +lat_0=38 +lon_0=-75.41666666666667 +k=0.999995 +x_0=200000.0001016002 +y_0=0 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:6437\":[\"EPSG:6437\",\"+proj=tmerc +lat_0=24.33333333333333 +lon_0=-81 +k=0.999941177 +x_0=200000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6438\":[\"EPSG:6438\",\"+proj=tmerc +lat_0=24.33333333333333 +lon_0=-81 +k=0.999941177 +x_0=200000.0001016002 +y_0=0 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:6439\":[\"EPSG:6439\",\"+proj=aea +lat_1=24 +lat_2=31.5 +lat_0=24 +lon_0=-84 +x_0=400000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6440\":[\"EPSG:6440\",\"+proj=lcc +lat_1=30.75 +lat_2=29.58333333333333 +lat_0=29 +lon_0=-84.5 +x_0=600000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6441\":[\"EPSG:6441\",\"+proj=lcc +lat_1=30.75 +lat_2=29.58333333333333 +lat_0=29 +lon_0=-84.5 +x_0=600000 +y_0=0 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:6442\":[\"EPSG:6442\",\"+proj=tmerc +lat_0=24.33333333333333 +lon_0=-82 +k=0.999941177 +x_0=200000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6443\":[\"EPSG:6443\",\"+proj=tmerc +lat_0=24.33333333333333 +lon_0=-82 +k=0.999941177 +x_0=200000.0001016002 +y_0=0 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:6444\":[\"EPSG:6444\",\"+proj=tmerc +lat_0=30 +lon_0=-82.16666666666667 +k=0.9999 +x_0=200000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6445\":[\"EPSG:6445\",\"+proj=tmerc +lat_0=30 +lon_0=-82.16666666666667 +k=0.9999 +x_0=200000.0001016002 +y_0=0 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:6446\":[\"EPSG:6446\",\"+proj=tmerc +lat_0=30 +lon_0=-84.16666666666667 +k=0.9999 +x_0=700000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6447\":[\"EPSG:6447\",\"+proj=tmerc +lat_0=30 +lon_0=-84.16666666666667 +k=0.9999 +x_0=699999.9998983998 +y_0=0 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:6448\":[\"EPSG:6448\",\"+proj=tmerc +lat_0=41.66666666666666 +lon_0=-114 +k=0.9999473679999999 +x_0=500000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6449\":[\"EPSG:6449\",\"+proj=tmerc +lat_0=41.66666666666666 +lon_0=-114 +k=0.9999473679999999 +x_0=500000.0001016001 +y_0=0 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:6450\":[\"EPSG:6450\",\"+proj=tmerc +lat_0=41.66666666666666 +lon_0=-112.1666666666667 +k=0.9999473679999999 +x_0=200000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:4952\":[\"EPSG:4952\",\"+proj=geocent +ellps=WGS84 +units=m +no_defs \"],\"EPSG:6451\":[\"EPSG:6451\",\"+proj=tmerc +lat_0=41.66666666666666 +lon_0=-112.1666666666667 +k=0.9999473679999999 +x_0=200000.0001016002 +y_0=0 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:6452\":[\"EPSG:6452\",\"+proj=tmerc +lat_0=41.66666666666666 +lon_0=-115.75 +k=0.999933333 +x_0=800000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6453\":[\"EPSG:6453\",\"+proj=tmerc +lat_0=41.66666666666666 +lon_0=-115.75 +k=0.999933333 +x_0=800000.0001016001 +y_0=0 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:6454\":[\"EPSG:6454\",\"+proj=tmerc +lat_0=36.66666666666666 +lon_0=-88.33333333333333 +k=0.9999749999999999 +x_0=300000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6455\":[\"EPSG:6455\",\"+proj=tmerc +lat_0=36.66666666666666 +lon_0=-88.33333333333333 +k=0.9999749999999999 +x_0=300000.0000000001 +y_0=0 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:6456\":[\"EPSG:6456\",\"+proj=tmerc +lat_0=36.66666666666666 +lon_0=-90.16666666666667 +k=0.999941177 +x_0=700000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6457\":[\"EPSG:6457\",\"+proj=tmerc +lat_0=36.66666666666666 +lon_0=-90.16666666666667 +k=0.999941177 +x_0=699999.9999898402 +y_0=0 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:6458\":[\"EPSG:6458\",\"+proj=tmerc +lat_0=37.5 +lon_0=-85.66666666666667 +k=0.999966667 +x_0=100000 +y_0=250000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6459\":[\"EPSG:6459\",\"+proj=tmerc +lat_0=37.5 +lon_0=-85.66666666666667 +k=0.999966667 +x_0=99999.99989839978 +y_0=249999.9998983998 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:6460\":[\"EPSG:6460\",\"+proj=tmerc +lat_0=37.5 +lon_0=-87.08333333333333 +k=0.999966667 +x_0=900000 +y_0=250000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6461\":[\"EPSG:6461\",\"+proj=tmerc +lat_0=37.5 +lon_0=-87.08333333333333 +k=0.999966667 +x_0=900000 +y_0=249999.9998983998 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:6462\":[\"EPSG:6462\",\"+proj=lcc +lat_1=43.26666666666667 +lat_2=42.06666666666667 +lat_0=41.5 +lon_0=-93.5 +x_0=1500000 +y_0=1000000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6463\":[\"EPSG:6463\",\"+proj=lcc +lat_1=43.26666666666667 +lat_2=42.06666666666667 +lat_0=41.5 +lon_0=-93.5 +x_0=1500000 +y_0=999999.9999898402 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:6464\":[\"EPSG:6464\",\"+proj=lcc +lat_1=41.78333333333333 +lat_2=40.61666666666667 +lat_0=40 +lon_0=-93.5 +x_0=500000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6465\":[\"EPSG:6465\",\"+proj=lcc +lat_1=41.78333333333333 +lat_2=40.61666666666667 +lat_0=40 +lon_0=-93.5 +x_0=500000.00001016 +y_0=0 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:6466\":[\"EPSG:6466\",\"+proj=lcc +lat_1=39.78333333333333 +lat_2=38.71666666666667 +lat_0=38.33333333333334 +lon_0=-98 +x_0=400000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6467\":[\"EPSG:6467\",\"+proj=lcc +lat_1=39.78333333333333 +lat_2=38.71666666666667 +lat_0=38.33333333333334 +lon_0=-98 +x_0=399999.99998984 +y_0=0 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:6673\":[\"EPSG:6673\",\"+proj=tmerc +lat_0=36 +lon_0=134.3333333333333 +k=0.9999 +x_0=0 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6468\":[\"EPSG:6468\",\"+proj=lcc +lat_1=38.56666666666667 +lat_2=37.26666666666667 +lat_0=36.66666666666666 +lon_0=-98.5 +x_0=400000 +y_0=400000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6469\":[\"EPSG:6469\",\"+proj=lcc +lat_1=38.56666666666667 +lat_2=37.26666666666667 +lat_0=36.66666666666666 +lon_0=-98.5 +x_0=399999.99998984 +y_0=399999.99998984 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:6470\":[\"EPSG:6470\",\"+proj=lcc +lat_1=37.96666666666667 +lat_2=38.96666666666667 +lat_0=37.5 +lon_0=-84.25 +x_0=500000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6471\":[\"EPSG:6471\",\"+proj=lcc +lat_1=37.96666666666667 +lat_2=38.96666666666667 +lat_0=37.5 +lon_0=-84.25 +x_0=500000.0001016001 +y_0=0 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:6472\":[\"EPSG:6472\",\"+proj=lcc +lat_1=37.08333333333334 +lat_2=38.66666666666666 +lat_0=36.33333333333334 +lon_0=-85.75 +x_0=1500000 +y_0=1000000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6473\":[\"EPSG:6473\",\"+proj=lcc +lat_1=37.08333333333334 +lat_2=38.66666666666666 +lat_0=36.33333333333334 +lon_0=-85.75 +x_0=1500000 +y_0=999999.9998983998 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:6474\":[\"EPSG:6474\",\"+proj=lcc +lat_1=37.93333333333333 +lat_2=36.73333333333333 +lat_0=36.33333333333334 +lon_0=-85.75 +x_0=500000 +y_0=500000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6475\":[\"EPSG:6475\",\"+proj=lcc +lat_1=37.93333333333333 +lat_2=36.73333333333333 +lat_0=36.33333333333334 +lon_0=-85.75 +x_0=500000.0001016001 +y_0=500000.0001016001 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:6476\":[\"EPSG:6476\",\"+proj=lcc +lat_1=32.66666666666666 +lat_2=31.16666666666667 +lat_0=30.5 +lon_0=-92.5 +x_0=1000000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6477\":[\"EPSG:6477\",\"+proj=lcc +lat_1=32.66666666666666 +lat_2=31.16666666666667 +lat_0=30.5 +lon_0=-92.5 +x_0=999999.9999898402 +y_0=0 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:6478\":[\"EPSG:6478\",\"+proj=lcc +lat_1=30.7 +lat_2=29.3 +lat_0=28.5 +lon_0=-91.33333333333333 +x_0=1000000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6479\":[\"EPSG:6479\",\"+proj=lcc +lat_1=30.7 +lat_2=29.3 +lat_0=28.5 +lon_0=-91.33333333333333 +x_0=999999.9999898402 +y_0=0 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:6480\":[\"EPSG:6480\",\"+proj=tmerc +lat_0=43.5 +lon_0=-69.125 +k=0.99998 +x_0=500000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6481\":[\"EPSG:6481\",\"+proj=tmerc +lat_0=43.83333333333334 +lon_0=-67.875 +k=0.99998 +x_0=700000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6482\":[\"EPSG:6482\",\"+proj=tmerc +lat_0=42.83333333333334 +lon_0=-70.375 +k=0.99998 +x_0=300000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6483\":[\"EPSG:6483\",\"+proj=tmerc +lat_0=43.66666666666666 +lon_0=-68.5 +k=0.9999 +x_0=300000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6484\":[\"EPSG:6484\",\"+proj=tmerc +lat_0=43.66666666666666 +lon_0=-68.5 +k=0.9999 +x_0=300000.0000000001 +y_0=0 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:6485\":[\"EPSG:6485\",\"+proj=tmerc +lat_0=42.83333333333334 +lon_0=-70.16666666666667 +k=0.999966667 +x_0=900000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6486\":[\"EPSG:6486\",\"+proj=tmerc +lat_0=42.83333333333334 +lon_0=-70.16666666666667 +k=0.999966667 +x_0=900000 +y_0=0 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:6487\":[\"EPSG:6487\",\"+proj=lcc +lat_1=39.45 +lat_2=38.3 +lat_0=37.66666666666666 +lon_0=-77 +x_0=400000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6488\":[\"EPSG:6488\",\"+proj=lcc +lat_1=39.45 +lat_2=38.3 +lat_0=37.66666666666666 +lon_0=-77 +x_0=399999.9998983998 +y_0=0 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:6489\":[\"EPSG:6489\",\"+proj=lcc +lat_1=41.48333333333333 +lat_2=41.28333333333333 +lat_0=41 +lon_0=-70.5 +x_0=500000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6490\":[\"EPSG:6490\",\"+proj=lcc +lat_1=41.48333333333333 +lat_2=41.28333333333333 +lat_0=41 +lon_0=-70.5 +x_0=500000.0001016001 +y_0=0 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:6491\":[\"EPSG:6491\",\"+proj=lcc +lat_1=42.68333333333333 +lat_2=41.71666666666667 +lat_0=41 +lon_0=-71.5 +x_0=200000 +y_0=750000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6492\":[\"EPSG:6492\",\"+proj=lcc +lat_1=42.68333333333333 +lat_2=41.71666666666667 +lat_0=41 +lon_0=-71.5 +x_0=200000.0001016002 +y_0=750000 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:6610\":[\"EPSG:6610\",\"+proj=tmerc +lat_0=0 +lon_0=-90 +k=0.9996 +x_0=520000 +y_0=-4480000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6493\":[\"EPSG:6493\",\"+proj=lcc +lat_1=45.7 +lat_2=44.18333333333333 +lat_0=43.31666666666667 +lon_0=-84.36666666666666 +x_0=6000000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6494\":[\"EPSG:6494\",\"+proj=lcc +lat_1=45.7 +lat_2=44.18333333333333 +lat_0=43.31666666666667 +lon_0=-84.36666666666666 +x_0=5999999.999976001 +y_0=0 +ellps=GRS80 +units=ft +no_defs \"],\"EPSG:6495\":[\"EPSG:6495\",\"+proj=lcc +lat_1=47.08333333333334 +lat_2=45.48333333333333 +lat_0=44.78333333333333 +lon_0=-87 +x_0=8000000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6496\":[\"EPSG:6496\",\"+proj=lcc +lat_1=47.08333333333334 +lat_2=45.48333333333333 +lat_0=44.78333333333333 +lon_0=-87 +x_0=7999999.999968001 +y_0=0 +ellps=GRS80 +units=ft +no_defs \"],\"EPSG:6497\":[\"EPSG:6497\",\"+proj=omerc +lat_0=45.30916666666666 +lonc=-86 +alpha=337.25556 +k=0.9996 +x_0=2546731.496 +y_0=-4354009.816 +no_uoff +gamma=337.25556 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6498\":[\"EPSG:6498\",\"+proj=lcc +lat_1=43.66666666666666 +lat_2=42.1 +lat_0=41.5 +lon_0=-84.36666666666666 +x_0=4000000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6499\":[\"EPSG:6499\",\"+proj=lcc +lat_1=43.66666666666666 +lat_2=42.1 +lat_0=41.5 +lon_0=-84.36666666666666 +x_0=3999999.999984 +y_0=0 +ellps=GRS80 +units=ft +no_defs \"],\"EPSG:6500\":[\"EPSG:6500\",\"+proj=lcc +lat_1=47.05 +lat_2=45.61666666666667 +lat_0=45 +lon_0=-94.25 +x_0=800000 +y_0=100000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6501\":[\"EPSG:6501\",\"+proj=lcc +lat_1=47.05 +lat_2=45.61666666666667 +lat_0=45 +lon_0=-94.25 +x_0=800000.0000101599 +y_0=99999.99998983997 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:6502\":[\"EPSG:6502\",\"+proj=lcc +lat_1=48.63333333333333 +lat_2=47.03333333333333 +lat_0=46.5 +lon_0=-93.09999999999999 +x_0=800000 +y_0=100000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6503\":[\"EPSG:6503\",\"+proj=lcc +lat_1=48.63333333333333 +lat_2=47.03333333333333 +lat_0=46.5 +lon_0=-93.09999999999999 +x_0=800000.0000101599 +y_0=99999.99998983997 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:6504\":[\"EPSG:6504\",\"+proj=lcc +lat_1=45.21666666666667 +lat_2=43.78333333333333 +lat_0=43 +lon_0=-94 +x_0=800000 +y_0=100000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6505\":[\"EPSG:6505\",\"+proj=lcc +lat_1=45.21666666666667 +lat_2=43.78333333333333 +lat_0=43 +lon_0=-94 +x_0=800000.0000101599 +y_0=99999.99998983997 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:6506\":[\"EPSG:6506\",\"+proj=tmerc +lat_0=29.5 +lon_0=-88.83333333333333 +k=0.99995 +x_0=300000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6507\":[\"EPSG:6507\",\"+proj=tmerc +lat_0=29.5 +lon_0=-88.83333333333333 +k=0.99995 +x_0=300000.0000000001 +y_0=0 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:6508\":[\"EPSG:6508\",\"+proj=tmerc +lat_0=32.5 +lon_0=-89.75 +k=0.9998335 +x_0=500000 +y_0=1300000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6509\":[\"EPSG:6509\",\"+proj=tmerc +lat_0=29.5 +lon_0=-90.33333333333333 +k=0.99995 +x_0=700000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6510\":[\"EPSG:6510\",\"+proj=tmerc +lat_0=29.5 +lon_0=-90.33333333333333 +k=0.99995 +x_0=699999.9998983998 +y_0=0 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:6511\":[\"EPSG:6511\",\"+proj=tmerc +lat_0=35.83333333333334 +lon_0=-92.5 +k=0.999933333 +x_0=500000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6512\":[\"EPSG:6512\",\"+proj=tmerc +lat_0=35.83333333333334 +lon_0=-90.5 +k=0.999933333 +x_0=250000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6513\":[\"EPSG:6513\",\"+proj=tmerc +lat_0=36.16666666666666 +lon_0=-94.5 +k=0.999941177 +x_0=850000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6514\":[\"EPSG:6514\",\"+proj=lcc +lat_1=49 +lat_2=45 +lat_0=44.25 +lon_0=-109.5 +x_0=600000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6515\":[\"EPSG:6515\",\"+proj=lcc +lat_1=49 +lat_2=45 +lat_0=44.25 +lon_0=-109.5 +x_0=599999.9999976 +y_0=0 +ellps=GRS80 +units=ft +no_defs \"],\"EPSG:6516\":[\"EPSG:6516\",\"+proj=lcc +lat_1=43 +lat_2=40 +lat_0=39.83333333333334 +lon_0=-100 +x_0=500000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6517\":[\"EPSG:6517\",\"+proj=lcc +lat_1=43 +lat_2=40 +lat_0=39.83333333333334 +lon_0=-100 +x_0=500000.00001016 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:6518\":[\"EPSG:6518\",\"+proj=tmerc +lat_0=34.75 +lon_0=-116.6666666666667 +k=0.9999 +x_0=500000 +y_0=6000000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6519\":[\"EPSG:6519\",\"+proj=tmerc +lat_0=34.75 +lon_0=-116.6666666666667 +k=0.9999 +x_0=500000.00001016 +y_0=6000000 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:6520\":[\"EPSG:6520\",\"+proj=tmerc +lat_0=34.75 +lon_0=-115.5833333333333 +k=0.9999 +x_0=200000 +y_0=8000000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6521\":[\"EPSG:6521\",\"+proj=tmerc +lat_0=34.75 +lon_0=-115.5833333333333 +k=0.9999 +x_0=200000.00001016 +y_0=8000000.000010163 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:6522\":[\"EPSG:6522\",\"+proj=tmerc +lat_0=34.75 +lon_0=-118.5833333333333 +k=0.9999 +x_0=800000 +y_0=4000000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6523\":[\"EPSG:6523\",\"+proj=tmerc +lat_0=34.75 +lon_0=-118.5833333333333 +k=0.9999 +x_0=800000.0000101599 +y_0=3999999.99998984 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:6524\":[\"EPSG:6524\",\"+proj=tmerc +lat_0=42.5 +lon_0=-71.66666666666667 +k=0.999966667 +x_0=300000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6525\":[\"EPSG:6525\",\"+proj=tmerc +lat_0=42.5 +lon_0=-71.66666666666667 +k=0.999966667 +x_0=300000.0000000001 +y_0=0 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:6526\":[\"EPSG:6526\",\"+proj=tmerc +lat_0=38.83333333333334 +lon_0=-74.5 +k=0.9999 +x_0=150000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6527\":[\"EPSG:6527\",\"+proj=tmerc +lat_0=38.83333333333334 +lon_0=-74.5 +k=0.9999 +x_0=150000 +y_0=0 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:4958\":[\"EPSG:4958\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6529\":[\"EPSG:6529\",\"+proj=tmerc +lat_0=31 +lon_0=-106.25 +k=0.9999 +x_0=500000.0001016001 +y_0=0 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:6530\":[\"EPSG:6530\",\"+proj=tmerc +lat_0=31 +lon_0=-104.3333333333333 +k=0.999909091 +x_0=165000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6531\":[\"EPSG:6531\",\"+proj=tmerc +lat_0=31 +lon_0=-104.3333333333333 +k=0.999909091 +x_0=165000 +y_0=0 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:6532\":[\"EPSG:6532\",\"+proj=tmerc +lat_0=31 +lon_0=-107.8333333333333 +k=0.999916667 +x_0=830000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6533\":[\"EPSG:6533\",\"+proj=tmerc +lat_0=31 +lon_0=-107.8333333333333 +k=0.999916667 +x_0=830000.0001016001 +y_0=0 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:6534\":[\"EPSG:6534\",\"+proj=tmerc +lat_0=40 +lon_0=-76.58333333333333 +k=0.9999375 +x_0=250000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6535\":[\"EPSG:6535\",\"+proj=tmerc +lat_0=40 +lon_0=-76.58333333333333 +k=0.9999375 +x_0=249999.9998983998 +y_0=0 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:6536\":[\"EPSG:6536\",\"+proj=tmerc +lat_0=38.83333333333334 +lon_0=-74.5 +k=0.9999 +x_0=150000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6537\":[\"EPSG:6537\",\"+proj=tmerc +lat_0=38.83333333333334 +lon_0=-74.5 +k=0.9999 +x_0=150000 +y_0=0 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:4960\":[\"EPSG:4960\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6538\":[\"EPSG:6538\",\"+proj=lcc +lat_1=41.03333333333333 +lat_2=40.66666666666666 +lat_0=40.16666666666666 +lon_0=-74 +x_0=300000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6539\":[\"EPSG:6539\",\"+proj=lcc +lat_1=41.03333333333333 +lat_2=40.66666666666666 +lat_0=40.16666666666666 +lon_0=-74 +x_0=300000.0000000001 +y_0=0 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:6540\":[\"EPSG:6540\",\"+proj=tmerc +lat_0=40 +lon_0=-78.58333333333333 +k=0.9999375 +x_0=350000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6541\":[\"EPSG:6541\",\"+proj=tmerc +lat_0=40 +lon_0=-78.58333333333333 +k=0.9999375 +x_0=350000.0001016001 +y_0=0 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:6542\":[\"EPSG:6542\",\"+proj=lcc +lat_1=36.16666666666666 +lat_2=34.33333333333334 +lat_0=33.75 +lon_0=-79 +x_0=609601.22 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6543\":[\"EPSG:6543\",\"+proj=lcc +lat_1=36.16666666666666 +lat_2=34.33333333333334 +lat_0=33.75 +lon_0=-79 +x_0=609601.2192024384 +y_0=0 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:6544\":[\"EPSG:6544\",\"+proj=lcc +lat_1=48.73333333333333 +lat_2=47.43333333333333 +lat_0=47 +lon_0=-100.5 +x_0=600000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6545\":[\"EPSG:6545\",\"+proj=lcc +lat_1=48.73333333333333 +lat_2=47.43333333333333 +lat_0=47 +lon_0=-100.5 +x_0=599999.9999976 +y_0=0 +ellps=GRS80 +units=ft +no_defs \"],\"EPSG:6611\":[\"EPSG:6611\",\"+proj=tmerc +lat_0=40.5 +lon_0=-105.1666666666667 +k=0.9999375 +x_0=200000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6546\":[\"EPSG:6546\",\"+proj=lcc +lat_1=47.48333333333333 +lat_2=46.18333333333333 +lat_0=45.66666666666666 +lon_0=-100.5 +x_0=600000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6547\":[\"EPSG:6547\",\"+proj=lcc +lat_1=47.48333333333333 +lat_2=46.18333333333333 +lat_0=45.66666666666666 +lon_0=-100.5 +x_0=599999.9999976 +y_0=0 +ellps=GRS80 +units=ft +no_defs \"],\"EPSG:6548\":[\"EPSG:6548\",\"+proj=lcc +lat_1=41.7 +lat_2=40.43333333333333 +lat_0=39.66666666666666 +lon_0=-82.5 +x_0=600000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6549\":[\"EPSG:6549\",\"+proj=lcc +lat_1=41.7 +lat_2=40.43333333333333 +lat_0=39.66666666666666 +lon_0=-82.5 +x_0=600000 +y_0=0 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:6550\":[\"EPSG:6550\",\"+proj=lcc +lat_1=40.03333333333333 +lat_2=38.73333333333333 +lat_0=38 +lon_0=-82.5 +x_0=600000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6551\":[\"EPSG:6551\",\"+proj=lcc +lat_1=40.03333333333333 +lat_2=38.73333333333333 +lat_0=38 +lon_0=-82.5 +x_0=600000 +y_0=0 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:6552\":[\"EPSG:6552\",\"+proj=lcc +lat_1=36.76666666666667 +lat_2=35.56666666666667 +lat_0=35 +lon_0=-98 +x_0=600000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6553\":[\"EPSG:6553\",\"+proj=lcc +lat_1=36.76666666666667 +lat_2=35.56666666666667 +lat_0=35 +lon_0=-98 +x_0=600000 +y_0=0 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:6674\":[\"EPSG:6674\",\"+proj=tmerc +lat_0=36 +lon_0=136 +k=0.9999 +x_0=0 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6554\":[\"EPSG:6554\",\"+proj=lcc +lat_1=35.23333333333333 +lat_2=33.93333333333333 +lat_0=33.33333333333334 +lon_0=-98 +x_0=600000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6555\":[\"EPSG:6555\",\"+proj=lcc +lat_1=35.23333333333333 +lat_2=33.93333333333333 +lat_0=33.33333333333334 +lon_0=-98 +x_0=600000 +y_0=0 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:6556\":[\"EPSG:6556\",\"+proj=lcc +lat_1=43 +lat_2=45.5 +lat_0=41.75 +lon_0=-120.5 +x_0=400000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6557\":[\"EPSG:6557\",\"+proj=lcc +lat_1=43 +lat_2=45.5 +lat_0=41.75 +lon_0=-120.5 +x_0=399999.9999984 +y_0=0 +ellps=GRS80 +units=ft +no_defs \"],\"EPSG:6558\":[\"EPSG:6558\",\"+proj=lcc +lat_1=46 +lat_2=44.33333333333334 +lat_0=43.66666666666666 +lon_0=-120.5 +x_0=2500000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6559\":[\"EPSG:6559\",\"+proj=lcc +lat_1=46 +lat_2=44.33333333333334 +lat_0=43.66666666666666 +lon_0=-120.5 +x_0=2500000.0001424 +y_0=0 +ellps=GRS80 +units=ft +no_defs \"],\"EPSG:6560\":[\"EPSG:6560\",\"+proj=lcc +lat_1=44 +lat_2=42.33333333333334 +lat_0=41.66666666666666 +lon_0=-120.5 +x_0=1500000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6561\":[\"EPSG:6561\",\"+proj=lcc +lat_1=44 +lat_2=42.33333333333334 +lat_0=41.66666666666666 +lon_0=-120.5 +x_0=1500000.0001464 +y_0=0 +ellps=GRS80 +units=ft +no_defs \"],\"EPSG:6612\":[\"EPSG:6612\",\"+proj=tmerc +lat_0=40.5 +lon_0=-105.1666666666667 +k=0.9999375 +x_0=200000.00001016 +y_0=0 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:6562\":[\"EPSG:6562\",\"+proj=lcc +lat_1=41.95 +lat_2=40.88333333333333 +lat_0=40.16666666666666 +lon_0=-77.75 +x_0=600000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6563\":[\"EPSG:6563\",\"+proj=lcc +lat_1=41.95 +lat_2=40.88333333333333 +lat_0=40.16666666666666 +lon_0=-77.75 +x_0=600000 +y_0=0 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:6564\":[\"EPSG:6564\",\"+proj=lcc +lat_1=40.96666666666667 +lat_2=39.93333333333333 +lat_0=39.33333333333334 +lon_0=-77.75 +x_0=600000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6565\":[\"EPSG:6565\",\"+proj=lcc +lat_1=40.96666666666667 +lat_2=39.93333333333333 +lat_0=39.33333333333334 +lon_0=-77.75 +x_0=600000 +y_0=0 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:6566\":[\"EPSG:6566\",\"+proj=lcc +lat_1=18.43333333333333 +lat_2=18.03333333333333 +lat_0=17.83333333333333 +lon_0=-66.43333333333334 +x_0=200000 +y_0=200000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6567\":[\"EPSG:6567\",\"+proj=tmerc +lat_0=41.08333333333334 +lon_0=-71.5 +k=0.99999375 +x_0=100000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6568\":[\"EPSG:6568\",\"+proj=tmerc +lat_0=41.08333333333334 +lon_0=-71.5 +k=0.99999375 +x_0=99999.99998983997 +y_0=0 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:6569\":[\"EPSG:6569\",\"+proj=lcc +lat_1=34.83333333333334 +lat_2=32.5 +lat_0=31.83333333333333 +lon_0=-81 +x_0=609600 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6671\":[\"EPSG:6671\",\"+proj=tmerc +lat_0=36 +lon_0=132.1666666666667 +k=0.9999 +x_0=0 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6570\":[\"EPSG:6570\",\"+proj=lcc +lat_1=34.83333333333334 +lat_2=32.5 +lat_0=31.83333333333333 +lon_0=-81 +x_0=609600 +y_0=0 +ellps=GRS80 +units=ft +no_defs \"],\"EPSG:6571\":[\"EPSG:6571\",\"+proj=lcc +lat_1=45.68333333333333 +lat_2=44.41666666666666 +lat_0=43.83333333333334 +lon_0=-100 +x_0=600000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6572\":[\"EPSG:6572\",\"+proj=lcc +lat_1=45.68333333333333 +lat_2=44.41666666666666 +lat_0=43.83333333333334 +lon_0=-100 +x_0=600000 +y_0=0 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:6573\":[\"EPSG:6573\",\"+proj=lcc +lat_1=44.4 +lat_2=42.83333333333334 +lat_0=42.33333333333334 +lon_0=-100.3333333333333 +x_0=600000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6574\":[\"EPSG:6574\",\"+proj=lcc +lat_1=44.4 +lat_2=42.83333333333334 +lat_0=42.33333333333334 +lon_0=-100.3333333333333 +x_0=600000 +y_0=0 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:6575\":[\"EPSG:6575\",\"+proj=lcc +lat_1=36.41666666666666 +lat_2=35.25 +lat_0=34.33333333333334 +lon_0=-86 +x_0=600000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6576\":[\"EPSG:6576\",\"+proj=lcc +lat_1=36.41666666666666 +lat_2=35.25 +lat_0=34.33333333333334 +lon_0=-86 +x_0=600000 +y_0=0 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:6577\":[\"EPSG:6577\",\"+proj=lcc +lat_1=31.88333333333333 +lat_2=30.11666666666667 +lat_0=29.66666666666667 +lon_0=-100.3333333333333 +x_0=700000 +y_0=3000000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:4962\":[\"EPSG:4962\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6578\":[\"EPSG:6578\",\"+proj=lcc +lat_1=31.88333333333333 +lat_2=30.11666666666667 +lat_0=29.66666666666667 +lon_0=-100.3333333333333 +x_0=699999.9998983998 +y_0=3000000 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:6579\":[\"EPSG:6579\",\"+proj=aea +lat_1=27.5 +lat_2=35 +lat_0=18 +lon_0=-100 +x_0=1500000 +y_0=6000000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6580\":[\"EPSG:6580\",\"+proj=lcc +lat_1=27.5 +lat_2=35 +lat_0=18 +lon_0=-100 +x_0=1500000 +y_0=5000000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6581\":[\"EPSG:6581\",\"+proj=lcc +lat_1=36.18333333333333 +lat_2=34.65 +lat_0=34 +lon_0=-101.5 +x_0=200000 +y_0=1000000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6582\":[\"EPSG:6582\",\"+proj=lcc +lat_1=36.18333333333333 +lat_2=34.65 +lat_0=34 +lon_0=-101.5 +x_0=200000.0001016002 +y_0=999999.9998983998 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:6583\":[\"EPSG:6583\",\"+proj=lcc +lat_1=33.96666666666667 +lat_2=32.13333333333333 +lat_0=31.66666666666667 +lon_0=-98.5 +x_0=600000 +y_0=2000000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6584\":[\"EPSG:6584\",\"+proj=lcc +lat_1=33.96666666666667 +lat_2=32.13333333333333 +lat_0=31.66666666666667 +lon_0=-98.5 +x_0=600000 +y_0=2000000.0001016 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:6585\":[\"EPSG:6585\",\"+proj=lcc +lat_1=27.83333333333333 +lat_2=26.16666666666667 +lat_0=25.66666666666667 +lon_0=-98.5 +x_0=300000 +y_0=5000000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:4964\":[\"EPSG:4964\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6586\":[\"EPSG:6586\",\"+proj=lcc +lat_1=27.83333333333333 +lat_2=26.16666666666667 +lat_0=25.66666666666667 +lon_0=-98.5 +x_0=300000.0000000001 +y_0=5000000.0001016 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:6587\":[\"EPSG:6587\",\"+proj=lcc +lat_1=30.28333333333333 +lat_2=28.38333333333333 +lat_0=27.83333333333333 +lon_0=-99 +x_0=600000 +y_0=4000000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6588\":[\"EPSG:6588\",\"+proj=lcc +lat_1=30.28333333333333 +lat_2=28.38333333333333 +lat_0=27.83333333333333 +lon_0=-99 +x_0=600000 +y_0=3999999.9998984 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:6589\":[\"EPSG:6589\",\"+proj=tmerc +lat_0=42.5 +lon_0=-72.5 +k=0.999964286 +x_0=500000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6590\":[\"EPSG:6590\",\"+proj=tmerc +lat_0=42.5 +lon_0=-72.5 +k=0.999964286 +x_0=500000.00001016 +y_0=0 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:6591\":[\"EPSG:6591\",\"+proj=lcc +lat_1=37 +lat_2=39.5 +lat_0=36 +lon_0=-79.5 +x_0=0 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6592\":[\"EPSG:6592\",\"+proj=lcc +lat_1=39.2 +lat_2=38.03333333333333 +lat_0=37.66666666666666 +lon_0=-78.5 +x_0=3500000 +y_0=2000000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6593\":[\"EPSG:6593\",\"+proj=lcc +lat_1=39.2 +lat_2=38.03333333333333 +lat_0=37.66666666666666 +lon_0=-78.5 +x_0=3500000.0001016 +y_0=2000000.0001016 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:6672\":[\"EPSG:6672\",\"+proj=tmerc +lat_0=33 +lon_0=133.5 +k=0.9999 +x_0=0 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6594\":[\"EPSG:6594\",\"+proj=lcc +lat_1=37.96666666666667 +lat_2=36.76666666666667 +lat_0=36.33333333333334 +lon_0=-78.5 +x_0=3500000 +y_0=1000000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6595\":[\"EPSG:6595\",\"+proj=lcc +lat_1=37.96666666666667 +lat_2=36.76666666666667 +lat_0=36.33333333333334 +lon_0=-78.5 +x_0=3500000.0001016 +y_0=999999.9998983998 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:6596\":[\"EPSG:6596\",\"+proj=lcc +lat_1=48.73333333333333 +lat_2=47.5 +lat_0=47 +lon_0=-120.8333333333333 +x_0=500000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6597\":[\"EPSG:6597\",\"+proj=lcc +lat_1=48.73333333333333 +lat_2=47.5 +lat_0=47 +lon_0=-120.8333333333333 +x_0=500000.0001016001 +y_0=0 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:6598\":[\"EPSG:6598\",\"+proj=lcc +lat_1=47.33333333333334 +lat_2=45.83333333333334 +lat_0=45.33333333333334 +lon_0=-120.5 +x_0=500000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6599\":[\"EPSG:6599\",\"+proj=lcc +lat_1=47.33333333333334 +lat_2=45.83333333333334 +lat_0=45.33333333333334 +lon_0=-120.5 +x_0=500000.0001016001 +y_0=0 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:6600\":[\"EPSG:6600\",\"+proj=lcc +lat_1=40.25 +lat_2=39 +lat_0=38.5 +lon_0=-79.5 +x_0=600000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6601\":[\"EPSG:6601\",\"+proj=lcc +lat_1=40.25 +lat_2=39 +lat_0=38.5 +lon_0=-79.5 +x_0=600000 +y_0=0 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:4966\":[\"EPSG:4966\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6602\":[\"EPSG:6602\",\"+proj=lcc +lat_1=38.88333333333333 +lat_2=37.48333333333333 +lat_0=37 +lon_0=-81 +x_0=600000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6603\":[\"EPSG:6603\",\"+proj=lcc +lat_1=38.88333333333333 +lat_2=37.48333333333333 +lat_0=37 +lon_0=-81 +x_0=600000 +y_0=0 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:6604\":[\"EPSG:6604\",\"+proj=lcc +lat_1=45.5 +lat_2=44.25 +lat_0=43.83333333333334 +lon_0=-90 +x_0=600000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:6605\":[\"EPSG:6605\",\"+proj=lcc +lat_1=45.5 +lat_2=44.25 +lat_0=43.83333333333334 +lon_0=-90 +x_0=600000 +y_0=0 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:6606\":[\"EPSG:6606\",\"+proj=lcc +lat_1=46.76666666666667 +lat_2=45.56666666666667 +lat_0=45.16666666666666 +lon_0=-90 +x_0=600000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6607\":[\"EPSG:6607\",\"+proj=lcc +lat_1=46.76666666666667 +lat_2=45.56666666666667 +lat_0=45.16666666666666 +lon_0=-90 +x_0=600000 +y_0=0 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:6608\":[\"EPSG:6608\",\"+proj=lcc +lat_1=44.06666666666667 +lat_2=42.73333333333333 +lat_0=42 +lon_0=-90 +x_0=600000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6609\":[\"EPSG:6609\",\"+proj=lcc +lat_1=44.06666666666667 +lat_2=42.73333333333333 +lat_0=42 +lon_0=-90 +x_0=600000 +y_0=0 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:32603\":[\"EPSG:32603\",\"+proj=utm +zone=3 +datum=WGS84 +units=m +no_defs \"],\"EPSG:6613\":[\"EPSG:6613\",\"+proj=tmerc +lat_0=40.5 +lon_0=-107.3333333333333 +k=0.9999375 +x_0=400000 +y_0=100000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6614\":[\"EPSG:6614\",\"+proj=tmerc +lat_0=40.5 +lon_0=-107.3333333333333 +k=0.9999375 +x_0=399999.99998984 +y_0=99999.99998983997 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:6615\":[\"EPSG:6615\",\"+proj=tmerc +lat_0=40.5 +lon_0=-110.0833333333333 +k=0.9999375 +x_0=800000 +y_0=100000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6616\":[\"EPSG:6616\",\"+proj=tmerc +lat_0=40.5 +lon_0=-110.0833333333333 +k=0.9999375 +x_0=800000.0000101599 +y_0=99999.99998983997 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:6617\":[\"EPSG:6617\",\"+proj=tmerc +lat_0=40.5 +lon_0=-108.75 +k=0.9999375 +x_0=600000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6618\":[\"EPSG:6618\",\"+proj=tmerc +lat_0=40.5 +lon_0=-108.75 +k=0.9999375 +x_0=600000 +y_0=0 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:6619\":[\"EPSG:6619\",\"+proj=lcc +lat_1=40.65 +lat_2=39.01666666666667 +lat_0=38.33333333333334 +lon_0=-111.5 +x_0=500000 +y_0=2000000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6620\":[\"EPSG:6620\",\"+proj=lcc +lat_1=41.78333333333333 +lat_2=40.71666666666667 +lat_0=40.33333333333334 +lon_0=-111.5 +x_0=500000 +y_0=1000000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6621\":[\"EPSG:6621\",\"+proj=lcc +lat_1=38.35 +lat_2=37.21666666666667 +lat_0=36.66666666666666 +lon_0=-111.5 +x_0=500000 +y_0=3000000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6622\":[\"EPSG:6622\",\"+proj=lcc +lat_1=60 +lat_2=46 +lat_0=44 +lon_0=-68.5 +x_0=0 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:6623\":[\"EPSG:6623\",\"+proj=aea +lat_1=60 +lat_2=46 +lat_0=44 +lon_0=-68.5 +x_0=0 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:6624\":[\"EPSG:6624\",\"+proj=aea +lat_1=60 +lat_2=46 +lat_0=44 +lon_0=-68.5 +x_0=0 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:6625\":[\"EPSG:6625\",\"+proj=lcc +lat_1=40.65 +lat_2=39.01666666666667 +lat_0=38.33333333333334 +lon_0=-111.5 +x_0=500000.00001016 +y_0=2000000.00001016 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:6626\":[\"EPSG:6626\",\"+proj=lcc +lat_1=41.78333333333333 +lat_2=40.71666666666667 +lat_0=40.33333333333334 +lon_0=-111.5 +x_0=500000.00001016 +y_0=999999.9999898402 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:6627\":[\"EPSG:6627\",\"+proj=lcc +lat_1=38.35 +lat_2=37.21666666666667 +lat_0=36.66666666666666 +lon_0=-111.5 +x_0=500000.00001016 +y_0=3000000 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:6628\":[\"EPSG:6628\",\"+proj=tmerc +lat_0=18.83333333333333 +lon_0=-155.5 +k=0.999966667 +x_0=500000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6629\":[\"EPSG:6629\",\"+proj=tmerc +lat_0=20.33333333333333 +lon_0=-156.6666666666667 +k=0.999966667 +x_0=500000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6630\":[\"EPSG:6630\",\"+proj=tmerc +lat_0=21.16666666666667 +lon_0=-158 +k=0.99999 +x_0=500000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6631\":[\"EPSG:6631\",\"+proj=tmerc +lat_0=21.83333333333333 +lon_0=-159.5 +k=0.99999 +x_0=500000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6632\":[\"EPSG:6632\",\"+proj=tmerc +lat_0=21.66666666666667 +lon_0=-160.1666666666667 +k=1 +x_0=500000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6633\":[\"EPSG:6633\",\"+proj=tmerc +lat_0=21.16666666666667 +lon_0=-158 +k=0.99999 +x_0=500000.00001016 +y_0=0 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:6634\":[\"EPSG:6634\",\"+proj=utm +zone=4 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6635\":[\"EPSG:6635\",\"+proj=utm +zone=5 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6636\":[\"EPSG:6636\",\"+proj=utm +zone=2 +south +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6637\":[\"EPSG:6637\",\"+proj=tmerc +lat_0=13.5 +lon_0=144.75 +k=1 +x_0=100000 +y_0=200000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6646\":[\"EPSG:6646\",\"+proj=tmerc +lat_0=29.02626833333333 +lon_0=46.5 +k=0.9994 +x_0=800000 +y_0=0 +ellps=clrk80 +towgs84=70.995,-335.916,262.898,0,0,0,0 +units=m +no_defs \"],\"EPSG:6669\":[\"EPSG:6669\",\"+proj=tmerc +lat_0=33 +lon_0=129.5 +k=0.9999 +x_0=0 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6670\":[\"EPSG:6670\",\"+proj=tmerc +lat_0=33 +lon_0=131 +k=0.9999 +x_0=0 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6675\":[\"EPSG:6675\",\"+proj=tmerc +lat_0=36 +lon_0=137.1666666666667 +k=0.9999 +x_0=0 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6676\":[\"EPSG:6676\",\"+proj=tmerc +lat_0=36 +lon_0=138.5 +k=0.9999 +x_0=0 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6677\":[\"EPSG:6677\",\"+proj=tmerc +lat_0=36 +lon_0=139.8333333333333 +k=0.9999 +x_0=0 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6678\":[\"EPSG:6678\",\"+proj=tmerc +lat_0=40 +lon_0=140.8333333333333 +k=0.9999 +x_0=0 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6679\":[\"EPSG:6679\",\"+proj=tmerc +lat_0=44 +lon_0=140.25 +k=0.9999 +x_0=0 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6680\":[\"EPSG:6680\",\"+proj=tmerc +lat_0=44 +lon_0=142.25 +k=0.9999 +x_0=0 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6681\":[\"EPSG:6681\",\"+proj=tmerc +lat_0=44 +lon_0=144.25 +k=0.9999 +x_0=0 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6682\":[\"EPSG:6682\",\"+proj=tmerc +lat_0=26 +lon_0=142 +k=0.9999 +x_0=0 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6683\":[\"EPSG:6683\",\"+proj=tmerc +lat_0=26 +lon_0=127.5 +k=0.9999 +x_0=0 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6684\":[\"EPSG:6684\",\"+proj=tmerc +lat_0=26 +lon_0=124 +k=0.9999 +x_0=0 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6685\":[\"EPSG:6685\",\"+proj=tmerc +lat_0=26 +lon_0=131 +k=0.9999 +x_0=0 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6689\":[\"EPSG:6689\",\"+proj=utm +zone=52 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6690\":[\"EPSG:6690\",\"+proj=utm +zone=53 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6691\":[\"EPSG:6691\",\"+proj=utm +zone=54 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6692\":[\"EPSG:6692\",\"+proj=utm +zone=55 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6703\":[\"EPSG:6703\",\"+proj=tmerc +lat_0=0 +lon_0=-60 +k=0.9996 +x_0=500000 +y_0=10000000 +datum=WGS84 +units=m +no_defs \"],\"EPSG:6707\":[\"EPSG:6707\",\"+proj=utm +zone=32 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:6708\":[\"EPSG:6708\",\"+proj=utm +zone=33 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:6709\":[\"EPSG:6709\",\"+proj=utm +zone=34 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:6720\":[\"EPSG:6720\",\"+proj=tmerc +lat_0=0 +lon_0=105.625 +k=1.000024 +x_0=50000 +y_0=1300000 +datum=WGS84 +units=m +no_defs \"],\"EPSG:6721\":[\"EPSG:6721\",\"+proj=tmerc +lat_0=0 +lon_0=105.625 +k=1.00002514 +x_0=50000 +y_0=1300000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:6722\":[\"EPSG:6722\",\"+proj=tmerc +lat_0=0 +lon_0=96.875 +k=1 +x_0=50000 +y_0=1400000 +datum=WGS84 +units=m +no_defs \"],\"EPSG:6723\":[\"EPSG:6723\",\"+proj=tmerc +lat_0=0 +lon_0=96.875 +k=0.99999387 +x_0=50000 +y_0=1500000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:6732\":[\"EPSG:6732\",\"+proj=utm +zone=41 +south +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:6733\":[\"EPSG:6733\",\"+proj=utm +zone=42 +south +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:6734\":[\"EPSG:6734\",\"+proj=utm +zone=43 +south +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:6735\":[\"EPSG:6735\",\"+proj=utm +zone=44 +south +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:6736\":[\"EPSG:6736\",\"+proj=utm +zone=46 +south +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:6737\":[\"EPSG:6737\",\"+proj=utm +zone=47 +south +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:6738\":[\"EPSG:6738\",\"+proj=utm +zone=59 +south +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:6784\":[\"EPSG:6784\",\"+proj=tmerc +lat_0=44.5 +lon_0=-117.8333333333333 +k=1.00016 +x_0=40000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6785\":[\"EPSG:6785\",\"+proj=tmerc +lat_0=44.5 +lon_0=-117.8333333333333 +k=1.00016 +x_0=39999.99999984 +y_0=0 +ellps=GRS80 +units=ft +no_defs \"],\"EPSG:6786\":[\"EPSG:6786\",\"+proj=tmerc +lat_0=44.5 +lon_0=-117.8333333333333 +k=1.00016 +x_0=40000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6787\":[\"EPSG:6787\",\"+proj=tmerc +lat_0=44.5 +lon_0=-117.8333333333333 +k=1.00016 +x_0=39999.99999984 +y_0=0 +ellps=GRS80 +units=ft +no_defs \"],\"EPSG:6788\":[\"EPSG:6788\",\"+proj=tmerc +lat_0=41.75 +lon_0=-121.75 +k=1.0002 +x_0=80000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6789\":[\"EPSG:6789\",\"+proj=tmerc +lat_0=41.75 +lon_0=-121.75 +k=1.0002 +x_0=79999.99999968 +y_0=0 +ellps=GRS80 +units=ft +no_defs \"],\"EPSG:6790\":[\"EPSG:6790\",\"+proj=tmerc +lat_0=41.75 +lon_0=-121.75 +k=1.0002 +x_0=80000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6791\":[\"EPSG:6791\",\"+proj=tmerc +lat_0=41.75 +lon_0=-121.75 +k=1.0002 +x_0=79999.99999968 +y_0=0 +ellps=GRS80 +units=ft +no_defs \"],\"EPSG:6792\":[\"EPSG:6792\",\"+proj=lcc +lat_1=44.66666666666666 +lat_0=44.66666666666666 +lon_0=-121.25 +k_0=1.00012 +x_0=80000 +y_0=130000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6793\":[\"EPSG:6793\",\"+proj=lcc +lat_1=44.66666666666666 +lat_0=44.66666666666666 +lon_0=-121.25 +k_0=1.00012 +x_0=79999.99999968 +y_0=130000.00001472 +ellps=GRS80 +units=ft +no_defs \"],\"EPSG:6794\":[\"EPSG:6794\",\"+proj=lcc +lat_1=44.66666666666666 +lat_0=44.66666666666666 +lon_0=-121.25 +k_0=1.00012 +x_0=80000 +y_0=130000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:4968\":[\"EPSG:4968\",\"+proj=geocent +ellps=intl +units=m +no_defs \"],\"EPSG:6795\":[\"EPSG:6795\",\"+proj=lcc +lat_1=44.66666666666666 +lat_0=44.66666666666666 +lon_0=-121.25 +k_0=1.00012 +x_0=79999.99999968 +y_0=130000.00001472 +ellps=GRS80 +units=ft +no_defs \"],\"EPSG:6796\":[\"EPSG:6796\",\"+proj=lcc +lat_1=43.66666666666666 +lat_0=43.66666666666666 +lon_0=-119.75 +k_0=1.0002 +x_0=120000 +y_0=60000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6797\":[\"EPSG:6797\",\"+proj=lcc +lat_1=43.66666666666666 +lat_0=43.66666666666666 +lon_0=-119.75 +k_0=1.0002 +x_0=119999.99999952 +y_0=59999.99999976 +ellps=GRS80 +units=ft +no_defs \"],\"EPSG:6798\":[\"EPSG:6798\",\"+proj=lcc +lat_1=43.66666666666666 +lat_0=43.66666666666666 +lon_0=-119.75 +k_0=1.0002 +x_0=120000 +y_0=60000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6799\":[\"EPSG:6799\",\"+proj=lcc +lat_1=43.66666666666666 +lat_0=43.66666666666666 +lon_0=-119.75 +k_0=1.0002 +x_0=119999.99999952 +y_0=59999.99999976 +ellps=GRS80 +units=ft +no_defs \"],\"EPSG:6800\":[\"EPSG:6800\",\"+proj=tmerc +lat_0=42.5 +lon_0=-123.3333333333333 +k=1.00007 +x_0=40000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6801\":[\"EPSG:6801\",\"+proj=tmerc +lat_0=42.5 +lon_0=-123.3333333333333 +k=1.00007 +x_0=39999.99999984 +y_0=0 +ellps=GRS80 +units=ft +no_defs \"],\"EPSG:6802\":[\"EPSG:6802\",\"+proj=tmerc +lat_0=42.5 +lon_0=-123.3333333333333 +k=1.00007 +x_0=40000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6803\":[\"EPSG:6803\",\"+proj=tmerc +lat_0=42.5 +lon_0=-123.3333333333333 +k=1.00007 +x_0=39999.99999984 +y_0=0 +ellps=GRS80 +units=ft +no_defs \"],\"EPSG:6804\":[\"EPSG:6804\",\"+proj=lcc +lat_1=45.66666666666666 +lat_0=45.66666666666666 +lon_0=-120.5 +k_0=1.000008 +x_0=150000 +y_0=30000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6805\":[\"EPSG:6805\",\"+proj=lcc +lat_1=45.66666666666666 +lat_0=45.66666666666666 +lon_0=-120.5 +k_0=1.000008 +x_0=150000.00001464 +y_0=30000.00001512 +ellps=GRS80 +units=ft +no_defs \"],\"EPSG:6806\":[\"EPSG:6806\",\"+proj=lcc +lat_1=45.66666666666666 +lat_0=45.66666666666666 +lon_0=-120.5 +k_0=1.000008 +x_0=150000 +y_0=30000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6807\":[\"EPSG:6807\",\"+proj=lcc +lat_1=45.66666666666666 +lat_0=45.66666666666666 +lon_0=-120.5 +k_0=1.000008 +x_0=150000.00001464 +y_0=30000.00001512 +ellps=GRS80 +units=ft +no_defs \"],\"EPSG:6808\":[\"EPSG:6808\",\"+proj=omerc +lat_0=45.91666666666666 +lonc=-123 +alpha=295 +k=1 +x_0=7000000 +y_0=-3000000 +no_uoff +gamma=295 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6809\":[\"EPSG:6809\",\"+proj=omerc +lat_0=45.91666666666666 +lonc=-123 +alpha=295 +k=1 +x_0=7000000.00000248 +y_0=-2999999.999988 +no_uoff +gamma=295 +ellps=GRS80 +units=ft +no_defs \"],\"EPSG:6810\":[\"EPSG:6810\",\"+proj=omerc +lat_0=45.91666666666666 +lonc=-123 +alpha=295 +k=1 +x_0=7000000 +y_0=-3000000 +no_uoff +gamma=295 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6811\":[\"EPSG:6811\",\"+proj=omerc +lat_0=45.91666666666666 +lonc=-123 +alpha=295 +k=1 +x_0=7000000.00000248 +y_0=-2999999.999988 +no_uoff +gamma=295 +ellps=GRS80 +units=ft +no_defs \"],\"EPSG:4970\":[\"EPSG:4970\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6812\":[\"EPSG:6812\",\"+proj=tmerc +lat_0=42.83333333333334 +lon_0=-123.3333333333333 +k=1.000023 +x_0=50000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6813\":[\"EPSG:6813\",\"+proj=tmerc +lat_0=42.83333333333334 +lon_0=-123.3333333333333 +k=1.000023 +x_0=50000.00001504 +y_0=0 +ellps=GRS80 +units=ft +no_defs \"],\"EPSG:6814\":[\"EPSG:6814\",\"+proj=tmerc +lat_0=42.83333333333334 +lon_0=-123.3333333333333 +k=1.000023 +x_0=50000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6815\":[\"EPSG:6815\",\"+proj=tmerc +lat_0=42.83333333333334 +lon_0=-123.3333333333333 +k=1.000023 +x_0=50000.00001504 +y_0=0 +ellps=GRS80 +units=ft +no_defs \"],\"EPSG:6816\":[\"EPSG:6816\",\"+proj=tmerc +lat_0=44.5 +lon_0=-121 +k=1.00011 +x_0=80000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6817\":[\"EPSG:6817\",\"+proj=tmerc +lat_0=44.5 +lon_0=-121 +k=1.00011 +x_0=79999.99999968 +y_0=0 +ellps=GRS80 +units=ft +no_defs \"],\"EPSG:6818\":[\"EPSG:6818\",\"+proj=tmerc +lat_0=44.5 +lon_0=-121 +k=1.00011 +x_0=80000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6819\":[\"EPSG:6819\",\"+proj=tmerc +lat_0=44.5 +lon_0=-121 +k=1.00011 +x_0=79999.99999968 +y_0=0 +ellps=GRS80 +units=ft +no_defs \"],\"EPSG:6820\":[\"EPSG:6820\",\"+proj=tmerc +lat_0=43.75 +lon_0=-123.1666666666667 +k=1.000015 +x_0=50000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:4972\":[\"EPSG:4972\",\"+proj=geocent +ellps=WGS84 +units=m +no_defs \"],\"EPSG:6821\":[\"EPSG:6821\",\"+proj=tmerc +lat_0=43.75 +lon_0=-123.1666666666667 +k=1.000015 +x_0=50000.00001504 +y_0=0 +ellps=GRS80 +units=ft +no_defs \"],\"EPSG:6822\":[\"EPSG:6822\",\"+proj=tmerc +lat_0=43.75 +lon_0=-123.1666666666667 +k=1.000015 +x_0=50000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6823\":[\"EPSG:6823\",\"+proj=tmerc +lat_0=43.75 +lon_0=-123.1666666666667 +k=1.000015 +x_0=50000.00001504 +y_0=0 +ellps=GRS80 +units=ft +no_defs \"],\"EPSG:6824\":[\"EPSG:6824\",\"+proj=tmerc +lat_0=41.75 +lon_0=-123.3333333333333 +k=1.000043 +x_0=50000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6825\":[\"EPSG:6825\",\"+proj=tmerc +lat_0=41.75 +lon_0=-123.3333333333333 +k=1.000043 +x_0=50000.00001504 +y_0=0 +ellps=GRS80 +units=ft +no_defs \"],\"EPSG:6826\":[\"EPSG:6826\",\"+proj=tmerc +lat_0=41.75 +lon_0=-123.3333333333333 +k=1.000043 +x_0=50000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6827\":[\"EPSG:6827\",\"+proj=tmerc +lat_0=41.75 +lon_0=-123.3333333333333 +k=1.000043 +x_0=50000.00001504 +y_0=0 +ellps=GRS80 +units=ft +no_defs \"],\"EPSG:6828\":[\"EPSG:6828\",\"+proj=tmerc +lat_0=45 +lon_0=-122.3333333333333 +k=1.00005 +x_0=10000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6829\":[\"EPSG:6829\",\"+proj=tmerc +lat_0=45 +lon_0=-122.3333333333333 +k=1.00005 +x_0=10000.0000152 +y_0=0 +ellps=GRS80 +units=ft +no_defs \"],\"EPSG:4974\":[\"EPSG:4974\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6830\":[\"EPSG:6830\",\"+proj=tmerc +lat_0=45 +lon_0=-122.3333333333333 +k=1.00005 +x_0=10000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6831\":[\"EPSG:6831\",\"+proj=tmerc +lat_0=45 +lon_0=-122.3333333333333 +k=1.00005 +x_0=10000.0000152 +y_0=0 +ellps=GRS80 +units=ft +no_defs \"],\"EPSG:6832\":[\"EPSG:6832\",\"+proj=tmerc +lat_0=45 +lon_0=-118 +k=1.00013 +x_0=40000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6833\":[\"EPSG:6833\",\"+proj=tmerc +lat_0=45 +lon_0=-118 +k=1.00013 +x_0=39999.99999984 +y_0=0 +ellps=GRS80 +units=ft +no_defs \"],\"EPSG:6834\":[\"EPSG:6834\",\"+proj=tmerc +lat_0=45 +lon_0=-118 +k=1.00013 +x_0=40000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6835\":[\"EPSG:6835\",\"+proj=tmerc +lat_0=45 +lon_0=-118 +k=1.00013 +x_0=39999.99999984 +y_0=0 +ellps=GRS80 +units=ft +no_defs \"],\"EPSG:6836\":[\"EPSG:6836\",\"+proj=tmerc +lat_0=43.25 +lon_0=-117 +k=1.0001 +x_0=80000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6837\":[\"EPSG:6837\",\"+proj=tmerc +lat_0=43.25 +lon_0=-117 +k=1.0001 +x_0=79999.99999968 +y_0=0 +ellps=GRS80 +units=ft +no_defs \"],\"EPSG:6838\":[\"EPSG:6838\",\"+proj=tmerc +lat_0=43.25 +lon_0=-117 +k=1.0001 +x_0=80000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6870\":[\"EPSG:6870\",\"+proj=tmerc +lat_0=0 +lon_0=20 +k=1 +x_0=500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:6839\":[\"EPSG:6839\",\"+proj=tmerc +lat_0=43.25 +lon_0=-117 +k=1.0001 +x_0=79999.99999968 +y_0=0 +ellps=GRS80 +units=ft +no_defs \"],\"EPSG:6840\":[\"EPSG:6840\",\"+proj=omerc +lat_0=44.75 +lonc=-124.05 +alpha=5 +k=1 +x_0=-300000 +y_0=-4600000 +no_uoff +gamma=5 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6841\":[\"EPSG:6841\",\"+proj=omerc +lat_0=44.75 +lonc=-124.05 +alpha=5 +k=1 +x_0=-299999.9999988 +y_0=-4600000.00001208 +no_uoff +gamma=5 +ellps=GRS80 +units=ft +no_defs \"],\"EPSG:6842\":[\"EPSG:6842\",\"+proj=omerc +lat_0=44.75 +lonc=-124.05 +alpha=5 +k=1 +x_0=-300000 +y_0=-4600000 +no_uoff +gamma=5 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6843\":[\"EPSG:6843\",\"+proj=omerc +lat_0=44.75 +lonc=-124.05 +alpha=5 +k=1 +x_0=-299999.9999988 +y_0=-4600000.00001208 +no_uoff +gamma=5 +ellps=GRS80 +units=ft +no_defs \"],\"EPSG:6844\":[\"EPSG:6844\",\"+proj=tmerc +lat_0=45.25 +lon_0=-119.1666666666667 +k=1.000045 +x_0=60000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6845\":[\"EPSG:6845\",\"+proj=tmerc +lat_0=45.25 +lon_0=-119.1666666666667 +k=1.000045 +x_0=59999.99999976 +y_0=0 +ellps=GRS80 +units=ft +no_defs \"],\"EPSG:6846\":[\"EPSG:6846\",\"+proj=tmerc +lat_0=45.25 +lon_0=-119.1666666666667 +k=1.000045 +x_0=60000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6847\":[\"EPSG:6847\",\"+proj=tmerc +lat_0=45.25 +lon_0=-119.1666666666667 +k=1.000045 +x_0=59999.99999976 +y_0=0 +ellps=GRS80 +units=ft +no_defs \"],\"EPSG:6848\":[\"EPSG:6848\",\"+proj=tmerc +lat_0=45.08333333333334 +lon_0=-118.3333333333333 +k=1.000175 +x_0=30000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6849\":[\"EPSG:6849\",\"+proj=tmerc +lat_0=45.08333333333334 +lon_0=-118.3333333333333 +k=1.000175 +x_0=30000.00001512 +y_0=0 +ellps=GRS80 +units=ft +no_defs \"],\"EPSG:6850\":[\"EPSG:6850\",\"+proj=tmerc +lat_0=45.08333333333334 +lon_0=-118.3333333333333 +k=1.000175 +x_0=30000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6851\":[\"EPSG:6851\",\"+proj=tmerc +lat_0=45.08333333333334 +lon_0=-118.3333333333333 +k=1.000175 +x_0=30000.00001512 +y_0=0 +ellps=GRS80 +units=ft +no_defs \"],\"EPSG:6852\":[\"EPSG:6852\",\"+proj=lcc +lat_1=45.5 +lat_0=45.5 +lon_0=-122.75 +k_0=1.000002 +x_0=100000 +y_0=50000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6853\":[\"EPSG:6853\",\"+proj=lcc +lat_1=45.5 +lat_0=45.5 +lon_0=-122.75 +k_0=1.000002 +x_0=99999.99999960001 +y_0=50000.00001504 +ellps=GRS80 +units=ft +no_defs \"],\"EPSG:6854\":[\"EPSG:6854\",\"+proj=lcc +lat_1=45.5 +lat_0=45.5 +lon_0=-122.75 +k_0=1.000002 +x_0=100000 +y_0=50000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6855\":[\"EPSG:6855\",\"+proj=lcc +lat_1=45.5 +lat_0=45.5 +lon_0=-122.75 +k_0=1.000002 +x_0=99999.99999960001 +y_0=50000.00001504 +ellps=GRS80 +units=ft +no_defs \"],\"EPSG:6856\":[\"EPSG:6856\",\"+proj=tmerc +lat_0=44.33333333333334 +lon_0=-123.0833333333333 +k=1.00001 +x_0=50000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6857\":[\"EPSG:6857\",\"+proj=tmerc +lat_0=44.33333333333334 +lon_0=-123.0833333333333 +k=1.00001 +x_0=50000.00001504 +y_0=0 +ellps=GRS80 +units=ft +no_defs \"],\"EPSG:6858\":[\"EPSG:6858\",\"+proj=tmerc +lat_0=44.33333333333334 +lon_0=-123.0833333333333 +k=1.00001 +x_0=50000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6859\":[\"EPSG:6859\",\"+proj=tmerc +lat_0=44.33333333333334 +lon_0=-123.0833333333333 +k=1.00001 +x_0=50000.00001504 +y_0=0 +ellps=GRS80 +units=ft +no_defs \"],\"EPSG:6860\":[\"EPSG:6860\",\"+proj=tmerc +lat_0=44.08333333333334 +lon_0=-122.5 +k=1.000155 +x_0=0 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6861\":[\"EPSG:6861\",\"+proj=tmerc +lat_0=44.08333333333334 +lon_0=-122.5 +k=1.000155 +x_0=0 +y_0=0 +ellps=GRS80 +units=ft +no_defs \"],\"EPSG:6862\":[\"EPSG:6862\",\"+proj=tmerc +lat_0=44.08333333333334 +lon_0=-122.5 +k=1.000155 +x_0=0 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6863\":[\"EPSG:6863\",\"+proj=tmerc +lat_0=44.08333333333334 +lon_0=-122.5 +k=1.000155 +x_0=0 +y_0=0 +ellps=GRS80 +units=ft +no_defs \"],\"EPSG:6867\":[\"EPSG:6867\",\"+proj=lcc +lat_1=43 +lat_2=45.5 +lat_0=41.75 +lon_0=-120.5 +x_0=400000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6868\":[\"EPSG:6868\",\"+proj=lcc +lat_1=43 +lat_2=45.5 +lat_0=41.75 +lon_0=-120.5 +x_0=399999.9999984 +y_0=0 +ellps=GRS80 +units=ft +no_defs \"],\"EPSG:6875\":[\"EPSG:6875\",\"+proj=tmerc +lat_0=0 +lon_0=12 +k=0.9985000000000001 +x_0=7000000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:6876\":[\"EPSG:6876\",\"+proj=tmerc +lat_0=0 +lon_0=12 +k=1 +x_0=3000000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:6879\":[\"EPSG:6879\",\"+proj=lcc +lat_1=45.5 +lat_2=44.25 +lat_0=43.83333333333334 +lon_0=-90 +x_0=600000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6880\":[\"EPSG:6880\",\"+proj=lcc +lat_1=43 +lat_2=40 +lat_0=39.83333333333334 +lon_0=-100 +x_0=500000.00001016 +y_0=0 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:6884\":[\"EPSG:6884\",\"+proj=lcc +lat_1=46 +lat_2=44.33333333333334 +lat_0=43.66666666666666 +lon_0=-120.5 +x_0=2500000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6885\":[\"EPSG:6885\",\"+proj=lcc +lat_1=46 +lat_2=44.33333333333334 +lat_0=43.66666666666666 +lon_0=-120.5 +x_0=2500000.0001424 +y_0=0 +ellps=GRS80 +units=ft +no_defs \"],\"EPSG:6886\":[\"EPSG:6886\",\"+proj=lcc +lat_1=44 +lat_2=42.33333333333334 +lat_0=41.66666666666666 +lon_0=-120.5 +x_0=1500000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6887\":[\"EPSG:6887\",\"+proj=lcc +lat_1=44 +lat_2=42.33333333333334 +lat_0=41.66666666666666 +lon_0=-120.5 +x_0=1500000.0001464 +y_0=0 +ellps=GRS80 +units=ft +no_defs \"],\"EPSG:6915\":[\"EPSG:6915\",\"+proj=utm +zone=40 +ellps=clrk80 +towgs84=-43.685,-179.785,-267.721,0,0,0,0 +units=m +no_defs \"],\"EPSG:6922\":[\"EPSG:6922\",\"+proj=lcc +lat_1=39.5 +lat_2=37.5 +lat_0=36 +lon_0=-98.25 +x_0=400000 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:6923\":[\"EPSG:6923\",\"+proj=lcc +lat_1=39.5 +lat_2=37.5 +lat_0=36 +lon_0=-98.25 +x_0=399999.99998984 +y_0=0 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:6924\":[\"EPSG:6924\",\"+proj=lcc +lat_1=39.5 +lat_2=37.5 +lat_0=36 +lon_0=-98.25 +x_0=400000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6925\":[\"EPSG:6925\",\"+proj=lcc +lat_1=39.5 +lat_2=37.5 +lat_0=36 +lon_0=-98.25 +x_0=399999.99998984 +y_0=0 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:6931\":[\"EPSG:6931\",\"+proj=laea +lat_0=90 +lon_0=0 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:6932\":[\"EPSG:6932\",\"+proj=laea +lat_0=-90 +lon_0=0 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:6933\":[\"EPSG:6933\",\"+proj=cea +lon_0=0 +lat_ts=30 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:6956\":[\"EPSG:6956\",\"+proj=tmerc +lat_0=0 +lon_0=102 +k=0.9999 +x_0=0 +y_0=500000 +ellps=WGS84 +towgs84=-191.90441429,-39.30318279,-111.45032835,0.00928836,-0.01975479,0.00427372,0.252906278 +units=m +no_defs \"],\"EPSG:6957\":[\"EPSG:6957\",\"+proj=tmerc +lat_0=0 +lon_0=105 +k=0.9999 +x_0=0 +y_0=500000 +ellps=WGS84 +towgs84=-191.90441429,-39.30318279,-111.45032835,0.00928836,-0.01975479,0.00427372,0.252906278 +units=m +no_defs \"],\"EPSG:32604\":[\"EPSG:32604\",\"+proj=utm +zone=4 +datum=WGS84 +units=m +no_defs \"],\"EPSG:6958\":[\"EPSG:6958\",\"+proj=tmerc +lat_0=0 +lon_0=108 +k=0.9999 +x_0=0 +y_0=500000 +ellps=WGS84 +towgs84=-191.90441429,-39.30318279,-111.45032835,0.00928836,-0.01975479,0.00427372,0.252906278 +units=m +no_defs \"],\"EPSG:6959\":[\"EPSG:6959\",\"+proj=tmerc +lat_0=0 +lon_0=107.75 +k=0.9999 +x_0=0 +y_0=500000 +ellps=WGS84 +towgs84=-191.90441429,-39.30318279,-111.45032835,0.00928836,-0.01975479,0.00427372,0.252906278 +units=m +no_defs \"],\"EPSG:6962\":[\"EPSG:6962\",\"+proj=lcc +lat_1=39 +lat_2=43 +lat_0=41 +lon_0=20 +x_0=0 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:6984\":[\"EPSG:6984\",\"+proj=tmerc +lat_0=31.73439361111111 +lon_0=35.20451694444445 +k=1.0000067 +x_0=219529.584 +y_0=626907.39 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6991\":[\"EPSG:6991\",\"+proj=tmerc +lat_0=31.73439361111111 +lon_0=35.20451694444445 +k=1.0000067 +x_0=219529.584 +y_0=626907.39 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6996\":[\"EPSG:6996\",\"+proj=tmerc +lat_0=37.75 +lon_0=-122.45 +k=1.000007 +x_0=48000 +y_0=24000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6997\":[\"EPSG:6997\",\"+proj=tmerc +lat_0=37.75 +lon_0=-122.45 +k=1.000007 +x_0=48000 +y_0=24000 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7005\":[\"EPSG:7005\",\"+proj=utm +zone=37 +ellps=clrk80 +towgs84=-242.2,-144.9,370.3,0,0,0,0 +units=m +no_defs \"],\"EPSG:7006\":[\"EPSG:7006\",\"+proj=utm +zone=38 +ellps=clrk80 +towgs84=-242.2,-144.9,370.3,0,0,0,0 +units=m +no_defs \"],\"EPSG:7007\":[\"EPSG:7007\",\"+proj=utm +zone=39 +ellps=clrk80 +towgs84=-242.2,-144.9,370.3,0,0,0,0 +units=m +no_defs \"],\"EPSG:7057\":[\"EPSG:7057\",\"+proj=lcc +lat_1=43.2 +lat_0=43.2 +lon_0=-95.25 +k_0=1.000052 +x_0=3505207.010414021 +y_0=2926085.852171705 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7058\":[\"EPSG:7058\",\"+proj=lcc +lat_1=43.16666666666666 +lat_0=43.16666666666666 +lon_0=-92.75 +k_0=1.000043 +x_0=3810007.62001524 +y_0=2987045.974091948 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7059\":[\"EPSG:7059\",\"+proj=tmerc +lat_0=40.25 +lon_0=-91.2 +k=1.000035 +x_0=4114808.229616459 +y_0=2529845.05969012 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7060\":[\"EPSG:7060\",\"+proj=lcc +lat_1=42.53333333333333 +lat_0=42.53333333333333 +lon_0=-94.83333333333333 +k_0=1.000045 +x_0=4419608.839217679 +y_0=2621285.242570485 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7061\":[\"EPSG:7061\",\"+proj=lcc +lat_1=42.65 +lat_0=42.65 +lon_0=-92.25 +k_0=1.000032 +x_0=4724409.448818898 +y_0=2712725.425450851 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7062\":[\"EPSG:7062\",\"+proj=tmerc +lat_0=40.25 +lon_0=-95.73333333333333 +k=1.000039 +x_0=5029210.058420117 +y_0=2011684.023368047 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7063\":[\"EPSG:7063\",\"+proj=tmerc +lat_0=40.25 +lon_0=-94.63333333333334 +k=1.000045 +x_0=5334010.668021336 +y_0=2072644.145288291 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7064\":[\"EPSG:7064\",\"+proj=tmerc +lat_0=40.25 +lon_0=-93.71666666666667 +k=1.000033 +x_0=5638811.277622555 +y_0=2133604.267208535 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7065\":[\"EPSG:7065\",\"+proj=tmerc +lat_0=40.25 +lon_0=-92.81666666666666 +k=1.000027 +x_0=5943611.887223775 +y_0=2194564.389128779 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7066\":[\"EPSG:7066\",\"+proj=lcc +lat_1=41.83333333333334 +lat_0=41.83333333333334 +lon_0=-91.66666666666667 +k_0=1.00002 +x_0=6248412.496824994 +y_0=2438404.876809754 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7067\":[\"EPSG:7067\",\"+proj=tmerc +lat_0=40.25 +lon_0=-90.53333333333333 +k=1.000027 +x_0=6553213.106426213 +y_0=2316484.632969266 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7068\":[\"EPSG:7068\",\"+proj=lcc +lat_1=40.91666666666666 +lat_0=40.91666666666666 +lon_0=-93.75 +k_0=1.000037 +x_0=6858013.716027432 +y_0=1889763.779527559 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7069\":[\"EPSG:7069\",\"+proj=tmerc +lat_0=40.25 +lon_0=-91.91666666666667 +k=1.00002 +x_0=7162814.325628651 +y_0=1950723.901447803 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7070\":[\"EPSG:7070\",\"+proj=tmerc +lat_0=40.25 +lon_0=-91.25 +k=1.000018 +x_0=7467614.93522987 +y_0=1889763.779527559 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7074\":[\"EPSG:7074\",\"+proj=utm +zone=37 +south +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7075\":[\"EPSG:7075\",\"+proj=utm +zone=38 +south +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7076\":[\"EPSG:7076\",\"+proj=utm +zone=39 +south +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7077\":[\"EPSG:7077\",\"+proj=utm +zone=40 +south +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7078\":[\"EPSG:7078\",\"+proj=utm +zone=41 +south +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7079\":[\"EPSG:7079\",\"+proj=utm +zone=42 +south +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7080\":[\"EPSG:7080\",\"+proj=utm +zone=43 +south +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7081\":[\"EPSG:7081\",\"+proj=utm +zone=44 +south +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7109\":[\"EPSG:7109\",\"+proj=tmerc +lat_0=48.5 +lon_0=-112.5 +k=1.00016 +x_0=150000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7110\":[\"EPSG:7110\",\"+proj=tmerc +lat_0=48 +lon_0=-112.5 +k=1.00019 +x_0=100000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7111\":[\"EPSG:7111\",\"+proj=lcc +lat_1=48.5 +lat_0=48.5 +lon_0=-111 +k_0=1.000145 +x_0=150000 +y_0=200000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7112\":[\"EPSG:7112\",\"+proj=lcc +lat_1=48.5 +lat_0=48.5 +lon_0=-108.5 +k_0=1.00012 +x_0=200000 +y_0=150000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7113\":[\"EPSG:7113\",\"+proj=lcc +lat_1=48.33333333333334 +lat_0=48.33333333333334 +lon_0=-105.5 +k_0=1.00012 +x_0=200000 +y_0=100000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7114\":[\"EPSG:7114\",\"+proj=lcc +lat_1=48.33333333333334 +lat_0=48.33333333333334 +lon_0=-105.5 +k_0=1.00009 +x_0=100000 +y_0=50000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7115\":[\"EPSG:7115\",\"+proj=tmerc +lat_0=44.75 +lon_0=-107.75 +k=1.000148 +x_0=200000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7116\":[\"EPSG:7116\",\"+proj=lcc +lat_1=46.25 +lat_0=46.25 +lon_0=-111.25 +k_0=1.000185 +x_0=100000 +y_0=100000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7117\":[\"EPSG:7117\",\"+proj=lcc +lat_1=45.78333333333333 +lat_0=45.78333333333333 +lon_0=-108.4166666666667 +k_0=1.0001515 +x_0=200000 +y_0=50000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7118\":[\"EPSG:7118\",\"+proj=tmerc +lat_0=42.66666666666666 +lon_0=-108.3333333333333 +k=1.00024 +x_0=100000 +y_0=0 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7119\":[\"EPSG:7119\",\"+proj=tmerc +lat_0=48.5 +lon_0=-112.5 +k=1.00016 +x_0=150000.00001464 +y_0=0 +ellps=GRS80 +units=ft +no_defs \"],\"EPSG:7120\":[\"EPSG:7120\",\"+proj=tmerc +lat_0=48 +lon_0=-112.5 +k=1.00019 +x_0=99999.99999960001 +y_0=0 +ellps=GRS80 +units=ft +no_defs \"],\"EPSG:7121\":[\"EPSG:7121\",\"+proj=lcc +lat_1=48.5 +lat_0=48.5 +lon_0=-111 +k_0=1.000145 +x_0=150000.00001464 +y_0=199999.9999992 +ellps=GRS80 +units=ft +no_defs \"],\"EPSG:7122\":[\"EPSG:7122\",\"+proj=lcc +lat_1=48.5 +lat_0=48.5 +lon_0=-108.5 +k_0=1.00012 +x_0=199999.9999992 +y_0=150000.00001464 +ellps=GRS80 +units=ft +no_defs \"],\"EPSG:4980\":[\"EPSG:4980\",\"+proj=geocent +ellps=WGS84 +units=m +no_defs \"],\"EPSG:7123\":[\"EPSG:7123\",\"+proj=lcc +lat_1=48.33333333333334 +lat_0=48.33333333333334 +lon_0=-105.5 +k_0=1.00012 +x_0=199999.9999992 +y_0=99999.99999960001 +ellps=GRS80 +units=ft +no_defs \"],\"EPSG:7124\":[\"EPSG:7124\",\"+proj=lcc +lat_1=48.33333333333334 +lat_0=48.33333333333334 +lon_0=-105.5 +k_0=1.00009 +x_0=99999.99999960001 +y_0=49999.99971024 +ellps=GRS80 +units=ft +no_defs \"],\"EPSG:7125\":[\"EPSG:7125\",\"+proj=tmerc +lat_0=44.75 +lon_0=-107.75 +k=1.000148 +x_0=199999.9999992 +y_0=0 +ellps=GRS80 +units=ft +no_defs \"],\"EPSG:7126\":[\"EPSG:7126\",\"+proj=lcc +lat_1=46.25 +lat_0=46.25 +lon_0=-111.25 +k_0=1.000185 +x_0=99999.99999960001 +y_0=99999.99999960001 +ellps=GRS80 +units=ft +no_defs \"],\"EPSG:7127\":[\"EPSG:7127\",\"+proj=lcc +lat_1=45.78333333333333 +lat_0=45.78333333333333 +lon_0=-108.4166666666667 +k_0=1.0001515 +x_0=199999.9999992 +y_0=50000.00001504 +ellps=GRS80 +units=ft +no_defs \"],\"EPSG:7128\":[\"EPSG:7128\",\"+proj=tmerc +lat_0=42.66666666666666 +lon_0=-108.3333333333333 +k=1.00024 +x_0=99999.99998983997 +y_0=0 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7131\":[\"EPSG:7131\",\"+proj=tmerc +lat_0=37.75 +lon_0=-122.45 +k=1.000007 +x_0=48000 +y_0=24000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7132\":[\"EPSG:7132\",\"+proj=tmerc +lat_0=37.75 +lon_0=-122.45 +k=1.000007 +x_0=48000 +y_0=24000 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7142\":[\"EPSG:7142\",\"+proj=tmerc +lat_0=31.73409694444445 +lon_0=35.21208055555556 +k=1 +x_0=170251.555 +y_0=126867.909 +a=6378300.789 +b=6356566.435 +towgs84=-275.7224,94.7824,340.8944,-8.001,-4.42,-11.821,1 +units=m +no_defs \"],\"EPSG:7257\":[\"EPSG:7257\",\"+proj=tmerc +lat_0=40.55 +lon_0=-84.95 +k=1.000034 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7258\":[\"EPSG:7258\",\"+proj=tmerc +lat_0=40.55 +lon_0=-84.95 +k=1.000034 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7259\":[\"EPSG:7259\",\"+proj=tmerc +lat_0=40.9 +lon_0=-85.05 +k=1.000031 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7260\":[\"EPSG:7260\",\"+proj=tmerc +lat_0=40.9 +lon_0=-85.05 +k=1.000031 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7261\":[\"EPSG:7261\",\"+proj=tmerc +lat_0=39 +lon_0=-85.84999999999999 +k=1.000026 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7262\":[\"EPSG:7262\",\"+proj=tmerc +lat_0=39 +lon_0=-85.84999999999999 +k=1.000026 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7263\":[\"EPSG:7263\",\"+proj=tmerc +lat_0=40.45 +lon_0=-87.3 +k=1.000029 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7264\":[\"EPSG:7264\",\"+proj=tmerc +lat_0=40.45 +lon_0=-87.3 +k=1.000029 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7265\":[\"EPSG:7265\",\"+proj=tmerc +lat_0=40.05 +lon_0=-85.40000000000001 +k=1.000038 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:22832\":[\"EPSG:22832\",\"+proj=utm +zone=32 +a=6378249.2 +b=6356515 +units=m +no_defs \"],\"EPSG:7266\":[\"EPSG:7266\",\"+proj=tmerc +lat_0=40.05 +lon_0=-85.40000000000001 +k=1.000038 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7267\":[\"EPSG:7267\",\"+proj=tmerc +lat_0=39.6 +lon_0=-86.5 +k=1.000036 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7268\":[\"EPSG:7268\",\"+proj=tmerc +lat_0=39.6 +lon_0=-86.5 +k=1.000036 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7269\":[\"EPSG:7269\",\"+proj=tmerc +lat_0=39 +lon_0=-86.3 +k=1.00003 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7270\":[\"EPSG:7270\",\"+proj=tmerc +lat_0=39 +lon_0=-86.3 +k=1.00003 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7271\":[\"EPSG:7271\",\"+proj=tmerc +lat_0=40.4 +lon_0=-86.65000000000001 +k=1.000026 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7272\":[\"EPSG:7272\",\"+proj=tmerc +lat_0=40.4 +lon_0=-86.65000000000001 +k=1.000026 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7273\":[\"EPSG:7273\",\"+proj=tmerc +lat_0=40.55 +lon_0=-86.40000000000001 +k=1.000028 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7274\":[\"EPSG:7274\",\"+proj=tmerc +lat_0=40.55 +lon_0=-86.40000000000001 +k=1.000028 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:4982\":[\"EPSG:4982\",\"+proj=geocent +ellps=WGS84 +units=m +no_defs \"],\"EPSG:7275\":[\"EPSG:7275\",\"+proj=tmerc +lat_0=38.15 +lon_0=-85.59999999999999 +k=1.000021 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7276\":[\"EPSG:7276\",\"+proj=tmerc +lat_0=38.15 +lon_0=-85.59999999999999 +k=1.000021 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7277\":[\"EPSG:7277\",\"+proj=tmerc +lat_0=39.15 +lon_0=-87.15000000000001 +k=1.000024 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7278\":[\"EPSG:7278\",\"+proj=tmerc +lat_0=39.15 +lon_0=-87.15000000000001 +k=1.000024 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7279\":[\"EPSG:7279\",\"+proj=tmerc +lat_0=40.15 +lon_0=-86.59999999999999 +k=1.000032 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7280\":[\"EPSG:7280\",\"+proj=tmerc +lat_0=40.15 +lon_0=-86.59999999999999 +k=1.000032 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7281\":[\"EPSG:7281\",\"+proj=tmerc +lat_0=38.1 +lon_0=-86.5 +k=1.000025 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7282\":[\"EPSG:7282\",\"+proj=tmerc +lat_0=38.1 +lon_0=-86.5 +k=1.000025 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7283\":[\"EPSG:7283\",\"+proj=tmerc +lat_0=38.45 +lon_0=-87.09999999999999 +k=1.000018 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:4984\":[\"EPSG:4984\",\"+proj=geocent +ellps=WGS72 +units=m +no_defs \"],\"EPSG:7284\":[\"EPSG:7284\",\"+proj=tmerc +lat_0=38.45 +lon_0=-87.09999999999999 +k=1.000018 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7285\":[\"EPSG:7285\",\"+proj=tmerc +lat_0=38.65 +lon_0=-84.90000000000001 +k=1.000029 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7286\":[\"EPSG:7286\",\"+proj=tmerc +lat_0=38.65 +lon_0=-84.90000000000001 +k=1.000029 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7287\":[\"EPSG:7287\",\"+proj=tmerc +lat_0=39.1 +lon_0=-85.65000000000001 +k=1.000036 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7288\":[\"EPSG:7288\",\"+proj=tmerc +lat_0=39.1 +lon_0=-85.65000000000001 +k=1.000036 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7289\":[\"EPSG:7289\",\"+proj=tmerc +lat_0=41.25 +lon_0=-84.95 +k=1.000036 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7290\":[\"EPSG:7290\",\"+proj=tmerc +lat_0=41.25 +lon_0=-84.95 +k=1.000036 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7291\":[\"EPSG:7291\",\"+proj=tmerc +lat_0=38.2 +lon_0=-86.95 +k=1.00002 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7292\":[\"EPSG:7292\",\"+proj=tmerc +lat_0=38.2 +lon_0=-86.95 +k=1.00002 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7293\":[\"EPSG:7293\",\"+proj=tmerc +lat_0=40.65 +lon_0=-85.84999999999999 +k=1.000033 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7294\":[\"EPSG:7294\",\"+proj=tmerc +lat_0=40.65 +lon_0=-85.84999999999999 +k=1.000033 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7295\":[\"EPSG:7295\",\"+proj=tmerc +lat_0=39.25 +lon_0=-85.05 +k=1.000038 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7296\":[\"EPSG:7296\",\"+proj=tmerc +lat_0=39.25 +lon_0=-85.05 +k=1.000038 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7297\":[\"EPSG:7297\",\"+proj=tmerc +lat_0=39.95 +lon_0=-87.3 +k=1.000025 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7298\":[\"EPSG:7298\",\"+proj=tmerc +lat_0=39.95 +lon_0=-87.3 +k=1.000025 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7299\":[\"EPSG:7299\",\"+proj=tmerc +lat_0=40.9 +lon_0=-86.3 +k=1.000031 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7300\":[\"EPSG:7300\",\"+proj=tmerc +lat_0=40.9 +lon_0=-86.3 +k=1.000031 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7301\":[\"EPSG:7301\",\"+proj=tmerc +lat_0=38.15 +lon_0=-87.65000000000001 +k=1.000013 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:4988\":[\"EPSG:4988\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7302\":[\"EPSG:7302\",\"+proj=tmerc +lat_0=38.15 +lon_0=-87.65000000000001 +k=1.000013 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7303\":[\"EPSG:7303\",\"+proj=tmerc +lat_0=40.35 +lon_0=-85.7 +k=1.000034 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7304\":[\"EPSG:7304\",\"+proj=tmerc +lat_0=40.35 +lon_0=-85.7 +k=1.000034 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7305\":[\"EPSG:7305\",\"+proj=tmerc +lat_0=39.9 +lon_0=-86 +k=1.000034 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7306\":[\"EPSG:7306\",\"+proj=tmerc +lat_0=39.9 +lon_0=-86 +k=1.000034 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7307\":[\"EPSG:7307\",\"+proj=tmerc +lat_0=39.65 +lon_0=-85.8 +k=1.000036 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7308\":[\"EPSG:7308\",\"+proj=tmerc +lat_0=39.65 +lon_0=-85.8 +k=1.000036 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7309\":[\"EPSG:7309\",\"+proj=tmerc +lat_0=37.95 +lon_0=-86.15000000000001 +k=1.000027 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7310\":[\"EPSG:7310\",\"+proj=tmerc +lat_0=37.95 +lon_0=-86.15000000000001 +k=1.000027 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:4990\":[\"EPSG:4990\",\"+proj=geocent +ellps=krass +units=m +no_defs \"],\"EPSG:7311\":[\"EPSG:7311\",\"+proj=tmerc +lat_0=39.75 +lon_0=-85.45 +k=1.000043 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7312\":[\"EPSG:7312\",\"+proj=tmerc +lat_0=39.75 +lon_0=-85.45 +k=1.000043 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7313\":[\"EPSG:7313\",\"+proj=tmerc +lat_0=40.35 +lon_0=-86.15000000000001 +k=1.000031 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7314\":[\"EPSG:7314\",\"+proj=tmerc +lat_0=40.35 +lon_0=-86.15000000000001 +k=1.000031 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7315\":[\"EPSG:7315\",\"+proj=tmerc +lat_0=40.65 +lon_0=-85.5 +k=1.000034 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7316\":[\"EPSG:7316\",\"+proj=tmerc +lat_0=40.65 +lon_0=-85.5 +k=1.000034 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7317\":[\"EPSG:7317\",\"+proj=tmerc +lat_0=38.7 +lon_0=-85.95 +k=1.000022 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7318\":[\"EPSG:7318\",\"+proj=tmerc +lat_0=38.7 +lon_0=-85.95 +k=1.000022 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7319\":[\"EPSG:7319\",\"+proj=tmerc +lat_0=40.7 +lon_0=-87.09999999999999 +k=1.000027 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:32605\":[\"EPSG:32605\",\"+proj=utm +zone=5 +datum=WGS84 +units=m +no_defs \"],\"EPSG:7320\":[\"EPSG:7320\",\"+proj=tmerc +lat_0=40.7 +lon_0=-87.09999999999999 +k=1.000027 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7321\":[\"EPSG:7321\",\"+proj=tmerc +lat_0=40.3 +lon_0=-85 +k=1.000038 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7322\":[\"EPSG:7322\",\"+proj=tmerc +lat_0=40.3 +lon_0=-85 +k=1.000038 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7323\":[\"EPSG:7323\",\"+proj=tmerc +lat_0=38.55 +lon_0=-85.34999999999999 +k=1.000028 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7324\":[\"EPSG:7324\",\"+proj=tmerc +lat_0=38.55 +lon_0=-85.34999999999999 +k=1.000028 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7325\":[\"EPSG:7325\",\"+proj=tmerc +lat_0=38.8 +lon_0=-85.8 +k=1.000025 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7326\":[\"EPSG:7326\",\"+proj=tmerc +lat_0=38.8 +lon_0=-85.8 +k=1.000025 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7327\":[\"EPSG:7327\",\"+proj=tmerc +lat_0=39.3 +lon_0=-86.15000000000001 +k=1.000031 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7328\":[\"EPSG:7328\",\"+proj=tmerc +lat_0=39.3 +lon_0=-86.15000000000001 +k=1.000031 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:4992\":[\"EPSG:4992\",\"+proj=geocent +ellps=krass +units=m +no_defs \"],\"EPSG:7329\":[\"EPSG:7329\",\"+proj=tmerc +lat_0=38.4 +lon_0=-87.45 +k=1.000015 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7330\":[\"EPSG:7330\",\"+proj=tmerc +lat_0=38.4 +lon_0=-87.45 +k=1.000015 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7331\":[\"EPSG:7331\",\"+proj=tmerc +lat_0=41.25 +lon_0=-85.45 +k=1.000037 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7332\":[\"EPSG:7332\",\"+proj=tmerc +lat_0=41.25 +lon_0=-85.45 +k=1.000037 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7333\":[\"EPSG:7333\",\"+proj=tmerc +lat_0=40.7 +lon_0=-87.40000000000001 +k=1.000026 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7334\":[\"EPSG:7334\",\"+proj=tmerc +lat_0=40.7 +lon_0=-87.40000000000001 +k=1.000026 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7335\":[\"EPSG:7335\",\"+proj=tmerc +lat_0=40.9 +lon_0=-86.75 +k=1.000027 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7336\":[\"EPSG:7336\",\"+proj=tmerc +lat_0=40.9 +lon_0=-86.75 +k=1.000027 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7337\":[\"EPSG:7337\",\"+proj=tmerc +lat_0=38.95 +lon_0=-86.5 +k=1.000028 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7338\":[\"EPSG:7338\",\"+proj=tmerc +lat_0=38.95 +lon_0=-86.5 +k=1.000028 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7339\":[\"EPSG:7339\",\"+proj=tmerc +lat_0=39.45 +lon_0=-86.95 +k=1.000031 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7340\":[\"EPSG:7340\",\"+proj=tmerc +lat_0=39.45 +lon_0=-86.95 +k=1.000031 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7341\":[\"EPSG:7341\",\"+proj=tmerc +lat_0=39.15 +lon_0=-86.90000000000001 +k=1.000026 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7342\":[\"EPSG:7342\",\"+proj=tmerc +lat_0=39.15 +lon_0=-86.90000000000001 +k=1.000026 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7343\":[\"EPSG:7343\",\"+proj=tmerc +lat_0=39.6 +lon_0=-87.34999999999999 +k=1.000022 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7344\":[\"EPSG:7344\",\"+proj=tmerc +lat_0=39.6 +lon_0=-87.34999999999999 +k=1.000022 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7345\":[\"EPSG:7345\",\"+proj=tmerc +lat_0=37.8 +lon_0=-86.7 +k=1.00002 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7346\":[\"EPSG:7346\",\"+proj=tmerc +lat_0=37.8 +lon_0=-86.7 +k=1.00002 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:4994\":[\"EPSG:4994\",\"+proj=geocent +ellps=clrk66 +units=m +no_defs \"],\"EPSG:7347\":[\"EPSG:7347\",\"+proj=tmerc +lat_0=37.85 +lon_0=-87.3 +k=1.000015 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7348\":[\"EPSG:7348\",\"+proj=tmerc +lat_0=37.85 +lon_0=-87.3 +k=1.000015 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7349\":[\"EPSG:7349\",\"+proj=tmerc +lat_0=37.75 +lon_0=-87.95 +k=1.000013 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7350\":[\"EPSG:7350\",\"+proj=tmerc +lat_0=37.75 +lon_0=-87.95 +k=1.000013 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7351\":[\"EPSG:7351\",\"+proj=tmerc +lat_0=39.7 +lon_0=-85.05 +k=1.000044 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7352\":[\"EPSG:7352\",\"+proj=tmerc +lat_0=39.7 +lon_0=-85.05 +k=1.000044 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7353\":[\"EPSG:7353\",\"+proj=tmerc +lat_0=38.9 +lon_0=-85.3 +k=1.000038 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7354\":[\"EPSG:7354\",\"+proj=tmerc +lat_0=38.9 +lon_0=-85.3 +k=1.000038 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7355\":[\"EPSG:7355\",\"+proj=tmerc +lat_0=39.3 +lon_0=-85.90000000000001 +k=1.00003 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:26702\":[\"EPSG:26702\",\"+proj=utm +zone=2 +datum=NAD27 +units=m +no_defs \"],\"EPSG:7356\":[\"EPSG:7356\",\"+proj=tmerc +lat_0=39.3 +lon_0=-85.90000000000001 +k=1.00003 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7357\":[\"EPSG:7357\",\"+proj=tmerc +lat_0=37.75 +lon_0=-87.05 +k=1.000014 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7358\":[\"EPSG:7358\",\"+proj=tmerc +lat_0=37.75 +lon_0=-87.05 +k=1.000014 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7359\":[\"EPSG:7359\",\"+proj=tmerc +lat_0=41.5 +lon_0=-85 +k=1.000041 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7360\":[\"EPSG:7360\",\"+proj=tmerc +lat_0=41.5 +lon_0=-85 +k=1.000041 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7361\":[\"EPSG:7361\",\"+proj=tmerc +lat_0=38.9 +lon_0=-87.5 +k=1.000017 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7362\":[\"EPSG:7362\",\"+proj=tmerc +lat_0=38.9 +lon_0=-87.5 +k=1.000017 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7363\":[\"EPSG:7363\",\"+proj=tmerc +lat_0=40.2 +lon_0=-86.90000000000001 +k=1.000026 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7364\":[\"EPSG:7364\",\"+proj=tmerc +lat_0=40.2 +lon_0=-86.90000000000001 +k=1.000026 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:32607\":[\"EPSG:32607\",\"+proj=utm +zone=7 +datum=WGS84 +units=m +no_defs \"],\"EPSG:7365\":[\"EPSG:7365\",\"+proj=tmerc +lat_0=37.8 +lon_0=-87.55 +k=1.000015 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7366\":[\"EPSG:7366\",\"+proj=tmerc +lat_0=37.8 +lon_0=-87.55 +k=1.000015 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7367\":[\"EPSG:7367\",\"+proj=tmerc +lat_0=39.25 +lon_0=-87.45 +k=1.00002 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7368\":[\"EPSG:7368\",\"+proj=tmerc +lat_0=39.25 +lon_0=-87.45 +k=1.00002 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7369\":[\"EPSG:7369\",\"+proj=tmerc +lat_0=40.55 +lon_0=-85.25 +k=1.000034 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7370\":[\"EPSG:7370\",\"+proj=tmerc +lat_0=40.55 +lon_0=-85.25 +k=1.000034 +x_0=240000 +y_0=36000 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7374\":[\"EPSG:7374\",\"+proj=utm +zone=39 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:7375\":[\"EPSG:7375\",\"+proj=utm +zone=40 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:7376\":[\"EPSG:7376\",\"+proj=utm +zone=41 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:7528\":[\"EPSG:7528\",\"+proj=tmerc +lat_0=43.36666666666667 +lon_0=-90 +k=1.0000365285 +x_0=147218.6942 +y_0=0.0037 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7529\":[\"EPSG:7529\",\"+proj=tmerc +lat_0=45.70611111111111 +lon_0=-90.62222222222222 +k=1.0000495683 +x_0=172821.9461 +y_0=0.0017 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7530\":[\"EPSG:7530\",\"+proj=tmerc +lat_0=45.13333333333333 +lon_0=-91.84999999999999 +k=1.0000486665 +x_0=93150 +y_0=0.0029 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7531\":[\"EPSG:7531\",\"+proj=lcc +lat_1=46.66964837722222 +lat_0=46.66964837722222 +lon_0=-91.15277777777779 +k_0=1.0000331195 +x_0=228600.4575 +y_0=148551.4837 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7532\":[\"EPSG:7532\",\"+proj=tmerc +lat_0=43 +lon_0=-88 +k=1.00002 +x_0=31600 +y_0=4600 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7533\":[\"EPSG:7533\",\"+proj=tmerc +lat_0=43.48138888888889 +lon_0=-91.79722222222222 +k=1.0000382778 +x_0=175260.3502 +y_0=0.0048 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7534\":[\"EPSG:7534\",\"+proj=lcc +lat_1=45.89871486583333 +lat_0=45.89871486583333 +lon_0=-92.45777777777778 +k_0=1.0000383841 +x_0=64008.1276 +y_0=59445.9043 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7535\":[\"EPSG:7535\",\"+proj=tmerc +lat_0=42.71944444444445 +lon_0=-88.5 +k=1.0000286569 +x_0=244754.8893 +y_0=0.0049 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7536\":[\"EPSG:7536\",\"+proj=lcc +lat_1=44.97785689861112 +lat_0=44.97785689861112 +lon_0=-91.29444444444444 +k_0=1.0000391127 +x_0=60045.72 +y_0=44091.4346 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7537\":[\"EPSG:7537\",\"+proj=tmerc +lat_0=43.6 +lon_0=-90.70833333333334 +k=1.0000463003 +x_0=199949.1989 +y_0=0.0086 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7538\":[\"EPSG:7538\",\"+proj=lcc +lat_1=43.46254664583333 +lat_0=43.46254664583333 +lon_0=-89.39444444444445 +k_0=1.00003498 +x_0=169164.3381 +y_0=111569.6134 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7539\":[\"EPSG:7539\",\"+proj=lcc +lat_1=43.200055605 +lat_0=43.200055605 +lon_0=-90.9388888888889 +k_0=1.0000349151 +x_0=113690.6274 +y_0=53703.1201 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7540\":[\"EPSG:7540\",\"+proj=lcc +lat_1=43.0695160375 +lat_0=43.0695160375 +lon_0=-89.42222222222223 +k_0=1.0000384786 +x_0=247193.2944 +y_0=146591.9896 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7541\":[\"EPSG:7541\",\"+proj=tmerc +lat_0=41.47222222222222 +lon_0=-88.77500000000001 +k=1.0000346418 +x_0=263347.7263 +y_0=0.0076 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7542\":[\"EPSG:7542\",\"+proj=tmerc +lat_0=44.4 +lon_0=-87.27222222222223 +k=1.0000187521 +x_0=158801.1176 +y_0=0.0023 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7543\":[\"EPSG:7543\",\"+proj=tmerc +lat_0=45.88333333333333 +lon_0=-91.91666666666667 +k=1.0000385418 +x_0=59131.3183 +y_0=0.0041 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7544\":[\"EPSG:7544\",\"+proj=tmerc +lat_0=44.40833333333333 +lon_0=-91.89444444444445 +k=1.0000410324 +x_0=51816.104 +y_0=0.003 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7545\":[\"EPSG:7545\",\"+proj=lcc +lat_1=44.87228112638889 +lat_0=44.87228112638889 +lon_0=-91.28888888888889 +k_0=1.000035079 +x_0=120091.4402 +y_0=91687.92389999999 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7546\":[\"EPSG:7546\",\"+proj=tmerc +lat_0=45.43888888888888 +lon_0=-88.14166666666668 +k=1.0000552095 +x_0=133502.6683 +y_0=0.0063 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7547\":[\"EPSG:7547\",\"+proj=tmerc +lat_0=44.00555555555555 +lon_0=-88.63333333333334 +k=1.0000673004 +x_0=275844.5533 +y_0=0.0157 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7548\":[\"EPSG:7548\",\"+proj=tmerc +lat_0=41.41111111111111 +lon_0=-90.8 +k=1.0000349452 +x_0=242316.4841 +y_0=0.01 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7549\":[\"EPSG:7549\",\"+proj=lcc +lat_1=42.63756227694444 +lat_0=42.63756227694444 +lon_0=-89.83888888888889 +k_0=1.0000390487 +x_0=170078.7403 +y_0=45830.2947 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7550\":[\"EPSG:7550\",\"+proj=lcc +lat_1=43.80700011777778 +lat_0=43.80700011777778 +lon_0=-89.24166666666667 +k_0=1.0000344057 +x_0=150876.3018 +y_0=79170.7795 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7551\":[\"EPSG:7551\",\"+proj=tmerc +lat_0=42.53888888888888 +lon_0=-90.16111111111111 +k=1.0000394961 +x_0=113081.0261 +y_0=0.0045 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7552\":[\"EPSG:7552\",\"+proj=tmerc +lat_0=45.43333333333333 +lon_0=-90.25555555555556 +k=1.0000677153 +x_0=220980.4419 +y_0=0.008500000000000001 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7553\":[\"EPSG:7553\",\"+proj=tmerc +lat_0=44.25333512777778 +lon_0=-90.84429651944444 +k=1.0000353 +x_0=27000 +y_0=25000 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7554\":[\"EPSG:7554\",\"+proj=tmerc +lat_0=42.21666666666667 +lon_0=-87.89444444444445 +k=1.0000260649 +x_0=185928.3728 +y_0=0.0009 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7555\":[\"EPSG:7555\",\"+proj=tmerc +lat_0=43.26666666666667 +lon_0=-87.55 +k=1.0000233704 +x_0=79857.7614 +y_0=0.0012 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7556\":[\"EPSG:7556\",\"+proj=tmerc +lat_0=43.45111111111111 +lon_0=-91.31666666666666 +k=1.0000319985 +x_0=130454.6598 +y_0=0.0033 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7557\":[\"EPSG:7557\",\"+proj=lcc +lat_1=45.15423710527778 +lat_0=45.15423710527778 +lon_0=-89.03333333333333 +k_0=1.0000627024 +x_0=198425.197 +y_0=105279.7829 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7558\":[\"EPSG:7558\",\"+proj=tmerc +lat_0=44.84444444444445 +lon_0=-89.73333333333333 +k=1.0000599003 +x_0=116129.0323 +y_0=0.0058 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7559\":[\"EPSG:7559\",\"+proj=lcc +lat_1=44.90090442361111 +lat_0=44.90090442361111 +lon_0=-89.77 +k_0=1.000053289 +x_0=74676.1493 +y_0=55049.2669 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7560\":[\"EPSG:7560\",\"+proj=tmerc +lat_0=44.69166666666666 +lon_0=-87.71111111111111 +k=1.0000234982 +x_0=238658.8794 +y_0=0.0032 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7561\":[\"EPSG:7561\",\"+proj=tmerc +lat_0=44.71666666666667 +lon_0=-88.41666666666667 +k=1.0000362499 +x_0=105461.0121 +y_0=0.0029 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7562\":[\"EPSG:7562\",\"+proj=lcc +lat_1=44.00007392861111 +lat_0=44.00007392861111 +lon_0=-90.64166666666668 +k_0=1.0000434122 +x_0=204521.209 +y_0=121923.9861 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7563\":[\"EPSG:7563\",\"+proj=tmerc +lat_0=44.39722222222222 +lon_0=-87.90833333333335 +k=1.0000236869 +x_0=182880.3676 +y_0=0.0033 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7564\":[\"EPSG:7564\",\"+proj=lcc +lat_1=45.70422377027778 +lat_0=45.70422377027778 +lon_0=-89.54444444444444 +k_0=1.0000686968 +x_0=70104.1401 +y_0=57588.0346 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7565\":[\"EPSG:7565\",\"+proj=lcc +lat_1=44.63614887194444 +lat_0=44.63614887194444 +lon_0=-92.22777777777777 +k_0=1.0000362977 +x_0=167640.3354 +y_0=86033.0876 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7566\":[\"EPSG:7566\",\"+proj=tmerc +lat_0=44.66111111111111 +lon_0=-92.63333333333334 +k=1.0000433849 +x_0=141732.2823 +y_0=0.0059 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7567\":[\"EPSG:7567\",\"+proj=lcc +lat_1=44.41682397527777 +lat_0=44.41682397527777 +lon_0=-89.5 +k_0=1.000039936 +x_0=56388.1128 +y_0=50022.1874 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7568\":[\"EPSG:7568\",\"+proj=tmerc +lat_0=44.55555555555555 +lon_0=-90.48888888888889 +k=1.0000649554 +x_0=227990.8546 +y_0=0.0109 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7569\":[\"EPSG:7569\",\"+proj=lcc +lat_1=43.3223129275 +lat_0=43.3223129275 +lon_0=-90.43055555555556 +k_0=1.0000375653 +x_0=202387.6048 +y_0=134255.4253 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7570\":[\"EPSG:7570\",\"+proj=tmerc +lat_0=41.94444444444444 +lon_0=-89.07222222222222 +k=1.0000337311 +x_0=146304.2926 +y_0=0.0068 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7571\":[\"EPSG:7571\",\"+proj=tmerc +lat_0=43.91944444444444 +lon_0=-91.06666666666666 +k=1.0000495976 +x_0=250546.1013 +y_0=0.0234 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7572\":[\"EPSG:7572\",\"+proj=tmerc +lat_0=42.81944444444445 +lon_0=-89.90000000000001 +k=1.0000373868 +x_0=185623.5716 +y_0=0.0051 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7573\":[\"EPSG:7573\",\"+proj=lcc +lat_1=45.90009913138888 +lat_0=45.90009913138888 +lon_0=-91.11666666666666 +k_0=1.0000573461 +x_0=216713.2336 +y_0=120734.1631 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7574\":[\"EPSG:7574\",\"+proj=tmerc +lat_0=44.03611111111111 +lon_0=-88.60555555555555 +k=1.000032144 +x_0=262433.3253 +y_0=0.009599999999999999 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7575\":[\"EPSG:7575\",\"+proj=tmerc +lat_0=44.03611111111111 +lon_0=-92.63333333333334 +k=1.0000381803 +x_0=165506.7302 +y_0=0.0103 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7576\":[\"EPSG:7576\",\"+proj=lcc +lat_1=45.17782208583333 +lat_0=45.17782208583333 +lon_0=-90.48333333333333 +k_0=1.0000597566 +x_0=187147.5744 +y_0=107746.7522 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7577\":[\"EPSG:7577\",\"+proj=tmerc +lat_0=43.16111111111111 +lon_0=-91.36666666666666 +k=1.0000361538 +x_0=256946.9138 +y_0=0.0041 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7578\":[\"EPSG:7578\",\"+proj=lcc +lat_1=43.57503293972223 +lat_0=43.57503293972223 +lon_0=-90.78333333333333 +k_0=1.0000408158 +x_0=222504.4451 +y_0=47532.0602 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7579\":[\"EPSG:7579\",\"+proj=lcc +lat_1=46.07784409055556 +lat_0=46.07784409055556 +lon_0=-89.48888888888889 +k_0=1.0000730142 +x_0=134417.0689 +y_0=50337.1092 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7580\":[\"EPSG:7580\",\"+proj=lcc +lat_1=42.66946209694444 +lat_0=42.66946209694444 +lon_0=-88.54166666666667 +k_0=1.0000367192 +x_0=232562.8651 +y_0=111088.2224 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7581\":[\"EPSG:7581\",\"+proj=lcc +lat_1=45.96121983333334 +lat_0=45.96121983333334 +lon_0=-91.78333333333333 +k_0=1.0000475376 +x_0=234086.8682 +y_0=188358.6058 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7582\":[\"EPSG:7582\",\"+proj=tmerc +lat_0=42.91805555555555 +lon_0=-88.06388888888888 +k=1.00003738 +x_0=120091.4415 +y_0=0.003 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7583\":[\"EPSG:7583\",\"+proj=tmerc +lat_0=42.56944444444445 +lon_0=-88.22499999999999 +k=1.0000346179 +x_0=208788.418 +y_0=0.0034 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7584\":[\"EPSG:7584\",\"+proj=tmerc +lat_0=43.42027777777778 +lon_0=-88.81666666666666 +k=1.0000333645 +x_0=185013.9709 +y_0=0.007 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7585\":[\"EPSG:7585\",\"+proj=lcc +lat_1=44.11394404583334 +lat_0=44.11394404583334 +lon_0=-89.24166666666667 +k_0=1.0000392096 +x_0=120091.4402 +y_0=45069.7587 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7586\":[\"EPSG:7586\",\"+proj=lcc +lat_1=44.36259546944444 +lat_0=44.36259546944444 +lon_0=-90 +k_0=1.0000421209 +x_0=208483.6173 +y_0=134589.754 +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7587\":[\"EPSG:7587\",\"+proj=tmerc +lat_0=43.36666666666667 +lon_0=-90 +k=1.0000365285 +x_0=147218.6941325883 +y_0=0.00365760731521463 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7588\":[\"EPSG:7588\",\"+proj=tmerc +lat_0=45.70611111111111 +lon_0=-90.62222222222222 +k=1.0000495683 +x_0=172821.945948692 +y_0=0.001828803657607315 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7589\":[\"EPSG:7589\",\"+proj=tmerc +lat_0=45.13333333333333 +lon_0=-91.84999999999999 +k=1.0000486665 +x_0=93150 +y_0=0.003048006096012192 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7590\":[\"EPSG:7590\",\"+proj=lcc +lat_1=46.66964837722222 +lat_0=46.66964837722222 +lon_0=-91.15277777777779 +k_0=1.0000331195 +x_0=228600.4575057151 +y_0=148551.4835661671 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7591\":[\"EPSG:7591\",\"+proj=tmerc +lat_0=43 +lon_0=-88 +k=1.00002 +x_0=31599.99989839979 +y_0=4599.999898399797 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7592\":[\"EPSG:7592\",\"+proj=tmerc +lat_0=43.48138888888889 +lon_0=-91.79722222222222 +k=1.0000382778 +x_0=175260.3502159004 +y_0=0.004876809753619507 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7593\":[\"EPSG:7593\",\"+proj=lcc +lat_1=45.89871486583333 +lat_0=45.89871486583333 +lon_0=-92.45777777777778 +k_0=1.0000383841 +x_0=64008.12771145543 +y_0=59445.90419100838 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7594\":[\"EPSG:7594\",\"+proj=tmerc +lat_0=42.71944444444445 +lon_0=-88.5 +k=1.0000286569 +x_0=244754.8892049784 +y_0=0.004876809753619507 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7595\":[\"EPSG:7595\",\"+proj=lcc +lat_1=44.97785689861112 +lat_0=44.97785689861112 +lon_0=-91.29444444444444 +k_0=1.0000391127 +x_0=60045.72009144018 +y_0=44091.43449326898 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7596\":[\"EPSG:7596\",\"+proj=tmerc +lat_0=43.6 +lon_0=-90.70833333333334 +k=1.0000463003 +x_0=199949.198983998 +y_0=0.008534417068834137 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7597\":[\"EPSG:7597\",\"+proj=lcc +lat_1=43.46254664583333 +lat_0=43.46254664583333 +lon_0=-89.39444444444445 +k_0=1.00003498 +x_0=169164.338023876 +y_0=111569.613512827 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7598\":[\"EPSG:7598\",\"+proj=lcc +lat_1=43.200055605 +lat_0=43.200055605 +lon_0=-90.9388888888889 +k_0=1.0000349151 +x_0=113690.6273812548 +y_0=53703.12024384048 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7599\":[\"EPSG:7599\",\"+proj=lcc +lat_1=43.0695160375 +lat_0=43.0695160375 +lon_0=-89.42222222222223 +k_0=1.0000384786 +x_0=247193.2943865888 +y_0=146591.9896367793 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:4996\":[\"EPSG:4996\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7600\":[\"EPSG:7600\",\"+proj=tmerc +lat_0=41.47222222222222 +lon_0=-88.77500000000001 +k=1.0000346418 +x_0=263347.7263906528 +y_0=0.00762001524003048 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7601\":[\"EPSG:7601\",\"+proj=tmerc +lat_0=44.4 +lon_0=-87.27222222222223 +k=1.0000187521 +x_0=158801.1176022352 +y_0=0.002438404876809754 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7602\":[\"EPSG:7602\",\"+proj=tmerc +lat_0=45.88333333333333 +lon_0=-91.91666666666667 +k=1.0000385418 +x_0=59131.31826263652 +y_0=0.003962407924815849 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7603\":[\"EPSG:7603\",\"+proj=tmerc +lat_0=44.40833333333333 +lon_0=-91.89444444444445 +k=1.0000410324 +x_0=51816.10393700787 +y_0=0.003048006096012192 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7604\":[\"EPSG:7604\",\"+proj=lcc +lat_1=44.87228112638889 +lat_0=44.87228112638889 +lon_0=-91.28888888888889 +k_0=1.000035079 +x_0=120091.4401828804 +y_0=91687.92390144781 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7605\":[\"EPSG:7605\",\"+proj=tmerc +lat_0=45.43888888888888 +lon_0=-88.14166666666668 +k=1.0000552095 +x_0=133502.6682245364 +y_0=0.006400812801625603 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7606\":[\"EPSG:7606\",\"+proj=tmerc +lat_0=44.00555555555555 +lon_0=-88.63333333333334 +k=1.0000673004 +x_0=275844.5532131065 +y_0=0.0158496316992634 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7607\":[\"EPSG:7607\",\"+proj=tmerc +lat_0=41.41111111111111 +lon_0=-90.8 +k=1.0000349452 +x_0=242316.484023368 +y_0=0.01005842011684023 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:32608\":[\"EPSG:32608\",\"+proj=utm +zone=8 +datum=WGS84 +units=m +no_defs \"],\"EPSG:7608\":[\"EPSG:7608\",\"+proj=lcc +lat_1=42.63756227694444 +lat_0=42.63756227694444 +lon_0=-89.83888888888889 +k_0=1.0000390487 +x_0=170078.7401574803 +y_0=45830.29484378968 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7609\":[\"EPSG:7609\",\"+proj=lcc +lat_1=43.80700011777778 +lat_0=43.80700011777778 +lon_0=-89.24166666666667 +k_0=1.0000344057 +x_0=150876.3017526035 +y_0=79170.77937515875 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7610\":[\"EPSG:7610\",\"+proj=tmerc +lat_0=42.53888888888888 +lon_0=-90.16111111111111 +k=1.0000394961 +x_0=113081.0261620523 +y_0=0.004572009144018288 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7611\":[\"EPSG:7611\",\"+proj=tmerc +lat_0=45.43333333333333 +lon_0=-90.25555555555556 +k=1.0000677153 +x_0=220980.4419608839 +y_0=0.008534417068834137 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7612\":[\"EPSG:7612\",\"+proj=tmerc +lat_0=44.25333512777778 +lon_0=-90.84429651944444 +k=1.0000353 +x_0=27000 +y_0=24999.99989839979 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7613\":[\"EPSG:7613\",\"+proj=tmerc +lat_0=42.21666666666667 +lon_0=-87.89444444444445 +k=1.0000260649 +x_0=185928.3727711455 +y_0=0.0009144018288036576 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7614\":[\"EPSG:7614\",\"+proj=tmerc +lat_0=43.26666666666667 +lon_0=-87.55 +k=1.0000233704 +x_0=79857.76154432308 +y_0=0.001219202438404877 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7615\":[\"EPSG:7615\",\"+proj=tmerc +lat_0=43.45111111111111 +lon_0=-91.31666666666666 +k=1.0000319985 +x_0=130454.6596901194 +y_0=0.003352806705613411 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:4998\":[\"EPSG:4998\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7616\":[\"EPSG:7616\",\"+proj=lcc +lat_1=45.15423710527778 +lat_0=45.15423710527778 +lon_0=-89.03333333333333 +k_0=1.0000627024 +x_0=198425.1968503937 +y_0=105279.7828803657 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7617\":[\"EPSG:7617\",\"+proj=tmerc +lat_0=44.84444444444445 +lon_0=-89.73333333333333 +k=1.0000599003 +x_0=116129.0322580645 +y_0=0.005791211582423164 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7618\":[\"EPSG:7618\",\"+proj=lcc +lat_1=44.90090442361111 +lat_0=44.90090442361111 +lon_0=-89.77 +k_0=1.000053289 +x_0=74676.1493522987 +y_0=55049.26695453391 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7619\":[\"EPSG:7619\",\"+proj=tmerc +lat_0=44.69166666666666 +lon_0=-87.71111111111111 +k=1.0000234982 +x_0=238658.8794513589 +y_0=0.003048006096012192 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7620\":[\"EPSG:7620\",\"+proj=tmerc +lat_0=44.71666666666667 +lon_0=-88.41666666666667 +k=1.0000362499 +x_0=105461.0121412243 +y_0=0.003048006096012192 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7621\":[\"EPSG:7621\",\"+proj=lcc +lat_1=44.00007392861111 +lat_0=44.00007392861111 +lon_0=-90.64166666666668 +k_0=1.0000434122 +x_0=204521.2090424181 +y_0=121923.9861823724 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7622\":[\"EPSG:7622\",\"+proj=tmerc +lat_0=44.39722222222222 +lon_0=-87.90833333333335 +k=1.0000236869 +x_0=182880.3675895352 +y_0=0.003352806705613411 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7623\":[\"EPSG:7623\",\"+proj=lcc +lat_1=45.70422377027778 +lat_0=45.70422377027778 +lon_0=-89.54444444444444 +k_0=1.0000686968 +x_0=70104.14020828041 +y_0=57588.03474726949 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:5011\":[\"EPSG:5011\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7624\":[\"EPSG:7624\",\"+proj=lcc +lat_1=44.63614887194444 +lat_0=44.63614887194444 +lon_0=-92.22777777777777 +k_0=1.0000362977 +x_0=167640.3352806706 +y_0=86033.08773177546 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7625\":[\"EPSG:7625\",\"+proj=tmerc +lat_0=44.66111111111111 +lon_0=-92.63333333333334 +k=1.0000433849 +x_0=141732.2822453645 +y_0=0.005791211582423164 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7626\":[\"EPSG:7626\",\"+proj=lcc +lat_1=44.41682397527777 +lat_0=44.41682397527777 +lon_0=-89.5 +k_0=1.000039936 +x_0=56388.11277622555 +y_0=50022.1874523749 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7627\":[\"EPSG:7627\",\"+proj=tmerc +lat_0=44.55555555555555 +lon_0=-90.48888888888889 +k=1.0000649554 +x_0=227990.8544577089 +y_0=0.01097282194564389 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7628\":[\"EPSG:7628\",\"+proj=lcc +lat_1=43.3223129275 +lat_0=43.3223129275 +lon_0=-90.43055555555556 +k_0=1.0000375653 +x_0=202387.6047752095 +y_0=134255.4254508509 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7629\":[\"EPSG:7629\",\"+proj=tmerc +lat_0=41.94444444444444 +lon_0=-89.07222222222222 +k=1.0000337311 +x_0=146304.2926085852 +y_0=0.006705613411226822 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7630\":[\"EPSG:7630\",\"+proj=tmerc +lat_0=43.91944444444444 +lon_0=-91.06666666666666 +k=1.0000495976 +x_0=250546.1013970028 +y_0=0.02346964693929388 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7631\":[\"EPSG:7631\",\"+proj=tmerc +lat_0=42.81944444444445 +lon_0=-89.90000000000001 +k=1.0000373868 +x_0=185623.5715519431 +y_0=0.005181610363220727 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:5244\":[\"EPSG:5244\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7632\":[\"EPSG:7632\",\"+proj=lcc +lat_1=45.90009913138888 +lat_0=45.90009913138888 +lon_0=-91.11666666666666 +k_0=1.0000573461 +x_0=216713.2337312675 +y_0=120734.1631699263 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7633\":[\"EPSG:7633\",\"+proj=tmerc +lat_0=44.03611111111111 +lon_0=-88.60555555555555 +k=1.000032144 +x_0=262433.3251714504 +y_0=0.009448818897637795 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7634\":[\"EPSG:7634\",\"+proj=tmerc +lat_0=44.03611111111111 +lon_0=-92.63333333333334 +k=1.0000381803 +x_0=165506.7300990602 +y_0=0.01036322072644145 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7635\":[\"EPSG:7635\",\"+proj=lcc +lat_1=45.17782208583333 +lat_0=45.17782208583333 +lon_0=-90.48333333333333 +k_0=1.0000597566 +x_0=187147.5742951486 +y_0=107746.7521463043 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7636\":[\"EPSG:7636\",\"+proj=tmerc +lat_0=43.16111111111111 +lon_0=-91.36666666666666 +k=1.0000361538 +x_0=256946.9138938278 +y_0=0.003962407924815849 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7637\":[\"EPSG:7637\",\"+proj=lcc +lat_1=43.57503293972223 +lat_0=43.57503293972223 +lon_0=-90.78333333333333 +k_0=1.0000408158 +x_0=222504.44500889 +y_0=47532.0603505207 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7638\":[\"EPSG:7638\",\"+proj=lcc +lat_1=46.07784409055556 +lat_0=46.07784409055556 +lon_0=-89.48888888888889 +k_0=1.0000730142 +x_0=134417.0688341377 +y_0=50337.10927101854 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7639\":[\"EPSG:7639\",\"+proj=lcc +lat_1=42.66946209694444 +lat_0=42.66946209694444 +lon_0=-88.54166666666667 +k_0=1.0000367192 +x_0=232562.8651257302 +y_0=111088.2224028448 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:5250\":[\"EPSG:5250\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7640\":[\"EPSG:7640\",\"+proj=lcc +lat_1=45.96121983333334 +lat_0=45.96121983333334 +lon_0=-91.78333333333333 +k_0=1.0000475376 +x_0=234086.8681737363 +y_0=188358.6059436119 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7641\":[\"EPSG:7641\",\"+proj=tmerc +lat_0=42.91805555555555 +lon_0=-88.06388888888888 +k=1.00003738 +x_0=120091.4414020828 +y_0=0.003048006096012192 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7642\":[\"EPSG:7642\",\"+proj=tmerc +lat_0=42.56944444444445 +lon_0=-88.22499999999999 +k=1.0000346179 +x_0=208788.4178816358 +y_0=0.003352806705613411 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7643\":[\"EPSG:7643\",\"+proj=tmerc +lat_0=43.42027777777778 +lon_0=-88.81666666666666 +k=1.0000333645 +x_0=185013.9709423419 +y_0=0.007010414020828041 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7644\":[\"EPSG:7644\",\"+proj=lcc +lat_1=44.11394404583334 +lat_0=44.11394404583334 +lon_0=-89.24166666666667 +k_0=1.0000392096 +x_0=120091.4401828804 +y_0=45069.7588011176 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:7645\":[\"EPSG:7645\",\"+proj=lcc +lat_1=44.36259546944444 +lat_0=44.36259546944444 +lon_0=-90 +k_0=1.0000421209 +x_0=208483.6172720346 +y_0=134589.7539243078 +ellps=GRS80 +units=us-ft +no_defs \"],\"EPSG:20004\":[\"EPSG:20004\",\"+proj=tmerc +lat_0=0 +lon_0=21 +k=1 +x_0=4500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:20005\":[\"EPSG:20005\",\"+proj=tmerc +lat_0=0 +lon_0=27 +k=1 +x_0=5500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:20006\":[\"EPSG:20006\",\"+proj=tmerc +lat_0=0 +lon_0=33 +k=1 +x_0=6500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:20007\":[\"EPSG:20007\",\"+proj=tmerc +lat_0=0 +lon_0=39 +k=1 +x_0=7500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:20008\":[\"EPSG:20008\",\"+proj=tmerc +lat_0=0 +lon_0=45 +k=1 +x_0=8500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:20009\":[\"EPSG:20009\",\"+proj=tmerc +lat_0=0 +lon_0=51 +k=1 +x_0=9500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:20010\":[\"EPSG:20010\",\"+proj=tmerc +lat_0=0 +lon_0=57 +k=1 +x_0=10500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:20011\":[\"EPSG:20011\",\"+proj=tmerc +lat_0=0 +lon_0=63 +k=1 +x_0=11500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:20012\":[\"EPSG:20012\",\"+proj=tmerc +lat_0=0 +lon_0=69 +k=1 +x_0=12500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:20013\":[\"EPSG:20013\",\"+proj=tmerc +lat_0=0 +lon_0=75 +k=1 +x_0=13500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:20014\":[\"EPSG:20014\",\"+proj=tmerc +lat_0=0 +lon_0=81 +k=1 +x_0=14500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:20015\":[\"EPSG:20015\",\"+proj=tmerc +lat_0=0 +lon_0=87 +k=1 +x_0=15500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:20016\":[\"EPSG:20016\",\"+proj=tmerc +lat_0=0 +lon_0=93 +k=1 +x_0=16500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:20017\":[\"EPSG:20017\",\"+proj=tmerc +lat_0=0 +lon_0=99 +k=1 +x_0=17500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:20018\":[\"EPSG:20018\",\"+proj=tmerc +lat_0=0 +lon_0=105 +k=1 +x_0=18500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:20019\":[\"EPSG:20019\",\"+proj=tmerc +lat_0=0 +lon_0=111 +k=1 +x_0=19500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:20020\":[\"EPSG:20020\",\"+proj=tmerc +lat_0=0 +lon_0=117 +k=1 +x_0=20500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:20021\":[\"EPSG:20021\",\"+proj=tmerc +lat_0=0 +lon_0=123 +k=1 +x_0=21500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:20022\":[\"EPSG:20022\",\"+proj=tmerc +lat_0=0 +lon_0=129 +k=1 +x_0=22500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:20023\":[\"EPSG:20023\",\"+proj=tmerc +lat_0=0 +lon_0=135 +k=1 +x_0=23500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:20024\":[\"EPSG:20024\",\"+proj=tmerc +lat_0=0 +lon_0=141 +k=1 +x_0=24500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:20025\":[\"EPSG:20025\",\"+proj=tmerc +lat_0=0 +lon_0=147 +k=1 +x_0=25500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:20026\":[\"EPSG:20026\",\"+proj=tmerc +lat_0=0 +lon_0=153 +k=1 +x_0=26500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:20027\":[\"EPSG:20027\",\"+proj=tmerc +lat_0=0 +lon_0=159 +k=1 +x_0=27500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:20028\":[\"EPSG:20028\",\"+proj=tmerc +lat_0=0 +lon_0=165 +k=1 +x_0=28500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:20029\":[\"EPSG:20029\",\"+proj=tmerc +lat_0=0 +lon_0=171 +k=1 +x_0=29500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:20030\":[\"EPSG:20030\",\"+proj=tmerc +lat_0=0 +lon_0=177 +k=1 +x_0=30500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:20031\":[\"EPSG:20031\",\"+proj=tmerc +lat_0=0 +lon_0=-177 +k=1 +x_0=31500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:20032\":[\"EPSG:20032\",\"+proj=tmerc +lat_0=0 +lon_0=-171 +k=1 +x_0=32500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:20064\":[\"EPSG:20064\",\"+proj=tmerc +lat_0=0 +lon_0=21 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:20065\":[\"EPSG:20065\",\"+proj=tmerc +lat_0=0 +lon_0=27 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:20066\":[\"EPSG:20066\",\"+proj=tmerc +lat_0=0 +lon_0=33 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:20067\":[\"EPSG:20067\",\"+proj=tmerc +lat_0=0 +lon_0=39 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:20068\":[\"EPSG:20068\",\"+proj=tmerc +lat_0=0 +lon_0=45 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:20069\":[\"EPSG:20069\",\"+proj=tmerc +lat_0=0 +lon_0=51 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:20070\":[\"EPSG:20070\",\"+proj=tmerc +lat_0=0 +lon_0=57 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:20071\":[\"EPSG:20071\",\"+proj=tmerc +lat_0=0 +lon_0=63 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:20072\":[\"EPSG:20072\",\"+proj=tmerc +lat_0=0 +lon_0=69 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:20073\":[\"EPSG:20073\",\"+proj=tmerc +lat_0=0 +lon_0=75 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:20074\":[\"EPSG:20074\",\"+proj=tmerc +lat_0=0 +lon_0=81 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:20075\":[\"EPSG:20075\",\"+proj=tmerc +lat_0=0 +lon_0=87 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:20076\":[\"EPSG:20076\",\"+proj=tmerc +lat_0=0 +lon_0=93 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:20077\":[\"EPSG:20077\",\"+proj=tmerc +lat_0=0 +lon_0=99 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:20078\":[\"EPSG:20078\",\"+proj=tmerc +lat_0=0 +lon_0=105 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:20079\":[\"EPSG:20079\",\"+proj=tmerc +lat_0=0 +lon_0=111 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:20080\":[\"EPSG:20080\",\"+proj=tmerc +lat_0=0 +lon_0=117 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:20081\":[\"EPSG:20081\",\"+proj=tmerc +lat_0=0 +lon_0=123 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:20082\":[\"EPSG:20082\",\"+proj=tmerc +lat_0=0 +lon_0=129 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:20083\":[\"EPSG:20083\",\"+proj=tmerc +lat_0=0 +lon_0=135 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:20084\":[\"EPSG:20084\",\"+proj=tmerc +lat_0=0 +lon_0=141 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:20085\":[\"EPSG:20085\",\"+proj=tmerc +lat_0=0 +lon_0=147 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:20086\":[\"EPSG:20086\",\"+proj=tmerc +lat_0=0 +lon_0=153 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:20087\":[\"EPSG:20087\",\"+proj=tmerc +lat_0=0 +lon_0=159 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:20088\":[\"EPSG:20088\",\"+proj=tmerc +lat_0=0 +lon_0=165 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:20089\":[\"EPSG:20089\",\"+proj=tmerc +lat_0=0 +lon_0=171 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:20090\":[\"EPSG:20090\",\"+proj=tmerc +lat_0=0 +lon_0=177 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:20091\":[\"EPSG:20091\",\"+proj=tmerc +lat_0=0 +lon_0=-177 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:20092\":[\"EPSG:20092\",\"+proj=tmerc +lat_0=0 +lon_0=-171 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +units=m +no_defs \"],\"EPSG:20135\":[\"EPSG:20135\",\"+proj=utm +zone=35 +ellps=clrk80 +towgs84=-166,-15,204,0,0,0,0 +units=m +no_defs \"],\"EPSG:20136\":[\"EPSG:20136\",\"+proj=utm +zone=36 +ellps=clrk80 +towgs84=-166,-15,204,0,0,0,0 +units=m +no_defs \"],\"EPSG:20137\":[\"EPSG:20137\",\"+proj=utm +zone=37 +ellps=clrk80 +towgs84=-166,-15,204,0,0,0,0 +units=m +no_defs \"],\"EPSG:20138\":[\"EPSG:20138\",\"+proj=utm +zone=38 +ellps=clrk80 +towgs84=-166,-15,204,0,0,0,0 +units=m +no_defs \"],\"EPSG:20248\":[\"EPSG:20248\",\"+proj=utm +zone=48 +south +ellps=aust_SA +towgs84=-117.808,-51.536,137.784,0.303,0.446,0.234,-0.29 +units=m +no_defs \"],\"EPSG:20249\":[\"EPSG:20249\",\"+proj=utm +zone=49 +south +ellps=aust_SA +towgs84=-117.808,-51.536,137.784,0.303,0.446,0.234,-0.29 +units=m +no_defs \"],\"EPSG:20250\":[\"EPSG:20250\",\"+proj=utm +zone=50 +south +ellps=aust_SA +towgs84=-117.808,-51.536,137.784,0.303,0.446,0.234,-0.29 +units=m +no_defs \"],\"EPSG:20251\":[\"EPSG:20251\",\"+proj=utm +zone=51 +south +ellps=aust_SA +towgs84=-117.808,-51.536,137.784,0.303,0.446,0.234,-0.29 +units=m +no_defs \"],\"EPSG:20252\":[\"EPSG:20252\",\"+proj=utm +zone=52 +south +ellps=aust_SA +towgs84=-117.808,-51.536,137.784,0.303,0.446,0.234,-0.29 +units=m +no_defs \"],\"EPSG:20253\":[\"EPSG:20253\",\"+proj=utm +zone=53 +south +ellps=aust_SA +towgs84=-117.808,-51.536,137.784,0.303,0.446,0.234,-0.29 +units=m +no_defs \"],\"EPSG:20254\":[\"EPSG:20254\",\"+proj=utm +zone=54 +south +ellps=aust_SA +towgs84=-117.808,-51.536,137.784,0.303,0.446,0.234,-0.29 +units=m +no_defs \"],\"EPSG:20255\":[\"EPSG:20255\",\"+proj=utm +zone=55 +south +ellps=aust_SA +towgs84=-117.808,-51.536,137.784,0.303,0.446,0.234,-0.29 +units=m +no_defs \"],\"EPSG:20256\":[\"EPSG:20256\",\"+proj=utm +zone=56 +south +ellps=aust_SA +towgs84=-117.808,-51.536,137.784,0.303,0.446,0.234,-0.29 +units=m +no_defs \"],\"EPSG:20257\":[\"EPSG:20257\",\"+proj=utm +zone=57 +south +ellps=aust_SA +towgs84=-117.808,-51.536,137.784,0.303,0.446,0.234,-0.29 +units=m +no_defs \"],\"EPSG:20258\":[\"EPSG:20258\",\"+proj=utm +zone=58 +south +ellps=aust_SA +towgs84=-117.808,-51.536,137.784,0.303,0.446,0.234,-0.29 +units=m +no_defs \"],\"EPSG:20348\":[\"EPSG:20348\",\"+proj=utm +zone=48 +south +ellps=aust_SA +towgs84=-134,-48,149,0,0,0,0 +units=m +no_defs \"],\"EPSG:20349\":[\"EPSG:20349\",\"+proj=utm +zone=49 +south +ellps=aust_SA +towgs84=-134,-48,149,0,0,0,0 +units=m +no_defs \"],\"EPSG:20350\":[\"EPSG:20350\",\"+proj=utm +zone=50 +south +ellps=aust_SA +towgs84=-134,-48,149,0,0,0,0 +units=m +no_defs \"],\"EPSG:20351\":[\"EPSG:20351\",\"+proj=utm +zone=51 +south +ellps=aust_SA +towgs84=-134,-48,149,0,0,0,0 +units=m +no_defs \"],\"EPSG:20352\":[\"EPSG:20352\",\"+proj=utm +zone=52 +south +ellps=aust_SA +towgs84=-134,-48,149,0,0,0,0 +units=m +no_defs \"],\"EPSG:20353\":[\"EPSG:20353\",\"+proj=utm +zone=53 +south +ellps=aust_SA +towgs84=-134,-48,149,0,0,0,0 +units=m +no_defs \"],\"EPSG:20354\":[\"EPSG:20354\",\"+proj=utm +zone=54 +south +ellps=aust_SA +towgs84=-134,-48,149,0,0,0,0 +units=m +no_defs \"],\"EPSG:20355\":[\"EPSG:20355\",\"+proj=utm +zone=55 +south +ellps=aust_SA +towgs84=-134,-48,149,0,0,0,0 +units=m +no_defs \"],\"EPSG:20539\":[\"EPSG:20539\",\"+proj=utm +zone=39 +ellps=krass +towgs84=-43,-163,45,0,0,0,0 +units=m +no_defs \"],\"EPSG:20357\":[\"EPSG:20357\",\"+proj=utm +zone=57 +south +ellps=aust_SA +towgs84=-134,-48,149,0,0,0,0 +units=m +no_defs \"],\"EPSG:20358\":[\"EPSG:20358\",\"+proj=utm +zone=58 +south +ellps=aust_SA +towgs84=-134,-48,149,0,0,0,0 +units=m +no_defs \"],\"EPSG:20436\":[\"EPSG:20436\",\"+proj=utm +zone=36 +ellps=intl +towgs84=-143,-236,7,0,0,0,0 +units=m +no_defs \"],\"EPSG:20437\":[\"EPSG:20437\",\"+proj=utm +zone=37 +ellps=intl +towgs84=-143,-236,7,0,0,0,0 +units=m +no_defs \"],\"EPSG:20439\":[\"EPSG:20439\",\"+proj=utm +zone=39 +ellps=intl +towgs84=-143,-236,7,0,0,0,0 +units=m +no_defs \"],\"EPSG:20440\":[\"EPSG:20440\",\"+proj=utm +zone=40 +ellps=intl +towgs84=-143,-236,7,0,0,0,0 +units=m +no_defs \"],\"EPSG:20499\":[\"EPSG:20499\",\"+proj=utm +zone=39 +ellps=intl +towgs84=-143,-236,7,0,0,0,0 +units=m +no_defs \"],\"EPSG:20538\":[\"EPSG:20538\",\"+proj=utm +zone=38 +ellps=krass +towgs84=-43,-163,45,0,0,0,0 +units=m +no_defs \"],\"EPSG:20791\":[\"EPSG:20791\",\"+proj=tmerc +lat_0=39.66666666666666 +lon_0=1 +k=1 +x_0=0 +y_0=0 +ellps=intl +towgs84=-304.046,-60.576,103.64,0,0,0,0 +pm=lisbon +units=m +no_defs \"],\"EPSG:20822\":[\"EPSG:20822\",\"+proj=utm +zone=22 +south +ellps=intl +towgs84=-151.99,287.04,-147.45,0,0,0,0 +units=m +no_defs \"],\"EPSG:20823\":[\"EPSG:20823\",\"+proj=utm +zone=23 +south +ellps=intl +towgs84=-151.99,287.04,-147.45,0,0,0,0 +units=m +no_defs \"],\"EPSG:20824\":[\"EPSG:20824\",\"+proj=utm +zone=24 +south +ellps=intl +towgs84=-151.99,287.04,-147.45,0,0,0,0 +units=m +no_defs \"],\"EPSG:20934\":[\"EPSG:20934\",\"+proj=utm +zone=34 +south +a=6378249.145 +b=6356514.966398753 +towgs84=-143,-90,-294,0,0,0,0 +units=m +no_defs \"],\"EPSG:20935\":[\"EPSG:20935\",\"+proj=utm +zone=35 +south +a=6378249.145 +b=6356514.966398753 +towgs84=-143,-90,-294,0,0,0,0 +units=m +no_defs \"],\"EPSG:20936\":[\"EPSG:20936\",\"+proj=utm +zone=36 +south +a=6378249.145 +b=6356514.966398753 +towgs84=-143,-90,-294,0,0,0,0 +units=m +no_defs \"],\"EPSG:21035\":[\"EPSG:21035\",\"+proj=utm +zone=35 +south +ellps=clrk80 +towgs84=-160,-6,-302,0,0,0,0 +units=m +no_defs \"],\"EPSG:21036\":[\"EPSG:21036\",\"+proj=utm +zone=36 +south +ellps=clrk80 +towgs84=-160,-6,-302,0,0,0,0 +units=m +no_defs \"],\"EPSG:21037\":[\"EPSG:21037\",\"+proj=utm +zone=37 +south +ellps=clrk80 +towgs84=-160,-6,-302,0,0,0,0 +units=m +no_defs \"],\"EPSG:21095\":[\"EPSG:21095\",\"+proj=utm +zone=35 +ellps=clrk80 +towgs84=-160,-6,-302,0,0,0,0 +units=m +no_defs \"],\"EPSG:21097\":[\"EPSG:21097\",\"+proj=utm +zone=37 +ellps=clrk80 +towgs84=-160,-6,-302,0,0,0,0 +units=m +no_defs \"],\"EPSG:21100\":[\"EPSG:21100\",\"+proj=merc +lon_0=110 +k=0.997 +x_0=3900000 +y_0=900000 +ellps=bessel +towgs84=-377,681,-50,0,0,0,0 +pm=jakarta +units=m +no_defs \"],\"EPSG:21148\":[\"EPSG:21148\",\"+proj=utm +zone=48 +south +ellps=bessel +towgs84=-377,681,-50,0,0,0,0 +units=m +no_defs \"],\"EPSG:21149\":[\"EPSG:21149\",\"+proj=utm +zone=49 +south +ellps=bessel +towgs84=-377,681,-50,0,0,0,0 +units=m +no_defs \"],\"EPSG:21150\":[\"EPSG:21150\",\"+proj=utm +zone=50 +south +ellps=bessel +towgs84=-377,681,-50,0,0,0,0 +units=m +no_defs \"],\"EPSG:21291\":[\"EPSG:21291\",\"+proj=tmerc +lat_0=0 +lon_0=-62 +k=0.9995000000000001 +x_0=400000 +y_0=0 +ellps=clrk80 +towgs84=31.95,300.99,419.19,0,0,0,0 +units=m +no_defs \"],\"EPSG:21292\":[\"EPSG:21292\",\"+proj=tmerc +lat_0=13.17638888888889 +lon_0=-59.55972222222222 +k=0.9999986 +x_0=30000 +y_0=75000 +ellps=clrk80 +towgs84=31.95,300.99,419.19,0,0,0,0 +units=m +no_defs \"],\"EPSG:21413\":[\"EPSG:21413\",\"+proj=tmerc +lat_0=0 +lon_0=75 +k=1 +x_0=13500000 +y_0=0 +ellps=krass +towgs84=15.8,-154.4,-82.3,0,0,0,0 +units=m +no_defs \"],\"EPSG:21414\":[\"EPSG:21414\",\"+proj=tmerc +lat_0=0 +lon_0=81 +k=1 +x_0=14500000 +y_0=0 +ellps=krass +towgs84=15.8,-154.4,-82.3,0,0,0,0 +units=m +no_defs \"],\"EPSG:21415\":[\"EPSG:21415\",\"+proj=tmerc +lat_0=0 +lon_0=87 +k=1 +x_0=15500000 +y_0=0 +ellps=krass +towgs84=15.8,-154.4,-82.3,0,0,0,0 +units=m +no_defs \"],\"EPSG:21416\":[\"EPSG:21416\",\"+proj=tmerc +lat_0=0 +lon_0=93 +k=1 +x_0=16500000 +y_0=0 +ellps=krass +towgs84=15.8,-154.4,-82.3,0,0,0,0 +units=m +no_defs \"],\"EPSG:21417\":[\"EPSG:21417\",\"+proj=tmerc +lat_0=0 +lon_0=99 +k=1 +x_0=17500000 +y_0=0 +ellps=krass +towgs84=15.8,-154.4,-82.3,0,0,0,0 +units=m +no_defs \"],\"EPSG:21418\":[\"EPSG:21418\",\"+proj=tmerc +lat_0=0 +lon_0=105 +k=1 +x_0=18500000 +y_0=0 +ellps=krass +towgs84=15.8,-154.4,-82.3,0,0,0,0 +units=m +no_defs \"],\"EPSG:21419\":[\"EPSG:21419\",\"+proj=tmerc +lat_0=0 +lon_0=111 +k=1 +x_0=19500000 +y_0=0 +ellps=krass +towgs84=15.8,-154.4,-82.3,0,0,0,0 +units=m +no_defs \"],\"EPSG:21420\":[\"EPSG:21420\",\"+proj=tmerc +lat_0=0 +lon_0=117 +k=1 +x_0=20500000 +y_0=0 +ellps=krass +towgs84=15.8,-154.4,-82.3,0,0,0,0 +units=m +no_defs \"],\"EPSG:21421\":[\"EPSG:21421\",\"+proj=tmerc +lat_0=0 +lon_0=123 +k=1 +x_0=21500000 +y_0=0 +ellps=krass +towgs84=15.8,-154.4,-82.3,0,0,0,0 +units=m +no_defs \"],\"EPSG:21422\":[\"EPSG:21422\",\"+proj=tmerc +lat_0=0 +lon_0=129 +k=1 +x_0=22500000 +y_0=0 +ellps=krass +towgs84=15.8,-154.4,-82.3,0,0,0,0 +units=m +no_defs \"],\"EPSG:21423\":[\"EPSG:21423\",\"+proj=tmerc +lat_0=0 +lon_0=135 +k=1 +x_0=23500000 +y_0=0 +ellps=krass +towgs84=15.8,-154.4,-82.3,0,0,0,0 +units=m +no_defs \"],\"EPSG:21453\":[\"EPSG:21453\",\"+proj=tmerc +lat_0=0 +lon_0=75 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=15.8,-154.4,-82.3,0,0,0,0 +units=m +no_defs \"],\"EPSG:21454\":[\"EPSG:21454\",\"+proj=tmerc +lat_0=0 +lon_0=81 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=15.8,-154.4,-82.3,0,0,0,0 +units=m +no_defs \"],\"EPSG:21455\":[\"EPSG:21455\",\"+proj=tmerc +lat_0=0 +lon_0=87 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=15.8,-154.4,-82.3,0,0,0,0 +units=m +no_defs \"],\"EPSG:21456\":[\"EPSG:21456\",\"+proj=tmerc +lat_0=0 +lon_0=93 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=15.8,-154.4,-82.3,0,0,0,0 +units=m +no_defs \"],\"EPSG:21457\":[\"EPSG:21457\",\"+proj=tmerc +lat_0=0 +lon_0=99 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=15.8,-154.4,-82.3,0,0,0,0 +units=m +no_defs \"],\"EPSG:21458\":[\"EPSG:21458\",\"+proj=tmerc +lat_0=0 +lon_0=105 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=15.8,-154.4,-82.3,0,0,0,0 +units=m +no_defs \"],\"EPSG:21459\":[\"EPSG:21459\",\"+proj=tmerc +lat_0=0 +lon_0=111 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=15.8,-154.4,-82.3,0,0,0,0 +units=m +no_defs \"],\"EPSG:21460\":[\"EPSG:21460\",\"+proj=tmerc +lat_0=0 +lon_0=117 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=15.8,-154.4,-82.3,0,0,0,0 +units=m +no_defs \"],\"EPSG:21461\":[\"EPSG:21461\",\"+proj=tmerc +lat_0=0 +lon_0=123 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=15.8,-154.4,-82.3,0,0,0,0 +units=m +no_defs \"],\"EPSG:21462\":[\"EPSG:21462\",\"+proj=tmerc +lat_0=0 +lon_0=129 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=15.8,-154.4,-82.3,0,0,0,0 +units=m +no_defs \"],\"EPSG:21463\":[\"EPSG:21463\",\"+proj=tmerc +lat_0=0 +lon_0=135 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=15.8,-154.4,-82.3,0,0,0,0 +units=m +no_defs \"],\"EPSG:21473\":[\"EPSG:21473\",\"+proj=tmerc +lat_0=0 +lon_0=75 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=15.8,-154.4,-82.3,0,0,0,0 +units=m +no_defs \"],\"EPSG:21474\":[\"EPSG:21474\",\"+proj=tmerc +lat_0=0 +lon_0=81 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=15.8,-154.4,-82.3,0,0,0,0 +units=m +no_defs \"],\"EPSG:21475\":[\"EPSG:21475\",\"+proj=tmerc +lat_0=0 +lon_0=87 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=15.8,-154.4,-82.3,0,0,0,0 +units=m +no_defs \"],\"EPSG:21476\":[\"EPSG:21476\",\"+proj=tmerc +lat_0=0 +lon_0=93 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=15.8,-154.4,-82.3,0,0,0,0 +units=m +no_defs \"],\"EPSG:21477\":[\"EPSG:21477\",\"+proj=tmerc +lat_0=0 +lon_0=99 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=15.8,-154.4,-82.3,0,0,0,0 +units=m +no_defs \"],\"EPSG:21478\":[\"EPSG:21478\",\"+proj=tmerc +lat_0=0 +lon_0=105 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=15.8,-154.4,-82.3,0,0,0,0 +units=m +no_defs \"],\"EPSG:21479\":[\"EPSG:21479\",\"+proj=tmerc +lat_0=0 +lon_0=111 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=15.8,-154.4,-82.3,0,0,0,0 +units=m +no_defs \"],\"EPSG:21480\":[\"EPSG:21480\",\"+proj=tmerc +lat_0=0 +lon_0=117 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=15.8,-154.4,-82.3,0,0,0,0 +units=m +no_defs \"],\"EPSG:21481\":[\"EPSG:21481\",\"+proj=tmerc +lat_0=0 +lon_0=123 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=15.8,-154.4,-82.3,0,0,0,0 +units=m +no_defs \"],\"EPSG:21482\":[\"EPSG:21482\",\"+proj=tmerc +lat_0=0 +lon_0=129 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=15.8,-154.4,-82.3,0,0,0,0 +units=m +no_defs \"],\"EPSG:21483\":[\"EPSG:21483\",\"+proj=tmerc +lat_0=0 +lon_0=135 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=15.8,-154.4,-82.3,0,0,0,0 +units=m +no_defs \"],\"EPSG:21500\":[\"EPSG:21500\",\"+proj=lcc +lat_1=49.83333333333334 +lat_2=51.16666666666666 +lat_0=90 +lon_0=0 +x_0=150000 +y_0=5400000 +ellps=intl +pm=brussels +units=m +no_defs \"],\"EPSG:21780\":[\"EPSG:21780\",\"+proj=somerc +lat_0=46.95240555555556 +lon_0=0 +k_0=1 +x_0=0 +y_0=0 +ellps=bessel +towgs84=674.4,15.1,405.3,0,0,0,0 +pm=bern +units=m +no_defs \"],\"EPSG:21782\":[\"EPSG:21782\",\"+proj=somerc +lat_0=46.95240555555556 +lon_0=7.439583333333333 +k_0=1 +x_0=0 +y_0=0 +ellps=bessel +towgs84=674.4,15.1,405.3,0,0,0,0 +units=m +no_defs \"],\"EPSG:21817\":[\"EPSG:21817\",\"+proj=utm +zone=17 +ellps=intl +towgs84=307,304,-318,0,0,0,0 +units=m +no_defs \"],\"EPSG:21818\":[\"EPSG:21818\",\"+proj=utm +zone=18 +ellps=intl +towgs84=307,304,-318,0,0,0,0 +units=m +no_defs \"],\"EPSG:5262\":[\"EPSG:5262\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:21891\":[\"EPSG:21891\",\"+proj=tmerc +lat_0=4.599047222222222 +lon_0=-77.08091666666667 +k=1 +x_0=1000000 +y_0=1000000 +ellps=intl +towgs84=307,304,-318,0,0,0,0 +units=m +no_defs \"],\"EPSG:21893\":[\"EPSG:21893\",\"+proj=tmerc +lat_0=4.599047222222222 +lon_0=-71.08091666666667 +k=1 +x_0=1000000 +y_0=1000000 +ellps=intl +towgs84=307,304,-318,0,0,0,0 +units=m +no_defs \"],\"EPSG:21894\":[\"EPSG:21894\",\"+proj=tmerc +lat_0=4.599047222222222 +lon_0=-68.08091666666667 +k=1 +x_0=1000000 +y_0=1000000 +ellps=intl +towgs84=307,304,-318,0,0,0,0 +units=m +no_defs \"],\"EPSG:21896\":[\"EPSG:21896\",\"+proj=tmerc +lat_0=4.599047222222222 +lon_0=-77.08091666666667 +k=1 +x_0=1000000 +y_0=1000000 +ellps=intl +towgs84=307,304,-318,0,0,0,0 +units=m +no_defs \"],\"EPSG:21898\":[\"EPSG:21898\",\"+proj=tmerc +lat_0=4.599047222222222 +lon_0=-71.08091666666667 +k=1 +x_0=1000000 +y_0=1000000 +ellps=intl +towgs84=307,304,-318,0,0,0,0 +units=m +no_defs \"],\"EPSG:21899\":[\"EPSG:21899\",\"+proj=tmerc +lat_0=4.599047222222222 +lon_0=-68.08091666666667 +k=1 +x_0=1000000 +y_0=1000000 +ellps=intl +towgs84=307,304,-318,0,0,0,0 +units=m +no_defs \"],\"EPSG:22032\":[\"EPSG:22032\",\"+proj=utm +zone=32 +south +ellps=clrk80 +towgs84=-50.9,-347.6,-231,0,0,0,0 +units=m +no_defs \"],\"EPSG:22033\":[\"EPSG:22033\",\"+proj=utm +zone=33 +south +ellps=clrk80 +towgs84=-50.9,-347.6,-231,0,0,0,0 +units=m +no_defs \"],\"EPSG:22091\":[\"EPSG:22091\",\"+proj=tmerc +lat_0=0 +lon_0=11.5 +k=0.9996 +x_0=500000 +y_0=10000000 +ellps=clrk80 +towgs84=-50.9,-347.6,-231,0,0,0,0 +units=m +no_defs \"],\"EPSG:22092\":[\"EPSG:22092\",\"+proj=tmerc +lat_0=0 +lon_0=12 +k=0.9996 +x_0=500000 +y_0=10000000 +ellps=clrk80 +towgs84=-50.9,-347.6,-231,0,0,0,0 +units=m +no_defs \"],\"EPSG:22171\":[\"EPSG:22171\",\"+proj=tmerc +lat_0=-90 +lon_0=-72 +k=1 +x_0=1500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:22172\":[\"EPSG:22172\",\"+proj=tmerc +lat_0=-90 +lon_0=-69 +k=1 +x_0=2500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:22173\":[\"EPSG:22173\",\"+proj=tmerc +lat_0=-90 +lon_0=-66 +k=1 +x_0=3500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:22174\":[\"EPSG:22174\",\"+proj=tmerc +lat_0=-90 +lon_0=-63 +k=1 +x_0=4500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:22175\":[\"EPSG:22175\",\"+proj=tmerc +lat_0=-90 +lon_0=-60 +k=1 +x_0=5500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:22176\":[\"EPSG:22176\",\"+proj=tmerc +lat_0=-90 +lon_0=-57 +k=1 +x_0=6500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:22177\":[\"EPSG:22177\",\"+proj=tmerc +lat_0=-90 +lon_0=-54 +k=1 +x_0=7500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:22181\":[\"EPSG:22181\",\"+proj=tmerc +lat_0=-90 +lon_0=-72 +k=1 +x_0=1500000 +y_0=0 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:22182\":[\"EPSG:22182\",\"+proj=tmerc +lat_0=-90 +lon_0=-69 +k=1 +x_0=2500000 +y_0=0 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:22183\":[\"EPSG:22183\",\"+proj=tmerc +lat_0=-90 +lon_0=-66 +k=1 +x_0=3500000 +y_0=0 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:22186\":[\"EPSG:22186\",\"+proj=tmerc +lat_0=-90 +lon_0=-57 +k=1 +x_0=6500000 +y_0=0 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:22187\":[\"EPSG:22187\",\"+proj=tmerc +lat_0=-90 +lon_0=-54 +k=1 +x_0=7500000 +y_0=0 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:22191\":[\"EPSG:22191\",\"+proj=tmerc +lat_0=-90 +lon_0=-72 +k=1 +x_0=1500000 +y_0=0 +ellps=intl +towgs84=-148,136,90,0,0,0,0 +units=m +no_defs \"],\"EPSG:22192\":[\"EPSG:22192\",\"+proj=tmerc +lat_0=-90 +lon_0=-69 +k=1 +x_0=2500000 +y_0=0 +ellps=intl +towgs84=-148,136,90,0,0,0,0 +units=m +no_defs \"],\"EPSG:22193\":[\"EPSG:22193\",\"+proj=tmerc +lat_0=-90 +lon_0=-66 +k=1 +x_0=3500000 +y_0=0 +ellps=intl +towgs84=-148,136,90,0,0,0,0 +units=m +no_defs \"],\"EPSG:22194\":[\"EPSG:22194\",\"+proj=tmerc +lat_0=-90 +lon_0=-63 +k=1 +x_0=4500000 +y_0=0 +ellps=intl +towgs84=-148,136,90,0,0,0,0 +units=m +no_defs \"],\"EPSG:22195\":[\"EPSG:22195\",\"+proj=tmerc +lat_0=-90 +lon_0=-60 +k=1 +x_0=5500000 +y_0=0 +ellps=intl +towgs84=-148,136,90,0,0,0,0 +units=m +no_defs \"],\"EPSG:22196\":[\"EPSG:22196\",\"+proj=tmerc +lat_0=-90 +lon_0=-57 +k=1 +x_0=6500000 +y_0=0 +ellps=intl +towgs84=-148,136,90,0,0,0,0 +units=m +no_defs \"],\"EPSG:22197\":[\"EPSG:22197\",\"+proj=tmerc +lat_0=-90 +lon_0=-54 +k=1 +x_0=7500000 +y_0=0 +ellps=intl +towgs84=-148,136,90,0,0,0,0 +units=m +no_defs \"],\"EPSG:22234\":[\"EPSG:22234\",\"+proj=utm +zone=34 +south +a=6378249.145 +b=6356514.966398753 +towgs84=-136,-108,-292,0,0,0,0 +units=m +no_defs \"],\"EPSG:22235\":[\"EPSG:22235\",\"+proj=utm +zone=35 +south +a=6378249.145 +b=6356514.966398753 +towgs84=-136,-108,-292,0,0,0,0 +units=m +no_defs \"],\"EPSG:22236\":[\"EPSG:22236\",\"+proj=utm +zone=36 +south +a=6378249.145 +b=6356514.966398753 +towgs84=-136,-108,-292,0,0,0,0 +units=m +no_defs \"],\"EPSG:22275\":[\"EPSG:22275\",\"+proj=tmerc +lat_0=0 +lon_0=15 +k=1 +x_0=0 +y_0=0 +axis=wsu +a=6378249.145 +b=6356514.966398753 +towgs84=-136,-108,-292,0,0,0,0 +units=m +no_defs \"],\"EPSG:22277\":[\"EPSG:22277\",\"+proj=tmerc +lat_0=0 +lon_0=17 +k=1 +x_0=0 +y_0=0 +axis=wsu +a=6378249.145 +b=6356514.966398753 +towgs84=-136,-108,-292,0,0,0,0 +units=m +no_defs \"],\"EPSG:22279\":[\"EPSG:22279\",\"+proj=tmerc +lat_0=0 +lon_0=19 +k=1 +x_0=0 +y_0=0 +axis=wsu +a=6378249.145 +b=6356514.966398753 +towgs84=-136,-108,-292,0,0,0,0 +units=m +no_defs \"],\"EPSG:22281\":[\"EPSG:22281\",\"+proj=tmerc +lat_0=0 +lon_0=21 +k=1 +x_0=0 +y_0=0 +axis=wsu +a=6378249.145 +b=6356514.966398753 +towgs84=-136,-108,-292,0,0,0,0 +units=m +no_defs \"],\"EPSG:22283\":[\"EPSG:22283\",\"+proj=tmerc +lat_0=0 +lon_0=23 +k=1 +x_0=0 +y_0=0 +axis=wsu +a=6378249.145 +b=6356514.966398753 +towgs84=-136,-108,-292,0,0,0,0 +units=m +no_defs \"],\"EPSG:22285\":[\"EPSG:22285\",\"+proj=tmerc +lat_0=0 +lon_0=25 +k=1 +x_0=0 +y_0=0 +axis=wsu +a=6378249.145 +b=6356514.966398753 +towgs84=-136,-108,-292,0,0,0,0 +units=m +no_defs \"],\"EPSG:22287\":[\"EPSG:22287\",\"+proj=tmerc +lat_0=0 +lon_0=27 +k=1 +x_0=0 +y_0=0 +axis=wsu +a=6378249.145 +b=6356514.966398753 +towgs84=-136,-108,-292,0,0,0,0 +units=m +no_defs \"],\"EPSG:22289\":[\"EPSG:22289\",\"+proj=tmerc +lat_0=0 +lon_0=29 +k=1 +x_0=0 +y_0=0 +axis=wsu +a=6378249.145 +b=6356514.966398753 +towgs84=-136,-108,-292,0,0,0,0 +units=m +no_defs \"],\"EPSG:22291\":[\"EPSG:22291\",\"+proj=tmerc +lat_0=0 +lon_0=31 +k=1 +x_0=0 +y_0=0 +axis=wsu +a=6378249.145 +b=6356514.966398753 +towgs84=-136,-108,-292,0,0,0,0 +units=m +no_defs \"],\"EPSG:22293\":[\"EPSG:22293\",\"+proj=tmerc +lat_0=0 +lon_0=33 +k=1 +x_0=0 +y_0=0 +axis=wsu +a=6378249.145 +b=6356514.966398753 +towgs84=-136,-108,-292,0,0,0,0 +units=m +no_defs \"],\"EPSG:22300\":[\"EPSG:22300\",\"\"],\"EPSG:22332\":[\"EPSG:22332\",\"+proj=utm +zone=32 +datum=carthage +units=m +no_defs \"],\"EPSG:22392\":[\"EPSG:22392\",\"+proj=lcc +lat_1=33.3 +lat_0=33.3 +lon_0=9.9 +k_0=0.999625769 +x_0=500000 +y_0=300000 +datum=carthage +units=m +no_defs \"],\"EPSG:22521\":[\"EPSG:22521\",\"+proj=utm +zone=21 +south +ellps=intl +towgs84=-205.57,168.77,-4.12,0,0,0,0 +units=m +no_defs \"],\"EPSG:22522\":[\"EPSG:22522\",\"+proj=utm +zone=22 +south +ellps=intl +towgs84=-205.57,168.77,-4.12,0,0,0,0 +units=m +no_defs \"],\"EPSG:22525\":[\"EPSG:22525\",\"+proj=utm +zone=25 +south +ellps=intl +towgs84=-205.57,168.77,-4.12,0,0,0,0 +units=m +no_defs \"],\"EPSG:22700\":[\"EPSG:22700\",\"+proj=lcc +lat_1=34.65 +lat_0=34.65 +lon_0=37.35 +k_0=0.9996256 +x_0=300000 +y_0=300000 +a=6378249.2 +b=6356515 +towgs84=-190.421,8.532,238.69,0,0,0,0 +units=m +no_defs \"],\"EPSG:22770\":[\"EPSG:22770\",\"+proj=lcc +lat_1=34.65 +lat_0=34.65 +lon_0=37.35 +k_0=0.9996256 +x_0=300000 +y_0=300000 +a=6378249.2 +b=6356515 +towgs84=-190.421,8.532,238.69,0,0,0,0 +units=m +no_defs \"],\"EPSG:22780\":[\"EPSG:22780\",\"+proj=sterea +lat_0=34.2 +lon_0=39.15 +k=0.9995341 +x_0=0 +y_0=0 +a=6378249.2 +b=6356515 +towgs84=-190.421,8.532,238.69,0,0,0,0 +units=m +no_defs \"],\"EPSG:5322\":[\"EPSG:5322\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:22991\":[\"EPSG:22991\",\"+proj=tmerc +lat_0=30 +lon_0=35 +k=1 +x_0=300000 +y_0=1100000 +ellps=helmert +towgs84=-130,110,-13,0,0,0,0 +units=m +no_defs \"],\"EPSG:22992\":[\"EPSG:22992\",\"+proj=tmerc +lat_0=30 +lon_0=31 +k=1 +x_0=615000 +y_0=810000 +ellps=helmert +towgs84=-130,110,-13,0,0,0,0 +units=m +no_defs \"],\"EPSG:22993\":[\"EPSG:22993\",\"+proj=tmerc +lat_0=30 +lon_0=27 +k=1 +x_0=700000 +y_0=200000 +ellps=helmert +towgs84=-130,110,-13,0,0,0,0 +units=m +no_defs \"],\"EPSG:22994\":[\"EPSG:22994\",\"+proj=tmerc +lat_0=30 +lon_0=27 +k=1 +x_0=700000 +y_0=1200000 +ellps=helmert +towgs84=-130,110,-13,0,0,0,0 +units=m +no_defs \"],\"EPSG:23028\":[\"EPSG:23028\",\"+proj=utm +zone=28 +ellps=intl +towgs84=-87,-98,-121,0,0,0,0 +units=m +no_defs \"],\"EPSG:23034\":[\"EPSG:23034\",\"+proj=utm +zone=34 +ellps=intl +towgs84=-87,-98,-121,0,0,0,0 +units=m +no_defs \"],\"EPSG:23037\":[\"EPSG:23037\",\"+proj=utm +zone=37 +ellps=intl +towgs84=-87,-98,-121,0,0,0,0 +units=m +no_defs \"],\"EPSG:23038\":[\"EPSG:23038\",\"+proj=utm +zone=38 +ellps=intl +towgs84=-87,-98,-121,0,0,0,0 +units=m +no_defs \"],\"EPSG:23090\":[\"EPSG:23090\",\"+proj=tmerc +lat_0=0 +lon_0=0 +k=0.9996 +x_0=500000 +y_0=0 +ellps=intl +towgs84=-87,-98,-121,0,0,0,0 +units=m +no_defs \"],\"EPSG:23095\":[\"EPSG:23095\",\"+proj=tmerc +lat_0=0 +lon_0=5 +k=0.9996 +x_0=500000 +y_0=0 +ellps=intl +towgs84=-87,-98,-121,0,0,0,0 +units=m +no_defs \"],\"EPSG:23239\":[\"EPSG:23239\",\"+proj=utm +zone=39 +ellps=clrk80 +towgs84=-333.102,-11.02,230.69,0,0,0.554,0.219 +units=m +no_defs \"],\"EPSG:23240\":[\"EPSG:23240\",\"+proj=utm +zone=40 +ellps=clrk80 +towgs84=-333.102,-11.02,230.69,0,0,0.554,0.219 +units=m +no_defs \"],\"EPSG:23433\":[\"EPSG:23433\",\"+proj=utm +zone=33 +a=6378249.2 +b=6356515 +units=m +no_defs \"],\"EPSG:23830\":[\"EPSG:23830\",\"+proj=tmerc +lat_0=0 +lon_0=94.5 +k=0.9999 +x_0=200000 +y_0=1500000 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:23831\":[\"EPSG:23831\",\"+proj=tmerc +lat_0=0 +lon_0=97.5 +k=0.9999 +x_0=200000 +y_0=1500000 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:23832\":[\"EPSG:23832\",\"+proj=tmerc +lat_0=0 +lon_0=100.5 +k=0.9999 +x_0=200000 +y_0=1500000 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:23833\":[\"EPSG:23833\",\"+proj=tmerc +lat_0=0 +lon_0=103.5 +k=0.9999 +x_0=200000 +y_0=1500000 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:23835\":[\"EPSG:23835\",\"+proj=tmerc +lat_0=0 +lon_0=109.5 +k=0.9999 +x_0=200000 +y_0=1500000 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:23836\":[\"EPSG:23836\",\"+proj=tmerc +lat_0=0 +lon_0=112.5 +k=0.9999 +x_0=200000 +y_0=1500000 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:23837\":[\"EPSG:23837\",\"+proj=tmerc +lat_0=0 +lon_0=115.5 +k=0.9999 +x_0=200000 +y_0=1500000 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5332\":[\"EPSG:5332\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:23838\":[\"EPSG:23838\",\"+proj=tmerc +lat_0=0 +lon_0=118.5 +k=0.9999 +x_0=200000 +y_0=1500000 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:23839\":[\"EPSG:23839\",\"+proj=tmerc +lat_0=0 +lon_0=121.5 +k=0.9999 +x_0=200000 +y_0=1500000 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:23840\":[\"EPSG:23840\",\"+proj=tmerc +lat_0=0 +lon_0=124.5 +k=0.9999 +x_0=200000 +y_0=1500000 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:23841\":[\"EPSG:23841\",\"+proj=tmerc +lat_0=0 +lon_0=127.5 +k=0.9999 +x_0=200000 +y_0=1500000 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:23842\":[\"EPSG:23842\",\"+proj=tmerc +lat_0=0 +lon_0=130.5 +k=0.9999 +x_0=200000 +y_0=1500000 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:23843\":[\"EPSG:23843\",\"+proj=tmerc +lat_0=0 +lon_0=133.5 +k=0.9999 +x_0=200000 +y_0=1500000 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:23844\":[\"EPSG:23844\",\"+proj=tmerc +lat_0=0 +lon_0=136.5 +k=0.9999 +x_0=200000 +y_0=1500000 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:23845\":[\"EPSG:23845\",\"+proj=tmerc +lat_0=0 +lon_0=139.5 +k=0.9999 +x_0=200000 +y_0=1500000 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:23846\":[\"EPSG:23846\",\"+proj=utm +zone=46 +a=6378160 +b=6356774.50408554 +towgs84=-24,-15,5,0,0,0,0 +units=m +no_defs \"],\"EPSG:23847\":[\"EPSG:23847\",\"+proj=utm +zone=47 +a=6378160 +b=6356774.50408554 +towgs84=-24,-15,5,0,0,0,0 +units=m +no_defs \"],\"EPSG:23848\":[\"EPSG:23848\",\"+proj=utm +zone=48 +a=6378160 +b=6356774.50408554 +towgs84=-24,-15,5,0,0,0,0 +units=m +no_defs \"],\"EPSG:23849\":[\"EPSG:23849\",\"+proj=utm +zone=49 +a=6378160 +b=6356774.50408554 +towgs84=-24,-15,5,0,0,0,0 +units=m +no_defs \"],\"EPSG:23850\":[\"EPSG:23850\",\"+proj=utm +zone=50 +a=6378160 +b=6356774.50408554 +towgs84=-24,-15,5,0,0,0,0 +units=m +no_defs \"],\"EPSG:23851\":[\"EPSG:23851\",\"+proj=utm +zone=51 +a=6378160 +b=6356774.50408554 +towgs84=-24,-15,5,0,0,0,0 +units=m +no_defs \"],\"EPSG:23852\":[\"EPSG:23852\",\"+proj=utm +zone=52 +a=6378160 +b=6356774.50408554 +towgs84=-24,-15,5,0,0,0,0 +units=m +no_defs \"],\"EPSG:23853\":[\"EPSG:23853\",\"+proj=utm +zone=53 +a=6378160 +b=6356774.50408554 +towgs84=-24,-15,5,0,0,0,0 +units=m +no_defs \"],\"EPSG:23866\":[\"EPSG:23866\",\"+proj=utm +zone=46 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:23867\":[\"EPSG:23867\",\"+proj=utm +zone=47 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:23868\":[\"EPSG:23868\",\"+proj=utm +zone=48 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:23869\":[\"EPSG:23869\",\"+proj=utm +zone=49 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:23870\":[\"EPSG:23870\",\"+proj=utm +zone=50 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:23871\":[\"EPSG:23871\",\"+proj=utm +zone=51 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:23872\":[\"EPSG:23872\",\"+proj=utm +zone=52 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:23877\":[\"EPSG:23877\",\"+proj=utm +zone=47 +south +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:23878\":[\"EPSG:23878\",\"+proj=utm +zone=48 +south +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:23880\":[\"EPSG:23880\",\"+proj=utm +zone=50 +south +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:23881\":[\"EPSG:23881\",\"+proj=utm +zone=51 +south +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:23882\":[\"EPSG:23882\",\"+proj=utm +zone=52 +south +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:23883\":[\"EPSG:23883\",\"+proj=utm +zone=53 +south +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:23886\":[\"EPSG:23886\",\"+proj=utm +zone=46 +south +a=6378160 +b=6356774.50408554 +towgs84=-24,-15,5,0,0,0,0 +units=m +no_defs \"],\"EPSG:23887\":[\"EPSG:23887\",\"+proj=utm +zone=47 +south +a=6378160 +b=6356774.50408554 +towgs84=-24,-15,5,0,0,0,0 +units=m +no_defs \"],\"EPSG:23888\":[\"EPSG:23888\",\"+proj=utm +zone=48 +south +a=6378160 +b=6356774.50408554 +towgs84=-24,-15,5,0,0,0,0 +units=m +no_defs \"],\"EPSG:23889\":[\"EPSG:23889\",\"+proj=utm +zone=49 +south +a=6378160 +b=6356774.50408554 +towgs84=-24,-15,5,0,0,0,0 +units=m +no_defs \"],\"EPSG:23890\":[\"EPSG:23890\",\"+proj=utm +zone=50 +south +a=6378160 +b=6356774.50408554 +towgs84=-24,-15,5,0,0,0,0 +units=m +no_defs \"],\"EPSG:23891\":[\"EPSG:23891\",\"+proj=utm +zone=51 +south +a=6378160 +b=6356774.50408554 +towgs84=-24,-15,5,0,0,0,0 +units=m +no_defs \"],\"EPSG:23892\":[\"EPSG:23892\",\"+proj=utm +zone=52 +south +a=6378160 +b=6356774.50408554 +towgs84=-24,-15,5,0,0,0,0 +units=m +no_defs \"],\"EPSG:23893\":[\"EPSG:23893\",\"+proj=utm +zone=53 +south +a=6378160 +b=6356774.50408554 +towgs84=-24,-15,5,0,0,0,0 +units=m +no_defs \"],\"EPSG:23894\":[\"EPSG:23894\",\"+proj=utm +zone=54 +south +a=6378160 +b=6356774.50408554 +towgs84=-24,-15,5,0,0,0,0 +units=m +no_defs \"],\"EPSG:23946\":[\"EPSG:23946\",\"+proj=utm +zone=46 +a=6377276.345 +b=6356075.41314024 +towgs84=217,823,299,0,0,0,0 +units=m +no_defs \"],\"EPSG:23947\":[\"EPSG:23947\",\"+proj=utm +zone=47 +a=6377276.345 +b=6356075.41314024 +towgs84=217,823,299,0,0,0,0 +units=m +no_defs \"],\"EPSG:24100\":[\"EPSG:24100\",\"+proj=lcc +lat_1=18 +lat_0=18 +lon_0=-77 +k_0=1 +x_0=167638.49597 +y_0=121918.90616 +a=6378249.144808011 +b=6356514.966204134 +to_meter=0.3047972654 +no_defs \"],\"EPSG:24200\":[\"EPSG:24200\",\"+proj=lcc +lat_1=18 +lat_0=18 +lon_0=-77 +k_0=1 +x_0=250000 +y_0=150000 +ellps=clrk66 +towgs84=70,207,389.5,0,0,0,0 +units=m +no_defs \"],\"EPSG:24305\":[\"EPSG:24305\",\"+proj=utm +zone=45 +a=6377276.345 +b=6356075.41314024 +towgs84=214,804,268,0,0,0,0 +units=m +no_defs \"],\"EPSG:24306\":[\"EPSG:24306\",\"+proj=utm +zone=46 +a=6377276.345 +b=6356075.41314024 +towgs84=214,804,268,0,0,0,0 +units=m +no_defs \"],\"EPSG:5341\":[\"EPSG:5341\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:24311\":[\"EPSG:24311\",\"+proj=utm +zone=41 +a=6377301.243 +b=6356100.230165384 +towgs84=283,682,231,0,0,0,0 +units=m +no_defs \"],\"EPSG:24312\":[\"EPSG:24312\",\"+proj=utm +zone=42 +a=6377301.243 +b=6356100.230165384 +towgs84=283,682,231,0,0,0,0 +units=m +no_defs \"],\"EPSG:24313\":[\"EPSG:24313\",\"+proj=utm +zone=43 +a=6377301.243 +b=6356100.230165384 +towgs84=283,682,231,0,0,0,0 +units=m +no_defs \"],\"EPSG:24342\":[\"EPSG:24342\",\"+proj=utm +zone=42 +a=6377299.151 +b=6356098.145120132 +towgs84=295,736,257,0,0,0,0 +units=m +no_defs \"],\"EPSG:24343\":[\"EPSG:24343\",\"+proj=utm +zone=43 +a=6377299.151 +b=6356098.145120132 +towgs84=295,736,257,0,0,0,0 +units=m +no_defs \"],\"EPSG:24344\":[\"EPSG:24344\",\"+proj=utm +zone=44 +a=6377299.151 +b=6356098.145120132 +towgs84=295,736,257,0,0,0,0 +units=m +no_defs \"],\"EPSG:24345\":[\"EPSG:24345\",\"+proj=utm +zone=45 +a=6377299.151 +b=6356098.145120132 +towgs84=295,736,257,0,0,0,0 +units=m +no_defs \"],\"EPSG:24346\":[\"EPSG:24346\",\"+proj=utm +zone=46 +a=6377299.151 +b=6356098.145120132 +towgs84=295,736,257,0,0,0,0 +units=m +no_defs \"],\"EPSG:24347\":[\"EPSG:24347\",\"+proj=utm +zone=47 +a=6377299.151 +b=6356098.145120132 +towgs84=295,736,257,0,0,0,0 +units=m +no_defs \"],\"EPSG:24370\":[\"EPSG:24370\",\"+proj=lcc +lat_1=39.5 +lat_0=39.5 +lon_0=68 +k_0=0.99846154 +x_0=2153865.73916853 +y_0=2368292.194628102 +a=6377299.36559538 +b=6356098.359005156 +to_meter=0.9143985307444408 +no_defs \"],\"EPSG:24371\":[\"EPSG:24371\",\"+proj=lcc +lat_1=32.5 +lat_0=32.5 +lon_0=68 +k_0=0.99878641 +x_0=2743195.592233322 +y_0=914398.5307444407 +a=6377299.36559538 +b=6356098.359005156 +to_meter=0.9143985307444408 +no_defs \"],\"EPSG:24372\":[\"EPSG:24372\",\"+proj=lcc +lat_1=26 +lat_0=26 +lon_0=74 +k_0=0.99878641 +x_0=2743195.592233322 +y_0=914398.5307444407 +a=6377299.36559538 +b=6356098.359005156 +to_meter=0.9143985307444408 +no_defs \"],\"EPSG:24373\":[\"EPSG:24373\",\"+proj=lcc +lat_1=19 +lat_0=19 +lon_0=80 +k_0=0.99878641 +x_0=2743195.592233322 +y_0=914398.5307444407 +a=6377299.36559538 +b=6356098.359005156 +to_meter=0.9143985307444408 +no_defs \"],\"EPSG:24374\":[\"EPSG:24374\",\"+proj=lcc +lat_1=12 +lat_0=12 +lon_0=80 +k_0=0.99878641 +x_0=2743195.592233322 +y_0=914398.5307444407 +a=6377299.36559538 +b=6356098.359005156 +to_meter=0.9143985307444408 +no_defs \"],\"EPSG:24375\":[\"EPSG:24375\",\"+proj=lcc +lat_1=26 +lat_0=26 +lon_0=90 +k_0=0.99878641 +x_0=2743185.69 +y_0=914395.23 +a=6377276.345 +b=6356075.41314024 +towgs84=214,804,268,0,0,0,0 +units=m +no_defs \"],\"EPSG:24376\":[\"EPSG:24376\",\"+proj=lcc +lat_1=32.5 +lat_0=32.5 +lon_0=68 +k_0=0.99878641 +x_0=2743196.4 +y_0=914398.8 +a=6377301.243 +b=6356100.230165384 +towgs84=283,682,231,0,0,0,0 +units=m +no_defs \"],\"EPSG:24377\":[\"EPSG:24377\",\"+proj=lcc +lat_1=26 +lat_0=26 +lon_0=74 +k_0=0.99878641 +x_0=2743196.4 +y_0=914398.8 +a=6377301.243 +b=6356100.230165384 +towgs84=283,682,231,0,0,0,0 +units=m +no_defs \"],\"EPSG:24378\":[\"EPSG:24378\",\"+proj=lcc +lat_1=32.5 +lat_0=32.5 +lon_0=68 +k_0=0.99878641 +x_0=2743195.5 +y_0=914398.5 +a=6377299.151 +b=6356098.145120132 +towgs84=295,736,257,0,0,0,0 +units=m +no_defs \"],\"EPSG:24379\":[\"EPSG:24379\",\"+proj=lcc +lat_1=26 +lat_0=26 +lon_0=74 +k_0=0.99878641 +x_0=2743195.5 +y_0=914398.5 +a=6377299.151 +b=6356098.145120132 +towgs84=295,736,257,0,0,0,0 +units=m +no_defs \"],\"EPSG:24380\":[\"EPSG:24380\",\"+proj=lcc +lat_1=26 +lat_0=26 +lon_0=90 +k_0=0.99878641 +x_0=2743195.5 +y_0=914398.5 +a=6377299.151 +b=6356098.145120132 +towgs84=295,736,257,0,0,0,0 +units=m +no_defs \"],\"EPSG:24381\":[\"EPSG:24381\",\"+proj=lcc +lat_1=19 +lat_0=19 +lon_0=80 +k_0=0.99878641 +x_0=2743195.5 +y_0=914398.5 +a=6377299.151 +b=6356098.145120132 +towgs84=295,736,257,0,0,0,0 +units=m +no_defs \"],\"EPSG:24382\":[\"EPSG:24382\",\"+proj=lcc +lat_1=26 +lat_0=26 +lon_0=90 +k_0=0.99878641 +x_0=2743195.592233322 +y_0=914398.5307444407 +a=6377299.36559538 +b=6356098.359005156 +to_meter=0.9143985307444408 +no_defs \"],\"EPSG:24383\":[\"EPSG:24383\",\"+proj=lcc +lat_1=12 +lat_0=12 +lon_0=80 +k_0=0.99878641 +x_0=2743195.5 +y_0=914398.5 +a=6377299.151 +b=6356098.145120132 +towgs84=295,736,257,0,0,0,0 +units=m +no_defs \"],\"EPSG:24500\":[\"EPSG:24500\",\"+proj=cass +lat_0=1.287646666666667 +lon_0=103.8530022222222 +x_0=30000 +y_0=30000 +a=6377304.063 +b=6356103.038993155 +towgs84=-11,851,5,0,0,0,0 +units=m +no_defs \"],\"EPSG:24547\":[\"EPSG:24547\",\"+proj=utm +zone=47 +a=6377304.063 +b=6356103.038993155 +towgs84=-11,851,5,0,0,0,0 +units=m +no_defs \"],\"EPSG:24548\":[\"EPSG:24548\",\"+proj=utm +zone=48 +a=6377304.063 +b=6356103.038993155 +towgs84=-11,851,5,0,0,0,0 +units=m +no_defs \"],\"EPSG:24600\":[\"EPSG:24600\",\"+proj=lcc +lat_1=32.5 +lat_0=32.5 +lon_0=45 +k_0=0.9987864078000001 +x_0=1500000 +y_0=1166200 +ellps=clrk80 +towgs84=-294.7,-200.1,525.5,0,0,0,0 +units=m +no_defs \"],\"EPSG:24718\":[\"EPSG:24718\",\"+proj=utm +zone=18 +ellps=intl +towgs84=-273.5,110.6,-357.9,0,0,0,0 +units=m +no_defs \"],\"EPSG:24720\":[\"EPSG:24720\",\"+proj=utm +zone=20 +ellps=intl +towgs84=-273.5,110.6,-357.9,0,0,0,0 +units=m +no_defs \"],\"EPSG:24817\":[\"EPSG:24817\",\"+proj=utm +zone=17 +ellps=intl +towgs84=-288,175,-376,0,0,0,0 +units=m +no_defs \"],\"EPSG:24818\":[\"EPSG:24818\",\"+proj=utm +zone=18 +ellps=intl +towgs84=-288,175,-376,0,0,0,0 +units=m +no_defs \"],\"EPSG:24819\":[\"EPSG:24819\",\"+proj=utm +zone=19 +ellps=intl +towgs84=-288,175,-376,0,0,0,0 +units=m +no_defs \"],\"EPSG:24820\":[\"EPSG:24820\",\"+proj=utm +zone=20 +ellps=intl +towgs84=-288,175,-376,0,0,0,0 +units=m +no_defs \"],\"EPSG:5352\":[\"EPSG:5352\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:24821\":[\"EPSG:24821\",\"+proj=utm +zone=21 +ellps=intl +towgs84=-288,175,-376,0,0,0,0 +units=m +no_defs \"],\"EPSG:24877\":[\"EPSG:24877\",\"+proj=utm +zone=17 +south +ellps=intl +towgs84=-288,175,-376,0,0,0,0 +units=m +no_defs \"],\"EPSG:24878\":[\"EPSG:24878\",\"+proj=utm +zone=18 +south +ellps=intl +towgs84=-288,175,-376,0,0,0,0 +units=m +no_defs \"],\"EPSG:24879\":[\"EPSG:24879\",\"+proj=utm +zone=19 +south +ellps=intl +towgs84=-288,175,-376,0,0,0,0 +units=m +no_defs \"],\"EPSG:24880\":[\"EPSG:24880\",\"+proj=utm +zone=20 +south +ellps=intl +towgs84=-288,175,-376,0,0,0,0 +units=m +no_defs \"],\"EPSG:24881\":[\"EPSG:24881\",\"+proj=utm +zone=21 +south +ellps=intl +towgs84=-288,175,-376,0,0,0,0 +units=m +no_defs \"],\"EPSG:24882\":[\"EPSG:24882\",\"+proj=utm +zone=22 +south +ellps=intl +towgs84=-288,175,-376,0,0,0,0 +units=m +no_defs \"],\"EPSG:24891\":[\"EPSG:24891\",\"+proj=tmerc +lat_0=-6 +lon_0=-80.5 +k=0.99983008 +x_0=222000 +y_0=1426834.743 +ellps=intl +towgs84=-288,175,-376,0,0,0,0 +units=m +no_defs \"],\"EPSG:24892\":[\"EPSG:24892\",\"+proj=tmerc +lat_0=-9.5 +lon_0=-76 +k=0.99932994 +x_0=720000 +y_0=1039979.159 +ellps=intl +towgs84=-288,175,-376,0,0,0,0 +units=m +no_defs \"],\"EPSG:24893\":[\"EPSG:24893\",\"+proj=tmerc +lat_0=-9.5 +lon_0=-70.5 +k=0.99952992 +x_0=1324000 +y_0=1040084.558 +ellps=intl +towgs84=-288,175,-376,0,0,0,0 +units=m +no_defs \"],\"EPSG:25000\":[\"EPSG:25000\",\"+proj=tmerc +lat_0=4.666666666666667 +lon_0=-1 +k=0.99975 +x_0=274319.51 +y_0=0 +ellps=clrk80 +towgs84=-130,29,364,0,0,0,0 +units=m +no_defs \"],\"EPSG:25231\":[\"EPSG:25231\",\"+proj=utm +zone=31 +a=6378249.2 +b=6356515 +units=m +no_defs \"],\"EPSG:25391\":[\"EPSG:25391\",\"+proj=tmerc +lat_0=0 +lon_0=117 +k=0.99995 +x_0=500000 +y_0=0 +ellps=clrk66 +towgs84=-133,-77,-51,0,0,0,0 +units=m +no_defs \"],\"EPSG:25392\":[\"EPSG:25392\",\"+proj=tmerc +lat_0=0 +lon_0=119 +k=0.99995 +x_0=500000 +y_0=0 +ellps=clrk66 +towgs84=-133,-77,-51,0,0,0,0 +units=m +no_defs \"],\"EPSG:25393\":[\"EPSG:25393\",\"+proj=tmerc +lat_0=0 +lon_0=121 +k=0.99995 +x_0=500000 +y_0=0 +ellps=clrk66 +towgs84=-133,-77,-51,0,0,0,0 +units=m +no_defs \"],\"EPSG:25394\":[\"EPSG:25394\",\"+proj=tmerc +lat_0=0 +lon_0=123 +k=0.99995 +x_0=500000 +y_0=0 +ellps=clrk66 +towgs84=-133,-77,-51,0,0,0,0 +units=m +no_defs \"],\"EPSG:25395\":[\"EPSG:25395\",\"+proj=tmerc +lat_0=0 +lon_0=125 +k=0.99995 +x_0=500000 +y_0=0 +ellps=clrk66 +towgs84=-133,-77,-51,0,0,0,0 +units=m +no_defs \"],\"EPSG:25700\":[\"EPSG:25700\",\"+proj=merc +lon_0=110 +k=0.997 +x_0=3900000 +y_0=900000 +ellps=bessel +towgs84=-587.8,519.75,145.76,0,0,0,0 +pm=jakarta +units=m +no_defs \"],\"EPSG:25834\":[\"EPSG:25834\",\"+proj=utm +zone=34 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:25836\":[\"EPSG:25836\",\"+proj=utm +zone=36 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:25837\":[\"EPSG:25837\",\"+proj=utm +zone=37 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:25838\":[\"EPSG:25838\",\"+proj=utm +zone=38 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:25884\":[\"EPSG:25884\",\"+proj=tmerc +lat_0=0 +lon_0=24 +k=0.9996 +x_0=500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:25932\":[\"EPSG:25932\",\"+proj=utm +zone=32 +south +ellps=intl +towgs84=-254.1,-5.36,-100.29,0,0,0,0 +units=m +no_defs \"],\"EPSG:26193\":[\"EPSG:26193\",\"+proj=lcc +lat_1=26.1 +lat_0=26.1 +lon_0=-5.4 +k_0=0.9996 +x_0=1200000 +y_0=400000 +a=6378249.2 +b=6356515 +towgs84=31,146,47,0,0,0,0 +units=m +no_defs \"],\"EPSG:26194\":[\"EPSG:26194\",\"+proj=lcc +lat_1=26.1 +lat_0=26.1 +lon_0=-5.4 +k_0=0.999616304 +x_0=1200000 +y_0=400000 +a=6378249.2 +b=6356515 +towgs84=31,146,47,0,0,0,0 +units=m +no_defs \"],\"EPSG:26195\":[\"EPSG:26195\",\"+proj=lcc +lat_1=22.5 +lat_0=22.5 +lon_0=-5.4 +k_0=0.999616437 +x_0=1500000 +y_0=400000 +a=6378249.2 +b=6356515 +towgs84=31,146,47,0,0,0,0 +units=m +no_defs \"],\"EPSG:26237\":[\"EPSG:26237\",\"+proj=utm +zone=37 +ellps=bessel +towgs84=639,405,60,0,0,0,0 +units=m +no_defs \"],\"EPSG:26332\":[\"EPSG:26332\",\"+proj=utm +zone=32 +ellps=clrk80 +towgs84=-92,-93,122,0,0,0,0 +units=m +no_defs \"],\"EPSG:26391\":[\"EPSG:26391\",\"+proj=tmerc +lat_0=4 +lon_0=4.5 +k=0.99975 +x_0=230738.26 +y_0=0 +ellps=clrk80 +towgs84=-92,-93,122,0,0,0,0 +units=m +no_defs \"],\"EPSG:26392\":[\"EPSG:26392\",\"+proj=tmerc +lat_0=4 +lon_0=8.5 +k=0.99975 +x_0=670553.98 +y_0=0 +ellps=clrk80 +towgs84=-92,-93,122,0,0,0,0 +units=m +no_defs \"],\"EPSG:26393\":[\"EPSG:26393\",\"+proj=tmerc +lat_0=4 +lon_0=12.5 +k=0.99975 +x_0=1110369.7 +y_0=0 +ellps=clrk80 +towgs84=-92,-93,122,0,0,0,0 +units=m +no_defs \"],\"EPSG:26432\":[\"EPSG:26432\",\"+proj=utm +zone=32 +south +ellps=intl +towgs84=-252.95,-4.11,-96.38,0,0,0,0 +units=m +no_defs \"],\"EPSG:26592\":[\"EPSG:26592\",\"+proj=tmerc +lat_0=0 +lon_0=2.54766666666666 +k=0.9996 +x_0=2520000 +y_0=0 +ellps=intl +towgs84=-104.1,-49.1,-9.9,0.971,-2.917,0.714,-11.68 +pm=rome +units=m +no_defs \"],\"EPSG:26632\":[\"EPSG:26632\",\"+proj=utm +zone=32 +a=6378249.2 +b=6356515 +towgs84=-74,-130,42,0,0,0,0 +units=m +no_defs \"],\"EPSG:26692\":[\"EPSG:26692\",\"+proj=utm +zone=32 +south +a=6378249.2 +b=6356515 +towgs84=-74,-130,42,0,0,0,0 +units=m +no_defs \"],\"EPSG:26701\":[\"EPSG:26701\",\"+proj=utm +zone=1 +datum=NAD27 +units=m +no_defs \"],\"EPSG:26703\":[\"EPSG:26703\",\"+proj=utm +zone=3 +datum=NAD27 +units=m +no_defs \"],\"EPSG:26704\":[\"EPSG:26704\",\"+proj=utm +zone=4 +datum=NAD27 +units=m +no_defs \"],\"EPSG:26706\":[\"EPSG:26706\",\"+proj=utm +zone=6 +datum=NAD27 +units=m +no_defs \"],\"EPSG:26707\":[\"EPSG:26707\",\"+proj=utm +zone=7 +datum=NAD27 +units=m +no_defs \"],\"EPSG:26708\":[\"EPSG:26708\",\"+proj=utm +zone=8 +datum=NAD27 +units=m +no_defs \"],\"EPSG:26709\":[\"EPSG:26709\",\"+proj=utm +zone=9 +datum=NAD27 +units=m +no_defs \"],\"EPSG:26720\":[\"EPSG:26720\",\"+proj=utm +zone=20 +datum=NAD27 +units=m +no_defs \"],\"EPSG:26721\":[\"EPSG:26721\",\"+proj=utm +zone=21 +datum=NAD27 +units=m +no_defs \"],\"EPSG:26722\":[\"EPSG:26722\",\"+proj=utm +zone=22 +datum=NAD27 +units=m +no_defs \"],\"EPSG:26729\":[\"EPSG:26729\",\"+proj=tmerc +lat_0=30.5 +lon_0=-85.83333333333333 +k=0.99996 +x_0=152400.3048006096 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:26731\":[\"EPSG:26731\",\"+proj=omerc +lat_0=57 +lonc=-133.6666666666667 +alpha=323.1301023611111 +k=0.9999 +x_0=5000000.001016002 +y_0=-5000000.001016002 +no_uoff +gamma=323.1301023611111 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:26732\":[\"EPSG:26732\",\"+proj=tmerc +lat_0=54 +lon_0=-142 +k=0.9999 +x_0=152400.3048006096 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:26733\":[\"EPSG:26733\",\"+proj=tmerc +lat_0=54 +lon_0=-146 +k=0.9999 +x_0=152400.3048006096 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:26734\":[\"EPSG:26734\",\"+proj=tmerc +lat_0=54 +lon_0=-150 +k=0.9999 +x_0=152400.3048006096 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:26735\":[\"EPSG:26735\",\"+proj=tmerc +lat_0=54 +lon_0=-154 +k=0.9999 +x_0=152400.3048006096 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:26736\":[\"EPSG:26736\",\"+proj=tmerc +lat_0=54 +lon_0=-158 +k=0.9999 +x_0=152400.3048006096 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:26737\":[\"EPSG:26737\",\"+proj=tmerc +lat_0=54 +lon_0=-162 +k=0.9999 +x_0=213360.4267208534 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:26738\":[\"EPSG:26738\",\"+proj=tmerc +lat_0=54 +lon_0=-166 +k=0.9999 +x_0=152400.3048006096 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:26739\":[\"EPSG:26739\",\"+proj=tmerc +lat_0=54 +lon_0=-170 +k=0.9999 +x_0=182880.3657607315 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:26740\":[\"EPSG:26740\",\"+proj=lcc +lat_1=53.83333333333334 +lat_2=51.83333333333334 +lat_0=51 +lon_0=-176 +x_0=914401.8288036576 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:26741\":[\"EPSG:26741\",\"+proj=lcc +lat_1=41.66666666666666 +lat_2=40 +lat_0=39.33333333333334 +lon_0=-122 +x_0=609601.2192024384 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:26742\":[\"EPSG:26742\",\"+proj=lcc +lat_1=39.83333333333334 +lat_2=38.33333333333334 +lat_0=37.66666666666666 +lon_0=-122 +x_0=609601.2192024384 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:26743\":[\"EPSG:26743\",\"+proj=lcc +lat_1=38.43333333333333 +lat_2=37.06666666666667 +lat_0=36.5 +lon_0=-120.5 +x_0=609601.2192024384 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:26744\":[\"EPSG:26744\",\"+proj=lcc +lat_1=37.25 +lat_2=36 +lat_0=35.33333333333334 +lon_0=-119 +x_0=609601.2192024384 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:26745\":[\"EPSG:26745\",\"+proj=lcc +lat_1=35.46666666666667 +lat_2=34.03333333333333 +lat_0=33.5 +lon_0=-118 +x_0=609601.2192024384 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:26746\":[\"EPSG:26746\",\"+proj=lcc +lat_1=33.88333333333333 +lat_2=32.78333333333333 +lat_0=32.16666666666666 +lon_0=-116.25 +x_0=609601.2192024384 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:26747\":[\"EPSG:26747\",\"+proj=lcc +lat_1=34.41666666666666 +lat_2=33.86666666666667 +lat_0=34.13333333333333 +lon_0=-118.3333333333333 +x_0=1276106.450596901 +y_0=127079.524511049 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:5358\":[\"EPSG:5358\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:26748\":[\"EPSG:26748\",\"+proj=tmerc +lat_0=31 +lon_0=-110.1666666666667 +k=0.9999 +x_0=152400.3048006096 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:26749\":[\"EPSG:26749\",\"+proj=tmerc +lat_0=31 +lon_0=-111.9166666666667 +k=0.9999 +x_0=152400.3048006096 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:26750\":[\"EPSG:26750\",\"+proj=tmerc +lat_0=31 +lon_0=-113.75 +k=0.999933333 +x_0=152400.3048006096 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:26751\":[\"EPSG:26751\",\"+proj=lcc +lat_1=36.23333333333333 +lat_2=34.93333333333333 +lat_0=34.33333333333334 +lon_0=-92 +x_0=609601.2192024384 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:26752\":[\"EPSG:26752\",\"+proj=lcc +lat_1=34.76666666666667 +lat_2=33.3 +lat_0=32.66666666666666 +lon_0=-92 +x_0=609601.2192024384 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:26754\":[\"EPSG:26754\",\"+proj=lcc +lat_1=39.75 +lat_2=38.45 +lat_0=37.83333333333334 +lon_0=-105.5 +x_0=609601.2192024384 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:26755\":[\"EPSG:26755\",\"+proj=lcc +lat_1=38.43333333333333 +lat_2=37.23333333333333 +lat_0=36.66666666666666 +lon_0=-105.5 +x_0=609601.2192024384 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:26756\":[\"EPSG:26756\",\"+proj=lcc +lat_1=41.86666666666667 +lat_2=41.2 +lat_0=40.83333333333334 +lon_0=-72.75 +x_0=182880.3657607315 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:26757\":[\"EPSG:26757\",\"+proj=tmerc +lat_0=38 +lon_0=-75.41666666666667 +k=0.999995 +x_0=152400.3048006096 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:26758\":[\"EPSG:26758\",\"+proj=tmerc +lat_0=24.33333333333333 +lon_0=-81 +k=0.999941177 +x_0=152400.3048006096 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:26759\":[\"EPSG:26759\",\"+proj=tmerc +lat_0=24.33333333333333 +lon_0=-82 +k=0.999941177 +x_0=152400.3048006096 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:26760\":[\"EPSG:26760\",\"+proj=lcc +lat_1=30.75 +lat_2=29.58333333333333 +lat_0=29 +lon_0=-84.5 +x_0=609601.2192024384 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:26766\":[\"EPSG:26766\",\"+proj=tmerc +lat_0=30 +lon_0=-82.16666666666667 +k=0.9999 +x_0=152400.3048006096 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:26767\":[\"EPSG:26767\",\"+proj=tmerc +lat_0=30 +lon_0=-84.16666666666667 +k=0.9999 +x_0=152400.3048006096 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:26768\":[\"EPSG:26768\",\"+proj=tmerc +lat_0=41.66666666666666 +lon_0=-112.1666666666667 +k=0.9999473679999999 +x_0=152400.3048006096 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:26769\":[\"EPSG:26769\",\"+proj=tmerc +lat_0=41.66666666666666 +lon_0=-114 +k=0.9999473679999999 +x_0=152400.3048006096 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:26770\":[\"EPSG:26770\",\"+proj=tmerc +lat_0=41.66666666666666 +lon_0=-115.75 +k=0.999933333 +x_0=152400.3048006096 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:5363\":[\"EPSG:5363\",\"+proj=geocent +ellps=WGS84 +units=m +no_defs \"],\"EPSG:26772\":[\"EPSG:26772\",\"+proj=tmerc +lat_0=36.66666666666666 +lon_0=-90.16666666666667 +k=0.999941177 +x_0=152400.3048006096 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:26773\":[\"EPSG:26773\",\"+proj=tmerc +lat_0=37.5 +lon_0=-85.66666666666667 +k=0.999966667 +x_0=152400.3048006096 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:26774\":[\"EPSG:26774\",\"+proj=tmerc +lat_0=37.5 +lon_0=-87.08333333333333 +k=0.999966667 +x_0=152400.3048006096 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:26775\":[\"EPSG:26775\",\"+proj=lcc +lat_1=43.26666666666667 +lat_2=42.06666666666667 +lat_0=41.5 +lon_0=-93.5 +x_0=609601.2192024384 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:26776\":[\"EPSG:26776\",\"+proj=lcc +lat_1=41.78333333333333 +lat_2=40.61666666666667 +lat_0=40 +lon_0=-93.5 +x_0=609601.2192024384 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:26777\":[\"EPSG:26777\",\"+proj=lcc +lat_1=39.78333333333333 +lat_2=38.71666666666667 +lat_0=38.33333333333334 +lon_0=-98 +x_0=609601.2192024384 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:26779\":[\"EPSG:26779\",\"+proj=lcc +lat_1=37.96666666666667 +lat_2=38.96666666666667 +lat_0=37.5 +lon_0=-84.25 +x_0=609601.2192024384 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:26780\":[\"EPSG:26780\",\"+proj=lcc +lat_1=36.73333333333333 +lat_2=37.93333333333333 +lat_0=36.33333333333334 +lon_0=-85.75 +x_0=609601.2192024384 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:26781\":[\"EPSG:26781\",\"+proj=lcc +lat_1=31.16666666666667 +lat_2=32.66666666666666 +lat_0=30.66666666666667 +lon_0=-92.5 +x_0=609601.2192024384 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:26782\":[\"EPSG:26782\",\"+proj=lcc +lat_1=29.3 +lat_2=30.7 +lat_0=28.66666666666667 +lon_0=-91.33333333333333 +x_0=609601.2192024384 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:26783\":[\"EPSG:26783\",\"+proj=tmerc +lat_0=43.83333333333334 +lon_0=-68.5 +k=0.9999 +x_0=152400.3048006096 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:26784\":[\"EPSG:26784\",\"+proj=tmerc +lat_0=42.83333333333334 +lon_0=-70.16666666666667 +k=0.999966667 +x_0=152400.3048006096 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:26786\":[\"EPSG:26786\",\"+proj=lcc +lat_1=41.71666666666667 +lat_2=42.68333333333333 +lat_0=41 +lon_0=-71.5 +x_0=182880.3657607315 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:26787\":[\"EPSG:26787\",\"+proj=lcc +lat_1=41.28333333333333 +lat_2=41.48333333333333 +lat_0=41 +lon_0=-70.5 +x_0=60960.12192024384 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:26893\":[\"EPSG:26893\",\"+proj=tmerc +lat_0=0 +lon_0=-84 +k=0.9999 +x_0=304800 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:26791\":[\"EPSG:26791\",\"+proj=lcc +lat_1=47.03333333333333 +lat_2=48.63333333333333 +lat_0=46.5 +lon_0=-93.09999999999999 +x_0=609601.2192024384 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:26792\":[\"EPSG:26792\",\"+proj=lcc +lat_1=45.61666666666667 +lat_2=47.05 +lat_0=45 +lon_0=-94.25 +x_0=609601.2192024384 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:26793\":[\"EPSG:26793\",\"+proj=lcc +lat_1=43.78333333333333 +lat_2=45.21666666666667 +lat_0=43 +lon_0=-94 +x_0=609601.2192024384 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:26794\":[\"EPSG:26794\",\"+proj=tmerc +lat_0=29.66666666666667 +lon_0=-88.83333333333333 +k=0.99996 +x_0=152400.3048006096 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:26795\":[\"EPSG:26795\",\"+proj=tmerc +lat_0=30.5 +lon_0=-90.33333333333333 +k=0.999941177 +x_0=152400.3048006096 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:26796\":[\"EPSG:26796\",\"+proj=tmerc +lat_0=35.83333333333334 +lon_0=-90.5 +k=0.999933333 +x_0=152400.3048006096 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:26797\":[\"EPSG:26797\",\"+proj=tmerc +lat_0=35.83333333333334 +lon_0=-92.5 +k=0.999933333 +x_0=152400.3048006096 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:26798\":[\"EPSG:26798\",\"+proj=tmerc +lat_0=36.16666666666666 +lon_0=-94.5 +k=0.999941177 +x_0=152400.3048006096 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:26799\":[\"EPSG:26799\",\"+proj=lcc +lat_1=34.41666666666666 +lat_2=33.86666666666667 +lat_0=34.13333333333333 +lon_0=-118.3333333333333 +x_0=1276106.450596901 +y_0=1268253.006858014 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:26801\":[\"EPSG:26801\",\"+proj=tmerc +lat_0=41.5 +lon_0=-83.66666666666667 +k=0.999942857 +x_0=152400.3048006096 +y_0=0 +a=6378450.047548896 +b=6356826.621488444 +units=us-ft +no_defs \"],\"EPSG:26802\":[\"EPSG:26802\",\"+proj=tmerc +lat_0=41.5 +lon_0=-85.75 +k=0.999909091 +x_0=152400.3048006096 +y_0=0 +a=6378450.047548896 +b=6356826.621488444 +units=us-ft +no_defs \"],\"EPSG:26803\":[\"EPSG:26803\",\"+proj=tmerc +lat_0=41.5 +lon_0=-88.75 +k=0.999909091 +x_0=152400.3048006096 +y_0=0 +a=6378450.047548896 +b=6356826.621488444 +units=us-ft +no_defs \"],\"EPSG:26811\":[\"EPSG:26811\",\"+proj=lcc +lat_1=45.48333333333333 +lat_2=47.08333333333334 +lat_0=44.78333333333333 +lon_0=-87 +x_0=609601.2192024384 +y_0=0 +a=6378450.047548896 +b=6356826.621488444 +units=us-ft +no_defs \"],\"EPSG:26812\":[\"EPSG:26812\",\"+proj=lcc +lat_1=44.18333333333333 +lat_2=45.7 +lat_0=43.31666666666667 +lon_0=-84.33333333333333 +x_0=609601.2192024384 +y_0=0 +a=6378450.047548896 +b=6356826.621488444 +units=us-ft +no_defs \"],\"EPSG:26813\":[\"EPSG:26813\",\"+proj=lcc +lat_1=42.1 +lat_2=43.66666666666666 +lat_0=41.5 +lon_0=-84.33333333333333 +x_0=609601.2192024384 +y_0=0 +a=6378450.047548896 +b=6356826.621488444 +units=us-ft +no_defs \"],\"EPSG:26814\":[\"EPSG:26814\",\"+proj=tmerc +lat_0=43.66666666666666 +lon_0=-68.5 +k=0.9999 +x_0=300000 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:26815\":[\"EPSG:26815\",\"+proj=tmerc +lat_0=42.83333333333334 +lon_0=-70.16666666666667 +k=0.999966667 +x_0=900000 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:26905\":[\"EPSG:26905\",\"+proj=utm +zone=5 +datum=NAD83 +units=m +no_defs \"],\"EPSG:26819\":[\"EPSG:26819\",\"+proj=lcc +lat_1=48.63333333333333 +lat_2=47.03333333333333 +lat_0=46.5 +lon_0=-93.09999999999999 +x_0=800000.0000101601 +y_0=99999.99998984 +datum=NAD83 +units=m +no_defs \"],\"EPSG:26820\":[\"EPSG:26820\",\"+proj=lcc +lat_1=47.05 +lat_2=45.61666666666667 +lat_0=45 +lon_0=-94.25 +x_0=800000.0000101601 +y_0=99999.99998984 +datum=NAD83 +units=m +no_defs \"],\"EPSG:26821\":[\"EPSG:26821\",\"+proj=lcc +lat_1=45.21666666666667 +lat_2=43.78333333333333 +lat_0=43 +lon_0=-94 +x_0=800000.0000101601 +y_0=99999.99998984 +datum=NAD83 +units=m +no_defs \"],\"EPSG:26822\":[\"EPSG:26822\",\"+proj=lcc +lat_1=43 +lat_2=40 +lat_0=39.83333333333334 +lon_0=-100 +x_0=500000.0000101601 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:26823\":[\"EPSG:26823\",\"+proj=lcc +lat_1=40.25 +lat_2=39 +lat_0=38.5 +lon_0=-79.5 +x_0=1968500 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:26824\":[\"EPSG:26824\",\"+proj=lcc +lat_1=38.88333333333333 +lat_2=37.48333333333333 +lat_0=37 +lon_0=-81 +x_0=1968500 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:26825\":[\"EPSG:26825\",\"+proj=tmerc +lat_0=43.66666666666666 +lon_0=-68.5 +k=0.9999 +x_0=300000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:26826\":[\"EPSG:26826\",\"+proj=tmerc +lat_0=42.83333333333334 +lon_0=-70.16666666666667 +k=0.999966667 +x_0=900000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:26906\":[\"EPSG:26906\",\"+proj=utm +zone=6 +datum=NAD83 +units=m +no_defs \"],\"EPSG:26830\":[\"EPSG:26830\",\"+proj=lcc +lat_1=48.63333333333333 +lat_2=47.03333333333333 +lat_0=46.5 +lon_0=-93.09999999999999 +x_0=800000.0000101601 +y_0=99999.99998984 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:26831\":[\"EPSG:26831\",\"+proj=lcc +lat_1=47.05 +lat_2=45.61666666666667 +lat_0=45 +lon_0=-94.25 +x_0=800000.0000101601 +y_0=99999.99998984 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:26832\":[\"EPSG:26832\",\"+proj=lcc +lat_1=45.21666666666667 +lat_2=43.78333333333333 +lat_0=43 +lon_0=-94 +x_0=800000.0000101601 +y_0=99999.99998984 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:26833\":[\"EPSG:26833\",\"+proj=lcc +lat_1=43 +lat_2=40 +lat_0=39.83333333333334 +lon_0=-100 +x_0=500000.0000101601 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:26834\":[\"EPSG:26834\",\"+proj=lcc +lat_1=40.25 +lat_2=39 +lat_0=38.5 +lon_0=-79.5 +x_0=1968500 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:26835\":[\"EPSG:26835\",\"+proj=lcc +lat_1=38.88333333333333 +lat_2=37.48333333333333 +lat_0=37 +lon_0=-81 +x_0=1968500 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:26836\":[\"EPSG:26836\",\"+proj=tmerc +lat_0=43.66666666666666 +lon_0=-68.5 +k=0.9999 +x_0=300000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:26837\":[\"EPSG:26837\",\"+proj=tmerc +lat_0=42.83333333333334 +lon_0=-70.16666666666667 +k=0.999966667 +x_0=900000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5368\":[\"EPSG:5368\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:26841\":[\"EPSG:26841\",\"+proj=lcc +lat_1=48.63333333333333 +lat_2=47.03333333333333 +lat_0=46.5 +lon_0=-93.09999999999999 +x_0=800000.0000101601 +y_0=99999.99998984 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:26842\":[\"EPSG:26842\",\"+proj=lcc +lat_1=47.05 +lat_2=45.61666666666667 +lat_0=45 +lon_0=-94.25 +x_0=800000.0000101601 +y_0=99999.99998984 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:26843\":[\"EPSG:26843\",\"+proj=lcc +lat_1=45.21666666666667 +lat_2=43.78333333333333 +lat_0=43 +lon_0=-94 +x_0=800000.0000101601 +y_0=99999.99998984 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:26844\":[\"EPSG:26844\",\"+proj=lcc +lat_1=43 +lat_2=40 +lat_0=39.83333333333334 +lon_0=-100 +x_0=500000.0000101601 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:26845\":[\"EPSG:26845\",\"+proj=lcc +lat_1=40.25 +lat_2=39 +lat_0=38.5 +lon_0=-79.5 +x_0=1968500 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:26846\":[\"EPSG:26846\",\"+proj=lcc +lat_1=38.88333333333333 +lat_2=37.48333333333333 +lat_0=37 +lon_0=-81 +x_0=1968500 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:26847\":[\"EPSG:26847\",\"+proj=tmerc +lat_0=43.66666666666666 +lon_0=-68.5 +k=0.9999 +x_0=300000.0000000001 +y_0=0 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:26848\":[\"EPSG:26848\",\"+proj=tmerc +lat_0=42.83333333333334 +lon_0=-70.16666666666667 +k=0.999966667 +x_0=900000 +y_0=0 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:5369\":[\"EPSG:5369\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:26849\":[\"EPSG:26849\",\"+proj=lcc +lat_1=48.63333333333333 +lat_2=47.03333333333333 +lat_0=46.5 +lon_0=-93.09999999999999 +x_0=800000.0000101599 +y_0=99999.99998983997 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:26850\":[\"EPSG:26850\",\"+proj=lcc +lat_1=47.05 +lat_2=45.61666666666667 +lat_0=45 +lon_0=-94.25 +x_0=800000.0000101599 +y_0=99999.99998983997 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:26851\":[\"EPSG:26851\",\"+proj=lcc +lat_1=45.21666666666667 +lat_2=43.78333333333333 +lat_0=43 +lon_0=-94 +x_0=800000.0000101599 +y_0=99999.99998983997 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:26852\":[\"EPSG:26852\",\"+proj=lcc +lat_1=43 +lat_2=40 +lat_0=39.83333333333334 +lon_0=-100 +x_0=500000.00001016 +y_0=0 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:26853\":[\"EPSG:26853\",\"+proj=lcc +lat_1=40.25 +lat_2=39 +lat_0=38.5 +lon_0=-79.5 +x_0=600000 +y_0=0 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:26854\":[\"EPSG:26854\",\"+proj=lcc +lat_1=38.88333333333333 +lat_2=37.48333333333333 +lat_0=37 +lon_0=-81 +x_0=600000 +y_0=0 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:26855\":[\"EPSG:26855\",\"+proj=tmerc +lat_0=43.66666666666666 +lon_0=-68.5 +k=0.9999 +x_0=300000.0000000001 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:26856\":[\"EPSG:26856\",\"+proj=tmerc +lat_0=42.83333333333334 +lon_0=-70.16666666666667 +k=0.999966667 +x_0=900000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:5379\":[\"EPSG:5379\",\"+proj=geocent +ellps=WGS84 +units=m +no_defs \"],\"EPSG:26857\":[\"EPSG:26857\",\"+proj=lcc +lat_1=48.63333333333333 +lat_2=47.03333333333333 +lat_0=46.5 +lon_0=-93.09999999999999 +x_0=800000.0000101599 +y_0=99999.99998983997 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:26858\":[\"EPSG:26858\",\"+proj=lcc +lat_1=47.05 +lat_2=45.61666666666667 +lat_0=45 +lon_0=-94.25 +x_0=800000.0000101599 +y_0=99999.99998983997 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:26859\":[\"EPSG:26859\",\"+proj=lcc +lat_1=45.21666666666667 +lat_2=43.78333333333333 +lat_0=43 +lon_0=-94 +x_0=800000.0000101599 +y_0=99999.99998983997 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:26860\":[\"EPSG:26860\",\"+proj=lcc +lat_1=43 +lat_2=40 +lat_0=39.83333333333334 +lon_0=-100 +x_0=500000.00001016 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:26861\":[\"EPSG:26861\",\"+proj=lcc +lat_1=40.25 +lat_2=39 +lat_0=38.5 +lon_0=-79.5 +x_0=600000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:26862\":[\"EPSG:26862\",\"+proj=lcc +lat_1=38.88333333333333 +lat_2=37.48333333333333 +lat_0=37 +lon_0=-81 +x_0=600000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:26863\":[\"EPSG:26863\",\"+proj=tmerc +lat_0=43.66666666666666 +lon_0=-68.5 +k=0.9999 +x_0=300000.0000000001 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:26864\":[\"EPSG:26864\",\"+proj=tmerc +lat_0=42.83333333333334 +lon_0=-70.16666666666667 +k=0.999966667 +x_0=900000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:26865\":[\"EPSG:26865\",\"+proj=lcc +lat_1=48.63333333333333 +lat_2=47.03333333333333 +lat_0=46.5 +lon_0=-93.09999999999999 +x_0=800000.0000101599 +y_0=99999.99998983997 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:26866\":[\"EPSG:26866\",\"+proj=lcc +lat_1=47.05 +lat_2=45.61666666666667 +lat_0=45 +lon_0=-94.25 +x_0=800000.0000101599 +y_0=99999.99998983997 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:26867\":[\"EPSG:26867\",\"+proj=lcc +lat_1=45.21666666666667 +lat_2=43.78333333333333 +lat_0=43 +lon_0=-94 +x_0=800000.0000101599 +y_0=99999.99998983997 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:26868\":[\"EPSG:26868\",\"+proj=lcc +lat_1=43 +lat_2=40 +lat_0=39.83333333333334 +lon_0=-100 +x_0=500000.00001016 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:26869\":[\"EPSG:26869\",\"+proj=lcc +lat_1=40.25 +lat_2=39 +lat_0=38.5 +lon_0=-79.5 +x_0=600000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:26870\":[\"EPSG:26870\",\"+proj=lcc +lat_1=38.88333333333333 +lat_2=37.48333333333333 +lat_0=37 +lon_0=-81 +x_0=600000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs \"],\"EPSG:26891\":[\"EPSG:26891\",\"+proj=tmerc +lat_0=0 +lon_0=-82.5 +k=0.9999 +x_0=304800 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:26892\":[\"EPSG:26892\",\"+proj=tmerc +lat_0=0 +lon_0=-81 +k=0.9999 +x_0=304800 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:5391\":[\"EPSG:5391\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:26897\":[\"EPSG:26897\",\"+proj=tmerc +lat_0=0 +lon_0=-96 +k=0.9999 +x_0=304800 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:26898\":[\"EPSG:26898\",\"+proj=tmerc +lat_0=0 +lon_0=-53 +k=0.9999 +x_0=304800 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:26899\":[\"EPSG:26899\",\"+proj=tmerc +lat_0=0 +lon_0=-56 +k=0.9999 +x_0=304800 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:26901\":[\"EPSG:26901\",\"+proj=utm +zone=1 +datum=NAD83 +units=m +no_defs \"],\"EPSG:26902\":[\"EPSG:26902\",\"+proj=utm +zone=2 +datum=NAD83 +units=m +no_defs \"],\"EPSG:26903\":[\"EPSG:26903\",\"+proj=utm +zone=3 +datum=NAD83 +units=m +no_defs \"],\"EPSG:26907\":[\"EPSG:26907\",\"+proj=utm +zone=7 +datum=NAD83 +units=m +no_defs \"],\"EPSG:26908\":[\"EPSG:26908\",\"+proj=utm +zone=8 +datum=NAD83 +units=m +no_defs \"],\"EPSG:26909\":[\"EPSG:26909\",\"+proj=utm +zone=9 +datum=NAD83 +units=m +no_defs \"],\"EPSG:26919\":[\"EPSG:26919\",\"+proj=utm +zone=19 +datum=NAD83 +units=m +no_defs \"],\"EPSG:26921\":[\"EPSG:26921\",\"+proj=utm +zone=21 +datum=NAD83 +units=m +no_defs \"],\"EPSG:26922\":[\"EPSG:26922\",\"+proj=utm +zone=22 +datum=NAD83 +units=m +no_defs \"],\"EPSG:26923\":[\"EPSG:26923\",\"+proj=utm +zone=23 +datum=NAD83 +units=m +no_defs \"],\"EPSG:26929\":[\"EPSG:26929\",\"+proj=tmerc +lat_0=30.5 +lon_0=-85.83333333333333 +k=0.99996 +x_0=200000 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:26930\":[\"EPSG:26930\",\"+proj=tmerc +lat_0=30 +lon_0=-87.5 +k=0.999933333 +x_0=600000 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:26931\":[\"EPSG:26931\",\"+proj=omerc +lat_0=57 +lonc=-133.6666666666667 +alpha=323.1301023611111 +k=0.9999 +x_0=5000000 +y_0=-5000000 +no_uoff +gamma=323.1301023611111 +datum=NAD83 +units=m +no_defs \"],\"EPSG:26932\":[\"EPSG:26932\",\"+proj=tmerc +lat_0=54 +lon_0=-142 +k=0.9999 +x_0=500000 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:26933\":[\"EPSG:26933\",\"+proj=tmerc +lat_0=54 +lon_0=-146 +k=0.9999 +x_0=500000 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:26934\":[\"EPSG:26934\",\"+proj=tmerc +lat_0=54 +lon_0=-150 +k=0.9999 +x_0=500000 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:26935\":[\"EPSG:26935\",\"+proj=tmerc +lat_0=54 +lon_0=-154 +k=0.9999 +x_0=500000 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:26936\":[\"EPSG:26936\",\"+proj=tmerc +lat_0=54 +lon_0=-158 +k=0.9999 +x_0=500000 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:26937\":[\"EPSG:26937\",\"+proj=tmerc +lat_0=54 +lon_0=-162 +k=0.9999 +x_0=500000 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:26938\":[\"EPSG:26938\",\"+proj=tmerc +lat_0=54 +lon_0=-166 +k=0.9999 +x_0=500000 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:26939\":[\"EPSG:26939\",\"+proj=tmerc +lat_0=54 +lon_0=-170 +k=0.9999 +x_0=500000 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:26940\":[\"EPSG:26940\",\"+proj=lcc +lat_1=53.83333333333334 +lat_2=51.83333333333334 +lat_0=51 +lon_0=-176 +x_0=1000000 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:26941\":[\"EPSG:26941\",\"+proj=lcc +lat_1=41.66666666666666 +lat_2=40 +lat_0=39.33333333333334 +lon_0=-122 +x_0=2000000 +y_0=500000 +datum=NAD83 +units=m +no_defs \"],\"EPSG:26942\":[\"EPSG:26942\",\"+proj=lcc +lat_1=39.83333333333334 +lat_2=38.33333333333334 +lat_0=37.66666666666666 +lon_0=-122 +x_0=2000000 +y_0=500000 +datum=NAD83 +units=m +no_defs \"],\"EPSG:26944\":[\"EPSG:26944\",\"+proj=lcc +lat_1=37.25 +lat_2=36 +lat_0=35.33333333333334 +lon_0=-119 +x_0=2000000 +y_0=500000 +datum=NAD83 +units=m +no_defs \"],\"EPSG:26945\":[\"EPSG:26945\",\"+proj=lcc +lat_1=35.46666666666667 +lat_2=34.03333333333333 +lat_0=33.5 +lon_0=-118 +x_0=2000000 +y_0=500000 +datum=NAD83 +units=m +no_defs \"],\"EPSG:26946\":[\"EPSG:26946\",\"+proj=lcc +lat_1=33.88333333333333 +lat_2=32.78333333333333 +lat_0=32.16666666666666 +lon_0=-116.25 +x_0=2000000 +y_0=500000 +datum=NAD83 +units=m +no_defs \"],\"EPSG:26948\":[\"EPSG:26948\",\"+proj=tmerc +lat_0=31 +lon_0=-110.1666666666667 +k=0.9999 +x_0=213360 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:26949\":[\"EPSG:26949\",\"+proj=tmerc +lat_0=31 +lon_0=-111.9166666666667 +k=0.9999 +x_0=213360 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:26950\":[\"EPSG:26950\",\"+proj=tmerc +lat_0=31 +lon_0=-113.75 +k=0.999933333 +x_0=213360 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:26951\":[\"EPSG:26951\",\"+proj=lcc +lat_1=36.23333333333333 +lat_2=34.93333333333333 +lat_0=34.33333333333334 +lon_0=-92 +x_0=400000 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:26952\":[\"EPSG:26952\",\"+proj=lcc +lat_1=34.76666666666667 +lat_2=33.3 +lat_0=32.66666666666666 +lon_0=-92 +x_0=400000 +y_0=400000 +datum=NAD83 +units=m +no_defs \"],\"EPSG:26953\":[\"EPSG:26953\",\"+proj=lcc +lat_1=40.78333333333333 +lat_2=39.71666666666667 +lat_0=39.33333333333334 +lon_0=-105.5 +x_0=914401.8289 +y_0=304800.6096 +datum=NAD83 +units=m +no_defs \"],\"EPSG:26954\":[\"EPSG:26954\",\"+proj=lcc +lat_1=39.75 +lat_2=38.45 +lat_0=37.83333333333334 +lon_0=-105.5 +x_0=914401.8289 +y_0=304800.6096 +datum=NAD83 +units=m +no_defs \"],\"EPSG:26955\":[\"EPSG:26955\",\"+proj=lcc +lat_1=38.43333333333333 +lat_2=37.23333333333333 +lat_0=36.66666666666666 +lon_0=-105.5 +x_0=914401.8289 +y_0=304800.6096 +datum=NAD83 +units=m +no_defs \"],\"EPSG:26956\":[\"EPSG:26956\",\"+proj=lcc +lat_1=41.86666666666667 +lat_2=41.2 +lat_0=40.83333333333334 +lon_0=-72.75 +x_0=304800.6096 +y_0=152400.3048 +datum=NAD83 +units=m +no_defs \"],\"EPSG:26957\":[\"EPSG:26957\",\"+proj=tmerc +lat_0=38 +lon_0=-75.41666666666667 +k=0.999995 +x_0=200000 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:26959\":[\"EPSG:26959\",\"+proj=tmerc +lat_0=24.33333333333333 +lon_0=-82 +k=0.999941177 +x_0=200000 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:26960\":[\"EPSG:26960\",\"+proj=lcc +lat_1=30.75 +lat_2=29.58333333333333 +lat_0=29 +lon_0=-84.5 +x_0=600000 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:26961\":[\"EPSG:26961\",\"+proj=tmerc +lat_0=18.83333333333333 +lon_0=-155.5 +k=0.999966667 +x_0=500000 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:26962\":[\"EPSG:26962\",\"+proj=tmerc +lat_0=20.33333333333333 +lon_0=-156.6666666666667 +k=0.999966667 +x_0=500000 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:26963\":[\"EPSG:26963\",\"+proj=tmerc +lat_0=21.16666666666667 +lon_0=-158 +k=0.99999 +x_0=500000 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:26964\":[\"EPSG:26964\",\"+proj=tmerc +lat_0=21.83333333333333 +lon_0=-159.5 +k=0.99999 +x_0=500000 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:26965\":[\"EPSG:26965\",\"+proj=tmerc +lat_0=21.66666666666667 +lon_0=-160.1666666666667 +k=1 +x_0=500000 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:26966\":[\"EPSG:26966\",\"+proj=tmerc +lat_0=30 +lon_0=-82.16666666666667 +k=0.9999 +x_0=200000 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:26968\":[\"EPSG:26968\",\"+proj=tmerc +lat_0=41.66666666666666 +lon_0=-112.1666666666667 +k=0.9999473679999999 +x_0=200000 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:26969\":[\"EPSG:26969\",\"+proj=tmerc +lat_0=41.66666666666666 +lon_0=-114 +k=0.9999473679999999 +x_0=500000 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:26970\":[\"EPSG:26970\",\"+proj=tmerc +lat_0=41.66666666666666 +lon_0=-115.75 +k=0.999933333 +x_0=800000 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:29635\":[\"EPSG:29635\",\"+proj=utm +zone=35 +a=6378249.2 +b=6356515 +units=m +no_defs \"],\"EPSG:26971\":[\"EPSG:26971\",\"+proj=tmerc +lat_0=36.66666666666666 +lon_0=-88.33333333333333 +k=0.9999749999999999 +x_0=300000 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:26972\":[\"EPSG:26972\",\"+proj=tmerc +lat_0=36.66666666666666 +lon_0=-90.16666666666667 +k=0.999941177 +x_0=700000 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:26973\":[\"EPSG:26973\",\"+proj=tmerc +lat_0=37.5 +lon_0=-85.66666666666667 +k=0.999966667 +x_0=100000 +y_0=250000 +datum=NAD83 +units=m +no_defs \"],\"EPSG:26974\":[\"EPSG:26974\",\"+proj=tmerc +lat_0=37.5 +lon_0=-87.08333333333333 +k=0.999966667 +x_0=900000 +y_0=250000 +datum=NAD83 +units=m +no_defs \"],\"EPSG:26975\":[\"EPSG:26975\",\"+proj=lcc +lat_1=43.26666666666667 +lat_2=42.06666666666667 +lat_0=41.5 +lon_0=-93.5 +x_0=1500000 +y_0=1000000 +datum=NAD83 +units=m +no_defs \"],\"EPSG:26976\":[\"EPSG:26976\",\"+proj=lcc +lat_1=41.78333333333333 +lat_2=40.61666666666667 +lat_0=40 +lon_0=-93.5 +x_0=500000 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:26977\":[\"EPSG:26977\",\"+proj=lcc +lat_1=39.78333333333333 +lat_2=38.71666666666667 +lat_0=38.33333333333334 +lon_0=-98 +x_0=400000 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:26978\":[\"EPSG:26978\",\"+proj=lcc +lat_1=38.56666666666667 +lat_2=37.26666666666667 +lat_0=36.66666666666666 +lon_0=-98.5 +x_0=400000 +y_0=400000 +datum=NAD83 +units=m +no_defs \"],\"EPSG:26979\":[\"EPSG:26979\",\"+proj=lcc +lat_1=37.96666666666667 +lat_2=37.96666666666667 +lat_0=37.5 +lon_0=-84.25 +x_0=500000 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:26980\":[\"EPSG:26980\",\"+proj=lcc +lat_1=37.93333333333333 +lat_2=36.73333333333333 +lat_0=36.33333333333334 +lon_0=-85.75 +x_0=500000 +y_0=500000 +datum=NAD83 +units=m +no_defs \"],\"EPSG:26981\":[\"EPSG:26981\",\"+proj=lcc +lat_1=32.66666666666666 +lat_2=31.16666666666667 +lat_0=30.5 +lon_0=-92.5 +x_0=1000000 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:26982\":[\"EPSG:26982\",\"+proj=lcc +lat_1=30.7 +lat_2=29.3 +lat_0=28.5 +lon_0=-91.33333333333333 +x_0=1000000 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:26983\":[\"EPSG:26983\",\"+proj=tmerc +lat_0=43.66666666666666 +lon_0=-68.5 +k=0.9999 +x_0=300000 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:26984\":[\"EPSG:26984\",\"+proj=tmerc +lat_0=42.83333333333334 +lon_0=-70.16666666666667 +k=0.999966667 +x_0=900000 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:26985\":[\"EPSG:26985\",\"+proj=lcc +lat_1=39.45 +lat_2=38.3 +lat_0=37.66666666666666 +lon_0=-77 +x_0=400000 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:26986\":[\"EPSG:26986\",\"+proj=lcc +lat_1=42.68333333333333 +lat_2=41.71666666666667 +lat_0=41 +lon_0=-71.5 +x_0=200000 +y_0=750000 +datum=NAD83 +units=m +no_defs \"],\"EPSG:26987\":[\"EPSG:26987\",\"+proj=lcc +lat_1=41.48333333333333 +lat_2=41.28333333333333 +lat_0=41 +lon_0=-70.5 +x_0=500000 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:26988\":[\"EPSG:26988\",\"+proj=lcc +lat_1=47.08333333333334 +lat_2=45.48333333333333 +lat_0=44.78333333333333 +lon_0=-87 +x_0=8000000 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:26989\":[\"EPSG:26989\",\"+proj=lcc +lat_1=45.7 +lat_2=44.18333333333333 +lat_0=43.31666666666667 +lon_0=-84.36666666666666 +x_0=6000000 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:26990\":[\"EPSG:26990\",\"+proj=lcc +lat_1=43.66666666666666 +lat_2=42.1 +lat_0=41.5 +lon_0=-84.36666666666666 +x_0=4000000 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:26991\":[\"EPSG:26991\",\"+proj=lcc +lat_1=48.63333333333333 +lat_2=47.03333333333333 +lat_0=46.5 +lon_0=-93.09999999999999 +x_0=800000 +y_0=100000 +datum=NAD83 +units=m +no_defs \"],\"EPSG:26993\":[\"EPSG:26993\",\"+proj=lcc +lat_1=45.21666666666667 +lat_2=43.78333333333333 +lat_0=43 +lon_0=-94 +x_0=800000 +y_0=100000 +datum=NAD83 +units=m +no_defs \"],\"EPSG:26994\":[\"EPSG:26994\",\"+proj=tmerc +lat_0=29.5 +lon_0=-88.83333333333333 +k=0.99995 +x_0=300000 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:26995\":[\"EPSG:26995\",\"+proj=tmerc +lat_0=29.5 +lon_0=-90.33333333333333 +k=0.99995 +x_0=700000 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:26997\":[\"EPSG:26997\",\"+proj=tmerc +lat_0=35.83333333333334 +lon_0=-92.5 +k=0.999933333 +x_0=500000 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:26998\":[\"EPSG:26998\",\"+proj=tmerc +lat_0=36.16666666666666 +lon_0=-94.5 +k=0.999941177 +x_0=850000 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:27037\":[\"EPSG:27037\",\"+proj=utm +zone=37 +ellps=clrk80 +towgs84=-249,-156,381,0,0,0,0 +units=m +no_defs \"],\"EPSG:27038\":[\"EPSG:27038\",\"+proj=utm +zone=38 +ellps=clrk80 +towgs84=-249,-156,381,0,0,0,0 +units=m +no_defs \"],\"EPSG:27039\":[\"EPSG:27039\",\"+proj=utm +zone=39 +ellps=clrk80 +towgs84=-249,-156,381,0,0,0,0 +units=m +no_defs \"],\"EPSG:27120\":[\"EPSG:27120\",\"+proj=utm +zone=20 +ellps=intl +towgs84=-10,375,165,0,0,0,0 +units=m +no_defs \"],\"EPSG:27205\":[\"EPSG:27205\",\"+proj=tmerc +lat_0=-36.87986527777778 +lon_0=174.7643393611111 +k=0.9999 +x_0=300000 +y_0=700000 +datum=nzgd49 +units=m +towgs84=59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993 +nadgrids=nzgd2kgrid0005.gsb +no_defs \"],\"EPSG:27206\":[\"EPSG:27206\",\"+proj=tmerc +lat_0=-37.76124980555556 +lon_0=176.46619725 +k=1 +x_0=300000 +y_0=700000 +datum=nzgd49 +units=m +towgs84=59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993 +nadgrids=nzgd2kgrid0005.gsb +no_defs \"],\"EPSG:5487\":[\"EPSG:5487\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:27207\":[\"EPSG:27207\",\"+proj=tmerc +lat_0=-38.62470277777778 +lon_0=177.8856362777778 +k=1 +x_0=300000 +y_0=700000 +datum=nzgd49 +units=m +towgs84=59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993 +nadgrids=nzgd2kgrid0005.gsb +no_defs \"],\"EPSG:27208\":[\"EPSG:27208\",\"+proj=tmerc +lat_0=-39.65092930555556 +lon_0=176.6736805277778 +k=1 +x_0=300000 +y_0=700000 +datum=nzgd49 +units=m +towgs84=59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993 +nadgrids=nzgd2kgrid0005.gsb +no_defs \"],\"EPSG:27209\":[\"EPSG:27209\",\"+proj=tmerc +lat_0=-39.13575830555556 +lon_0=174.22801175 +k=1 +x_0=300000 +y_0=700000 +datum=nzgd49 +units=m +towgs84=59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993 +nadgrids=nzgd2kgrid0005.gsb +no_defs \"],\"EPSG:27210\":[\"EPSG:27210\",\"+proj=tmerc +lat_0=-39.51247038888889 +lon_0=175.6400368055556 +k=1 +x_0=300000 +y_0=700000 +datum=nzgd49 +units=m +towgs84=59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993 +nadgrids=nzgd2kgrid0005.gsb +no_defs \"],\"EPSG:27211\":[\"EPSG:27211\",\"+proj=tmerc +lat_0=-40.24194713888889 +lon_0=175.4880996111111 +k=1 +x_0=300000 +y_0=700000 +datum=nzgd49 +units=m +towgs84=59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993 +nadgrids=nzgd2kgrid0005.gsb +no_defs \"],\"EPSG:27212\":[\"EPSG:27212\",\"+proj=tmerc +lat_0=-40.92553263888889 +lon_0=175.6473496666667 +k=1 +x_0=300000 +y_0=700000 +datum=nzgd49 +units=m +towgs84=59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993 +nadgrids=nzgd2kgrid0005.gsb +no_defs \"],\"EPSG:27213\":[\"EPSG:27213\",\"+proj=tmerc +lat_0=-41.30131963888888 +lon_0=174.7766231111111 +k=1 +x_0=300000 +y_0=700000 +datum=nzgd49 +units=m +towgs84=59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993 +nadgrids=nzgd2kgrid0005.gsb +no_defs \"],\"EPSG:27214\":[\"EPSG:27214\",\"+proj=tmerc +lat_0=-40.71475905555556 +lon_0=172.6720465 +k=1 +x_0=300000 +y_0=700000 +datum=nzgd49 +units=m +towgs84=59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993 +nadgrids=nzgd2kgrid0005.gsb +no_defs \"],\"EPSG:29636\":[\"EPSG:29636\",\"+proj=utm +zone=36 +a=6378249.2 +b=6356515 +units=m +no_defs \"],\"EPSG:27215\":[\"EPSG:27215\",\"+proj=tmerc +lat_0=-41.27454472222222 +lon_0=173.2993168055555 +k=1 +x_0=300000 +y_0=700000 +datum=nzgd49 +units=m +towgs84=59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993 +nadgrids=nzgd2kgrid0005.gsb +no_defs \"],\"EPSG:27216\":[\"EPSG:27216\",\"+proj=tmerc +lat_0=-41.28991152777778 +lon_0=172.1090281944444 +k=1 +x_0=300000 +y_0=700000 +datum=nzgd49 +units=m +towgs84=59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993 +nadgrids=nzgd2kgrid0005.gsb +no_defs \"],\"EPSG:27217\":[\"EPSG:27217\",\"+proj=tmerc +lat_0=-41.81080286111111 +lon_0=171.5812600555556 +k=1 +x_0=300000 +y_0=700000 +datum=nzgd49 +units=m +towgs84=59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993 +nadgrids=nzgd2kgrid0005.gsb +no_defs \"],\"EPSG:27218\":[\"EPSG:27218\",\"+proj=tmerc +lat_0=-42.33369427777778 +lon_0=171.5497713055556 +k=1 +x_0=300000 +y_0=700000 +datum=nzgd49 +units=m +towgs84=59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993 +nadgrids=nzgd2kgrid0005.gsb +no_defs \"],\"EPSG:27219\":[\"EPSG:27219\",\"+proj=tmerc +lat_0=-42.68911658333333 +lon_0=173.0101333888889 +k=1 +x_0=300000 +y_0=700000 +datum=nzgd49 +units=m +towgs84=59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993 +nadgrids=nzgd2kgrid0005.gsb +no_defs \"],\"EPSG:27220\":[\"EPSG:27220\",\"+proj=tmerc +lat_0=-41.54448666666666 +lon_0=173.8020741111111 +k=1 +x_0=300000 +y_0=700000 +datum=nzgd49 +units=m +towgs84=59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993 +nadgrids=nzgd2kgrid0005.gsb +no_defs \"],\"EPSG:27221\":[\"EPSG:27221\",\"+proj=tmerc +lat_0=-42.88632236111111 +lon_0=170.9799935 +k=1 +x_0=300000 +y_0=700000 +datum=nzgd49 +units=m +towgs84=59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993 +nadgrids=nzgd2kgrid0005.gsb +no_defs \"],\"EPSG:27222\":[\"EPSG:27222\",\"+proj=tmerc +lat_0=-43.11012813888889 +lon_0=170.2609258333333 +k=1 +x_0=300000 +y_0=700000 +datum=nzgd49 +units=m +towgs84=59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993 +nadgrids=nzgd2kgrid0005.gsb +no_defs \"],\"EPSG:27223\":[\"EPSG:27223\",\"+proj=tmerc +lat_0=-43.97780288888889 +lon_0=168.606267 +k=1 +x_0=300000 +y_0=700000 +datum=nzgd49 +units=m +towgs84=59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993 +nadgrids=nzgd2kgrid0005.gsb +no_defs \"],\"EPSG:27224\":[\"EPSG:27224\",\"+proj=tmerc +lat_0=-43.59063758333333 +lon_0=172.7271935833333 +k=1 +x_0=300000 +y_0=700000 +datum=nzgd49 +towgs84=59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993 +nadgrids=nzgd2kgrid0005.gsb +units=m +no_defs \"],\"EPSG:27225\":[\"EPSG:27225\",\"+proj=tmerc +lat_0=-43.74871155555556 +lon_0=171.3607484722222 +k=1 +x_0=300000 +y_0=700000 +datum=nzgd49 +units=m +towgs84=59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993 +nadgrids=nzgd2kgrid0005.gsb +no_defs \"],\"EPSG:27226\":[\"EPSG:27226\",\"+proj=tmerc +lat_0=-44.40222036111111 +lon_0=171.0572508333333 +k=1 +x_0=300000 +y_0=700000 +datum=nzgd49 +units=m +towgs84=59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993 +nadgrids=nzgd2kgrid0005.gsb +no_defs \"],\"EPSG:27227\":[\"EPSG:27227\",\"+proj=tmerc +lat_0=-44.73526797222222 +lon_0=169.4677550833333 +k=1 +x_0=300000 +y_0=700000 +datum=nzgd49 +units=m +towgs84=59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993 +nadgrids=nzgd2kgrid0005.gsb +no_defs \"],\"EPSG:27228\":[\"EPSG:27228\",\"+proj=tmerc +lat_0=-45.13290258333333 +lon_0=168.3986411944444 +k=1 +x_0=300000 +y_0=700000 +datum=nzgd49 +units=m +towgs84=59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993 +nadgrids=nzgd2kgrid0005.gsb +no_defs \"],\"EPSG:27229\":[\"EPSG:27229\",\"+proj=tmerc +lat_0=-45.56372616666666 +lon_0=167.7388617777778 +k=1 +x_0=300000 +y_0=700000 +datum=nzgd49 +units=m +towgs84=59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993 +nadgrids=nzgd2kgrid0005.gsb +no_defs \"],\"EPSG:27230\":[\"EPSG:27230\",\"+proj=tmerc +lat_0=-45.81619661111111 +lon_0=170.6285951666667 +k=1 +x_0=300000 +y_0=700000 +datum=nzgd49 +towgs84=59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993 +nadgrids=nzgd2kgrid0005.gsb +units=m +no_defs \"],\"EPSG:27231\":[\"EPSG:27231\",\"+proj=tmerc +lat_0=-45.86151336111111 +lon_0=170.2825891111111 +k=0.99996 +x_0=300000 +y_0=700000 +datum=nzgd49 +units=m +towgs84=59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993 +nadgrids=nzgd2kgrid0005.gsb +no_defs \"],\"EPSG:27232\":[\"EPSG:27232\",\"+proj=tmerc +lat_0=-46.60000961111111 +lon_0=168.342872 +k=1 +x_0=300002.66 +y_0=699999.58 +datum=nzgd49 +units=m +towgs84=59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993 +nadgrids=nzgd2kgrid0005.gsb +no_defs \"],\"EPSG:27258\":[\"EPSG:27258\",\"+proj=utm +zone=58 +south +datum=nzgd49 +units=m +towgs84=59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993 +nadgrids=nzgd2kgrid0005.gsb +no_defs \"],\"EPSG:27259\":[\"EPSG:27259\",\"+proj=utm +zone=59 +south +datum=nzgd49 +units=m +towgs84=59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993 +nadgrids=nzgd2kgrid0005.gsb +no_defs \"],\"EPSG:27260\":[\"EPSG:27260\",\"+proj=utm +zone=60 +south +datum=nzgd49 +units=m +towgs84=59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993 +nadgrids=nzgd2kgrid0005.gsb +no_defs \"],\"EPSG:27291\":[\"EPSG:27291\",\"+proj=tmerc +lat_0=-39 +lon_0=175.5 +k=1 +x_0=274319.5243848086 +y_0=365759.3658464114 +datum=nzgd49 +to_meter=0.9143984146160287 +towgs84=59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993 +nadgrids=nzgd2kgrid0005.gsb +no_defs \"],\"EPSG:27292\":[\"EPSG:27292\",\"+proj=tmerc +lat_0=-44 +lon_0=171.5 +k=1 +x_0=457199.2073080143 +y_0=457199.2073080143 +datum=nzgd49 +to_meter=0.9143984146160287 +towgs84=59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993 +nadgrids=nzgd2kgrid0005.gsb +no_defs \"],\"EPSG:31121\":[\"EPSG:31121\",\"+proj=utm +zone=21 +ellps=intl +towgs84=-265,120,-358,0,0,0,0 +units=m +no_defs \"],\"EPSG:27392\":[\"EPSG:27392\",\"+proj=tmerc +lat_0=58 +lon_0=-2.333333333333333 +k=1 +x_0=0 +y_0=0 +a=6377492.018 +b=6356173.508712696 +towgs84=278.3,93,474.5,7.889,0.05,-6.61,6.21 +pm=oslo +units=m +no_defs \"],\"EPSG:27394\":[\"EPSG:27394\",\"+proj=tmerc +lat_0=58 +lon_0=2.5 +k=1 +x_0=0 +y_0=0 +a=6377492.018 +b=6356173.508712696 +towgs84=278.3,93,474.5,7.889,0.05,-6.61,6.21 +pm=oslo +units=m +no_defs \"],\"EPSG:27395\":[\"EPSG:27395\",\"+proj=tmerc +lat_0=58 +lon_0=6.166666666666667 +k=1 +x_0=0 +y_0=0 +a=6377492.018 +b=6356173.508712696 +towgs84=278.3,93,474.5,7.889,0.05,-6.61,6.21 +pm=oslo +units=m +no_defs \"],\"EPSG:27396\":[\"EPSG:27396\",\"+proj=tmerc +lat_0=58 +lon_0=10.16666666666667 +k=1 +x_0=0 +y_0=0 +a=6377492.018 +b=6356173.508712696 +towgs84=278.3,93,474.5,7.889,0.05,-6.61,6.21 +pm=oslo +units=m +no_defs \"],\"EPSG:27397\":[\"EPSG:27397\",\"+proj=tmerc +lat_0=58 +lon_0=14.16666666666667 +k=1 +x_0=0 +y_0=0 +a=6377492.018 +b=6356173.508712696 +towgs84=278.3,93,474.5,7.889,0.05,-6.61,6.21 +pm=oslo +units=m +no_defs \"],\"EPSG:27398\":[\"EPSG:27398\",\"+proj=tmerc +lat_0=58 +lon_0=18.33333333333333 +k=1 +x_0=0 +y_0=0 +a=6377492.018 +b=6356173.508712696 +towgs84=278.3,93,474.5,7.889,0.05,-6.61,6.21 +pm=oslo +units=m +no_defs \"],\"EPSG:27429\":[\"EPSG:27429\",\"+proj=utm +zone=29 +ellps=intl +towgs84=-223.237,110.193,36.649,0,0,0,0 +units=m +no_defs \"],\"EPSG:27500\":[\"EPSG:27500\",\"+proj=lcc +lat_1=49.50000000000001 +lat_0=49.50000000000001 +lon_0=5.399999999999999 +k_0=0.99950908 +x_0=500000 +y_0=300000 +a=6376523 +b=6355862.933255573 +pm=2.337208333333333 +units=m +no_defs \"],\"EPSG:27564\":[\"EPSG:27564\",\"+proj=lcc +lat_1=42.16500000000001 +lat_0=42.16500000000001 +lon_0=0 +k_0=0.99994471 +x_0=234.358 +y_0=185861.369 +a=6378249.2 +b=6356515 +towgs84=-168,-60,320,0,0,0,0 +pm=paris +units=m +no_defs \"],\"EPSG:27571\":[\"EPSG:27571\",\"+proj=lcc +lat_1=49.50000000000001 +lat_0=49.50000000000001 +lon_0=0 +k_0=0.999877341 +x_0=600000 +y_0=1200000 +a=6378249.2 +b=6356515 +towgs84=-168,-60,320,0,0,0,0 +pm=paris +units=m +no_defs \"],\"EPSG:5544\":[\"EPSG:5544\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:27574\":[\"EPSG:27574\",\"+proj=lcc +lat_1=42.16500000000001 +lat_0=42.16500000000001 +lon_0=0 +k_0=0.99994471 +x_0=234.358 +y_0=4185861.369 +a=6378249.2 +b=6356515 +towgs84=-168,-60,320,0,0,0,0 +pm=paris +units=m +no_defs \"],\"EPSG:27581\":[\"EPSG:27581\",\"+proj=lcc +lat_1=49.50000000000001 +lat_0=49.50000000000001 +lon_0=0 +k_0=0.999877341 +x_0=600000 +y_0=1200000 +a=6378249.2 +b=6356515 +towgs84=-168,-60,320,0,0,0,0 +pm=paris +units=m +no_defs \"],\"EPSG:27583\":[\"EPSG:27583\",\"+proj=lcc +lat_1=44.10000000000001 +lat_0=44.10000000000001 +lon_0=0 +k_0=0.999877499 +x_0=600000 +y_0=3200000 +a=6378249.2 +b=6356515 +towgs84=-168,-60,320,0,0,0,0 +pm=paris +units=m +no_defs \"],\"EPSG:27584\":[\"EPSG:27584\",\"+proj=lcc +lat_1=42.16500000000001 +lat_0=42.16500000000001 +lon_0=0 +k_0=0.99994471 +x_0=234.358 +y_0=4185861.369 +a=6378249.2 +b=6356515 +towgs84=-168,-60,320,0,0,0,0 +pm=paris +units=m +no_defs \"],\"EPSG:27591\":[\"EPSG:27591\",\"+proj=lcc +lat_1=49.50000000000001 +lat_0=49.50000000000001 +lon_0=0 +k_0=0.999877341 +x_0=600000 +y_0=200000 +a=6378249.2 +b=6356515 +towgs84=-168,-60,320,0,0,0,0 +pm=paris +units=m +no_defs \"],\"EPSG:27592\":[\"EPSG:27592\",\"+proj=lcc +lat_1=46.8 +lat_0=46.8 +lon_0=0 +k_0=0.99987742 +x_0=600000 +y_0=200000 +a=6378249.2 +b=6356515 +towgs84=-168,-60,320,0,0,0,0 +pm=paris +units=m +no_defs \"],\"EPSG:5558\":[\"EPSG:5558\",\"+proj=geocent +ellps=krass +units=m +no_defs \"],\"EPSG:27593\":[\"EPSG:27593\",\"+proj=lcc +lat_1=44.10000000000001 +lat_0=44.10000000000001 +lon_0=0 +k_0=0.999877499 +x_0=600000 +y_0=200000 +a=6378249.2 +b=6356515 +towgs84=-168,-60,320,0,0,0,0 +pm=paris +units=m +no_defs \"],\"EPSG:27594\":[\"EPSG:27594\",\"+proj=lcc +lat_1=42.16500000000001 +lat_0=42.16500000000001 +lon_0=0 +k_0=0.99994471 +x_0=234.358 +y_0=185861.369 +a=6378249.2 +b=6356515 +towgs84=-168,-60,320,0,0,0,0 +pm=paris +units=m +no_defs \"],\"EPSG:28191\":[\"EPSG:28191\",\"+proj=cass +lat_0=31.73409694444445 +lon_0=35.21208055555556 +x_0=170251.555 +y_0=126867.909 +a=6378300.789 +b=6356566.435 +towgs84=-275.7224,94.7824,340.8944,-8.001,-4.42,-11.821,1 +units=m +no_defs \"],\"EPSG:28192\":[\"EPSG:28192\",\"+proj=tmerc +lat_0=31.73409694444445 +lon_0=35.21208055555556 +k=1 +x_0=170251.555 +y_0=1126867.909 +a=6378300.789 +b=6356566.435 +towgs84=-275.7224,94.7824,340.8944,-8.001,-4.42,-11.821,1 +units=m +no_defs \"],\"EPSG:28193\":[\"EPSG:28193\",\"+proj=cass +lat_0=31.73409694444445 +lon_0=35.21208055555556 +x_0=170251.555 +y_0=1126867.909 +a=6378300.789 +b=6356566.435 +towgs84=-275.7224,94.7824,340.8944,-8.001,-4.42,-11.821,1 +units=m +no_defs \"],\"EPSG:28232\":[\"EPSG:28232\",\"+proj=utm +zone=32 +south +a=6378249.2 +b=6356515 +towgs84=-148,51,-291,0,0,0,0 +units=m +no_defs \"],\"EPSG:28348\":[\"EPSG:28348\",\"+proj=utm +zone=48 +south +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:28349\":[\"EPSG:28349\",\"+proj=utm +zone=49 +south +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:28357\":[\"EPSG:28357\",\"+proj=utm +zone=57 +south +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:28358\":[\"EPSG:28358\",\"+proj=utm +zone=58 +south +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:28402\":[\"EPSG:28402\",\"+proj=tmerc +lat_0=0 +lon_0=9 +k=1 +x_0=2500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:28403\":[\"EPSG:28403\",\"+proj=tmerc +lat_0=0 +lon_0=15 +k=1 +x_0=3500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:28404\":[\"EPSG:28404\",\"+proj=tmerc +lat_0=0 +lon_0=21 +k=1 +x_0=4500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:28405\":[\"EPSG:28405\",\"+proj=tmerc +lat_0=0 +lon_0=27 +k=1 +x_0=5500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:28406\":[\"EPSG:28406\",\"+proj=tmerc +lat_0=0 +lon_0=33 +k=1 +x_0=6500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:28407\":[\"EPSG:28407\",\"+proj=tmerc +lat_0=0 +lon_0=39 +k=1 +x_0=7500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:28408\":[\"EPSG:28408\",\"+proj=tmerc +lat_0=0 +lon_0=45 +k=1 +x_0=8500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:28409\":[\"EPSG:28409\",\"+proj=tmerc +lat_0=0 +lon_0=51 +k=1 +x_0=9500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:28410\":[\"EPSG:28410\",\"+proj=tmerc +lat_0=0 +lon_0=57 +k=1 +x_0=10500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:28411\":[\"EPSG:28411\",\"+proj=tmerc +lat_0=0 +lon_0=63 +k=1 +x_0=11500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:28412\":[\"EPSG:28412\",\"+proj=tmerc +lat_0=0 +lon_0=69 +k=1 +x_0=12500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:28413\":[\"EPSG:28413\",\"+proj=tmerc +lat_0=0 +lon_0=75 +k=1 +x_0=13500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:28414\":[\"EPSG:28414\",\"+proj=tmerc +lat_0=0 +lon_0=81 +k=1 +x_0=14500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:28415\":[\"EPSG:28415\",\"+proj=tmerc +lat_0=0 +lon_0=87 +k=1 +x_0=15500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:28416\":[\"EPSG:28416\",\"+proj=tmerc +lat_0=0 +lon_0=93 +k=1 +x_0=16500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:28417\":[\"EPSG:28417\",\"+proj=tmerc +lat_0=0 +lon_0=99 +k=1 +x_0=17500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:28418\":[\"EPSG:28418\",\"+proj=tmerc +lat_0=0 +lon_0=105 +k=1 +x_0=18500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:28419\":[\"EPSG:28419\",\"+proj=tmerc +lat_0=0 +lon_0=111 +k=1 +x_0=19500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:28420\":[\"EPSG:28420\",\"+proj=tmerc +lat_0=0 +lon_0=117 +k=1 +x_0=20500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:28421\":[\"EPSG:28421\",\"+proj=tmerc +lat_0=0 +lon_0=123 +k=1 +x_0=21500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:28422\":[\"EPSG:28422\",\"+proj=tmerc +lat_0=0 +lon_0=129 +k=1 +x_0=22500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:28423\":[\"EPSG:28423\",\"+proj=tmerc +lat_0=0 +lon_0=135 +k=1 +x_0=23500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:28424\":[\"EPSG:28424\",\"+proj=tmerc +lat_0=0 +lon_0=141 +k=1 +x_0=24500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:28425\":[\"EPSG:28425\",\"+proj=tmerc +lat_0=0 +lon_0=147 +k=1 +x_0=25500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:28426\":[\"EPSG:28426\",\"+proj=tmerc +lat_0=0 +lon_0=153 +k=1 +x_0=26500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:28427\":[\"EPSG:28427\",\"+proj=tmerc +lat_0=0 +lon_0=159 +k=1 +x_0=27500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:28428\":[\"EPSG:28428\",\"+proj=tmerc +lat_0=0 +lon_0=165 +k=1 +x_0=28500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:28429\":[\"EPSG:28429\",\"+proj=tmerc +lat_0=0 +lon_0=171 +k=1 +x_0=29500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:28430\":[\"EPSG:28430\",\"+proj=tmerc +lat_0=0 +lon_0=177 +k=1 +x_0=30500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:28431\":[\"EPSG:28431\",\"+proj=tmerc +lat_0=0 +lon_0=-177 +k=1 +x_0=31500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:28432\":[\"EPSG:28432\",\"+proj=tmerc +lat_0=0 +lon_0=-171 +k=1 +x_0=32500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:28462\":[\"EPSG:28462\",\"+proj=tmerc +lat_0=0 +lon_0=9 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:28463\":[\"EPSG:28463\",\"+proj=tmerc +lat_0=0 +lon_0=15 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:28464\":[\"EPSG:28464\",\"+proj=tmerc +lat_0=0 +lon_0=21 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:28465\":[\"EPSG:28465\",\"+proj=tmerc +lat_0=0 +lon_0=27 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:28466\":[\"EPSG:28466\",\"+proj=tmerc +lat_0=0 +lon_0=33 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:28467\":[\"EPSG:28467\",\"+proj=tmerc +lat_0=0 +lon_0=39 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:28468\":[\"EPSG:28468\",\"+proj=tmerc +lat_0=0 +lon_0=45 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:28469\":[\"EPSG:28469\",\"+proj=tmerc +lat_0=0 +lon_0=51 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:28470\":[\"EPSG:28470\",\"+proj=tmerc +lat_0=0 +lon_0=57 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:28471\":[\"EPSG:28471\",\"+proj=tmerc +lat_0=0 +lon_0=63 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:28472\":[\"EPSG:28472\",\"+proj=tmerc +lat_0=0 +lon_0=69 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:28473\":[\"EPSG:28473\",\"+proj=tmerc +lat_0=0 +lon_0=75 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:28474\":[\"EPSG:28474\",\"+proj=tmerc +lat_0=0 +lon_0=81 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:28475\":[\"EPSG:28475\",\"+proj=tmerc +lat_0=0 +lon_0=87 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:28476\":[\"EPSG:28476\",\"+proj=tmerc +lat_0=0 +lon_0=93 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:28477\":[\"EPSG:28477\",\"+proj=tmerc +lat_0=0 +lon_0=99 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:28478\":[\"EPSG:28478\",\"+proj=tmerc +lat_0=0 +lon_0=105 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:28479\":[\"EPSG:28479\",\"+proj=tmerc +lat_0=0 +lon_0=111 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:32207\":[\"EPSG:32207\",\"+proj=utm +zone=7 +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:28480\":[\"EPSG:28480\",\"+proj=tmerc +lat_0=0 +lon_0=117 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:28481\":[\"EPSG:28481\",\"+proj=tmerc +lat_0=0 +lon_0=123 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:28482\":[\"EPSG:28482\",\"+proj=tmerc +lat_0=0 +lon_0=129 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:28483\":[\"EPSG:28483\",\"+proj=tmerc +lat_0=0 +lon_0=135 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:28484\":[\"EPSG:28484\",\"+proj=tmerc +lat_0=0 +lon_0=141 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:28485\":[\"EPSG:28485\",\"+proj=tmerc +lat_0=0 +lon_0=147 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:28486\":[\"EPSG:28486\",\"+proj=tmerc +lat_0=0 +lon_0=153 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:28487\":[\"EPSG:28487\",\"+proj=tmerc +lat_0=0 +lon_0=159 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:28488\":[\"EPSG:28488\",\"+proj=tmerc +lat_0=0 +lon_0=165 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:32208\":[\"EPSG:32208\",\"+proj=utm +zone=8 +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:28489\":[\"EPSG:28489\",\"+proj=tmerc +lat_0=0 +lon_0=171 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:28490\":[\"EPSG:28490\",\"+proj=tmerc +lat_0=0 +lon_0=177 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:28491\":[\"EPSG:28491\",\"+proj=tmerc +lat_0=0 +lon_0=-177 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:28492\":[\"EPSG:28492\",\"+proj=tmerc +lat_0=0 +lon_0=-171 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +units=m +no_defs \"],\"EPSG:28600\":[\"EPSG:28600\",\"+proj=tmerc +lat_0=24.45 +lon_0=51.21666666666667 +k=0.99999 +x_0=200000 +y_0=300000 +ellps=intl +towgs84=-128.16,-282.42,21.93,0,0,0,0 +units=m +no_defs \"],\"EPSG:5591\":[\"EPSG:5591\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:29118\":[\"EPSG:29118\",\"+proj=utm +zone=18 +ellps=GRS67 +towgs84=-57,1,-41,0,0,0,0 +units=m +no_defs \"],\"EPSG:29119\":[\"EPSG:29119\",\"+proj=utm +zone=19 +ellps=GRS67 +towgs84=-57,1,-41,0,0,0,0 +units=m +no_defs \"],\"EPSG:29120\":[\"EPSG:29120\",\"+proj=utm +zone=20 +ellps=GRS67 +towgs84=-57,1,-41,0,0,0,0 +units=m +no_defs \"],\"EPSG:29121\":[\"EPSG:29121\",\"+proj=utm +zone=21 +ellps=GRS67 +towgs84=-57,1,-41,0,0,0,0 +units=m +no_defs \"],\"EPSG:29122\":[\"EPSG:29122\",\"+proj=utm +zone=22 +ellps=GRS67 +towgs84=-57,1,-41,0,0,0,0 +units=m +no_defs \"],\"EPSG:29168\":[\"EPSG:29168\",\"+proj=utm +zone=18 +ellps=aust_SA +towgs84=-66.87,4.37,-38.52,0,0,0,0 +units=m +no_defs \"],\"EPSG:29169\":[\"EPSG:29169\",\"+proj=utm +zone=19 +ellps=aust_SA +towgs84=-66.87,4.37,-38.52,0,0,0,0 +units=m +no_defs \"],\"EPSG:29170\":[\"EPSG:29170\",\"+proj=utm +zone=20 +ellps=aust_SA +towgs84=-66.87,4.37,-38.52,0,0,0,0 +units=m +no_defs \"],\"EPSG:29171\":[\"EPSG:29171\",\"+proj=utm +zone=21 +ellps=aust_SA +towgs84=-66.87,4.37,-38.52,0,0,0,0 +units=m +no_defs \"],\"EPSG:29172\":[\"EPSG:29172\",\"+proj=utm +zone=22 +ellps=aust_SA +towgs84=-66.87,4.37,-38.52,0,0,0,0 +units=m +no_defs \"],\"EPSG:29177\":[\"EPSG:29177\",\"+proj=utm +zone=17 +south +ellps=GRS67 +towgs84=-57,1,-41,0,0,0,0 +units=m +no_defs \"],\"EPSG:29178\":[\"EPSG:29178\",\"+proj=utm +zone=18 +south +ellps=GRS67 +towgs84=-57,1,-41,0,0,0,0 +units=m +no_defs \"],\"EPSG:29179\":[\"EPSG:29179\",\"+proj=utm +zone=19 +south +ellps=GRS67 +towgs84=-57,1,-41,0,0,0,0 +units=m +no_defs \"],\"EPSG:29181\":[\"EPSG:29181\",\"+proj=utm +zone=21 +south +ellps=GRS67 +towgs84=-57,1,-41,0,0,0,0 +units=m +no_defs \"],\"EPSG:29183\":[\"EPSG:29183\",\"+proj=utm +zone=23 +south +ellps=GRS67 +towgs84=-57,1,-41,0,0,0,0 +units=m +no_defs \"],\"EPSG:29185\":[\"EPSG:29185\",\"+proj=utm +zone=25 +south +ellps=GRS67 +towgs84=-57,1,-41,0,0,0,0 +units=m +no_defs \"],\"EPSG:29187\":[\"EPSG:29187\",\"+proj=utm +zone=17 +south +ellps=aust_SA +towgs84=-66.87,4.37,-38.52,0,0,0,0 +units=m +no_defs \"],\"EPSG:29188\":[\"EPSG:29188\",\"+proj=utm +zone=18 +south +ellps=aust_SA +towgs84=-66.87,4.37,-38.52,0,0,0,0 +units=m +no_defs \"],\"EPSG:29189\":[\"EPSG:29189\",\"+proj=utm +zone=19 +south +ellps=aust_SA +towgs84=-66.87,4.37,-38.52,0,0,0,0 +units=m +no_defs \"],\"EPSG:29190\":[\"EPSG:29190\",\"+proj=utm +zone=20 +south +ellps=aust_SA +towgs84=-66.87,4.37,-38.52,0,0,0,0 +units=m +no_defs \"],\"EPSG:29192\":[\"EPSG:29192\",\"+proj=utm +zone=22 +south +ellps=aust_SA +towgs84=-66.87,4.37,-38.52,0,0,0,0 +units=m +no_defs \"],\"EPSG:29194\":[\"EPSG:29194\",\"+proj=utm +zone=24 +south +ellps=aust_SA +towgs84=-66.87,4.37,-38.52,0,0,0,0 +units=m +no_defs \"],\"EPSG:29195\":[\"EPSG:29195\",\"+proj=utm +zone=25 +south +ellps=aust_SA +towgs84=-66.87,4.37,-38.52,0,0,0,0 +units=m +no_defs \"],\"EPSG:29220\":[\"EPSG:29220\",\"+proj=utm +zone=20 +south +ellps=intl +towgs84=-355,21,72,0,0,0,0 +units=m +no_defs \"],\"EPSG:29221\":[\"EPSG:29221\",\"+proj=utm +zone=21 +south +ellps=intl +towgs84=-355,21,72,0,0,0,0 +units=m +no_defs \"],\"EPSG:29333\":[\"EPSG:29333\",\"+proj=utm +zone=33 +south +ellps=bess_nam +towgs84=616,97,-251,0,0,0,0 +units=m +no_defs \"],\"EPSG:29371\":[\"EPSG:29371\",\"+proj=tmerc +lat_0=-22 +lon_0=11 +k=1 +x_0=0 +y_0=0 +axis=wsu +ellps=bess_nam +towgs84=616,97,-251,0,0,0,0 +to_meter=1.0000135965 +no_defs \"],\"EPSG:29373\":[\"EPSG:29373\",\"+proj=tmerc +lat_0=-22 +lon_0=13 +k=1 +x_0=0 +y_0=0 +axis=wsu +ellps=bess_nam +towgs84=616,97,-251,0,0,0,0 +to_meter=1.0000135965 +no_defs \"],\"EPSG:29375\":[\"EPSG:29375\",\"+proj=tmerc +lat_0=-22 +lon_0=15 +k=1 +x_0=0 +y_0=0 +axis=wsu +ellps=bess_nam +towgs84=616,97,-251,0,0,0,0 +to_meter=1.0000135965 +no_defs \"],\"EPSG:29377\":[\"EPSG:29377\",\"+proj=tmerc +lat_0=-22 +lon_0=17 +k=1 +x_0=0 +y_0=0 +axis=wsu +ellps=bess_nam +towgs84=616,97,-251,0,0,0,0 +to_meter=1.0000135965 +no_defs \"],\"EPSG:29379\":[\"EPSG:29379\",\"+proj=tmerc +lat_0=-22 +lon_0=19 +k=1 +x_0=0 +y_0=0 +axis=wsu +ellps=bess_nam +towgs84=616,97,-251,0,0,0,0 +to_meter=1.0000135965 +no_defs \"],\"EPSG:29381\":[\"EPSG:29381\",\"+proj=tmerc +lat_0=-22 +lon_0=21 +k=1 +x_0=0 +y_0=0 +axis=wsu +ellps=bess_nam +towgs84=616,97,-251,0,0,0,0 +to_meter=1.0000135965 +no_defs \"],\"EPSG:29383\":[\"EPSG:29383\",\"+proj=tmerc +lat_0=-22 +lon_0=23 +k=1 +x_0=0 +y_0=0 +axis=wsu +ellps=bess_nam +towgs84=616,97,-251,0,0,0,0 +to_meter=1.0000135965 +no_defs \"],\"EPSG:29385\":[\"EPSG:29385\",\"+proj=tmerc +lat_0=-22 +lon_0=25 +k=1 +x_0=0 +y_0=0 +axis=wsu +ellps=bess_nam +towgs84=616,97,-251,0,0,0,0 +to_meter=1.0000135965 +no_defs \"],\"EPSG:29700\":[\"EPSG:29700\",\"+proj=omerc +lat_0=-18.9 +lonc=44.10000000000001 +alpha=18.9 +k=0.9995000000000001 +x_0=400000 +y_0=800000 +gamma=18.9 +ellps=intl +towgs84=-189,-242,-91,0,0,0,0 +pm=paris +units=m +no_defs \"],\"EPSG:29701\":[\"EPSG:29701\",\"\"],\"EPSG:29702\":[\"EPSG:29702\",\"+proj=omerc +lat_0=-18.9 +lonc=44.10000000000001 +alpha=18.9 +k=0.9995000000000001 +x_0=400000 +y_0=800000 +gamma=18.9 +ellps=intl +towgs84=-189,-242,-91,0,0,0,0 +pm=paris +units=m +no_defs \"],\"EPSG:29738\":[\"EPSG:29738\",\"+proj=utm +zone=38 +south +ellps=intl +towgs84=-189,-242,-91,0,0,0,0 +units=m +no_defs \"],\"EPSG:29739\":[\"EPSG:29739\",\"+proj=utm +zone=39 +south +ellps=intl +towgs84=-189,-242,-91,0,0,0,0 +units=m +no_defs \"],\"EPSG:29849\":[\"EPSG:29849\",\"+proj=utm +zone=49 +ellps=evrstSS +towgs84=-679,669,-48,0,0,0,0 +units=m +no_defs \"],\"EPSG:29850\":[\"EPSG:29850\",\"+proj=utm +zone=50 +ellps=evrstSS +towgs84=-679,669,-48,0,0,0,0 +units=m +no_defs \"],\"EPSG:29871\":[\"EPSG:29871\",\"+proj=omerc +lat_0=4 +lonc=115 +alpha=53.31582047222222 +k=0.99984 +x_0=590476.8714630401 +y_0=442857.653094361 +gamma=53.13010236111111 +ellps=evrstSS +towgs84=-679,669,-48,0,0,0,0 +to_meter=20.11676512155263 +no_defs \"],\"EPSG:29873\":[\"EPSG:29873\",\"+proj=omerc +lat_0=4 +lonc=115 +alpha=53.31582047222222 +k=0.99984 +x_0=590476.87 +y_0=442857.65 +gamma=53.13010236111111 +ellps=evrstSS +towgs84=-679,669,-48,0,0,0,0 +units=m +no_defs \"],\"EPSG:29901\":[\"EPSG:29901\",\"+proj=tmerc +lat_0=53.5 +lon_0=-8 +k=1 +x_0=200000 +y_0=250000 +ellps=airy +towgs84=482.5,-130.6,564.6,-1.042,-0.214,-0.631,8.15 +units=m +no_defs \"],\"EPSG:29903\":[\"EPSG:29903\",\"+proj=tmerc +lat_0=53.5 +lon_0=-8 +k=1.000035 +x_0=200000 +y_0=250000 +ellps=mod_airy +towgs84=482.5,-130.6,564.6,-1.042,-0.214,-0.631,8.15 +units=m +no_defs \"],\"EPSG:30161\":[\"EPSG:30161\",\"+proj=tmerc +lat_0=33 +lon_0=129.5 +k=0.9999 +x_0=0 +y_0=0 +ellps=bessel +towgs84=-146.414,507.337,680.507,0,0,0,0 +units=m +no_defs \"],\"EPSG:30162\":[\"EPSG:30162\",\"+proj=tmerc +lat_0=33 +lon_0=131 +k=0.9999 +x_0=0 +y_0=0 +ellps=bessel +towgs84=-146.414,507.337,680.507,0,0,0,0 +units=m +no_defs \"],\"EPSG:30163\":[\"EPSG:30163\",\"+proj=tmerc +lat_0=36 +lon_0=132.1666666666667 +k=0.9999 +x_0=0 +y_0=0 +ellps=bessel +towgs84=-146.414,507.337,680.507,0,0,0,0 +units=m +no_defs \"],\"EPSG:30164\":[\"EPSG:30164\",\"+proj=tmerc +lat_0=33 +lon_0=133.5 +k=0.9999 +x_0=0 +y_0=0 +ellps=bessel +towgs84=-146.414,507.337,680.507,0,0,0,0 +units=m +no_defs \"],\"EPSG:5828\":[\"EPSG:5828\",\"+proj=geocent +ellps=bessel +units=m +no_defs \"],\"EPSG:30165\":[\"EPSG:30165\",\"+proj=tmerc +lat_0=36 +lon_0=134.3333333333333 +k=0.9999 +x_0=0 +y_0=0 +ellps=bessel +towgs84=-146.414,507.337,680.507,0,0,0,0 +units=m +no_defs \"],\"EPSG:30166\":[\"EPSG:30166\",\"+proj=tmerc +lat_0=36 +lon_0=136 +k=0.9999 +x_0=0 +y_0=0 +ellps=bessel +towgs84=-146.414,507.337,680.507,0,0,0,0 +units=m +no_defs \"],\"EPSG:30167\":[\"EPSG:30167\",\"+proj=tmerc +lat_0=36 +lon_0=137.1666666666667 +k=0.9999 +x_0=0 +y_0=0 +ellps=bessel +towgs84=-146.414,507.337,680.507,0,0,0,0 +units=m +no_defs \"],\"EPSG:30168\":[\"EPSG:30168\",\"+proj=tmerc +lat_0=36 +lon_0=138.5 +k=0.9999 +x_0=0 +y_0=0 +ellps=bessel +towgs84=-146.414,507.337,680.507,0,0,0,0 +units=m +no_defs \"],\"EPSG:30169\":[\"EPSG:30169\",\"+proj=tmerc +lat_0=36 +lon_0=139.8333333333333 +k=0.9999 +x_0=0 +y_0=0 +ellps=bessel +towgs84=-146.414,507.337,680.507,0,0,0,0 +units=m +no_defs \"],\"EPSG:30170\":[\"EPSG:30170\",\"+proj=tmerc +lat_0=40 +lon_0=140.8333333333333 +k=0.9999 +x_0=0 +y_0=0 +ellps=bessel +towgs84=-146.414,507.337,680.507,0,0,0,0 +units=m +no_defs \"],\"EPSG:30171\":[\"EPSG:30171\",\"+proj=tmerc +lat_0=44 +lon_0=140.25 +k=0.9999 +x_0=0 +y_0=0 +ellps=bessel +towgs84=-146.414,507.337,680.507,0,0,0,0 +units=m +no_defs \"],\"EPSG:30172\":[\"EPSG:30172\",\"+proj=tmerc +lat_0=44 +lon_0=142.25 +k=0.9999 +x_0=0 +y_0=0 +ellps=bessel +towgs84=-146.414,507.337,680.507,0,0,0,0 +units=m +no_defs \"],\"EPSG:30173\":[\"EPSG:30173\",\"+proj=tmerc +lat_0=44 +lon_0=144.25 +k=0.9999 +x_0=0 +y_0=0 +ellps=bessel +towgs84=-146.414,507.337,680.507,0,0,0,0 +units=m +no_defs \"],\"EPSG:30174\":[\"EPSG:30174\",\"+proj=tmerc +lat_0=26 +lon_0=142 +k=0.9999 +x_0=0 +y_0=0 +ellps=bessel +towgs84=-146.414,507.337,680.507,0,0,0,0 +units=m +no_defs \"],\"EPSG:30175\":[\"EPSG:30175\",\"+proj=tmerc +lat_0=26 +lon_0=127.5 +k=0.9999 +x_0=0 +y_0=0 +ellps=bessel +towgs84=-146.414,507.337,680.507,0,0,0,0 +units=m +no_defs \"],\"EPSG:30176\":[\"EPSG:30176\",\"+proj=tmerc +lat_0=26 +lon_0=124 +k=0.9999 +x_0=0 +y_0=0 +ellps=bessel +towgs84=-146.414,507.337,680.507,0,0,0,0 +units=m +no_defs \"],\"EPSG:30177\":[\"EPSG:30177\",\"+proj=tmerc +lat_0=26 +lon_0=131 +k=0.9999 +x_0=0 +y_0=0 +ellps=bessel +towgs84=-146.414,507.337,680.507,0,0,0,0 +units=m +no_defs \"],\"EPSG:30178\":[\"EPSG:30178\",\"+proj=tmerc +lat_0=20 +lon_0=136 +k=0.9999 +x_0=0 +y_0=0 +ellps=bessel +towgs84=-146.414,507.337,680.507,0,0,0,0 +units=m +no_defs \"],\"EPSG:30179\":[\"EPSG:30179\",\"+proj=tmerc +lat_0=26 +lon_0=154 +k=0.9999 +x_0=0 +y_0=0 +ellps=bessel +towgs84=-146.414,507.337,680.507,0,0,0,0 +units=m +no_defs \"],\"EPSG:30200\":[\"EPSG:30200\",\"+proj=cass +lat_0=10.44166666666667 +lon_0=-61.33333333333334 +x_0=86501.46392051999 +y_0=65379.0134283 +a=6378293.645208759 +b=6356617.987679838 +towgs84=-61.702,284.488,472.052,0,0,0,0 +to_meter=0.201166195164 +no_defs \"],\"EPSG:30339\":[\"EPSG:30339\",\"+proj=utm +zone=39 +ellps=helmert +units=m +no_defs \"],\"EPSG:30340\":[\"EPSG:30340\",\"+proj=utm +zone=40 +ellps=helmert +units=m +no_defs \"],\"EPSG:30491\":[\"EPSG:30491\",\"+proj=lcc +lat_1=36 +lat_0=36 +lon_0=2.7 +k_0=0.999625544 +x_0=500000 +y_0=300000 +a=6378249.2 +b=6356515 +towgs84=-73,-247,227,0,0,0,0 +units=m +no_defs \"],\"EPSG:31028\":[\"EPSG:31028\",\"+proj=utm +zone=28 +a=6378249.2 +b=6356515 +towgs84=-30,190,89,0,0,0,0 +units=m +no_defs \"],\"EPSG:30492\":[\"EPSG:30492\",\"+proj=lcc +lat_1=33.3 +lat_0=33.3 +lon_0=2.7 +k_0=0.999625769 +x_0=500000 +y_0=300000 +a=6378249.2 +b=6356515 +towgs84=-73,-247,227,0,0,0,0 +units=m +no_defs \"],\"EPSG:30493\":[\"EPSG:30493\",\"+proj=lcc +lat_1=36 +lat_0=36 +lon_0=2.7 +k_0=0.999625544 +x_0=500000 +y_0=300000 +a=6378249.2 +b=6356515 +units=m +no_defs \"],\"EPSG:30494\":[\"EPSG:30494\",\"+proj=lcc +lat_1=33.3 +lat_0=33.3 +lon_0=2.7 +k_0=0.999625769 +x_0=500000 +y_0=300000 +a=6378249.2 +b=6356515 +units=m +no_defs \"],\"EPSG:30729\":[\"EPSG:30729\",\"+proj=utm +zone=29 +ellps=clrk80 +towgs84=-209.3622,-87.8162,404.6198,0.0046,3.4784,0.5805,-1.4547 +units=m +no_defs \"],\"EPSG:30730\":[\"EPSG:30730\",\"+proj=utm +zone=30 +ellps=clrk80 +towgs84=-209.3622,-87.8162,404.6198,0.0046,3.4784,0.5805,-1.4547 +units=m +no_defs \"],\"EPSG:30731\":[\"EPSG:30731\",\"+proj=utm +zone=31 +ellps=clrk80 +towgs84=-209.3622,-87.8162,404.6198,0.0046,3.4784,0.5805,-1.4547 +units=m +no_defs \"],\"EPSG:30732\":[\"EPSG:30732\",\"+proj=utm +zone=32 +ellps=clrk80 +towgs84=-209.3622,-87.8162,404.6198,0.0046,3.4784,0.5805,-1.4547 +units=m +no_defs \"],\"EPSG:30791\":[\"EPSG:30791\",\"+proj=lcc +lat_1=36 +lat_0=36 +lon_0=2.7 +k_0=0.999625544 +x_0=500135 +y_0=300090 +ellps=clrk80 +towgs84=-209.3622,-87.8162,404.6198,0.0046,3.4784,0.5805,-1.4547 +units=m +no_defs \"],\"EPSG:30792\":[\"EPSG:30792\",\"+proj=lcc +lat_1=33.3 +lat_0=33.3 +lon_0=2.7 +k_0=0.999625769 +x_0=500135 +y_0=300090 +ellps=clrk80 +towgs84=-209.3622,-87.8162,404.6198,0.0046,3.4784,0.5805,-1.4547 +units=m +no_defs \"],\"EPSG:31154\":[\"EPSG:31154\",\"+proj=tmerc +lat_0=0 +lon_0=-54 +k=0.9996 +x_0=500000 +y_0=0 +ellps=intl +towgs84=-265,120,-358,0,0,0,0 +units=m +no_defs \"],\"EPSG:31170\":[\"EPSG:31170\",\"+proj=tmerc +lat_0=0 +lon_0=-55.68333333333333 +k=0.9996 +x_0=500000 +y_0=0 +ellps=intl +towgs84=-265,120,-358,0,0,0,0 +units=m +no_defs \"],\"EPSG:31171\":[\"EPSG:31171\",\"+proj=tmerc +lat_0=0 +lon_0=-55.68333333333333 +k=0.9999 +x_0=500000 +y_0=0 +ellps=intl +towgs84=-265,120,-358,0,0,0,0 +units=m +no_defs \"],\"EPSG:31251\":[\"EPSG:31251\",\"+proj=tmerc +lat_0=0 +lon_0=28 +k=1 +x_0=0 +y_0=-5000000 +ellps=bessel +towgs84=682,-203,480,0,0,0,0 +pm=ferro +units=m +no_defs \"],\"EPSG:31253\":[\"EPSG:31253\",\"+proj=tmerc +lat_0=0 +lon_0=34 +k=1 +x_0=0 +y_0=-5000000 +ellps=bessel +towgs84=682,-203,480,0,0,0,0 +pm=ferro +units=m +no_defs \"],\"EPSG:31256\":[\"EPSG:31256\",\"+proj=tmerc +lat_0=0 +lon_0=16.33333333333333 +k=1 +x_0=0 +y_0=-5000000 +datum=hermannskogel +units=m +no_defs \"],\"EPSG:31257\":[\"EPSG:31257\",\"+proj=tmerc +lat_0=0 +lon_0=10.33333333333333 +k=1 +x_0=150000 +y_0=-5000000 +datum=hermannskogel +units=m +no_defs \"],\"EPSG:31259\":[\"EPSG:31259\",\"+proj=tmerc +lat_0=0 +lon_0=16.33333333333333 +k=1 +x_0=750000 +y_0=-5000000 +datum=hermannskogel +units=m +no_defs \"],\"EPSG:31265\":[\"EPSG:31265\",\"+proj=tmerc +lat_0=0 +lon_0=15 +k=1 +x_0=5500000 +y_0=0 +datum=hermannskogel +units=m +no_defs \"],\"EPSG:31266\":[\"EPSG:31266\",\"+proj=tmerc +lat_0=0 +lon_0=18 +k=1 +x_0=6500000 +y_0=0 +datum=hermannskogel +units=m +no_defs \"],\"EPSG:31268\":[\"EPSG:31268\",\"+proj=tmerc +lat_0=0 +lon_0=24 +k=1 +x_0=8500000 +y_0=0 +datum=hermannskogel +units=m +no_defs \"],\"EPSG:31275\":[\"EPSG:31275\",\"+proj=tmerc +lat_0=0 +lon_0=15 +k=0.9999 +x_0=5500000 +y_0=0 +datum=hermannskogel +units=m +no_defs \"],\"EPSG:32209\":[\"EPSG:32209\",\"+proj=utm +zone=9 +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:31277\":[\"EPSG:31277\",\"+proj=tmerc +lat_0=0 +lon_0=21 +k=0.9999 +x_0=7500000 +y_0=0 +datum=hermannskogel +units=m +no_defs \"],\"EPSG:31278\":[\"EPSG:31278\",\"+proj=tmerc +lat_0=0 +lon_0=21 +k=0.9999 +x_0=7500000 +y_0=0 +datum=hermannskogel +units=m +no_defs \"],\"EPSG:31279\":[\"EPSG:31279\",\"+proj=tmerc +lat_0=0 +lon_0=24 +k=0.9999 +x_0=8500000 +y_0=0 +datum=hermannskogel +units=m +no_defs \"],\"EPSG:31281\":[\"EPSG:31281\",\"+proj=tmerc +lat_0=0 +lon_0=28 +k=1 +x_0=0 +y_0=0 +ellps=bessel +towgs84=682,-203,480,0,0,0,0 +pm=ferro +units=m +no_defs \"],\"EPSG:31282\":[\"EPSG:31282\",\"+proj=tmerc +lat_0=0 +lon_0=31 +k=1 +x_0=0 +y_0=0 +ellps=bessel +towgs84=682,-203,480,0,0,0,0 +pm=ferro +units=m +no_defs \"],\"EPSG:31283\":[\"EPSG:31283\",\"+proj=tmerc +lat_0=0 +lon_0=34 +k=1 +x_0=0 +y_0=0 +ellps=bessel +towgs84=682,-203,480,0,0,0,0 +pm=ferro +units=m +no_defs \"],\"EPSG:31284\":[\"EPSG:31284\",\"+proj=tmerc +lat_0=0 +lon_0=10.33333333333333 +k=1 +x_0=150000 +y_0=0 +datum=hermannskogel +units=m +no_defs \"],\"EPSG:31286\":[\"EPSG:31286\",\"+proj=tmerc +lat_0=0 +lon_0=16.33333333333333 +k=1 +x_0=750000 +y_0=0 +datum=hermannskogel +units=m +no_defs \"],\"EPSG:31288\":[\"EPSG:31288\",\"+proj=tmerc +lat_0=0 +lon_0=28 +k=1 +x_0=150000 +y_0=0 +ellps=bessel +towgs84=682,-203,480,0,0,0,0 +pm=ferro +units=m +no_defs \"],\"EPSG:31289\":[\"EPSG:31289\",\"+proj=tmerc +lat_0=0 +lon_0=31 +k=1 +x_0=450000 +y_0=0 +ellps=bessel +towgs84=682,-203,480,0,0,0,0 +pm=ferro +units=m +no_defs \"],\"EPSG:31290\":[\"EPSG:31290\",\"+proj=tmerc +lat_0=0 +lon_0=34 +k=1 +x_0=750000 +y_0=0 +ellps=bessel +towgs84=682,-203,480,0,0,0,0 +pm=ferro +units=m +no_defs \"],\"EPSG:31291\":[\"EPSG:31291\",\"+proj=tmerc +lat_0=0 +lon_0=28 +k=1 +x_0=0 +y_0=0 +ellps=bessel +towgs84=682,-203,480,0,0,0,0 +pm=ferro +units=m +no_defs \"],\"EPSG:31292\":[\"EPSG:31292\",\"+proj=tmerc +lat_0=0 +lon_0=31 +k=1 +x_0=0 +y_0=0 +ellps=bessel +towgs84=682,-203,480,0,0,0,0 +pm=ferro +units=m +no_defs \"],\"EPSG:31293\":[\"EPSG:31293\",\"+proj=tmerc +lat_0=0 +lon_0=34 +k=1 +x_0=0 +y_0=0 +ellps=bessel +towgs84=682,-203,480,0,0,0,0 +pm=ferro +units=m +no_defs \"],\"EPSG:31294\":[\"EPSG:31294\",\"+proj=tmerc +lat_0=0 +lon_0=10.33333333333333 +k=1 +x_0=150000 +y_0=0 +datum=hermannskogel +units=m +no_defs \"],\"EPSG:31295\":[\"EPSG:31295\",\"+proj=tmerc +lat_0=0 +lon_0=13.33333333333333 +k=1 +x_0=450000 +y_0=0 +datum=hermannskogel +units=m +no_defs \"],\"EPSG:31296\":[\"EPSG:31296\",\"+proj=tmerc +lat_0=0 +lon_0=16.33333333333333 +k=1 +x_0=750000 +y_0=0 +datum=hermannskogel +units=m +no_defs \"],\"EPSG:4334\":[\"EPSG:4334\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:31461\":[\"EPSG:31461\",\"+proj=tmerc +lat_0=0 +lon_0=3 +k=1 +x_0=1500000 +y_0=0 +datum=potsdam +units=m +no_defs \"],\"EPSG:31462\":[\"EPSG:31462\",\"+proj=tmerc +lat_0=0 +lon_0=6 +k=1 +x_0=2500000 +y_0=0 +datum=potsdam +units=m +no_defs \"],\"EPSG:31465\":[\"EPSG:31465\",\"+proj=tmerc +lat_0=0 +lon_0=15 +k=1 +x_0=5500000 +y_0=0 +datum=potsdam +units=m +no_defs \"],\"EPSG:31466\":[\"EPSG:31466\",\"+proj=tmerc +lat_0=0 +lon_0=6 +k=1 +x_0=2500000 +y_0=0 +datum=potsdam +units=m +no_defs \"],\"EPSG:31469\":[\"EPSG:31469\",\"+proj=tmerc +lat_0=0 +lon_0=15 +k=1 +x_0=5500000 +y_0=0 +datum=potsdam +units=m +no_defs \"],\"EPSG:31528\":[\"EPSG:31528\",\"+proj=utm +zone=28 +a=6378249.2 +b=6356515 +towgs84=-23,259,-9,0,0,0,0 +units=m +no_defs \"],\"EPSG:31529\":[\"EPSG:31529\",\"+proj=utm +zone=29 +a=6378249.2 +b=6356515 +towgs84=-23,259,-9,0,0,0,0 +units=m +no_defs \"],\"EPSG:31600\":[\"EPSG:31600\",\"+proj=sterea +lat_0=45.9 +lon_0=25.39246588888889 +k=0.9996667 +x_0=500000 +y_0=500000 +ellps=intl +towgs84=103.25,-100.4,-307.19,0,0,0,0 +units=m +no_defs \"],\"EPSG:31838\":[\"EPSG:31838\",\"+proj=utm +zone=38 +ellps=WGS84 +towgs84=-3.2,-5.7,2.8,0,0,0,0 +units=m +no_defs \"],\"EPSG:31839\":[\"EPSG:31839\",\"+proj=utm +zone=39 +ellps=WGS84 +towgs84=-3.2,-5.7,2.8,0,0,0,0 +units=m +no_defs \"],\"EPSG:31900\":[\"EPSG:31900\",\"+proj=tmerc +lat_0=0 +lon_0=48 +k=0.9996 +x_0=500000 +y_0=0 +ellps=GRS80 +towgs84=-20.8,11.3,2.4,0,0,0,0 +units=m +no_defs \"],\"EPSG:31901\":[\"EPSG:31901\",\"+proj=tmerc +lat_0=0 +lon_0=48 +k=1 +x_0=500000 +y_0=0 +ellps=GRS80 +towgs84=-20.8,11.3,2.4,0,0,0,0 +units=m +no_defs \"],\"EPSG:31965\":[\"EPSG:31965\",\"+proj=utm +zone=11 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:31966\":[\"EPSG:31966\",\"+proj=utm +zone=12 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:31967\":[\"EPSG:31967\",\"+proj=utm +zone=13 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:31968\":[\"EPSG:31968\",\"+proj=utm +zone=14 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:31969\":[\"EPSG:31969\",\"+proj=utm +zone=15 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:31970\":[\"EPSG:31970\",\"+proj=utm +zone=16 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:31971\":[\"EPSG:31971\",\"+proj=utm +zone=17 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:31972\":[\"EPSG:31972\",\"+proj=utm +zone=18 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:31973\":[\"EPSG:31973\",\"+proj=utm +zone=19 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:31974\":[\"EPSG:31974\",\"+proj=utm +zone=20 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:31975\":[\"EPSG:31975\",\"+proj=utm +zone=21 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:31976\":[\"EPSG:31976\",\"+proj=utm +zone=22 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:31977\":[\"EPSG:31977\",\"+proj=utm +zone=17 +south +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:31978\":[\"EPSG:31978\",\"+proj=utm +zone=18 +south +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:31979\":[\"EPSG:31979\",\"+proj=utm +zone=19 +south +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:31980\":[\"EPSG:31980\",\"+proj=utm +zone=20 +south +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:31982\":[\"EPSG:31982\",\"+proj=utm +zone=22 +south +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:31986\":[\"EPSG:31986\",\"+proj=utm +zone=17 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:31987\":[\"EPSG:31987\",\"+proj=utm +zone=18 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:31988\":[\"EPSG:31988\",\"+proj=utm +zone=19 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:31989\":[\"EPSG:31989\",\"+proj=utm +zone=20 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:31990\":[\"EPSG:31990\",\"+proj=utm +zone=21 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:31991\":[\"EPSG:31991\",\"+proj=utm +zone=22 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:31993\":[\"EPSG:31993\",\"+proj=utm +zone=18 +south +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:31994\":[\"EPSG:31994\",\"+proj=utm +zone=19 +south +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:31995\":[\"EPSG:31995\",\"+proj=utm +zone=20 +south +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:31996\":[\"EPSG:31996\",\"+proj=utm +zone=21 +south +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:31997\":[\"EPSG:31997\",\"+proj=utm +zone=22 +south +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:31998\":[\"EPSG:31998\",\"+proj=utm +zone=23 +south +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:31999\":[\"EPSG:31999\",\"+proj=utm +zone=24 +south +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:32000\":[\"EPSG:32000\",\"+proj=utm +zone=25 +south +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:32001\":[\"EPSG:32001\",\"+proj=lcc +lat_1=48.71666666666667 +lat_2=47.85 +lat_0=47 +lon_0=-109.5 +x_0=609601.2192024384 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:32002\":[\"EPSG:32002\",\"+proj=lcc +lat_1=47.88333333333333 +lat_2=46.45 +lat_0=45.83333333333334 +lon_0=-109.5 +x_0=609601.2192024384 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:32003\":[\"EPSG:32003\",\"+proj=lcc +lat_1=46.4 +lat_2=44.86666666666667 +lat_0=44 +lon_0=-109.5 +x_0=609601.2192024384 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:4335\":[\"EPSG:4335\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:32006\":[\"EPSG:32006\",\"+proj=lcc +lat_1=40.28333333333333 +lat_2=41.71666666666667 +lat_0=39.66666666666666 +lon_0=-99.5 +x_0=609601.2192024384 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:32007\":[\"EPSG:32007\",\"+proj=tmerc +lat_0=34.75 +lon_0=-115.5833333333333 +k=0.9999 +x_0=152400.3048006096 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:32008\":[\"EPSG:32008\",\"+proj=tmerc +lat_0=34.75 +lon_0=-116.6666666666667 +k=0.9999 +x_0=152400.3048006096 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:32009\":[\"EPSG:32009\",\"+proj=tmerc +lat_0=34.75 +lon_0=-118.5833333333333 +k=0.9999 +x_0=152400.3048006096 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:32010\":[\"EPSG:32010\",\"+proj=tmerc +lat_0=42.5 +lon_0=-71.66666666666667 +k=0.999966667 +x_0=152400.3048006096 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:32011\":[\"EPSG:32011\",\"+proj=tmerc +lat_0=38.83333333333334 +lon_0=-74.66666666666667 +k=0.9999749999999999 +x_0=609601.2192024384 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:32012\":[\"EPSG:32012\",\"+proj=tmerc +lat_0=31 +lon_0=-104.3333333333333 +k=0.999909091 +x_0=152400.3048006096 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:32013\":[\"EPSG:32013\",\"+proj=tmerc +lat_0=31 +lon_0=-106.25 +k=0.9999 +x_0=152400.3048006096 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:32014\":[\"EPSG:32014\",\"+proj=tmerc +lat_0=31 +lon_0=-107.8333333333333 +k=0.999916667 +x_0=152400.3048006096 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:32015\":[\"EPSG:32015\",\"+proj=tmerc +lat_0=40 +lon_0=-74.33333333333333 +k=0.999966667 +x_0=152400.3048006096 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:32016\":[\"EPSG:32016\",\"+proj=tmerc +lat_0=40 +lon_0=-76.58333333333333 +k=0.9999375 +x_0=152400.3048006096 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:32017\":[\"EPSG:32017\",\"+proj=tmerc +lat_0=40 +lon_0=-78.58333333333333 +k=0.9999375 +x_0=152400.3048006096 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:32018\":[\"EPSG:32018\",\"+proj=lcc +lat_1=41.03333333333333 +lat_2=40.66666666666666 +lat_0=40.5 +lon_0=-74 +x_0=304800.6096012192 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:32020\":[\"EPSG:32020\",\"+proj=lcc +lat_1=47.43333333333333 +lat_2=48.73333333333333 +lat_0=47 +lon_0=-100.5 +x_0=609601.2192024384 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:32021\":[\"EPSG:32021\",\"+proj=lcc +lat_1=46.18333333333333 +lat_2=47.48333333333333 +lat_0=45.66666666666666 +lon_0=-100.5 +x_0=609601.2192024384 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:32022\":[\"EPSG:32022\",\"+proj=lcc +lat_1=40.43333333333333 +lat_2=41.7 +lat_0=39.66666666666666 +lon_0=-82.5 +x_0=609601.2192024384 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:32023\":[\"EPSG:32023\",\"+proj=lcc +lat_1=38.73333333333333 +lat_2=40.03333333333333 +lat_0=38 +lon_0=-82.5 +x_0=609601.2192024384 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:32024\":[\"EPSG:32024\",\"+proj=lcc +lat_1=35.56666666666667 +lat_2=36.76666666666667 +lat_0=35 +lon_0=-98 +x_0=609601.2192024384 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:32025\":[\"EPSG:32025\",\"+proj=lcc +lat_1=33.93333333333333 +lat_2=35.23333333333333 +lat_0=33.33333333333334 +lon_0=-98 +x_0=609601.2192024384 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:32026\":[\"EPSG:32026\",\"+proj=lcc +lat_1=44.33333333333334 +lat_2=46 +lat_0=43.66666666666666 +lon_0=-120.5 +x_0=609601.2192024384 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:32027\":[\"EPSG:32027\",\"+proj=lcc +lat_1=42.33333333333334 +lat_2=44 +lat_0=41.66666666666666 +lon_0=-120.5 +x_0=609601.2192024384 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:32028\":[\"EPSG:32028\",\"+proj=lcc +lat_1=40.88333333333333 +lat_2=41.95 +lat_0=40.16666666666666 +lon_0=-77.75 +x_0=609601.2192024384 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:32029\":[\"EPSG:32029\",\"+proj=lcc +lat_1=39.93333333333333 +lat_2=40.8 +lat_0=39.33333333333334 +lon_0=-77.75 +x_0=609601.2192024384 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:32030\":[\"EPSG:32030\",\"+proj=tmerc +lat_0=41.08333333333334 +lon_0=-71.5 +k=0.9999938 +x_0=152400.3048006096 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:32210\":[\"EPSG:32210\",\"+proj=utm +zone=10 +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32033\":[\"EPSG:32033\",\"+proj=lcc +lat_1=32.33333333333334 +lat_2=33.66666666666666 +lat_0=31.83333333333333 +lon_0=-81 +x_0=609601.2192024384 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:32034\":[\"EPSG:32034\",\"+proj=lcc +lat_1=44.41666666666666 +lat_2=45.68333333333333 +lat_0=43.83333333333334 +lon_0=-100 +x_0=609601.2192024384 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:32035\":[\"EPSG:32035\",\"+proj=lcc +lat_1=42.83333333333334 +lat_2=44.4 +lat_0=42.33333333333334 +lon_0=-100.3333333333333 +x_0=609601.2192024384 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:32037\":[\"EPSG:32037\",\"+proj=lcc +lat_1=34.65 +lat_2=36.18333333333333 +lat_0=34 +lon_0=-101.5 +x_0=609601.2192024384 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:32038\":[\"EPSG:32038\",\"+proj=lcc +lat_1=32.13333333333333 +lat_2=33.96666666666667 +lat_0=31.66666666666667 +lon_0=-97.5 +x_0=609601.2192024384 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:4336\":[\"EPSG:4336\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:32040\":[\"EPSG:32040\",\"+proj=lcc +lat_1=28.38333333333333 +lat_2=30.28333333333333 +lat_0=27.83333333333333 +lon_0=-99 +x_0=609601.2192024384 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:32041\":[\"EPSG:32041\",\"+proj=lcc +lat_1=26.16666666666667 +lat_2=27.83333333333333 +lat_0=25.66666666666667 +lon_0=-98.5 +x_0=609601.2192024384 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:32042\":[\"EPSG:32042\",\"+proj=lcc +lat_1=40.71666666666667 +lat_2=41.78333333333333 +lat_0=40.33333333333334 +lon_0=-111.5 +x_0=609601.2192024384 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:32043\":[\"EPSG:32043\",\"+proj=lcc +lat_1=39.01666666666667 +lat_2=40.65 +lat_0=38.33333333333334 +lon_0=-111.5 +x_0=609601.2192024384 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:32044\":[\"EPSG:32044\",\"+proj=lcc +lat_1=37.21666666666667 +lat_2=38.35 +lat_0=36.66666666666666 +lon_0=-111.5 +x_0=609601.2192024384 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:32046\":[\"EPSG:32046\",\"+proj=lcc +lat_1=38.03333333333333 +lat_2=39.2 +lat_0=37.66666666666666 +lon_0=-78.5 +x_0=609601.2192024384 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:32047\":[\"EPSG:32047\",\"+proj=lcc +lat_1=36.76666666666667 +lat_2=37.96666666666667 +lat_0=36.33333333333334 +lon_0=-78.5 +x_0=609601.2192024384 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:32048\":[\"EPSG:32048\",\"+proj=lcc +lat_1=47.5 +lat_2=48.73333333333333 +lat_0=47 +lon_0=-120.8333333333333 +x_0=609601.2192024384 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:32050\":[\"EPSG:32050\",\"+proj=lcc +lat_1=39 +lat_2=40.25 +lat_0=38.5 +lon_0=-79.5 +x_0=609601.2192024384 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:32051\":[\"EPSG:32051\",\"+proj=lcc +lat_1=37.48333333333333 +lat_2=38.88333333333333 +lat_0=37 +lon_0=-81 +x_0=609601.2192024384 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:32052\":[\"EPSG:32052\",\"+proj=lcc +lat_1=45.56666666666667 +lat_2=46.76666666666667 +lat_0=45.16666666666666 +lon_0=-90 +x_0=609601.2192024384 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:32053\":[\"EPSG:32053\",\"+proj=lcc +lat_1=44.25 +lat_2=45.5 +lat_0=43.83333333333334 +lon_0=-90 +x_0=609601.2192024384 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:32054\":[\"EPSG:32054\",\"+proj=lcc +lat_1=42.73333333333333 +lat_2=44.06666666666667 +lat_0=42 +lon_0=-90 +x_0=609601.2192024384 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:32055\":[\"EPSG:32055\",\"+proj=tmerc +lat_0=40.66666666666666 +lon_0=-105.1666666666667 +k=0.999941177 +x_0=152400.3048006096 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:32185\":[\"EPSG:32185\",\"+proj=tmerc +lat_0=0 +lon_0=-64.5 +k=0.9999 +x_0=304800 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:32056\":[\"EPSG:32056\",\"+proj=tmerc +lat_0=40.66666666666666 +lon_0=-107.3333333333333 +k=0.999941177 +x_0=152400.3048006096 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:32057\":[\"EPSG:32057\",\"+proj=tmerc +lat_0=40.66666666666666 +lon_0=-108.75 +k=0.999941177 +x_0=152400.3048006096 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:32058\":[\"EPSG:32058\",\"+proj=tmerc +lat_0=40.66666666666666 +lon_0=-110.0833333333333 +k=0.999941177 +x_0=152400.3048006096 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:32061\":[\"EPSG:32061\",\"+proj=lcc +lat_1=16.81666666666667 +lat_0=16.81666666666667 +lon_0=-90.33333333333333 +k_0=0.99992226 +x_0=500000 +y_0=292209.579 +datum=NAD27 +units=m +no_defs \"],\"EPSG:32062\":[\"EPSG:32062\",\"+proj=lcc +lat_1=14.9 +lat_0=14.9 +lon_0=-90.33333333333333 +k_0=0.99989906 +x_0=500000 +y_0=325992.681 +datum=NAD27 +units=m +no_defs \"],\"EPSG:32064\":[\"EPSG:32064\",\"+proj=tmerc +lat_0=0 +lon_0=-99 +k=0.9996 +x_0=500000.001016002 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:32065\":[\"EPSG:32065\",\"+proj=tmerc +lat_0=0 +lon_0=-93 +k=0.9996 +x_0=500000.001016002 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:32066\":[\"EPSG:32066\",\"+proj=tmerc +lat_0=0 +lon_0=-87 +k=0.9996 +x_0=500000.001016002 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:32067\":[\"EPSG:32067\",\"+proj=tmerc +lat_0=0 +lon_0=-81 +k=0.9996 +x_0=500000.001016002 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:4337\":[\"EPSG:4337\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:32074\":[\"EPSG:32074\",\"+proj=tmerc +lat_0=0 +lon_0=-99 +k=0.9996 +x_0=500000.001016002 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:32075\":[\"EPSG:32075\",\"+proj=tmerc +lat_0=0 +lon_0=-93 +k=0.9996 +x_0=500000.001016002 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:32076\":[\"EPSG:32076\",\"+proj=tmerc +lat_0=0 +lon_0=-87 +k=0.9996 +x_0=500000.001016002 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:32077\":[\"EPSG:32077\",\"+proj=tmerc +lat_0=0 +lon_0=-81 +k=0.9996 +x_0=500000.001016002 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:32081\":[\"EPSG:32081\",\"+proj=tmerc +lat_0=0 +lon_0=-53 +k=0.9999 +x_0=304800 +y_0=0 +datum=NAD27 +units=m +no_defs \"],\"EPSG:32082\":[\"EPSG:32082\",\"+proj=tmerc +lat_0=0 +lon_0=-56 +k=0.9999 +x_0=304800 +y_0=0 +datum=NAD27 +units=m +no_defs \"],\"EPSG:32083\":[\"EPSG:32083\",\"+proj=tmerc +lat_0=0 +lon_0=-58.5 +k=0.9999 +x_0=304800 +y_0=0 +datum=NAD27 +units=m +no_defs \"],\"EPSG:32084\":[\"EPSG:32084\",\"+proj=tmerc +lat_0=0 +lon_0=-61.5 +k=0.9999 +x_0=304800 +y_0=0 +datum=NAD27 +units=m +no_defs \"],\"EPSG:32085\":[\"EPSG:32085\",\"+proj=tmerc +lat_0=0 +lon_0=-64.5 +k=0.9999 +x_0=304800 +y_0=0 +datum=NAD27 +units=m +no_defs \"],\"EPSG:32086\":[\"EPSG:32086\",\"+proj=tmerc +lat_0=0 +lon_0=-67.5 +k=0.9999 +x_0=304800 +y_0=0 +datum=NAD27 +units=m +no_defs \"],\"EPSG:32098\":[\"EPSG:32098\",\"+proj=lcc +lat_1=60 +lat_2=46 +lat_0=44 +lon_0=-68.5 +x_0=0 +y_0=0 +datum=NAD27 +units=m +no_defs \"],\"EPSG:32099\":[\"EPSG:32099\",\"+proj=lcc +lat_1=27.83333333333333 +lat_2=26.16666666666667 +lat_0=25.66666666666667 +lon_0=-91.33333333333333 +x_0=609601.2192024384 +y_0=0 +datum=NAD27 +units=us-ft +no_defs \"],\"EPSG:32104\":[\"EPSG:32104\",\"+proj=lcc +lat_1=43 +lat_2=40 +lat_0=39.83333333333334 +lon_0=-100 +x_0=500000 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:32107\":[\"EPSG:32107\",\"+proj=tmerc +lat_0=34.75 +lon_0=-115.5833333333333 +k=0.9999 +x_0=200000 +y_0=8000000 +datum=NAD83 +units=m +no_defs \"],\"EPSG:32108\":[\"EPSG:32108\",\"+proj=tmerc +lat_0=34.75 +lon_0=-116.6666666666667 +k=0.9999 +x_0=500000 +y_0=6000000 +datum=NAD83 +units=m +no_defs \"],\"EPSG:32109\":[\"EPSG:32109\",\"+proj=tmerc +lat_0=34.75 +lon_0=-118.5833333333333 +k=0.9999 +x_0=800000 +y_0=4000000 +datum=NAD83 +units=m +no_defs \"],\"EPSG:32110\":[\"EPSG:32110\",\"+proj=tmerc +lat_0=42.5 +lon_0=-71.66666666666667 +k=0.999966667 +x_0=300000 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:32111\":[\"EPSG:32111\",\"+proj=tmerc +lat_0=38.83333333333334 +lon_0=-74.5 +k=0.9999 +x_0=150000 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:4338\":[\"EPSG:4338\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:32112\":[\"EPSG:32112\",\"+proj=tmerc +lat_0=31 +lon_0=-104.3333333333333 +k=0.999909091 +x_0=165000 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:32113\":[\"EPSG:32113\",\"+proj=tmerc +lat_0=31 +lon_0=-106.25 +k=0.9999 +x_0=500000 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:32114\":[\"EPSG:32114\",\"+proj=tmerc +lat_0=31 +lon_0=-107.8333333333333 +k=0.999916667 +x_0=830000 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:32115\":[\"EPSG:32115\",\"+proj=tmerc +lat_0=38.83333333333334 +lon_0=-74.5 +k=0.9999 +x_0=150000 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:32117\":[\"EPSG:32117\",\"+proj=tmerc +lat_0=40 +lon_0=-78.58333333333333 +k=0.9999375 +x_0=350000 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:32120\":[\"EPSG:32120\",\"+proj=lcc +lat_1=48.73333333333333 +lat_2=47.43333333333333 +lat_0=47 +lon_0=-100.5 +x_0=600000 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:4340\":[\"EPSG:4340\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:32121\":[\"EPSG:32121\",\"+proj=lcc +lat_1=47.48333333333333 +lat_2=46.18333333333333 +lat_0=45.66666666666666 +lon_0=-100.5 +x_0=600000 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:32122\":[\"EPSG:32122\",\"+proj=lcc +lat_1=41.7 +lat_2=40.43333333333333 +lat_0=39.66666666666666 +lon_0=-82.5 +x_0=600000 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:32123\":[\"EPSG:32123\",\"+proj=lcc +lat_1=40.03333333333333 +lat_2=38.73333333333333 +lat_0=38 +lon_0=-82.5 +x_0=600000 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:32124\":[\"EPSG:32124\",\"+proj=lcc +lat_1=36.76666666666667 +lat_2=35.56666666666667 +lat_0=35 +lon_0=-98 +x_0=600000 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:32125\":[\"EPSG:32125\",\"+proj=lcc +lat_1=35.23333333333333 +lat_2=33.93333333333333 +lat_0=33.33333333333334 +lon_0=-98 +x_0=600000 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:32126\":[\"EPSG:32126\",\"+proj=lcc +lat_1=46 +lat_2=44.33333333333334 +lat_0=43.66666666666666 +lon_0=-120.5 +x_0=2500000 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:32127\":[\"EPSG:32127\",\"+proj=lcc +lat_1=44 +lat_2=42.33333333333334 +lat_0=41.66666666666666 +lon_0=-120.5 +x_0=1500000 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:32128\":[\"EPSG:32128\",\"+proj=lcc +lat_1=41.95 +lat_2=40.88333333333333 +lat_0=40.16666666666666 +lon_0=-77.75 +x_0=600000 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:32156\":[\"EPSG:32156\",\"+proj=tmerc +lat_0=40.5 +lon_0=-107.3333333333333 +k=0.9999375 +x_0=400000 +y_0=100000 +datum=NAD83 +units=m +no_defs \"],\"EPSG:32129\":[\"EPSG:32129\",\"+proj=lcc +lat_1=40.96666666666667 +lat_2=39.93333333333333 +lat_0=39.33333333333334 +lon_0=-77.75 +x_0=600000 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:32133\":[\"EPSG:32133\",\"+proj=lcc +lat_1=34.83333333333334 +lat_2=32.5 +lat_0=31.83333333333333 +lon_0=-81 +x_0=609600 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:32134\":[\"EPSG:32134\",\"+proj=lcc +lat_1=45.68333333333333 +lat_2=44.41666666666666 +lat_0=43.83333333333334 +lon_0=-100 +x_0=600000 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:32135\":[\"EPSG:32135\",\"+proj=lcc +lat_1=44.4 +lat_2=42.83333333333334 +lat_0=42.33333333333334 +lon_0=-100.3333333333333 +x_0=600000 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:32136\":[\"EPSG:32136\",\"+proj=lcc +lat_1=36.41666666666666 +lat_2=35.25 +lat_0=34.33333333333334 +lon_0=-86 +x_0=600000 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:32137\":[\"EPSG:32137\",\"+proj=lcc +lat_1=36.18333333333333 +lat_2=34.65 +lat_0=34 +lon_0=-101.5 +x_0=200000 +y_0=1000000 +datum=NAD83 +units=m +no_defs \"],\"EPSG:32138\":[\"EPSG:32138\",\"+proj=lcc +lat_1=33.96666666666667 +lat_2=32.13333333333333 +lat_0=31.66666666666667 +lon_0=-98.5 +x_0=600000 +y_0=2000000 +datum=NAD83 +units=m +no_defs \"],\"EPSG:32157\":[\"EPSG:32157\",\"+proj=tmerc +lat_0=40.5 +lon_0=-108.75 +k=0.9999375 +x_0=600000 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:32140\":[\"EPSG:32140\",\"+proj=lcc +lat_1=30.28333333333333 +lat_2=28.38333333333333 +lat_0=27.83333333333333 +lon_0=-99 +x_0=600000 +y_0=4000000 +datum=NAD83 +units=m +no_defs \"],\"EPSG:32141\":[\"EPSG:32141\",\"+proj=lcc +lat_1=27.83333333333333 +lat_2=26.16666666666667 +lat_0=25.66666666666667 +lon_0=-98.5 +x_0=300000 +y_0=5000000 +datum=NAD83 +units=m +no_defs \"],\"EPSG:32142\":[\"EPSG:32142\",\"+proj=lcc +lat_1=41.78333333333333 +lat_2=40.71666666666667 +lat_0=40.33333333333334 +lon_0=-111.5 +x_0=500000 +y_0=1000000 +datum=NAD83 +units=m +no_defs \"],\"EPSG:32143\":[\"EPSG:32143\",\"+proj=lcc +lat_1=40.65 +lat_2=39.01666666666667 +lat_0=38.33333333333334 +lon_0=-111.5 +x_0=500000 +y_0=2000000 +datum=NAD83 +units=m +no_defs \"],\"EPSG:32144\":[\"EPSG:32144\",\"+proj=lcc +lat_1=38.35 +lat_2=37.21666666666667 +lat_0=36.66666666666666 +lon_0=-111.5 +x_0=500000 +y_0=3000000 +datum=NAD83 +units=m +no_defs \"],\"EPSG:32145\":[\"EPSG:32145\",\"+proj=tmerc +lat_0=42.5 +lon_0=-72.5 +k=0.999964286 +x_0=500000 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:32146\":[\"EPSG:32146\",\"+proj=lcc +lat_1=39.2 +lat_2=38.03333333333333 +lat_0=37.66666666666666 +lon_0=-78.5 +x_0=3500000 +y_0=2000000 +datum=NAD83 +units=m +no_defs \"],\"EPSG:32158\":[\"EPSG:32158\",\"+proj=tmerc +lat_0=40.5 +lon_0=-110.0833333333333 +k=0.9999375 +x_0=800000 +y_0=100000 +datum=NAD83 +units=m +no_defs \"],\"EPSG:32147\":[\"EPSG:32147\",\"+proj=lcc +lat_1=37.96666666666667 +lat_2=36.76666666666667 +lat_0=36.33333333333334 +lon_0=-78.5 +x_0=3500000 +y_0=1000000 +datum=NAD83 +units=m +no_defs \"],\"EPSG:32148\":[\"EPSG:32148\",\"+proj=lcc +lat_1=48.73333333333333 +lat_2=47.5 +lat_0=47 +lon_0=-120.8333333333333 +x_0=500000 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:32149\":[\"EPSG:32149\",\"+proj=lcc +lat_1=47.33333333333334 +lat_2=45.83333333333334 +lat_0=45.33333333333334 +lon_0=-120.5 +x_0=500000 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:32150\":[\"EPSG:32150\",\"+proj=lcc +lat_1=40.25 +lat_2=39 +lat_0=38.5 +lon_0=-79.5 +x_0=600000 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:32151\":[\"EPSG:32151\",\"+proj=lcc +lat_1=38.88333333333333 +lat_2=37.48333333333333 +lat_0=37 +lon_0=-81 +x_0=600000 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:32152\":[\"EPSG:32152\",\"+proj=lcc +lat_1=46.76666666666667 +lat_2=45.56666666666667 +lat_0=45.16666666666666 +lon_0=-90 +x_0=600000 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:32153\":[\"EPSG:32153\",\"+proj=lcc +lat_1=45.5 +lat_2=44.25 +lat_0=43.83333333333334 +lon_0=-90 +x_0=600000 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:32154\":[\"EPSG:32154\",\"+proj=lcc +lat_1=44.06666666666667 +lat_2=42.73333333333333 +lat_0=42 +lon_0=-90 +x_0=600000 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:32155\":[\"EPSG:32155\",\"+proj=tmerc +lat_0=40.5 +lon_0=-105.1666666666667 +k=0.9999375 +x_0=200000 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:32161\":[\"EPSG:32161\",\"+proj=lcc +lat_1=18.43333333333333 +lat_2=18.03333333333333 +lat_0=17.83333333333333 +lon_0=-66.43333333333334 +x_0=200000 +y_0=200000 +datum=NAD83 +units=m +no_defs \"],\"EPSG:32164\":[\"EPSG:32164\",\"+proj=tmerc +lat_0=0 +lon_0=-99 +k=0.9996 +x_0=500000.001016002 +y_0=0 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:32165\":[\"EPSG:32165\",\"+proj=tmerc +lat_0=0 +lon_0=-93 +k=0.9996 +x_0=500000.001016002 +y_0=0 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:32166\":[\"EPSG:32166\",\"+proj=tmerc +lat_0=0 +lon_0=-87 +k=0.9996 +x_0=500000.001016002 +y_0=0 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:32167\":[\"EPSG:32167\",\"+proj=tmerc +lat_0=0 +lon_0=-81 +k=0.9996 +x_0=500000.001016002 +y_0=0 +datum=NAD83 +units=us-ft +no_defs \"],\"EPSG:32180\":[\"EPSG:32180\",\"+proj=tmerc +lat_0=0 +lon_0=-55.5 +k=0.9999 +x_0=304800 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:32181\":[\"EPSG:32181\",\"+proj=tmerc +lat_0=0 +lon_0=-53 +k=0.9999 +x_0=304800 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:32182\":[\"EPSG:32182\",\"+proj=tmerc +lat_0=0 +lon_0=-56 +k=0.9999 +x_0=304800 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:32183\":[\"EPSG:32183\",\"+proj=tmerc +lat_0=0 +lon_0=-58.5 +k=0.9999 +x_0=304800 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:32184\":[\"EPSG:32184\",\"+proj=tmerc +lat_0=0 +lon_0=-61.5 +k=0.9999 +x_0=304800 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:32186\":[\"EPSG:32186\",\"+proj=tmerc +lat_0=0 +lon_0=-67.5 +k=0.9999 +x_0=304800 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:32187\":[\"EPSG:32187\",\"+proj=tmerc +lat_0=0 +lon_0=-70.5 +k=0.9999 +x_0=304800 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:32188\":[\"EPSG:32188\",\"+proj=tmerc +lat_0=0 +lon_0=-73.5 +k=0.9999 +x_0=304800 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:32189\":[\"EPSG:32189\",\"+proj=tmerc +lat_0=0 +lon_0=-76.5 +k=0.9999 +x_0=304800 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:32190\":[\"EPSG:32190\",\"+proj=tmerc +lat_0=0 +lon_0=-79.5 +k=0.9999 +x_0=304800 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:32191\":[\"EPSG:32191\",\"+proj=tmerc +lat_0=0 +lon_0=-82.5 +k=0.9999 +x_0=304800 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:32192\":[\"EPSG:32192\",\"+proj=tmerc +lat_0=0 +lon_0=-81 +k=0.9999 +x_0=304800 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:32193\":[\"EPSG:32193\",\"+proj=tmerc +lat_0=0 +lon_0=-84 +k=0.9999 +x_0=304800 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:32194\":[\"EPSG:32194\",\"+proj=tmerc +lat_0=0 +lon_0=-87 +k=0.9999 +x_0=304800 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:32197\":[\"EPSG:32197\",\"+proj=tmerc +lat_0=0 +lon_0=-96 +k=0.9999 +x_0=304800 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:32198\":[\"EPSG:32198\",\"+proj=lcc +lat_1=60 +lat_2=46 +lat_0=44 +lon_0=-68.5 +x_0=0 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:32199\":[\"EPSG:32199\",\"+proj=lcc +lat_1=27.83333333333333 +lat_2=26.16666666666667 +lat_0=25.5 +lon_0=-91.33333333333333 +x_0=1000000 +y_0=0 +datum=NAD83 +units=m +no_defs \"],\"EPSG:32201\":[\"EPSG:32201\",\"+proj=utm +zone=1 +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32202\":[\"EPSG:32202\",\"+proj=utm +zone=2 +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32203\":[\"EPSG:32203\",\"+proj=utm +zone=3 +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32204\":[\"EPSG:32204\",\"+proj=utm +zone=4 +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32205\":[\"EPSG:32205\",\"+proj=utm +zone=5 +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32206\":[\"EPSG:32206\",\"+proj=utm +zone=6 +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32211\":[\"EPSG:32211\",\"+proj=utm +zone=11 +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32212\":[\"EPSG:32212\",\"+proj=utm +zone=12 +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32214\":[\"EPSG:32214\",\"+proj=utm +zone=14 +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32215\":[\"EPSG:32215\",\"+proj=utm +zone=15 +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32216\":[\"EPSG:32216\",\"+proj=utm +zone=16 +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32217\":[\"EPSG:32217\",\"+proj=utm +zone=17 +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32218\":[\"EPSG:32218\",\"+proj=utm +zone=18 +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32219\":[\"EPSG:32219\",\"+proj=utm +zone=19 +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32220\":[\"EPSG:32220\",\"+proj=utm +zone=20 +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:4342\":[\"EPSG:4342\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:32221\":[\"EPSG:32221\",\"+proj=utm +zone=21 +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32222\":[\"EPSG:32222\",\"+proj=utm +zone=22 +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32223\":[\"EPSG:32223\",\"+proj=utm +zone=23 +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32224\":[\"EPSG:32224\",\"+proj=utm +zone=24 +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32225\":[\"EPSG:32225\",\"+proj=utm +zone=25 +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32226\":[\"EPSG:32226\",\"+proj=utm +zone=26 +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32227\":[\"EPSG:32227\",\"+proj=utm +zone=27 +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32228\":[\"EPSG:32228\",\"+proj=utm +zone=28 +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32229\":[\"EPSG:32229\",\"+proj=utm +zone=29 +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32230\":[\"EPSG:32230\",\"+proj=utm +zone=30 +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:4344\":[\"EPSG:4344\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:32231\":[\"EPSG:32231\",\"+proj=utm +zone=31 +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32232\":[\"EPSG:32232\",\"+proj=utm +zone=32 +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32233\":[\"EPSG:32233\",\"+proj=utm +zone=33 +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32234\":[\"EPSG:32234\",\"+proj=utm +zone=34 +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32235\":[\"EPSG:32235\",\"+proj=utm +zone=35 +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32236\":[\"EPSG:32236\",\"+proj=utm +zone=36 +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32237\":[\"EPSG:32237\",\"+proj=utm +zone=37 +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32238\":[\"EPSG:32238\",\"+proj=utm +zone=38 +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32239\":[\"EPSG:32239\",\"+proj=utm +zone=39 +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32240\":[\"EPSG:32240\",\"+proj=utm +zone=40 +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:4346\":[\"EPSG:4346\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:32241\":[\"EPSG:32241\",\"+proj=utm +zone=41 +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32243\":[\"EPSG:32243\",\"+proj=utm +zone=43 +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32244\":[\"EPSG:32244\",\"+proj=utm +zone=44 +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32245\":[\"EPSG:32245\",\"+proj=utm +zone=45 +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32246\":[\"EPSG:32246\",\"+proj=utm +zone=46 +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32247\":[\"EPSG:32247\",\"+proj=utm +zone=47 +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32248\":[\"EPSG:32248\",\"+proj=utm +zone=48 +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32249\":[\"EPSG:32249\",\"+proj=utm +zone=49 +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32250\":[\"EPSG:32250\",\"+proj=utm +zone=50 +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32251\":[\"EPSG:32251\",\"+proj=utm +zone=51 +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32252\":[\"EPSG:32252\",\"+proj=utm +zone=52 +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32253\":[\"EPSG:32253\",\"+proj=utm +zone=53 +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32254\":[\"EPSG:32254\",\"+proj=utm +zone=54 +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32255\":[\"EPSG:32255\",\"+proj=utm +zone=55 +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32256\":[\"EPSG:32256\",\"+proj=utm +zone=56 +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32257\":[\"EPSG:32257\",\"+proj=utm +zone=57 +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32258\":[\"EPSG:32258\",\"+proj=utm +zone=58 +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32259\":[\"EPSG:32259\",\"+proj=utm +zone=59 +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32260\":[\"EPSG:32260\",\"+proj=utm +zone=60 +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:4350\":[\"EPSG:4350\",\"+proj=geocent +ellps=WGS84 +units=m +no_defs \"],\"EPSG:32301\":[\"EPSG:32301\",\"+proj=utm +zone=1 +south +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32302\":[\"EPSG:32302\",\"+proj=utm +zone=2 +south +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32303\":[\"EPSG:32303\",\"+proj=utm +zone=3 +south +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32304\":[\"EPSG:32304\",\"+proj=utm +zone=4 +south +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32305\":[\"EPSG:32305\",\"+proj=utm +zone=5 +south +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32306\":[\"EPSG:32306\",\"+proj=utm +zone=6 +south +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32307\":[\"EPSG:32307\",\"+proj=utm +zone=7 +south +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32308\":[\"EPSG:32308\",\"+proj=utm +zone=8 +south +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32309\":[\"EPSG:32309\",\"+proj=utm +zone=9 +south +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32310\":[\"EPSG:32310\",\"+proj=utm +zone=10 +south +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32311\":[\"EPSG:32311\",\"+proj=utm +zone=11 +south +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32312\":[\"EPSG:32312\",\"+proj=utm +zone=12 +south +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32313\":[\"EPSG:32313\",\"+proj=utm +zone=13 +south +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32314\":[\"EPSG:32314\",\"+proj=utm +zone=14 +south +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32315\":[\"EPSG:32315\",\"+proj=utm +zone=15 +south +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32316\":[\"EPSG:32316\",\"+proj=utm +zone=16 +south +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32317\":[\"EPSG:32317\",\"+proj=utm +zone=17 +south +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32318\":[\"EPSG:32318\",\"+proj=utm +zone=18 +south +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32319\":[\"EPSG:32319\",\"+proj=utm +zone=19 +south +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32320\":[\"EPSG:32320\",\"+proj=utm +zone=20 +south +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32321\":[\"EPSG:32321\",\"+proj=utm +zone=21 +south +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32322\":[\"EPSG:32322\",\"+proj=utm +zone=22 +south +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32323\":[\"EPSG:32323\",\"+proj=utm +zone=23 +south +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32324\":[\"EPSG:32324\",\"+proj=utm +zone=24 +south +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32325\":[\"EPSG:32325\",\"+proj=utm +zone=25 +south +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32326\":[\"EPSG:32326\",\"+proj=utm +zone=26 +south +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32327\":[\"EPSG:32327\",\"+proj=utm +zone=27 +south +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32328\":[\"EPSG:32328\",\"+proj=utm +zone=28 +south +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32329\":[\"EPSG:32329\",\"+proj=utm +zone=29 +south +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32330\":[\"EPSG:32330\",\"+proj=utm +zone=30 +south +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32331\":[\"EPSG:32331\",\"+proj=utm +zone=31 +south +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32332\":[\"EPSG:32332\",\"+proj=utm +zone=32 +south +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32333\":[\"EPSG:32333\",\"+proj=utm +zone=33 +south +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32334\":[\"EPSG:32334\",\"+proj=utm +zone=34 +south +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32335\":[\"EPSG:32335\",\"+proj=utm +zone=35 +south +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32336\":[\"EPSG:32336\",\"+proj=utm +zone=36 +south +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32338\":[\"EPSG:32338\",\"+proj=utm +zone=38 +south +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32339\":[\"EPSG:32339\",\"+proj=utm +zone=39 +south +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32340\":[\"EPSG:32340\",\"+proj=utm +zone=40 +south +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32341\":[\"EPSG:32341\",\"+proj=utm +zone=41 +south +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32342\":[\"EPSG:32342\",\"+proj=utm +zone=42 +south +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32343\":[\"EPSG:32343\",\"+proj=utm +zone=43 +south +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32344\":[\"EPSG:32344\",\"+proj=utm +zone=44 +south +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32345\":[\"EPSG:32345\",\"+proj=utm +zone=45 +south +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32346\":[\"EPSG:32346\",\"+proj=utm +zone=46 +south +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32347\":[\"EPSG:32347\",\"+proj=utm +zone=47 +south +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32348\":[\"EPSG:32348\",\"+proj=utm +zone=48 +south +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32349\":[\"EPSG:32349\",\"+proj=utm +zone=49 +south +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32350\":[\"EPSG:32350\",\"+proj=utm +zone=50 +south +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32351\":[\"EPSG:32351\",\"+proj=utm +zone=51 +south +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32352\":[\"EPSG:32352\",\"+proj=utm +zone=52 +south +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32353\":[\"EPSG:32353\",\"+proj=utm +zone=53 +south +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32354\":[\"EPSG:32354\",\"+proj=utm +zone=54 +south +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32355\":[\"EPSG:32355\",\"+proj=utm +zone=55 +south +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32356\":[\"EPSG:32356\",\"+proj=utm +zone=56 +south +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32357\":[\"EPSG:32357\",\"+proj=utm +zone=57 +south +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32358\":[\"EPSG:32358\",\"+proj=utm +zone=58 +south +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32359\":[\"EPSG:32359\",\"+proj=utm +zone=59 +south +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32360\":[\"EPSG:32360\",\"+proj=utm +zone=60 +south +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +units=m +no_defs \"],\"EPSG:32401\":[\"EPSG:32401\",\"+proj=utm +zone=1 +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32402\":[\"EPSG:32402\",\"+proj=utm +zone=2 +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32403\":[\"EPSG:32403\",\"+proj=utm +zone=3 +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32404\":[\"EPSG:32404\",\"+proj=utm +zone=4 +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32405\":[\"EPSG:32405\",\"+proj=utm +zone=5 +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32406\":[\"EPSG:32406\",\"+proj=utm +zone=6 +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32407\":[\"EPSG:32407\",\"+proj=utm +zone=7 +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32408\":[\"EPSG:32408\",\"+proj=utm +zone=8 +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32409\":[\"EPSG:32409\",\"+proj=utm +zone=9 +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32410\":[\"EPSG:32410\",\"+proj=utm +zone=10 +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32411\":[\"EPSG:32411\",\"+proj=utm +zone=11 +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32412\":[\"EPSG:32412\",\"+proj=utm +zone=12 +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32413\":[\"EPSG:32413\",\"+proj=utm +zone=13 +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32414\":[\"EPSG:32414\",\"+proj=utm +zone=14 +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32415\":[\"EPSG:32415\",\"+proj=utm +zone=15 +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32416\":[\"EPSG:32416\",\"+proj=utm +zone=16 +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32417\":[\"EPSG:32417\",\"+proj=utm +zone=17 +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32418\":[\"EPSG:32418\",\"+proj=utm +zone=18 +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32419\":[\"EPSG:32419\",\"+proj=utm +zone=19 +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32420\":[\"EPSG:32420\",\"+proj=utm +zone=20 +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32421\":[\"EPSG:32421\",\"+proj=utm +zone=21 +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32422\":[\"EPSG:32422\",\"+proj=utm +zone=22 +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32423\":[\"EPSG:32423\",\"+proj=utm +zone=23 +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32424\":[\"EPSG:32424\",\"+proj=utm +zone=24 +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32425\":[\"EPSG:32425\",\"+proj=utm +zone=25 +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32426\":[\"EPSG:32426\",\"+proj=utm +zone=26 +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32427\":[\"EPSG:32427\",\"+proj=utm +zone=27 +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32428\":[\"EPSG:32428\",\"+proj=utm +zone=28 +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32429\":[\"EPSG:32429\",\"+proj=utm +zone=29 +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32430\":[\"EPSG:32430\",\"+proj=utm +zone=30 +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32431\":[\"EPSG:32431\",\"+proj=utm +zone=31 +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32432\":[\"EPSG:32432\",\"+proj=utm +zone=32 +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32433\":[\"EPSG:32433\",\"+proj=utm +zone=33 +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32434\":[\"EPSG:32434\",\"+proj=utm +zone=34 +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32435\":[\"EPSG:32435\",\"+proj=utm +zone=35 +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32436\":[\"EPSG:32436\",\"+proj=utm +zone=36 +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32437\":[\"EPSG:32437\",\"+proj=utm +zone=37 +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32438\":[\"EPSG:32438\",\"+proj=utm +zone=38 +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32439\":[\"EPSG:32439\",\"+proj=utm +zone=39 +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32440\":[\"EPSG:32440\",\"+proj=utm +zone=40 +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32441\":[\"EPSG:32441\",\"+proj=utm +zone=41 +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32442\":[\"EPSG:32442\",\"+proj=utm +zone=42 +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32443\":[\"EPSG:32443\",\"+proj=utm +zone=43 +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32444\":[\"EPSG:32444\",\"+proj=utm +zone=44 +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32445\":[\"EPSG:32445\",\"+proj=utm +zone=45 +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32446\":[\"EPSG:32446\",\"+proj=utm +zone=46 +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32447\":[\"EPSG:32447\",\"+proj=utm +zone=47 +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32448\":[\"EPSG:32448\",\"+proj=utm +zone=48 +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32449\":[\"EPSG:32449\",\"+proj=utm +zone=49 +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32450\":[\"EPSG:32450\",\"+proj=utm +zone=50 +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32451\":[\"EPSG:32451\",\"+proj=utm +zone=51 +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32452\":[\"EPSG:32452\",\"+proj=utm +zone=52 +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32453\":[\"EPSG:32453\",\"+proj=utm +zone=53 +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32454\":[\"EPSG:32454\",\"+proj=utm +zone=54 +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32455\":[\"EPSG:32455\",\"+proj=utm +zone=55 +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32456\":[\"EPSG:32456\",\"+proj=utm +zone=56 +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32457\":[\"EPSG:32457\",\"+proj=utm +zone=57 +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32458\":[\"EPSG:32458\",\"+proj=utm +zone=58 +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32459\":[\"EPSG:32459\",\"+proj=utm +zone=59 +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32460\":[\"EPSG:32460\",\"+proj=utm +zone=60 +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32501\":[\"EPSG:32501\",\"+proj=utm +zone=1 +south +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32502\":[\"EPSG:32502\",\"+proj=utm +zone=2 +south +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32503\":[\"EPSG:32503\",\"+proj=utm +zone=3 +south +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32504\":[\"EPSG:32504\",\"+proj=utm +zone=4 +south +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32505\":[\"EPSG:32505\",\"+proj=utm +zone=5 +south +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32506\":[\"EPSG:32506\",\"+proj=utm +zone=6 +south +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32507\":[\"EPSG:32507\",\"+proj=utm +zone=7 +south +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32508\":[\"EPSG:32508\",\"+proj=utm +zone=8 +south +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32509\":[\"EPSG:32509\",\"+proj=utm +zone=9 +south +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32510\":[\"EPSG:32510\",\"+proj=utm +zone=10 +south +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32511\":[\"EPSG:32511\",\"+proj=utm +zone=11 +south +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32512\":[\"EPSG:32512\",\"+proj=utm +zone=12 +south +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32513\":[\"EPSG:32513\",\"+proj=utm +zone=13 +south +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32514\":[\"EPSG:32514\",\"+proj=utm +zone=14 +south +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32515\":[\"EPSG:32515\",\"+proj=utm +zone=15 +south +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32516\":[\"EPSG:32516\",\"+proj=utm +zone=16 +south +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32517\":[\"EPSG:32517\",\"+proj=utm +zone=17 +south +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32518\":[\"EPSG:32518\",\"+proj=utm +zone=18 +south +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32519\":[\"EPSG:32519\",\"+proj=utm +zone=19 +south +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32521\":[\"EPSG:32521\",\"+proj=utm +zone=21 +south +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32522\":[\"EPSG:32522\",\"+proj=utm +zone=22 +south +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32523\":[\"EPSG:32523\",\"+proj=utm +zone=23 +south +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32524\":[\"EPSG:32524\",\"+proj=utm +zone=24 +south +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32525\":[\"EPSG:32525\",\"+proj=utm +zone=25 +south +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32526\":[\"EPSG:32526\",\"+proj=utm +zone=26 +south +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32527\":[\"EPSG:32527\",\"+proj=utm +zone=27 +south +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32528\":[\"EPSG:32528\",\"+proj=utm +zone=28 +south +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32529\":[\"EPSG:32529\",\"+proj=utm +zone=29 +south +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32530\":[\"EPSG:32530\",\"+proj=utm +zone=30 +south +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32531\":[\"EPSG:32531\",\"+proj=utm +zone=31 +south +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32532\":[\"EPSG:32532\",\"+proj=utm +zone=32 +south +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32533\":[\"EPSG:32533\",\"+proj=utm +zone=33 +south +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32534\":[\"EPSG:32534\",\"+proj=utm +zone=34 +south +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32535\":[\"EPSG:32535\",\"+proj=utm +zone=35 +south +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32536\":[\"EPSG:32536\",\"+proj=utm +zone=36 +south +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32537\":[\"EPSG:32537\",\"+proj=utm +zone=37 +south +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32538\":[\"EPSG:32538\",\"+proj=utm +zone=38 +south +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32539\":[\"EPSG:32539\",\"+proj=utm +zone=39 +south +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32540\":[\"EPSG:32540\",\"+proj=utm +zone=40 +south +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32541\":[\"EPSG:32541\",\"+proj=utm +zone=41 +south +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32542\":[\"EPSG:32542\",\"+proj=utm +zone=42 +south +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32543\":[\"EPSG:32543\",\"+proj=utm +zone=43 +south +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32544\":[\"EPSG:32544\",\"+proj=utm +zone=44 +south +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32545\":[\"EPSG:32545\",\"+proj=utm +zone=45 +south +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32546\":[\"EPSG:32546\",\"+proj=utm +zone=46 +south +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32547\":[\"EPSG:32547\",\"+proj=utm +zone=47 +south +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32548\":[\"EPSG:32548\",\"+proj=utm +zone=48 +south +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32549\":[\"EPSG:32549\",\"+proj=utm +zone=49 +south +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32550\":[\"EPSG:32550\",\"+proj=utm +zone=50 +south +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32551\":[\"EPSG:32551\",\"+proj=utm +zone=51 +south +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32552\":[\"EPSG:32552\",\"+proj=utm +zone=52 +south +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32553\":[\"EPSG:32553\",\"+proj=utm +zone=53 +south +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32554\":[\"EPSG:32554\",\"+proj=utm +zone=54 +south +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32555\":[\"EPSG:32555\",\"+proj=utm +zone=55 +south +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32556\":[\"EPSG:32556\",\"+proj=utm +zone=56 +south +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32557\":[\"EPSG:32557\",\"+proj=utm +zone=57 +south +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32558\":[\"EPSG:32558\",\"+proj=utm +zone=58 +south +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32559\":[\"EPSG:32559\",\"+proj=utm +zone=59 +south +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32560\":[\"EPSG:32560\",\"+proj=utm +zone=60 +south +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:32625\":[\"EPSG:32625\",\"+proj=utm +zone=25 +datum=WGS84 +units=m +no_defs \"],\"EPSG:32626\":[\"EPSG:32626\",\"+proj=utm +zone=26 +datum=WGS84 +units=m +no_defs \"],\"EPSG:4352\":[\"EPSG:4352\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:32627\":[\"EPSG:32627\",\"+proj=utm +zone=27 +datum=WGS84 +units=m +no_defs \"],\"EPSG:4354\":[\"EPSG:4354\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:32641\":[\"EPSG:32641\",\"+proj=utm +zone=41 +datum=WGS84 +units=m +no_defs \"],\"EPSG:4356\":[\"EPSG:4356\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:32653\":[\"EPSG:32653\",\"+proj=utm +zone=53 +datum=WGS84 +units=m +no_defs \"],\"EPSG:32656\":[\"EPSG:32656\",\"+proj=utm +zone=56 +datum=WGS84 +units=m +no_defs \"],\"EPSG:32657\":[\"EPSG:32657\",\"+proj=utm +zone=57 +datum=WGS84 +units=m +no_defs \"],\"EPSG:32658\":[\"EPSG:32658\",\"+proj=utm +zone=58 +datum=WGS84 +units=m +no_defs \"],\"EPSG:32659\":[\"EPSG:32659\",\"+proj=utm +zone=59 +datum=WGS84 +units=m +no_defs \"],\"EPSG:4358\":[\"EPSG:4358\",\"+proj=geocent +ellps=WGS84 +units=m +no_defs \"],\"EPSG:32660\":[\"EPSG:32660\",\"+proj=utm +zone=60 +datum=WGS84 +units=m +no_defs \"],\"EPSG:32661\":[\"EPSG:32661\",\"+proj=stere +lat_0=90 +lat_ts=90 +lon_0=0 +k=0.994 +x_0=2000000 +y_0=2000000 +datum=WGS84 +units=m +no_defs \"],\"EPSG:32663\":[\"EPSG:32663\",\"+proj=eqc +lat_ts=0 +lat_0=0 +lon_0=0 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:32664\":[\"EPSG:32664\",\"+proj=tmerc +lat_0=0 +lon_0=-99 +k=0.9996 +x_0=500000.001016002 +y_0=0 +datum=WGS84 +units=us-ft +no_defs \"],\"EPSG:32665\":[\"EPSG:32665\",\"+proj=tmerc +lat_0=0 +lon_0=-93 +k=0.9996 +x_0=500000.001016002 +y_0=0 +datum=WGS84 +units=us-ft +no_defs \"],\"EPSG:32666\":[\"EPSG:32666\",\"+proj=tmerc +lat_0=0 +lon_0=-87 +k=0.9996 +x_0=500000.001016002 +y_0=0 +datum=WGS84 +units=us-ft +no_defs \"],\"EPSG:32667\":[\"EPSG:32667\",\"+proj=tmerc +lat_0=0 +lon_0=-81 +k=0.9996 +x_0=500000.001016002 +y_0=0 +datum=WGS84 +units=us-ft +no_defs \"],\"EPSG:32701\":[\"EPSG:32701\",\"+proj=utm +zone=1 +south +datum=WGS84 +units=m +no_defs \"],\"EPSG:32702\":[\"EPSG:32702\",\"+proj=utm +zone=2 +south +datum=WGS84 +units=m +no_defs \"],\"EPSG:32703\":[\"EPSG:32703\",\"+proj=utm +zone=3 +south +datum=WGS84 +units=m +no_defs \"],\"EPSG:32704\":[\"EPSG:32704\",\"+proj=utm +zone=4 +south +datum=WGS84 +units=m +no_defs \"],\"EPSG:32705\":[\"EPSG:32705\",\"+proj=utm +zone=5 +south +datum=WGS84 +units=m +no_defs \"],\"EPSG:32706\":[\"EPSG:32706\",\"+proj=utm +zone=6 +south +datum=WGS84 +units=m +no_defs \"],\"EPSG:32707\":[\"EPSG:32707\",\"+proj=utm +zone=7 +south +datum=WGS84 +units=m +no_defs \"],\"EPSG:32708\":[\"EPSG:32708\",\"+proj=utm +zone=8 +south +datum=WGS84 +units=m +no_defs \"],\"EPSG:32709\":[\"EPSG:32709\",\"+proj=utm +zone=9 +south +datum=WGS84 +units=m +no_defs \"],\"EPSG:32710\":[\"EPSG:32710\",\"+proj=utm +zone=10 +south +datum=WGS84 +units=m +no_defs \"],\"EPSG:32711\":[\"EPSG:32711\",\"+proj=utm +zone=11 +south +datum=WGS84 +units=m +no_defs \"],\"EPSG:32712\":[\"EPSG:32712\",\"+proj=utm +zone=12 +south +datum=WGS84 +units=m +no_defs \"],\"EPSG:32713\":[\"EPSG:32713\",\"+proj=utm +zone=13 +south +datum=WGS84 +units=m +no_defs \"],\"EPSG:32714\":[\"EPSG:32714\",\"+proj=utm +zone=14 +south +datum=WGS84 +units=m +no_defs \"],\"EPSG:32715\":[\"EPSG:32715\",\"+proj=utm +zone=15 +south +datum=WGS84 +units=m +no_defs \"],\"EPSG:32716\":[\"EPSG:32716\",\"+proj=utm +zone=16 +south +datum=WGS84 +units=m +no_defs \"],\"EPSG:32725\":[\"EPSG:32725\",\"+proj=utm +zone=25 +south +datum=WGS84 +units=m +no_defs \"],\"EPSG:32726\":[\"EPSG:32726\",\"+proj=utm +zone=26 +south +datum=WGS84 +units=m +no_defs \"],\"EPSG:32727\":[\"EPSG:32727\",\"+proj=utm +zone=27 +south +datum=WGS84 +units=m +no_defs \"],\"EPSG:32728\":[\"EPSG:32728\",\"+proj=utm +zone=28 +south +datum=WGS84 +units=m +no_defs \"],\"EPSG:32729\":[\"EPSG:32729\",\"+proj=utm +zone=29 +south +datum=WGS84 +units=m +no_defs \"],\"EPSG:32730\":[\"EPSG:32730\",\"+proj=utm +zone=30 +south +datum=WGS84 +units=m +no_defs \"],\"EPSG:32731\":[\"EPSG:32731\",\"+proj=utm +zone=31 +south +datum=WGS84 +units=m +no_defs \"],\"EPSG:32732\":[\"EPSG:32732\",\"+proj=utm +zone=32 +south +datum=WGS84 +units=m +no_defs \"],\"EPSG:32733\":[\"EPSG:32733\",\"+proj=utm +zone=33 +south +datum=WGS84 +units=m +no_defs \"],\"EPSG:32738\":[\"EPSG:32738\",\"+proj=utm +zone=38 +south +datum=WGS84 +units=m +no_defs \"],\"EPSG:32739\":[\"EPSG:32739\",\"+proj=utm +zone=39 +south +datum=WGS84 +units=m +no_defs \"],\"EPSG:32740\":[\"EPSG:32740\",\"+proj=utm +zone=40 +south +datum=WGS84 +units=m +no_defs \"],\"EPSG:32741\":[\"EPSG:32741\",\"+proj=utm +zone=41 +south +datum=WGS84 +units=m +no_defs \"],\"EPSG:32742\":[\"EPSG:32742\",\"+proj=utm +zone=42 +south +datum=WGS84 +units=m +no_defs \"],\"EPSG:32743\":[\"EPSG:32743\",\"+proj=utm +zone=43 +south +datum=WGS84 +units=m +no_defs \"],\"EPSG:32744\":[\"EPSG:32744\",\"+proj=utm +zone=44 +south +datum=WGS84 +units=m +no_defs \"],\"EPSG:32745\":[\"EPSG:32745\",\"+proj=utm +zone=45 +south +datum=WGS84 +units=m +no_defs \"],\"EPSG:32746\":[\"EPSG:32746\",\"+proj=utm +zone=46 +south +datum=WGS84 +units=m +no_defs \"],\"EPSG:32752\":[\"EPSG:32752\",\"+proj=utm +zone=52 +south +datum=WGS84 +units=m +no_defs \"],\"EPSG:32753\":[\"EPSG:32753\",\"+proj=utm +zone=53 +south +datum=WGS84 +units=m +no_defs \"],\"EPSG:32758\":[\"EPSG:32758\",\"+proj=utm +zone=58 +south +datum=WGS84 +units=m +no_defs \"],\"EPSG:32759\":[\"EPSG:32759\",\"+proj=utm +zone=59 +south +datum=WGS84 +units=m +no_defs \"],\"EPSG:32760\":[\"EPSG:32760\",\"+proj=utm +zone=60 +south +datum=WGS84 +units=m +no_defs \"],\"EPSG:32761\":[\"EPSG:32761\",\"+proj=stere +lat_0=-90 +lat_ts=-90 +lon_0=0 +k=0.994 +x_0=2000000 +y_0=2000000 +datum=WGS84 +units=m +no_defs \"],\"EPSG:32766\":[\"EPSG:32766\",\"+proj=tmerc +lat_0=0 +lon_0=36 +k=0.9996 +x_0=500000 +y_0=10000000 +datum=WGS84 +units=m +no_defs \"],\"EPSG:3887\":[\"EPSG:3887\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:4000\":[\"EPSG:4000\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:4039\":[\"EPSG:4039\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:4073\":[\"EPSG:4073\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:4079\":[\"EPSG:4079\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:4330\":[\"EPSG:4330\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:4332\":[\"EPSG:4332\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:4333\":[\"EPSG:4333\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6317\":[\"EPSG:6317\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6320\":[\"EPSG:6320\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6323\":[\"EPSG:6323\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6363\":[\"EPSG:6363\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6666\":[\"EPSG:6666\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6704\":[\"EPSG:6704\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6781\":[\"EPSG:6781\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6934\":[\"EPSG:6934\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6978\":[\"EPSG:6978\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6981\":[\"EPSG:6981\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6985\":[\"EPSG:6985\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:6988\":[\"EPSG:6988\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7071\":[\"EPSG:7071\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:7134\":[\"EPSG:7134\",\"+proj=geocent +ellps=WGS84 +units=m +no_defs \"],\"EPSG:7137\":[\"EPSG:7137\",\"+proj=geocent +ellps=WGS84 +units=m +no_defs \"],\"EPSG:7371\":[\"EPSG:7371\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:5628\":[\"EPSG:5628\",\"+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +vunits=m +no_defs \"],\"EPSG:3901\":[\"EPSG:3901\",\"+proj=tmerc +lat_0=0 +lon_0=27 +k=1 +x_0=3500000 +y_0=0 +ellps=intl +towgs84=-96.062,-82.428,-121.753,4.801,0.345,-1.376,1.496 +units=m +vunits=m +no_defs \"],\"EPSG:3902\":[\"EPSG:3902\",\"+proj=utm +zone=35 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:3903\":[\"EPSG:3903\",\"+proj=utm +zone=35 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:4097\":[\"EPSG:4097\",\"+proj=tmerc +lat_0=0 +lon_0=9 +k=0.99998 +x_0=200000 +y_0=-5000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:4098\":[\"EPSG:4098\",\"+proj=tmerc +lat_0=0 +lon_0=10 +k=0.99998 +x_0=400000 +y_0=-5000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:4099\":[\"EPSG:4099\",\"+proj=tmerc +lat_0=0 +lon_0=11.75 +k=0.99998 +x_0=600000 +y_0=-5000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:4100\":[\"EPSG:4100\",\"+proj=tmerc +lat_0=0 +lon_0=15 +k=1 +x_0=800000 +y_0=-5000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:7404\":[\"EPSG:7404\",\"+proj=longlat +ellps=bessel +towgs84=414.1,41.3,603.1,-0.855,2.141,-7.023,0 +vunits=m +no_defs \"],\"EPSG:5318\":[\"EPSG:5318\",\"+proj=tmerc +lat_0=0 +lon_0=-7 +k=0.999997 +x_0=200000 +y_0=-6000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:5498\":[\"EPSG:5498\",\"+proj=longlat +datum=NAD83 +geoidgrids=g2012a_conus.gtx,g2012a_alaska.gtx,g2012a_guam.gtx,g2012a_hawaii.gtx,g2012a_puertorico.gtx,g2012a_samoa.gtx +vunits=m +no_defs \"],\"EPSG:5499\":[\"EPSG:5499\",\"+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +geoidgrids=g2012a_conus.gtx,g2012a_alaska.gtx,g2012a_guam.gtx,g2012a_hawaii.gtx,g2012a_puertorico.gtx,g2012a_samoa.gtx +vunits=m +no_defs \"],\"EPSG:5500\":[\"EPSG:5500\",\"+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +geoidgrids=g2012a_conus.gtx,g2012a_alaska.gtx,g2012a_guam.gtx,g2012a_hawaii.gtx,g2012a_puertorico.gtx,g2012a_samoa.gtx +vunits=m +no_defs \"],\"EPSG:5554\":[\"EPSG:5554\",\"+proj=utm +zone=31 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:5555\":[\"EPSG:5555\",\"+proj=utm +zone=32 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:5556\":[\"EPSG:5556\",\"+proj=utm +zone=33 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:5598\":[\"EPSG:5598\",\"+proj=tmerc +lat_0=0 +lon_0=11.33333333333333 +k=1 +x_0=1000000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:5698\":[\"EPSG:5698\",\"+proj=lcc +lat_1=49 +lat_2=44 +lat_0=46.5 +lon_0=3 +x_0=700000 +y_0=6600000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:5699\":[\"EPSG:5699\",\"+proj=lcc +lat_1=49 +lat_2=44 +lat_0=46.5 +lon_0=3 +x_0=700000 +y_0=6600000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:5707\":[\"EPSG:5707\",\"+proj=lcc +lat_1=49.50000000000001 +lat_0=49.50000000000001 +lon_0=0 +k_0=0.999877341 +x_0=600000 +y_0=1200000 +a=6378249.2 +b=6356515 +towgs84=-168,-60,320,0,0,0,0 +pm=paris +units=m +vunits=m +no_defs \"],\"EPSG:5708\":[\"EPSG:5708\",\"+proj=lcc +lat_1=42.16500000000001 +lat_0=42.16500000000001 +lon_0=0 +k_0=0.99994471 +x_0=234.358 +y_0=4185861.369 +a=6378249.2 +b=6356515 +towgs84=-168,-60,320,0,0,0,0 +pm=paris +units=m +vunits=m +no_defs \"],\"EPSG:5832\":[\"EPSG:5832\",\"+proj=tmerc +lat_0=0 +lon_0=6 +k=1 +x_0=2500000 +y_0=0 +ellps=bessel +units=m +vunits=m +no_defs \"],\"EPSG:5833\":[\"EPSG:5833\",\"+proj=tmerc +lat_0=0 +lon_0=9 +k=1 +x_0=3500000 +y_0=0 +ellps=bessel +units=m +vunits=m +no_defs \"],\"EPSG:5834\":[\"EPSG:5834\",\"+proj=tmerc +lat_0=0 +lon_0=12 +k=1 +x_0=4500000 +y_0=0 +ellps=bessel +units=m +vunits=m +no_defs \"],\"EPSG:5835\":[\"EPSG:5835\",\"+proj=tmerc +lat_0=0 +lon_0=15 +k=1 +x_0=5500000 +y_0=0 +ellps=bessel +units=m +vunits=m +no_defs \"],\"EPSG:5845\":[\"EPSG:5845\",\"+proj=utm +zone=33 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:5846\":[\"EPSG:5846\",\"+proj=tmerc +lat_0=0 +lon_0=12 +k=1 +x_0=150000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:5847\":[\"EPSG:5847\",\"+proj=tmerc +lat_0=0 +lon_0=13.5 +k=1 +x_0=150000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:5848\":[\"EPSG:5848\",\"+proj=tmerc +lat_0=0 +lon_0=15 +k=1 +x_0=150000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:5849\":[\"EPSG:5849\",\"+proj=tmerc +lat_0=0 +lon_0=16.5 +k=1 +x_0=150000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:5850\":[\"EPSG:5850\",\"+proj=tmerc +lat_0=0 +lon_0=18 +k=1 +x_0=150000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:5851\":[\"EPSG:5851\",\"+proj=tmerc +lat_0=0 +lon_0=14.25 +k=1 +x_0=150000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:5852\":[\"EPSG:5852\",\"+proj=tmerc +lat_0=0 +lon_0=15.75 +k=1 +x_0=150000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:5853\":[\"EPSG:5853\",\"+proj=tmerc +lat_0=0 +lon_0=17.25 +k=1 +x_0=150000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:5854\":[\"EPSG:5854\",\"+proj=tmerc +lat_0=0 +lon_0=18.75 +k=1 +x_0=150000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:5855\":[\"EPSG:5855\",\"+proj=tmerc +lat_0=0 +lon_0=20.25 +k=1 +x_0=150000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:5856\":[\"EPSG:5856\",\"+proj=tmerc +lat_0=0 +lon_0=21.75 +k=1 +x_0=150000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:5857\":[\"EPSG:5857\",\"+proj=tmerc +lat_0=0 +lon_0=23.25 +k=1 +x_0=150000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:5942\":[\"EPSG:5942\",\"+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +vunits=m +no_defs \"],\"EPSG:5945\":[\"EPSG:5945\",\"+proj=tmerc +lat_0=58 +lon_0=5.5 +k=1 +x_0=100000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:5946\":[\"EPSG:5946\",\"+proj=tmerc +lat_0=58 +lon_0=6.5 +k=1 +x_0=100000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:5947\":[\"EPSG:5947\",\"+proj=tmerc +lat_0=58 +lon_0=7.5 +k=1 +x_0=100000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:5948\":[\"EPSG:5948\",\"+proj=tmerc +lat_0=58 +lon_0=8.5 +k=1 +x_0=100000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:5949\":[\"EPSG:5949\",\"+proj=tmerc +lat_0=58 +lon_0=9.5 +k=1 +x_0=100000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:5950\":[\"EPSG:5950\",\"+proj=tmerc +lat_0=58 +lon_0=10.5 +k=1 +x_0=100000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:5951\":[\"EPSG:5951\",\"+proj=tmerc +lat_0=58 +lon_0=11.5 +k=1 +x_0=100000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:5952\":[\"EPSG:5952\",\"+proj=tmerc +lat_0=58 +lon_0=12.5 +k=1 +x_0=100000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:5953\":[\"EPSG:5953\",\"+proj=tmerc +lat_0=58 +lon_0=13.5 +k=1 +x_0=100000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:5954\":[\"EPSG:5954\",\"+proj=tmerc +lat_0=58 +lon_0=14.5 +k=1 +x_0=100000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:5955\":[\"EPSG:5955\",\"+proj=tmerc +lat_0=58 +lon_0=15.5 +k=1 +x_0=100000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:5956\":[\"EPSG:5956\",\"+proj=tmerc +lat_0=58 +lon_0=16.5 +k=1 +x_0=100000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:5957\":[\"EPSG:5957\",\"+proj=tmerc +lat_0=58 +lon_0=17.5 +k=1 +x_0=100000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:5958\":[\"EPSG:5958\",\"+proj=tmerc +lat_0=58 +lon_0=18.5 +k=1 +x_0=100000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:5959\":[\"EPSG:5959\",\"+proj=tmerc +lat_0=58 +lon_0=19.5 +k=1 +x_0=100000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:5960\":[\"EPSG:5960\",\"+proj=tmerc +lat_0=58 +lon_0=20.5 +k=1 +x_0=100000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:5961\":[\"EPSG:5961\",\"+proj=tmerc +lat_0=58 +lon_0=21.5 +k=1 +x_0=100000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:5962\":[\"EPSG:5962\",\"+proj=tmerc +lat_0=58 +lon_0=22.5 +k=1 +x_0=100000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:5963\":[\"EPSG:5963\",\"+proj=tmerc +lat_0=58 +lon_0=23.5 +k=1 +x_0=100000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:5964\":[\"EPSG:5964\",\"+proj=tmerc +lat_0=58 +lon_0=24.5 +k=1 +x_0=100000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:5965\":[\"EPSG:5965\",\"+proj=tmerc +lat_0=58 +lon_0=25.5 +k=1 +x_0=100000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:5966\":[\"EPSG:5966\",\"+proj=tmerc +lat_0=58 +lon_0=26.5 +k=1 +x_0=100000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:5967\":[\"EPSG:5967\",\"+proj=tmerc +lat_0=58 +lon_0=27.5 +k=1 +x_0=100000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:5968\":[\"EPSG:5968\",\"+proj=tmerc +lat_0=58 +lon_0=28.5 +k=1 +x_0=100000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:5969\":[\"EPSG:5969\",\"+proj=tmerc +lat_0=58 +lon_0=29.5 +k=1 +x_0=100000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:5970\":[\"EPSG:5970\",\"+proj=tmerc +lat_0=58 +lon_0=30.5 +k=1 +x_0=100000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:5971\":[\"EPSG:5971\",\"+proj=utm +zone=31 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:5972\":[\"EPSG:5972\",\"+proj=utm +zone=32 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:5973\":[\"EPSG:5973\",\"+proj=utm +zone=33 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:5974\":[\"EPSG:5974\",\"+proj=utm +zone=34 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:5975\":[\"EPSG:5975\",\"+proj=utm +zone=35 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:5976\":[\"EPSG:5976\",\"+proj=utm +zone=36 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:6144\":[\"EPSG:6144\",\"+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +vunits=m +no_defs \"],\"EPSG:6145\":[\"EPSG:6145\",\"+proj=tmerc +lat_0=58 +lon_0=5.5 +k=1 +x_0=100000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:6146\":[\"EPSG:6146\",\"+proj=tmerc +lat_0=58 +lon_0=6.5 +k=1 +x_0=100000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:6147\":[\"EPSG:6147\",\"+proj=tmerc +lat_0=58 +lon_0=7.5 +k=1 +x_0=100000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:6148\":[\"EPSG:6148\",\"+proj=tmerc +lat_0=58 +lon_0=8.5 +k=1 +x_0=100000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:6149\":[\"EPSG:6149\",\"+proj=tmerc +lat_0=58 +lon_0=9.5 +k=1 +x_0=100000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:6150\":[\"EPSG:6150\",\"+proj=tmerc +lat_0=58 +lon_0=10.5 +k=1 +x_0=100000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:6151\":[\"EPSG:6151\",\"+proj=tmerc +lat_0=58 +lon_0=11.5 +k=1 +x_0=100000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:6152\":[\"EPSG:6152\",\"+proj=tmerc +lat_0=58 +lon_0=12.5 +k=1 +x_0=100000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:6153\":[\"EPSG:6153\",\"+proj=tmerc +lat_0=58 +lon_0=13.5 +k=1 +x_0=100000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:6154\":[\"EPSG:6154\",\"+proj=tmerc +lat_0=58 +lon_0=14.5 +k=1 +x_0=100000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:6155\":[\"EPSG:6155\",\"+proj=tmerc +lat_0=58 +lon_0=15.5 +k=1 +x_0=100000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:6156\":[\"EPSG:6156\",\"+proj=tmerc +lat_0=58 +lon_0=16.5 +k=1 +x_0=100000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:6157\":[\"EPSG:6157\",\"+proj=tmerc +lat_0=58 +lon_0=17.5 +k=1 +x_0=100000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:6158\":[\"EPSG:6158\",\"+proj=tmerc +lat_0=58 +lon_0=18.5 +k=1 +x_0=100000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:6159\":[\"EPSG:6159\",\"+proj=tmerc +lat_0=58 +lon_0=19.5 +k=1 +x_0=100000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:6160\":[\"EPSG:6160\",\"+proj=tmerc +lat_0=58 +lon_0=20.5 +k=1 +x_0=100000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:6161\":[\"EPSG:6161\",\"+proj=tmerc +lat_0=58 +lon_0=21.5 +k=1 +x_0=100000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:6162\":[\"EPSG:6162\",\"+proj=tmerc +lat_0=58 +lon_0=22.5 +k=1 +x_0=100000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:6163\":[\"EPSG:6163\",\"+proj=tmerc +lat_0=58 +lon_0=23.5 +k=1 +x_0=100000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:6164\":[\"EPSG:6164\",\"+proj=tmerc +lat_0=58 +lon_0=24.5 +k=1 +x_0=100000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:6165\":[\"EPSG:6165\",\"+proj=tmerc +lat_0=58 +lon_0=25.5 +k=1 +x_0=100000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:6166\":[\"EPSG:6166\",\"+proj=tmerc +lat_0=58 +lon_0=26.5 +k=1 +x_0=100000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:6167\":[\"EPSG:6167\",\"+proj=tmerc +lat_0=58 +lon_0=27.5 +k=1 +x_0=100000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:6168\":[\"EPSG:6168\",\"+proj=tmerc +lat_0=58 +lon_0=28.5 +k=1 +x_0=100000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:6169\":[\"EPSG:6169\",\"+proj=tmerc +lat_0=58 +lon_0=29.5 +k=1 +x_0=100000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:6170\":[\"EPSG:6170\",\"+proj=tmerc +lat_0=58 +lon_0=30.5 +k=1 +x_0=100000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:6171\":[\"EPSG:6171\",\"+proj=utm +zone=31 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:6172\":[\"EPSG:6172\",\"+proj=utm +zone=32 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:6173\":[\"EPSG:6173\",\"+proj=utm +zone=33 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:6174\":[\"EPSG:6174\",\"+proj=utm +zone=34 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:6175\":[\"EPSG:6175\",\"+proj=utm +zone=35 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:6176\":[\"EPSG:6176\",\"+proj=utm +zone=36 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:6190\":[\"EPSG:6190\",\"+proj=lcc +lat_1=51.16666723333333 +lat_2=49.8333339 +lat_0=90 +lon_0=4.367486666666666 +x_0=150000.013 +y_0=5400088.438 +ellps=intl +towgs84=-106.8686,52.2978,-103.7239,0.3366,-0.457,1.8422,-1.2747 +units=m +vunits=m +no_defs \"],\"EPSG:6349\":[\"EPSG:6349\",\"+proj=longlat +ellps=GRS80 +geoidgrids=g2012a_conus.gtx,g2012a_alaska.gtx,g2012a_guam.gtx,g2012a_hawaii.gtx,g2012a_puertorico.gtx,g2012a_samoa.gtx +vunits=m +no_defs \"],\"EPSG:6649\":[\"EPSG:6649\",\"+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +vunits=m +no_defs \"],\"EPSG:6650\":[\"EPSG:6650\",\"+proj=utm +zone=7 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:6651\":[\"EPSG:6651\",\"+proj=utm +zone=8 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:6652\":[\"EPSG:6652\",\"+proj=utm +zone=9 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:6653\":[\"EPSG:6653\",\"+proj=utm +zone=10 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:6654\":[\"EPSG:6654\",\"+proj=utm +zone=11 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:6655\":[\"EPSG:6655\",\"+proj=utm +zone=12 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:6656\":[\"EPSG:6656\",\"+proj=utm +zone=13 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:6657\":[\"EPSG:6657\",\"+proj=utm +zone=14 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:6658\":[\"EPSG:6658\",\"+proj=utm +zone=15 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:6659\":[\"EPSG:6659\",\"+proj=utm +zone=16 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:6660\":[\"EPSG:6660\",\"+proj=utm +zone=17 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:6661\":[\"EPSG:6661\",\"+proj=utm +zone=18 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:6662\":[\"EPSG:6662\",\"+proj=utm +zone=19 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:6663\":[\"EPSG:6663\",\"+proj=utm +zone=20 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:6664\":[\"EPSG:6664\",\"+proj=utm +zone=21 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:6665\":[\"EPSG:6665\",\"+proj=utm +zone=22 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:6696\":[\"EPSG:6696\",\"+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +vunits=m +no_defs \"],\"EPSG:6697\":[\"EPSG:6697\",\"+proj=longlat +ellps=GRS80 +vunits=m +no_defs \"],\"EPSG:6700\":[\"EPSG:6700\",\"+proj=longlat +ellps=bessel +towgs84=-146.414,507.337,680.507,0,0,0,0 +vunits=m +no_defs \"],\"EPSG:6871\":[\"EPSG:6871\",\"+proj=merc +lon_0=0 +k=1 +x_0=0 +y_0=0 +datum=WGS84 +units=m +geoidgrids=egm08_25.gtx +vunits=m +no_defs \"],\"EPSG:6893\":[\"EPSG:6893\",\"+proj=merc +lon_0=0 +k=1 +x_0=0 +y_0=0 +datum=WGS84 +units=m +geoidgrids=egm08_25.gtx +vunits=m +no_defs \"],\"EPSG:6917\":[\"EPSG:6917\",\"+proj=longlat +ellps=WGS84 +vunits=m +no_defs \"],\"EPSG:6927\":[\"EPSG:6927\",\"+proj=tmerc +lat_0=1.366666666666667 +lon_0=103.8333333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +units=m +vunits=m +no_defs \"],\"EPSG:7400\":[\"EPSG:7400\",\"+proj=longlat +a=6378249.2 +b=6356515 +towgs84=-168,-60,320,0,0,0,0 +pm=paris +vunits=m +no_defs \"],\"EPSG:7401\":[\"EPSG:7401\",\"+proj=lcc +lat_1=46.8 +lat_0=46.8 +lon_0=0 +k_0=0.99987742 +x_0=600000 +y_0=2200000 +a=6378249.2 +b=6356515 +towgs84=-168,-60,320,0,0,0,0 +pm=paris +units=m +vunits=m +no_defs \"],\"EPSG:7402\":[\"EPSG:7402\",\"+proj=lcc +lat_1=46.8 +lat_0=46.8 +lon_0=0 +k_0=0.99987742 +x_0=600000 +y_0=2200000 +a=6378249.2 +b=6356515 +towgs84=-168,-60,320,0,0,0,0 +pm=paris +units=m +vunits=m +no_defs \"],\"EPSG:7403\":[\"EPSG:7403\",\"+proj=lcc +lat_1=44.10000000000001 +lat_0=44.10000000000001 +lon_0=0 +k_0=0.999877499 +x_0=600000 +y_0=3200000 +a=6378249.2 +b=6356515 +towgs84=-168,-60,320,0,0,0,0 +pm=paris +units=m +vunits=m +no_defs \"],\"EPSG:7406\":[\"EPSG:7406\",\"+proj=longlat +datum=NAD27 +vunits=us-ft +no_defs \"],\"EPSG:7407\":[\"EPSG:7407\",\"+proj=lcc +lat_1=34.65 +lat_2=36.18333333333333 +lat_0=34 +lon_0=-101.5 +x_0=609601.2192024384 +y_0=0 +datum=NAD27 +units=us-ft +vunits=us-ft +no_defs \"],\"EPSG:7409\":[\"EPSG:7409\",\"+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +vunits=m +no_defs \"],\"EPSG:7410\":[\"EPSG:7410\",\"+proj=longlat +ellps=clrk80 +towgs84=-180.624,-225.516,173.919,-0.81,-1.898,8.336,16.71006 +vunits=m +no_defs \"],\"EPSG:7411\":[\"EPSG:7411\",\"+proj=lcc +lat_1=46.8 +lat_0=46.8 +lon_0=0 +k_0=0.99987742 +x_0=600000 +y_0=2200000 +a=6378249.2 +b=6356515 +towgs84=-168,-60,320,0,0,0,0 +pm=paris +units=m +vunits=m +no_defs \"],\"EPSG:7412\":[\"EPSG:7412\",\"+proj=lcc +lat_1=46.8 +lat_0=46.8 +lon_0=0 +k_0=0.99987742 +x_0=600000 +y_0=2200000 +a=6378249.2 +b=6356515 +towgs84=-168,-60,320,0,0,0,0 +pm=paris +units=m +vunits=m +no_defs \"],\"EPSG:7413\":[\"EPSG:7413\",\"+proj=lcc +lat_1=44.10000000000001 +lat_0=44.10000000000001 +lon_0=0 +k_0=0.999877499 +x_0=600000 +y_0=3200000 +a=6378249.2 +b=6356515 +towgs84=-168,-60,320,0,0,0,0 +pm=paris +units=m +vunits=m +no_defs \"],\"EPSG:7414\":[\"EPSG:7414\",\"+proj=longlat +ellps=bessel +towgs84=-146.414,507.337,680.507,0,0,0,0 +vunits=m +no_defs \"],\"EPSG:7417\":[\"EPSG:7417\",\"+proj=utm +zone=33 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:7418\":[\"EPSG:7418\",\"+proj=tmerc +lat_0=0 +lon_0=9.5 +k=0.99995 +x_0=200000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:7419\":[\"EPSG:7419\",\"+proj=tmerc +lat_0=0 +lon_0=12 +k=0.99995 +x_0=500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:7420\":[\"EPSG:7420\",\"+proj=tmerc +lat_0=0 +lon_0=15 +k=1 +x_0=900000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +vunits=m +no_defs \"],\"EPSG:7421\":[\"EPSG:7421\",\"+proj=lcc +lat_1=46.8 +lat_0=46.8 +lon_0=0 +k_0=0.99987742 +x_0=600000 +y_0=2200000 +a=6378249.2 +b=6356515 +towgs84=-168,-60,320,0,0,0,0 +pm=paris +units=m +vunits=m +no_defs \"],\"EPSG:7422\":[\"EPSG:7422\",\"+proj=lcc +lat_1=44.10000000000001 +lat_0=44.10000000000001 +lon_0=0 +k_0=0.999877499 +x_0=600000 +y_0=3200000 +a=6378249.2 +b=6356515 +towgs84=-168,-60,320,0,0,0,0 +pm=paris +units=m +vunits=m +no_defs \"],\"EPSG:7423\":[\"EPSG:7423\",\"+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +vunits=m +no_defs \"],\"EPSG:4349\":[\"EPSG:4349\",\"undefined\"],\"EPSG:4466\":[\"EPSG:4466\",\"undefined\"],\"EPSG:63266416\":[\"EPSG:63266416\",\"undefined\"],\"EPSG:5729\":[\"EPSG:5729\",\"undefined\"],\"EPSG:5237\":[\"EPSG:5237\",\"undefined\"],\"EPSG:63266407\":[\"EPSG:63266407\",\"undefined\"],\"EPSG:66086405\":[\"EPSG:66086405\",\"undefined\"],\"EPSG:4388\":[\"EPSG:4388\",\"undefined\"],\"EPSG:3823\":[\"EPSG:3823\",\"undefined\"],\"EPSG:5796\":[\"EPSG:5796\",\"undefined\"],\"EPSG:5605\":[\"EPSG:5605\",\"undefined\"],\"EPSG:2300\":[\"EPSG:2300\",\"undefined\"],\"EPSG:6782\":[\"EPSG:6782\",\"undefined\"],\"EPSG:6642\":[\"EPSG:6642\",\"undefined\"],\"EPSG:62326405\":[\"EPSG:62326405\",\"undefined\"],\"EPSG:61516405\":[\"EPSG:61516405\",\"undefined\"],\"EPSG:4355\":[\"EPSG:4355\",\"undefined\"],\"EPSG:61746405\":[\"EPSG:61746405\",\"undefined\"],\"EPSG:66236405\":[\"EPSG:66236405\",\"undefined\"],\"EPSG:66386405\":[\"EPSG:66386405\",\"undefined\"],\"EPSG:62976405\":[\"EPSG:62976405\",\"undefined\"],\"EPSG:5865\":[\"EPSG:5865\",\"undefined\"],\"EPSG:5762\":[\"EPSG:5762\",\"undefined\"],\"EPSG:5224\":[\"EPSG:5224\",\"undefined\"],\"EPSG:4359\":[\"EPSG:4359\",\"undefined\"],\"EPSG:6693\":[\"EPSG:6693\",\"undefined\"],\"EPSG:5610\":[\"EPSG:5610\",\"undefined\"],\"EPSG:5803\":[\"EPSG:5803\",\"undefined\"],\"EPSG:6247\":[\"EPSG:6247\",\"undefined\"],\"EPSG:5770\":[\"EPSG:5770\",\"undefined\"],\"EPSG:6643\":[\"EPSG:6643\",\"undefined\"],\"EPSG:5821\":[\"EPSG:5821\",\"undefined\"],\"EPSG:5370\":[\"EPSG:5370\",\"undefined\"],\"EPSG:3900\":[\"EPSG:3900\",\"undefined\"],\"EPSG:4347\":[\"EPSG:4347\",\"undefined\"],\"EPSG:62886405\":[\"EPSG:62886405\",\"undefined\"],\"EPSG:62586405\":[\"EPSG:62586405\",\"undefined\"],\"EPSG:62256405\":[\"EPSG:62256405\",\"undefined\"],\"EPSG:66446405\":[\"EPSG:66446405\",\"undefined\"],\"EPSG:3173\":[\"EPSG:3173\",\"undefined\"],\"EPSG:4963\":[\"EPSG:4963\",\"undefined\"],\"EPSG:5701\":[\"EPSG:5701\",\"undefined\"],\"EPSG:4887\":[\"EPSG:4887\",\"undefined\"],\"EPSG:61846405\":[\"EPSG:61846405\",\"undefined\"],\"EPSG:61686405\":[\"EPSG:61686405\",\"undefined\"],\"EPSG:5359\":[\"EPSG:5359\",\"undefined\"],\"EPSG:5620\":[\"EPSG:5620\",\"undefined\"],\"EPSG:66246405\":[\"EPSG:66246405\",\"undefined\"],\"EPSG:5766\":[\"EPSG:5766\",\"undefined\"],\"EPSG:5617\":[\"EPSG:5617\",\"undefined\"],\"EPSG:61996405\":[\"EPSG:61996405\",\"undefined\"],\"EPSG:61446405\":[\"EPSG:61446405\",\"undefined\"],\"EPSG:61906405\":[\"EPSG:61906405\",\"undefined\"],\"EPSG:5941\":[\"EPSG:5941\",\"undefined\"],\"EPSG:63266413\":[\"EPSG:63266413\",\"undefined\"],\"EPSG:62066405\":[\"EPSG:62066405\",\"undefined\"],\"EPSG:3993\":[\"EPSG:3993\",\"undefined\"],\"EPSG:61666405\":[\"EPSG:61666405\",\"undefined\"],\"EPSG:6639\":[\"EPSG:6639\",\"undefined\"],\"EPSG:62686405\":[\"EPSG:62686405\",\"undefined\"],\"EPSG:4343\":[\"EPSG:4343\",\"undefined\"],\"EPSG:66166405\":[\"EPSG:66166405\",\"undefined\"],\"EPSG:5735\":[\"EPSG:5735\",\"undefined\"],\"EPSG:62636405\":[\"EPSG:62636405\",\"undefined\"],\"EPSG:5831\":[\"EPSG:5831\",\"undefined\"],\"EPSG:6989\":[\"EPSG:6989\",\"undefined\"],\"EPSG:61336405\":[\"EPSG:61336405\",\"undefined\"],\"EPSG:5873\":[\"EPSG:5873\",\"undefined\"],\"EPSG:4931\":[\"EPSG:4931\",\"undefined\"],\"EPSG:5802\":[\"EPSG:5802\",\"undefined\"],\"EPSG:63266417\":[\"EPSG:63266417\",\"undefined\"],\"EPSG:63096405\":[\"EPSG:63096405\",\"undefined\"],\"EPSG:62706405\":[\"EPSG:62706405\",\"undefined\"],\"EPSG:5753\":[\"EPSG:5753\",\"undefined\"],\"EPSG:66676405\":[\"EPSG:66676405\",\"undefined\"],\"EPSG:61946405\":[\"EPSG:61946405\",\"undefined\"],\"EPSG:4329\":[\"EPSG:4329\",\"undefined\"],\"EPSG:61526405\":[\"EPSG:61526405\",\"undefined\"],\"EPSG:7446\":[\"EPSG:7446\",\"undefined\"],\"EPSG:4040\":[\"EPSG:4040\",\"undefined\"],\"EPSG:6364\":[\"EPSG:6364\",\"undefined\"],\"EPSG:4440\":[\"EPSG:4440\",\"undefined\"],\"EPSG:5758\":[\"EPSG:5758\",\"undefined\"],\"EPSG:6200\":[\"EPSG:6200\",\"undefined\"],\"EPSG:68026405\":[\"EPSG:68026405\",\"undefined\"],\"EPSG:62196405\":[\"EPSG:62196405\",\"undefined\"],\"EPSG:7040\":[\"EPSG:7040\",\"undefined\"],\"EPSG:4889\":[\"EPSG:4889\",\"undefined\"],\"EPSG:4891\":[\"EPSG:4891\",\"undefined\"],\"EPSG:6201\":[\"EPSG:6201\",\"undefined\"],\"EPSG:61936405\":[\"EPSG:61936405\",\"undefined\"],\"EPSG:68066405\":[\"EPSG:68066405\",\"undefined\"],\"EPSG:61956405\":[\"EPSG:61956405\",\"undefined\"],\"EPSG:61206405\":[\"EPSG:61206405\",\"undefined\"],\"EPSG:5745\":[\"EPSG:5745\",\"undefined\"],\"EPSG:62846405\":[\"EPSG:62846405\",\"undefined\"],\"EPSG:62956405\":[\"EPSG:62956405\",\"undefined\"],\"EPSG:4339\":[\"EPSG:4339\",\"undefined\"],\"EPSG:61566405\":[\"EPSG:61566405\",\"undefined\"],\"EPSG:61426405\":[\"EPSG:61426405\",\"undefined\"],\"EPSG:61896405\":[\"EPSG:61896405\",\"undefined\"],\"EPSG:6319\":[\"EPSG:6319\",\"undefined\"],\"EPSG:6272\":[\"EPSG:6272\",\"undefined\"],\"EPSG:5756\":[\"EPSG:5756\",\"undefined\"],\"EPSG:66126405\":[\"EPSG:66126405\",\"undefined\"],\"EPSG:66456413\":[\"EPSG:66456413\",\"undefined\"],\"EPSG:61406405\":[\"EPSG:61406405\",\"undefined\"],\"EPSG:4995\":[\"EPSG:4995\",\"undefined\"],\"EPSG:61376405\":[\"EPSG:61376405\",\"undefined\"],\"EPSG:5782\":[\"EPSG:5782\",\"undefined\"],\"EPSG:62046405\":[\"EPSG:62046405\",\"undefined\"],\"EPSG:7652\":[\"EPSG:7652\",\"undefined\"],\"EPSG:6360\":[\"EPSG:6360\",\"undefined\"],\"EPSG:5868\":[\"EPSG:5868\",\"undefined\"],\"EPSG:61796405\":[\"EPSG:61796405\",\"undefined\"],\"EPSG:66286405\":[\"EPSG:66286405\",\"undefined\"],\"EPSG:62656405\":[\"EPSG:62656405\",\"undefined\"],\"EPSG:6695\":[\"EPSG:6695\",\"undefined\"],\"EPSG:7072\":[\"EPSG:7072\",\"undefined\"],\"EPSG:5323\":[\"EPSG:5323\",\"undefined\"],\"EPSG:61296405\":[\"EPSG:61296405\",\"undefined\"],\"EPSG:7372\":[\"EPSG:7372\",\"undefined\"],\"EPSG:66196413\":[\"EPSG:66196413\",\"undefined\"],\"EPSG:61516413\":[\"EPSG:61516413\",\"undefined\"],\"EPSG:4351\":[\"EPSG:4351\",\"undefined\"],\"EPSG:63266419\":[\"EPSG:63266419\",\"undefined\"],\"EPSG:4961\":[\"EPSG:4961\",\"undefined\"],\"EPSG:5763\":[\"EPSG:5763\",\"undefined\"],\"EPSG:6255\":[\"EPSG:6255\",\"undefined\"],\"EPSG:61786405\":[\"EPSG:61786405\",\"undefined\"],\"EPSG:5600\":[\"EPSG:5600\",\"undefined\"],\"EPSG:66006405\":[\"EPSG:66006405\",\"undefined\"],\"EPSG:68096405\":[\"EPSG:68096405\",\"undefined\"],\"EPSG:61436405\":[\"EPSG:61436405\",\"undefined\"],\"EPSG:5805\":[\"EPSG:5805\",\"undefined\"],\"EPSG:68056405\":[\"EPSG:68056405\",\"undefined\"],\"EPSG:4953\":[\"EPSG:4953\",\"undefined\"],\"EPSG:6259\":[\"EPSG:6259\",\"undefined\"],\"EPSG:69036405\":[\"EPSG:69036405\",\"undefined\"],\"EPSG:5754\":[\"EPSG:5754\",\"undefined\"],\"EPSG:5759\":[\"EPSG:5759\",\"undefined\"],\"EPSG:5608\":[\"EPSG:5608\",\"undefined\"],\"EPSG:62456405\":[\"EPSG:62456405\",\"undefined\"],\"EPSG:5861\":[\"EPSG:5861\",\"undefined\"],\"EPSG:63266415\":[\"EPSG:63266415\",\"undefined\"],\"EPSG:2298\":[\"EPSG:2298\",\"undefined\"],\"EPSG:5225\":[\"EPSG:5225\",\"undefined\"],\"EPSG:5251\":[\"EPSG:5251\",\"undefined\"],\"EPSG:62116405\":[\"EPSG:62116405\",\"undefined\"],\"EPSG:61306413\":[\"EPSG:61306413\",\"undefined\"],\"EPSG:5809\":[\"EPSG:5809\",\"undefined\"],\"EPSG:63126405\":[\"EPSG:63126405\",\"undefined\"],\"EPSG:6182\":[\"EPSG:6182\",\"undefined\"],\"EPSG:6267\":[\"EPSG:6267\",\"undefined\"],\"EPSG:66066405\":[\"EPSG:66066405\",\"undefined\"],\"EPSG:4969\":[\"EPSG:4969\",\"undefined\"],\"EPSG:62416405\":[\"EPSG:62416405\",\"undefined\"],\"EPSG:61266405\":[\"EPSG:61266405\",\"undefined\"],\"EPSG:5859\":[\"EPSG:5859\",\"undefined\"],\"EPSG:4377\":[\"EPSG:4377\",\"undefined\"],\"EPSG:63266412\":[\"EPSG:63266412\",\"undefined\"],\"EPSG:4975\":[\"EPSG:4975\",\"undefined\"],\"EPSG:61816405\":[\"EPSG:61816405\",\"undefined\"],\"EPSG:3052\":[\"EPSG:3052\",\"undefined\"],\"EPSG:5810\":[\"EPSG:5810\",\"undefined\"],\"EPSG:4949\":[\"EPSG:4949\",\"undefined\"],\"EPSG:6185\":[\"EPSG:6185\",\"undefined\"],\"EPSG:63266420\":[\"EPSG:63266420\",\"undefined\"],\"EPSG:5829\":[\"EPSG:5829\",\"undefined\"],\"EPSG:6644\":[\"EPSG:6644\",\"undefined\"],\"EPSG:4472\":[\"EPSG:4472\",\"undefined\"],\"EPSG:5772\":[\"EPSG:5772\",\"undefined\"],\"EPSG:5703\":[\"EPSG:5703\",\"undefined\"],\"EPSG:7038\":[\"EPSG:7038\",\"undefined\"],\"EPSG:6130\":[\"EPSG:6130\",\"undefined\"],\"EPSG:5795\":[\"EPSG:5795\",\"undefined\"],\"EPSG:5734\":[\"EPSG:5734\",\"undefined\"],\"EPSG:4985\":[\"EPSG:4985\",\"undefined\"],\"EPSG:5777\":[\"EPSG:5777\",\"undefined\"],\"EPSG:62276405\":[\"EPSG:62276405\",\"undefined\"],\"EPSG:61276405\":[\"EPSG:61276405\",\"undefined\"],\"EPSG:61546405\":[\"EPSG:61546405\",\"undefined\"],\"EPSG:7085\":[\"EPSG:7085\",\"undefined\"],\"EPSG:4965\":[\"EPSG:4965\",\"undefined\"],\"EPSG:61466405\":[\"EPSG:61466405\",\"undefined\"],\"EPSG:4991\":[\"EPSG:4991\",\"undefined\"],\"EPSG:61916405\":[\"EPSG:61916405\",\"undefined\"],\"EPSG:61986405\":[\"EPSG:61986405\",\"undefined\"],\"EPSG:4367\":[\"EPSG:4367\",\"undefined\"],\"EPSG:5705\":[\"EPSG:5705\",\"undefined\"],\"EPSG:5317\":[\"EPSG:5317\",\"undefined\"],\"EPSG:63266406\":[\"EPSG:63266406\",\"undefined\"],\"EPSG:5793\":[\"EPSG:5793\",\"undefined\"],\"EPSG:5012\":[\"EPSG:5012\",\"undefined\"],\"EPSG:62766405\":[\"EPSG:62766405\",\"undefined\"],\"EPSG:62336405\":[\"EPSG:62336405\",\"undefined\"],\"EPSG:62056405\":[\"EPSG:62056405\",\"undefined\"],\"EPSG:61366405\":[\"EPSG:61366405\",\"undefined\"],\"EPSG:66056405\":[\"EPSG:66056405\",\"undefined\"],\"EPSG:4959\":[\"EPSG:4959\",\"undefined\"],\"EPSG:4939\":[\"EPSG:4939\",\"undefined\"],\"EPSG:5792\":[\"EPSG:5792\",\"undefined\"],\"EPSG:5871\":[\"EPSG:5871\",\"undefined\"],\"EPSG:66036405\":[\"EPSG:66036405\",\"undefined\"],\"EPSG:5621\":[\"EPSG:5621\",\"undefined\"],\"EPSG:66026405\":[\"EPSG:66026405\",\"undefined\"],\"EPSG:62006405\":[\"EPSG:62006405\",\"undefined\"],\"EPSG:32700\":[\"EPSG:32700\",\"undefined\"],\"EPSG:66256405\":[\"EPSG:66256405\",\"undefined\"],\"EPSG:6641\":[\"EPSG:6641\",\"undefined\"],\"EPSG:61706413\":[\"EPSG:61706413\",\"undefined\"],\"EPSG:66016405\":[\"EPSG:66016405\",\"undefined\"],\"EPSG:5263\":[\"EPSG:5263\",\"undefined\"],\"EPSG:61316405\":[\"EPSG:61316405\",\"undefined\"],\"EPSG:62036405\":[\"EPSG:62036405\",\"undefined\"],\"EPSG:3888\":[\"EPSG:3888\",\"undefined\"],\"EPSG:66316405\":[\"EPSG:66316405\",\"undefined\"],\"EPSG:6134\":[\"EPSG:6134\",\"undefined\"],\"EPSG:4080\":[\"EPSG:4080\",\"undefined\"],\"EPSG:63266410\":[\"EPSG:63266410\",\"undefined\"],\"EPSG:66346405\":[\"EPSG:66346405\",\"undefined\"],\"EPSG:6178\":[\"EPSG:6178\",\"undefined\"],\"EPSG:63196405\":[\"EPSG:63196405\",\"undefined\"],\"EPSG:4363\":[\"EPSG:4363\",\"undefined\"],\"EPSG:66276405\":[\"EPSG:66276405\",\"undefined\"],\"EPSG:6262\":[\"EPSG:6262\",\"undefined\"],\"EPSG:63266408\":[\"EPSG:63266408\",\"undefined\"],\"EPSG:62536405\":[\"EPSG:62536405\",\"undefined\"],\"EPSG:2307\":[\"EPSG:2307\",\"undefined\"],\"EPSG:62076405\":[\"EPSG:62076405\",\"undefined\"],\"EPSG:5613\":[\"EPSG:5613\",\"undefined\"],\"EPSG:66136405\":[\"EPSG:66136405\",\"undefined\"],\"EPSG:5812\":[\"EPSG:5812\",\"undefined\"],\"EPSG:62896405\":[\"EPSG:62896405\",\"undefined\"],\"EPSG:5869\":[\"EPSG:5869\",\"undefined\"],\"EPSG:4327\":[\"EPSG:4327\",\"undefined\"],\"EPSG:61646405\":[\"EPSG:61646405\",\"undefined\"],\"EPSG:68206405\":[\"EPSG:68206405\",\"undefined\"],\"EPSG:6261\":[\"EPSG:6261\",\"undefined\"],\"EPSG:68036405\":[\"EPSG:68036405\",\"undefined\"],\"EPSG:5706\":[\"EPSG:5706\",\"undefined\"],\"EPSG:62836413\":[\"EPSG:62836413\",\"undefined\"],\"EPSG:61656405\":[\"EPSG:61656405\",\"undefined\"],\"EPSG:6640\":[\"EPSG:6640\",\"undefined\"],\"EPSG:6694\":[\"EPSG:6694\",\"undefined\"],\"EPSG:66636405\":[\"EPSG:66636405\",\"undefined\"],\"EPSG:4967\":[\"EPSG:4967\",\"undefined\"],\"EPSG:5726\":[\"EPSG:5726\",\"undefined\"],\"EPSG:66396405\":[\"EPSG:66396405\",\"undefined\"],\"EPSG:7034\":[\"EPSG:7034\",\"undefined\"],\"EPSG:4921\":[\"EPSG:4921\",\"undefined\"],\"EPSG:4927\":[\"EPSG:4927\",\"undefined\"],\"EPSG:62716405\":[\"EPSG:62716405\",\"undefined\"],\"EPSG:61736413\":[\"EPSG:61736413\",\"undefined\"],\"EPSG:62866405\":[\"EPSG:62866405\",\"undefined\"],\"EPSG:6184\":[\"EPSG:6184\",\"undefined\"],\"EPSG:4379\":[\"EPSG:4379\",\"undefined\"],\"EPSG:5619\":[\"EPSG:5619\",\"undefined\"],\"EPSG:4929\":[\"EPSG:4929\",\"undefined\"],\"EPSG:61496405\":[\"EPSG:61496405\",\"undefined\"],\"EPSG:61966405\":[\"EPSG:61966405\",\"undefined\"],\"EPSG:61886405\":[\"EPSG:61886405\",\"undefined\"],\"EPSG:5597\":[\"EPSG:5597\",\"undefined\"],\"EPSG:62756405\":[\"EPSG:62756405\",\"undefined\"],\"EPSG:6275\":[\"EPSG:6275\",\"undefined\"],\"EPSG:4933\":[\"EPSG:4933\",\"undefined\"],\"EPSG:5761\":[\"EPSG:5761\",\"undefined\"],\"EPSG:6245\":[\"EPSG:6245\",\"undefined\"],\"EPSG:5870\":[\"EPSG:5870\",\"undefined\"],\"EPSG:62796405\":[\"EPSG:62796405\",\"undefined\"],\"EPSG:5722\":[\"EPSG:5722\",\"undefined\"],\"EPSG:6131\":[\"EPSG:6131\",\"undefined\"],\"EPSG:68186405\":[\"EPSG:68186405\",\"undefined\"],\"EPSG:5863\":[\"EPSG:5863\",\"undefined\"],\"EPSG:5791\":[\"EPSG:5791\",\"undefined\"],\"EPSG:4900\":[\"EPSG:4900\",\"undefined\"],\"EPSG:62776405\":[\"EPSG:62776405\",\"undefined\"],\"EPSG:66356405\":[\"EPSG:66356405\",\"undefined\"],\"EPSG:4386\":[\"EPSG:4386\",\"undefined\"],\"EPSG:4898\":[\"EPSG:4898\",\"undefined\"],\"EPSG:4977\":[\"EPSG:4977\",\"undefined\"],\"EPSG:6638\":[\"EPSG:6638\",\"undefined\"],\"EPSG:62546405\":[\"EPSG:62546405\",\"undefined\"],\"EPSG:66146405\":[\"EPSG:66146405\",\"undefined\"],\"EPSG:6274\":[\"EPSG:6274\",\"undefined\"],\"EPSG:66456405\":[\"EPSG:66456405\",\"undefined\"],\"EPSG:61536405\":[\"EPSG:61536405\",\"undefined\"],\"EPSG:5814\":[\"EPSG:5814\",\"undefined\"],\"EPSG:5778\":[\"EPSG:5778\",\"undefined\"],\"EPSG:4955\":[\"EPSG:4955\",\"undefined\"],\"EPSG:4923\":[\"EPSG:4923\",\"undefined\"],\"EPSG:62496405\":[\"EPSG:62496405\",\"undefined\"],\"EPSG:62926405\":[\"EPSG:62926405\",\"undefined\"],\"EPSG:6181\":[\"EPSG:6181\",\"undefined\"],\"EPSG:68016405\":[\"EPSG:68016405\",\"undefined\"],\"EPSG:4989\":[\"EPSG:4989\",\"undefined\"],\"EPSG:62566405\":[\"EPSG:62566405\",\"undefined\"],\"EPSG:5741\":[\"EPSG:5741\",\"undefined\"],\"EPSG:66586405\":[\"EPSG:66586405\",\"undefined\"],\"EPSG:61806413\":[\"EPSG:61806413\",\"undefined\"],\"EPSG:5779\":[\"EPSG:5779\",\"undefined\"],\"EPSG:6310\":[\"EPSG:6310\",\"undefined\"],\"EPSG:5746\":[\"EPSG:5746\",\"undefined\"],\"EPSG:4895\":[\"EPSG:4895\",\"undefined\"],\"EPSG:5755\":[\"EPSG:5755\",\"undefined\"],\"EPSG:63146405\":[\"EPSG:63146405\",\"undefined\"],\"EPSG:61416405\":[\"EPSG:61416405\",\"undefined\"],\"EPSG:4381\":[\"EPSG:4381\",\"undefined\"],\"EPSG:5719\":[\"EPSG:5719\",\"undefined\"],\"EPSG:2986\":[\"EPSG:2986\",\"undefined\"],\"EPSG:6359\":[\"EPSG:6359\",\"undefined\"],\"EPSG:62216405\":[\"EPSG:62216405\",\"undefined\"],\"EPSG:5711\":[\"EPSG:5711\",\"undefined\"],\"EPSG:62856405\":[\"EPSG:62856405\",\"undefined\"],\"EPSG:5819\":[\"EPSG:5819\",\"undefined\"],\"EPSG:62626405\":[\"EPSG:62626405\",\"undefined\"],\"EPSG:4947\":[\"EPSG:4947\",\"undefined\"],\"EPSG:4945\":[\"EPSG:4945\",\"undefined\"],\"EPSG:6667\":[\"EPSG:6667\",\"undefined\"],\"EPSG:61636413\":[\"EPSG:61636413\",\"undefined\"],\"EPSG:62296405\":[\"EPSG:62296405\",\"undefined\"],\"EPSG:62486405\":[\"EPSG:62486405\",\"undefined\"],\"EPSG:5820\":[\"EPSG:5820\",\"undefined\"],\"EPSG:61266413\":[\"EPSG:61266413\",\"undefined\"],\"EPSG:4375\":[\"EPSG:4375\",\"undefined\"],\"EPSG:61976405\":[\"EPSG:61976405\",\"undefined\"],\"EPSG:66186405\":[\"EPSG:66186405\",\"undefined\"],\"EPSG:4361\":[\"EPSG:4361\",\"undefined\"],\"EPSG:5748\":[\"EPSG:5748\",\"undefined\"],\"EPSG:6256\":[\"EPSG:6256\",\"undefined\"],\"EPSG:63006405\":[\"EPSG:63006405\",\"undefined\"],\"EPSG:4357\":[\"EPSG:4357\",\"undefined\"],\"EPSG:5353\":[\"EPSG:5353\",\"undefined\"],\"EPSG:4907\":[\"EPSG:4907\",\"undefined\"],\"EPSG:5601\":[\"EPSG:5601\",\"undefined\"],\"EPSG:5864\":[\"EPSG:5864\",\"undefined\"],\"EPSG:61406413\":[\"EPSG:61406413\",\"undefined\"],\"EPSG:4935\":[\"EPSG:4935\",\"undefined\"],\"EPSG:63036405\":[\"EPSG:63036405\",\"undefined\"],\"EPSG:6254\":[\"EPSG:6254\",\"undefined\"],\"EPSG:6252\":[\"EPSG:6252\",\"undefined\"],\"EPSG:62396405\":[\"EPSG:62396405\",\"undefined\"],\"EPSG:6986\":[\"EPSG:6986\",\"undefined\"],\"EPSG:62476405\":[\"EPSG:62476405\",\"undefined\"],\"EPSG:5747\":[\"EPSG:5747\",\"undefined\"],\"EPSG:62646405\":[\"EPSG:62646405\",\"undefined\"],\"EPSG:66276413\":[\"EPSG:66276413\",\"undefined\"],\"EPSG:5816\":[\"EPSG:5816\",\"undefined\"],\"EPSG:66466405\":[\"EPSG:66466405\",\"undefined\"],\"EPSG:4909\":[\"EPSG:4909\",\"undefined\"],\"EPSG:61216405\":[\"EPSG:61216405\",\"undefined\"],\"EPSG:62616405\":[\"EPSG:62616405\",\"undefined\"],\"EPSG:5801\":[\"EPSG:5801\",\"undefined\"],\"EPSG:5798\":[\"EPSG:5798\",\"undefined\"],\"EPSG:62366405\":[\"EPSG:62366405\",\"undefined\"],\"EPSG:62146405\":[\"EPSG:62146405\",\"undefined\"],\"EPSG:5721\":[\"EPSG:5721\",\"undefined\"],\"EPSG:63266414\":[\"EPSG:63266414\",\"undefined\"],\"EPSG:61596405\":[\"EPSG:61596405\",\"undefined\"],\"EPSG:5862\":[\"EPSG:5862\",\"undefined\"],\"EPSG:62226405\":[\"EPSG:62226405\",\"undefined\"],\"EPSG:5718\":[\"EPSG:5718\",\"undefined\"],\"EPSG:61586405\":[\"EPSG:61586405\",\"undefined\"],\"EPSG:62426405\":[\"EPSG:62426405\",\"undefined\"],\"EPSG:62086405\":[\"EPSG:62086405\",\"undefined\"],\"EPSG:5790\":[\"EPSG:5790\",\"undefined\"],\"EPSG:62436405\":[\"EPSG:62436405\",\"undefined\"],\"EPSG:5780\":[\"EPSG:5780\",\"undefined\"],\"EPSG:5724\":[\"EPSG:5724\",\"undefined\"],\"EPSG:5768\":[\"EPSG:5768\",\"undefined\"],\"EPSG:66046405\":[\"EPSG:66046405\",\"undefined\"],\"EPSG:6270\":[\"EPSG:6270\",\"undefined\"],\"EPSG:4981\":[\"EPSG:4981\",\"undefined\"],\"EPSG:62816405\":[\"EPSG:62816405\",\"undefined\"],\"EPSG:4893\":[\"EPSG:4893\",\"undefined\"],\"EPSG:61696405\":[\"EPSG:61696405\",\"undefined\"],\"EPSG:63266418\":[\"EPSG:63266418\",\"undefined\"],\"EPSG:4345\":[\"EPSG:4345\",\"undefined\"],\"EPSG:6260\":[\"EPSG:6260\",\"undefined\"],\"EPSG:5866\":[\"EPSG:5866\",\"undefined\"],\"EPSG:2299\":[\"EPSG:2299\",\"undefined\"],\"EPSG:61506405\":[\"EPSG:61506405\",\"undefined\"],\"EPSG:61636405\":[\"EPSG:61636405\",\"undefined\"],\"EPSG:4369\":[\"EPSG:4369\",\"undefined\"],\"EPSG:5874\":[\"EPSG:5874\",\"undefined\"],\"EPSG:4341\":[\"EPSG:4341\",\"undefined\"],\"EPSG:5784\":[\"EPSG:5784\",\"undefined\"],\"EPSG:2303\":[\"EPSG:2303\",\"undefined\"],\"EPSG:63066405\":[\"EPSG:63066405\",\"undefined\"],\"EPSG:5843\":[\"EPSG:5843\",\"undefined\"],\"EPSG:4482\":[\"EPSG:4482\",\"undefined\"],\"EPSG:5794\":[\"EPSG:5794\",\"undefined\"],\"EPSG:62206405\":[\"EPSG:62206405\",\"undefined\"],\"EPSG:66666405\":[\"EPSG:66666405\",\"undefined\"],\"EPSG:5602\":[\"EPSG:5602\",\"undefined\"],\"EPSG:5872\":[\"EPSG:5872\",\"undefined\"],\"EPSG:6705\":[\"EPSG:6705\",\"undefined\"],\"EPSG:6979\":[\"EPSG:6979\",\"undefined\"],\"EPSG:3144\":[\"EPSG:3144\",\"undefined\"],\"EPSG:5736\":[\"EPSG:5736\",\"undefined\"],\"EPSG:5813\":[\"EPSG:5813\",\"undefined\"],\"EPSG:61386405\":[\"EPSG:61386405\",\"undefined\"],\"EPSG:4373\":[\"EPSG:4373\",\"undefined\"],\"EPSG:66656405\":[\"EPSG:66656405\",\"undefined\"],\"EPSG:5342\":[\"EPSG:5342\",\"undefined\"],\"EPSG:7138\":[\"EPSG:7138\",\"undefined\"],\"EPSG:6715\":[\"EPSG:6715\",\"undefined\"],\"EPSG:6321\":[\"EPSG:6321\",\"undefined\"],\"EPSG:68156405\":[\"EPSG:68156405\",\"undefined\"],\"EPSG:5714\":[\"EPSG:5714\",\"undefined\"],\"EPSG:4383\":[\"EPSG:4383\",\"undefined\"],\"EPSG:61766413\":[\"EPSG:61766413\",\"undefined\"],\"EPSG:62506405\":[\"EPSG:62506405\",\"undefined\"],\"EPSG:5709\":[\"EPSG:5709\",\"undefined\"],\"EPSG:5716\":[\"EPSG:5716\",\"undefined\"],\"EPSG:4941\":[\"EPSG:4941\",\"undefined\"],\"EPSG:61616405\":[\"EPSG:61616405\",\"undefined\"],\"EPSG:62166405\":[\"EPSG:62166405\",\"undefined\"],\"EPSG:5712\":[\"EPSG:5712\",\"undefined\"],\"EPSG:5788\":[\"EPSG:5788\",\"undefined\"],\"EPSG:61486413\":[\"EPSG:61486413\",\"undefined\"],\"EPSG:61756405\":[\"EPSG:61756405\",\"undefined\"],\"EPSG:63176405\":[\"EPSG:63176405\",\"undefined\"],\"EPSG:63086405\":[\"EPSG:63086405\",\"undefined\"],\"EPSG:5618\":[\"EPSG:5618\",\"undefined\"],\"EPSG:5372\":[\"EPSG:5372\",\"undefined\"],\"EPSG:5817\":[\"EPSG:5817\",\"undefined\"],\"EPSG:5336\":[\"EPSG:5336\",\"undefined\"],\"EPSG:5769\":[\"EPSG:5769\",\"undefined\"],\"EPSG:2221\":[\"EPSG:2221\",\"undefined\"],\"EPSG:5515\":[\"EPSG:5515\",\"undefined\"],\"EPSG:5731\":[\"EPSG:5731\",\"undefined\"],\"EPSG:5804\":[\"EPSG:5804\",\"undefined\"],\"EPSG:5867\":[\"EPSG:5867\",\"undefined\"],\"EPSG:66206405\":[\"EPSG:66206405\",\"undefined\"],\"EPSG:66096405\":[\"EPSG:66096405\",\"undefined\"],\"EPSG:62826405\":[\"EPSG:62826405\",\"undefined\"],\"EPSG:63106405\":[\"EPSG:63106405\",\"undefined\"],\"EPSG:62996405\":[\"EPSG:62996405\",\"undefined\"],\"EPSG:61526413\":[\"EPSG:61526413\",\"undefined\"],\"EPSG:5728\":[\"EPSG:5728\",\"undefined\"],\"EPSG:6244\":[\"EPSG:6244\",\"undefined\"],\"EPSG:7082\":[\"EPSG:7082\",\"undefined\"],\"EPSG:5767\":[\"EPSG:5767\",\"undefined\"],\"EPSG:5717\":[\"EPSG:5717\",\"undefined\"],\"EPSG:5738\":[\"EPSG:5738\",\"undefined\"],\"EPSG:5749\":[\"EPSG:5749\",\"undefined\"],\"EPSG:5785\":[\"EPSG:5785\",\"undefined\"],\"EPSG:66336405\":[\"EPSG:66336405\",\"undefined\"],\"EPSG:62186405\":[\"EPSG:62186405\",\"undefined\"],\"EPSG:63166405\":[\"EPSG:63166405\",\"undefined\"],\"EPSG:62576405\":[\"EPSG:62576405\",\"undefined\"],\"EPSG:4957\":[\"EPSG:4957\",\"undefined\"],\"EPSG:63116405\":[\"EPSG:63116405\",\"undefined\"],\"EPSG:5606\":[\"EPSG:5606\",\"undefined\"],\"EPSG:62556405\":[\"EPSG:62556405\",\"undefined\"],\"EPSG:5017\":[\"EPSG:5017\",\"undefined\"],\"EPSG:5592\":[\"EPSG:5592\",\"undefined\"],\"EPSG:61676413\":[\"EPSG:61676413\",\"undefined\"],\"EPSG:62676405\":[\"EPSG:62676405\",\"undefined\"],\"EPSG:5616\":[\"EPSG:5616\",\"undefined\"],\"EPSG:7036\":[\"EPSG:7036\",\"undefined\"],\"EPSG:5744\":[\"EPSG:5744\",\"undefined\"],\"EPSG:62786405\":[\"EPSG:62786405\",\"undefined\"],\"EPSG:63136405\":[\"EPSG:63136405\",\"undefined\"],\"EPSG:62316405\":[\"EPSG:62316405\",\"undefined\"],\"EPSG:5615\":[\"EPSG:5615\",\"undefined\"],\"EPSG:5195\":[\"EPSG:5195\",\"undefined\"],\"EPSG:63266405\":[\"EPSG:63266405\",\"undefined\"],\"EPSG:5815\":[\"EPSG:5815\",\"undefined\"],\"EPSG:6966\":[\"EPSG:6966\",\"undefined\"],\"EPSG:5818\":[\"EPSG:5818\",\"undefined\"],\"EPSG:4458\":[\"EPSG:4458\",\"undefined\"],\"EPSG:62136405\":[\"EPSG:62136405\",\"undefined\"],\"EPSG:6269\":[\"EPSG:6269\",\"undefined\"],\"EPSG:61766405\":[\"EPSG:61766405\",\"undefined\"],\"EPSG:62026405\":[\"EPSG:62026405\",\"undefined\"],\"EPSG:3053\":[\"EPSG:3053\",\"undefined\"],\"EPSG:7651\":[\"EPSG:7651\",\"undefined\"],\"EPSG:61836405\":[\"EPSG:61836405\",\"undefined\"],\"EPSG:66296405\":[\"EPSG:66296405\",\"undefined\"],\"EPSG:5765\":[\"EPSG:5765\",\"undefined\"],\"EPSG:62666405\":[\"EPSG:62666405\",\"undefined\"],\"EPSG:4971\":[\"EPSG:4971\",\"undefined\"],\"EPSG:5797\":[\"EPSG:5797\",\"undefined\"],\"EPSG:66246413\":[\"EPSG:66246413\",\"undefined\"],\"EPSG:66216405\":[\"EPSG:66216405\",\"undefined\"],\"EPSG:4951\":[\"EPSG:4951\",\"undefined\"],\"EPSG:6258\":[\"EPSG:6258\",\"undefined\"],\"EPSG:66576405\":[\"EPSG:66576405\",\"undefined\"],\"EPSG:61346405\":[\"EPSG:61346405\",\"undefined\"],\"EPSG:5715\":[\"EPSG:5715\",\"undefined\"],\"EPSG:62586413\":[\"EPSG:62586413\",\"undefined\"],\"EPSG:61826405\":[\"EPSG:61826405\",\"undefined\"],\"EPSG:4983\":[\"EPSG:4983\",\"undefined\"],\"EPSG:6264\":[\"EPSG:6264\",\"undefined\"],\"EPSG:5786\":[\"EPSG:5786\",\"undefined\"],\"EPSG:61286405\":[\"EPSG:61286405\",\"undefined\"],\"EPSG:32600\":[\"EPSG:32600\",\"undefined\"],\"EPSG:62526405\":[\"EPSG:62526405\",\"undefined\"],\"EPSG:6187\":[\"EPSG:6187\",\"undefined\"],\"EPSG:6253\":[\"EPSG:6253\",\"undefined\"],\"EPSG:7135\":[\"EPSG:7135\",\"undefined\"],\"EPSG:5811\":[\"EPSG:5811\",\"undefined\"],\"EPSG:5516\":[\"EPSG:5516\",\"undefined\"],\"EPSG:5245\":[\"EPSG:5245\",\"undefined\"],\"EPSG:63246405\":[\"EPSG:63246405\",\"undefined\"],\"EPSG:4993\":[\"EPSG:4993\",\"undefined\"],\"EPSG:6273\":[\"EPSG:6273\",\"undefined\"],\"EPSG:66616413\":[\"EPSG:66616413\",\"undefined\"],\"EPSG:66126413\":[\"EPSG:66126413\",\"undefined\"],\"EPSG:62746405\":[\"EPSG:62746405\",\"undefined\"],\"EPSG:6268\":[\"EPSG:6268\",\"undefined\"],\"EPSG:3145\":[\"EPSG:3145\",\"undefined\"],\"EPSG:5603\":[\"EPSG:5603\",\"undefined\"],\"EPSG:63156405\":[\"EPSG:63156405\",\"undefined\"],\"EPSG:5614\":[\"EPSG:5614\",\"undefined\"],\"EPSG:4987\":[\"EPSG:4987\",\"undefined\"],\"EPSG:2306\":[\"EPSG:2306\",\"undefined\"],\"EPSG:68086405\":[\"EPSG:68086405\",\"undefined\"],\"EPSG:62806405\":[\"EPSG:62806405\",\"undefined\"],\"EPSG:62836405\":[\"EPSG:62836405\",\"undefined\"],\"EPSG:4885\":[\"EPSG:4885\",\"undefined\"],\"EPSG:62126405\":[\"EPSG:62126405\",\"undefined\"],\"EPSG:4999\":[\"EPSG:4999\",\"undefined\"],\"EPSG:63266411\":[\"EPSG:63266411\",\"undefined\"],\"EPSG:6180\":[\"EPSG:6180\",\"undefined\"],\"EPSG:62726405\":[\"EPSG:62726405\",\"undefined\"],\"EPSG:6357\":[\"EPSG:6357\",\"undefined\"],\"EPSG:63186405\":[\"EPSG:63186405\",\"undefined\"],\"EPSG:61476405\":[\"EPSG:61476405\",\"undefined\"],\"EPSG:4943\":[\"EPSG:4943\",\"undefined\"],\"EPSG:2304\":[\"EPSG:2304\",\"undefined\"],\"EPSG:61716405\":[\"EPSG:61716405\",\"undefined\"],\"EPSG:6250\":[\"EPSG:6250\",\"undefined\"],\"EPSG:5733\":[\"EPSG:5733\",\"undefined\"],\"EPSG:61326405\":[\"EPSG:61326405\",\"undefined\"],\"EPSG:66596413\":[\"EPSG:66596413\",\"undefined\"],\"EPSG:61676405\":[\"EPSG:61676405\",\"undefined\"],\"EPSG:4997\":[\"EPSG:4997\",\"undefined\"],\"EPSG:6982\":[\"EPSG:6982\",\"undefined\"],\"EPSG:5560\":[\"EPSG:5560\",\"undefined\"],\"EPSG:5752\":[\"EPSG:5752\",\"undefined\"],\"EPSG:66306405\":[\"EPSG:66306405\",\"undefined\"],\"EPSG:6179\":[\"EPSG:6179\",\"undefined\"],\"EPSG:62936405\":[\"EPSG:62936405\",\"undefined\"],\"EPSG:61906413\":[\"EPSG:61906413\",\"undefined\"],\"EPSG:61716413\":[\"EPSG:61716413\",\"undefined\"],\"EPSG:61896413\":[\"EPSG:61896413\",\"undefined\"],\"EPSG:66106405\":[\"EPSG:66106405\",\"undefined\"],\"EPSG:6246\":[\"EPSG:6246\",\"undefined\"],\"EPSG:4925\":[\"EPSG:4925\",\"undefined\"],\"EPSG:62376405\":[\"EPSG:62376405\",\"undefined\"],\"EPSG:66116405\":[\"EPSG:66116405\",\"undefined\"],\"EPSG:5611\":[\"EPSG:5611\",\"undefined\"],\"EPSG:62096405\":[\"EPSG:62096405\",\"undefined\"],\"EPSG:62596405\":[\"EPSG:62596405\",\"undefined\"],\"EPSG:63016405\":[\"EPSG:63016405\",\"undefined\"],\"EPSG:68136405\":[\"EPSG:68136405\",\"undefined\"],\"EPSG:4353\":[\"EPSG:4353\",\"undefined\"],\"EPSG:2305\":[\"EPSG:2305\",\"undefined\"],\"EPSG:4371\":[\"EPSG:4371\",\"undefined\"],\"EPSG:61606405\":[\"EPSG:61606405\",\"undefined\"],\"EPSG:62306405\":[\"EPSG:62306405\",\"undefined\"],\"EPSG:61706405\":[\"EPSG:61706405\",\"undefined\"],\"EPSG:5723\":[\"EPSG:5723\",\"undefined\"],\"EPSG:61806405\":[\"EPSG:61806405\",\"undefined\"],\"EPSG:63046405\":[\"EPSG:63046405\",\"undefined\"],\"EPSG:5732\":[\"EPSG:5732\",\"undefined\"],\"EPSG:5743\":[\"EPSG:5743\",\"undefined\"],\"EPSG:5193\":[\"EPSG:5193\",\"undefined\"],\"EPSG:5704\":[\"EPSG:5704\",\"undefined\"],\"EPSG:66156405\":[\"EPSG:66156405\",\"undefined\"],\"EPSG:66226405\":[\"EPSG:66226405\",\"undefined\"],\"EPSG:5885\":[\"EPSG:5885\",\"undefined\"],\"EPSG:6265\":[\"EPSG:6265\",\"undefined\"],\"EPSG:66426405\":[\"EPSG:66426405\",\"undefined\"],\"EPSG:61736405\":[\"EPSG:61736405\",\"undefined\"],\"EPSG:5727\":[\"EPSG:5727\",\"undefined\"],\"EPSG:5710\":[\"EPSG:5710\",\"undefined\"],\"EPSG:63076405\":[\"EPSG:63076405\",\"undefined\"],\"EPSG:61576405\":[\"EPSG:61576405\",\"undefined\"],\"EPSG:63226405\":[\"EPSG:63226405\",\"undefined\"],\"EPSG:62466405\":[\"EPSG:62466405\",\"undefined\"],\"EPSG:2218\":[\"EPSG:2218\",\"undefined\"],\"EPSG:6248\":[\"EPSG:6248\",\"undefined\"],\"EPSG:68146405\":[\"EPSG:68146405\",\"undefined\"],\"EPSG:5800\":[\"EPSG:5800\",\"undefined\"],\"EPSG:63026405\":[\"EPSG:63026405\",\"undefined\"],\"EPSG:61486405\":[\"EPSG:61486405\",\"undefined\"],\"EPSG:7447\":[\"EPSG:7447\",\"undefined\"],\"EPSG:5783\":[\"EPSG:5783\",\"undefined\"],\"EPSG:66376405\":[\"EPSG:66376405\",\"undefined\"],\"EPSG:6257\":[\"EPSG:6257\",\"undefined\"],\"EPSG:66266405\":[\"EPSG:66266405\",\"undefined\"],\"EPSG:2985\":[\"EPSG:2985\",\"undefined\"],\"EPSG:4017\":[\"EPSG:4017\",\"undefined\"],\"EPSG:66606405\":[\"EPSG:66606405\",\"undefined\"],\"EPSG:62986405\":[\"EPSG:62986405\",\"undefined\"],\"EPSG:62406405\":[\"EPSG:62406405\",\"undefined\"],\"EPSG:62156405\":[\"EPSG:62156405\",\"undefined\"],\"EPSG:66416405\":[\"EPSG:66416405\",\"undefined\"],\"EPSG:4557\":[\"EPSG:4557\",\"undefined\"],\"EPSG:62736405\":[\"EPSG:62736405\",\"undefined\"],\"EPSG:5808\":[\"EPSG:5808\",\"undefined\"],\"EPSG:6249\":[\"EPSG:6249\",\"undefined\"],\"EPSG:6263\":[\"EPSG:6263\",\"undefined\"],\"EPSG:5751\":[\"EPSG:5751\",\"undefined\"],\"EPSG:5750\":[\"EPSG:5750\",\"undefined\"],\"EPSG:61356405\":[\"EPSG:61356405\",\"undefined\"],\"EPSG:62016405\":[\"EPSG:62016405\",\"undefined\"],\"EPSG:63266409\":[\"EPSG:63266409\",\"undefined\"],\"EPSG:5781\":[\"EPSG:5781\",\"undefined\"],\"EPSG:5742\":[\"EPSG:5742\",\"undefined\"],\"EPSG:66326405\":[\"EPSG:66326405\",\"undefined\"],\"EPSG:62516405\":[\"EPSG:62516405\",\"undefined\"],\"EPSG:6202\":[\"EPSG:6202\",\"undefined\"],\"EPSG:66366405\":[\"EPSG:66366405\",\"undefined\"],\"EPSG:61926405\":[\"EPSG:61926405\",\"undefined\"],\"EPSG:5609\":[\"EPSG:5609\",\"undefined\"],\"EPSG:2301\":[\"EPSG:2301\",\"undefined\"],\"EPSG:61236405\":[\"EPSG:61236405\",\"undefined\"],\"EPSG:62246405\":[\"EPSG:62246405\",\"undefined\"],\"EPSG:61396405\":[\"EPSG:61396405\",\"undefined\"],\"EPSG:66196405\":[\"EPSG:66196405\",\"undefined\"],\"EPSG:4469\":[\"EPSG:4469\",\"undefined\"],\"EPSG:2302\":[\"EPSG:2302\",\"undefined\"],\"EPSG:5392\":[\"EPSG:5392\",\"undefined\"],\"EPSG:5725\":[\"EPSG:5725\",\"undefined\"],\"EPSG:2296\":[\"EPSG:2296\",\"undefined\"],\"EPSG:5739\":[\"EPSG:5739\",\"undefined\"],\"EPSG:5740\":[\"EPSG:5740\",\"undefined\"],\"EPSG:61306405\":[\"EPSG:61306405\",\"undefined\"],\"EPSG:62446405\":[\"EPSG:62446405\",\"undefined\"],\"EPSG:62106405\":[\"EPSG:62106405\",\"undefined\"],\"EPSG:66436405\":[\"EPSG:66436405\",\"undefined\"],\"EPSG:5737\":[\"EPSG:5737\",\"undefined\"],\"EPSG:66406405\":[\"EPSG:66406405\",\"undefined\"],\"EPSG:3886\":[\"EPSG:3886\",\"undefined\"],\"EPSG:5789\":[\"EPSG:5789\",\"undefined\"],\"EPSG:61246405\":[\"EPSG:61246405\",\"undefined\"],\"EPSG:5807\":[\"EPSG:5807\",\"undefined\"],\"EPSG:6132\":[\"EPSG:6132\",\"undefined\"],\"EPSG:5730\":[\"EPSG:5730\",\"undefined\"],\"EPSG:6186\":[\"EPSG:6186\",\"undefined\"],\"EPSG:6183\":[\"EPSG:6183\",\"undefined\"],\"EPSG:5774\":[\"EPSG:5774\",\"undefined\"],\"EPSG:61456405\":[\"EPSG:61456405\",\"undefined\"],\"EPSG:4883\":[\"EPSG:4883\",\"undefined\"],\"EPSG:5364\":[\"EPSG:5364\",\"undefined\"],\"EPSG:5776\":[\"EPSG:5776\",\"undefined\"],\"EPSG:4979\":[\"EPSG:4979\",\"undefined\"],\"EPSG:66406413\":[\"EPSG:66406413\",\"undefined\"],\"EPSG:4937\":[\"EPSG:4937\",\"undefined\"],\"EPSG:62696405\":[\"EPSG:62696405\",\"undefined\"],\"EPSG:61626405\":[\"EPSG:61626405\",\"undefined\"],\"EPSG:2297\":[\"EPSG:2297\",\"undefined\"],\"EPSG:5775\":[\"EPSG:5775\",\"undefined\"],\"EPSG:5612\":[\"EPSG:5612\",\"undefined\"],\"EPSG:5488\":[\"EPSG:5488\",\"undefined\"],\"EPSG:5806\":[\"EPSG:5806\",\"undefined\"],\"EPSG:61226405\":[\"EPSG:61226405\",\"undefined\"],\"EPSG:4074\":[\"EPSG:4074\",\"undefined\"],\"EPSG:4480\":[\"EPSG:4480\",\"undefined\"],\"EPSG:6271\":[\"EPSG:6271\",\"undefined\"],\"EPSG:3139\":[\"EPSG:3139\",\"undefined\"],\"EPSG:66596405\":[\"EPSG:66596405\",\"undefined\"],\"EPSG:4973\":[\"EPSG:4973\",\"undefined\"],\"EPSG:6251\":[\"EPSG:6251\",\"undefined\"],\"EPSG:5545\":[\"EPSG:5545\",\"undefined\"],\"EPSG:5787\":[\"EPSG:5787\",\"undefined\"],\"EPSG:5760\":[\"EPSG:5760\",\"undefined\"],\"EPSG:6324\":[\"EPSG:6324\",\"undefined\"],\"EPSG:6358\":[\"EPSG:6358\",\"undefined\"],\"EPSG:6266\":[\"EPSG:6266\",\"undefined\"],\"EPSG:66076405\":[\"EPSG:66076405\",\"undefined\"],\"EPSG:5771\":[\"EPSG:5771\",\"undefined\"],\"EPSG:5607\":[\"EPSG:5607\",\"undefined\"],\"EPSG:5720\":[\"EPSG:5720\",\"undefined\"],\"EPSG:5830\":[\"EPSG:5830\",\"undefined\"],\"EPSG:6647\":[\"EPSG:6647\",\"undefined\"],\"EPSG:62236405\":[\"EPSG:62236405\",\"undefined\"],\"EPSG:66616405\":[\"EPSG:66616405\",\"undefined\"],\"EPSG:3295\":[\"EPSG:3295\",\"undefined\"],\"EPSG:62386405\":[\"EPSG:62386405\",\"undefined\"],\"EPSG:7087\":[\"EPSG:7087\",\"undefined\"],\"EPSG:5380\":[\"EPSG:5380\",\"undefined\"],\"EPSG:2963\":[\"EPSG:2963\",\"undefined\"],\"EPSG:6916\":[\"EPSG:6916\",\"undefined\"],\"EPSG:66646405\":[\"EPSG:66646405\",\"undefined\"],\"EPSG:61556405\":[\"EPSG:61556405\",\"undefined\"],\"EPSG:68046405\":[\"EPSG:68046405\",\"undefined\"],\"EPSG:5702\":[\"EPSG:5702\",\"undefined\"],\"EPSG:5604\":[\"EPSG:5604\",\"undefined\"],\"EPSG:5757\":[\"EPSG:5757\",\"undefined\"],\"EPSG:4365\":[\"EPSG:4365\",\"undefined\"],\"EPSG:3819\":[\"EPSG:3819\",\"+proj=longlat +ellps=bessel +towgs84=595.48,121.69,515.35,4.115,-2.9383,0.853,-3.408 +no_defs \"],\"EPSG:7042\":[\"EPSG:7042\",\"undefined\"],\"EPSG:3889\":[\"EPSG:3889\",\"+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs \"],\"EPSG:3906\":[\"EPSG:3906\",\"+proj=longlat +ellps=bessel +towgs84=682,-203,480,0,0,0,0 +no_defs \"],\"EPSG:4002\":[\"EPSG:4002\",\"+proj=longlat +ellps=mod_airy +no_defs \"],\"EPSG:4003\":[\"EPSG:4003\",\"+proj=longlat +ellps=aust_SA +no_defs \"],\"EPSG:4006\":[\"EPSG:4006\",\"+proj=longlat +ellps=bess_nam +no_defs \"],\"EPSG:4007\":[\"EPSG:4007\",\"+proj=longlat +a=6378293.645208759 +b=6356617.987679838 +no_defs \"],\"EPSG:4008\":[\"EPSG:4008\",\"+proj=longlat +ellps=clrk66 +no_defs \"],\"EPSG:4009\":[\"EPSG:4009\",\"+proj=longlat +a=6378450.047548896 +b=6356826.621488444 +no_defs \"],\"EPSG:4010\":[\"EPSG:4010\",\"+proj=longlat +a=6378300.789 +b=6356566.435 +no_defs \"],\"EPSG:4011\":[\"EPSG:4011\",\"+proj=longlat +a=6378249.2 +b=6356515 +no_defs \"],\"EPSG:4012\":[\"EPSG:4012\",\"+proj=longlat +ellps=clrk80 +no_defs \"],\"EPSG:4013\":[\"EPSG:4013\",\"+proj=longlat +a=6378249.145 +b=6356514.966398753 +no_defs \"],\"EPSG:4014\":[\"EPSG:4014\",\"+proj=longlat +a=6378249.2 +b=6356514.996941779 +no_defs \"],\"EPSG:4016\":[\"EPSG:4016\",\"+proj=longlat +ellps=evrstSS +no_defs \"],\"EPSG:4018\":[\"EPSG:4018\",\"+proj=longlat +a=6377304.063 +b=6356103.038993155 +no_defs \"],\"EPSG:4019\":[\"EPSG:4019\",\"+proj=longlat +ellps=GRS80 +no_defs \"],\"EPSG:4020\":[\"EPSG:4020\",\"+proj=longlat +ellps=helmert +no_defs \"],\"EPSG:4021\":[\"EPSG:4021\",\"+proj=longlat +a=6378160 +b=6356774.50408554 +no_defs \"],\"EPSG:4022\":[\"EPSG:4022\",\"+proj=longlat +ellps=intl +no_defs \"],\"EPSG:4023\":[\"EPSG:4023\",\"+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs \"],\"EPSG:4028\":[\"EPSG:4028\",\"+proj=longlat +a=6378298.3 +b=6356657.142669561 +no_defs \"],\"EPSG:4029\":[\"EPSG:4029\",\"+proj=longlat +a=6378300 +b=6356751.689189189 +no_defs \"],\"EPSG:4030\":[\"EPSG:4030\",\"+proj=longlat +ellps=WGS84 +no_defs \"],\"EPSG:4031\":[\"EPSG:4031\",\"+proj=longlat +ellps=WGS84 +no_defs \"],\"EPSG:4032\":[\"EPSG:4032\",\"+proj=longlat +a=6378136.2 +b=6356751.516927429 +no_defs \"],\"EPSG:4033\":[\"EPSG:4033\",\"+proj=longlat +a=6378136.3 +b=6356751.616592146 +no_defs \"],\"EPSG:4034\":[\"EPSG:4034\",\"+proj=longlat +a=6378249.144808011 +b=6356514.966204134 +no_defs \"],\"EPSG:4035\":[\"EPSG:4035\",\"+proj=longlat +a=6371000 +b=6371000 +no_defs \"],\"EPSG:4036\":[\"EPSG:4036\",\"+proj=longlat +ellps=GRS67 +no_defs \"],\"EPSG:4041\":[\"EPSG:4041\",\"+proj=longlat +a=6378135 +b=6356750.304921594 +no_defs \"],\"EPSG:4042\":[\"EPSG:4042\",\"+proj=longlat +a=6377299.36559538 +b=6356098.359005156 +no_defs \"],\"EPSG:4043\":[\"EPSG:4043\",\"+proj=longlat +ellps=WGS72 +no_defs \"],\"EPSG:4044\":[\"EPSG:4044\",\"+proj=longlat +a=6377301.243 +b=6356100.230165384 +no_defs \"],\"EPSG:4045\":[\"EPSG:4045\",\"+proj=longlat +a=6377299.151 +b=6356098.145120132 +no_defs \"],\"EPSG:4046\":[\"EPSG:4046\",\"+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs \"],\"EPSG:4047\":[\"EPSG:4047\",\"+proj=longlat +a=6371007 +b=6371007 +no_defs \"],\"EPSG:4053\":[\"EPSG:4053\",\"+proj=longlat +a=6371228 +b=6371228 +no_defs \"],\"EPSG:4054\":[\"EPSG:4054\",\"+proj=longlat +a=6378273 +b=6356889.449 +no_defs \"],\"EPSG:4075\":[\"EPSG:4075\",\"+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs \"],\"EPSG:4081\":[\"EPSG:4081\",\"+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs \"],\"EPSG:4120\":[\"EPSG:4120\",\"+proj=longlat +ellps=bessel +no_defs \"],\"EPSG:4122\":[\"EPSG:4122\",\"+proj=longlat +a=6378135 +b=6356750.304921594 +no_defs \"],\"EPSG:4123\":[\"EPSG:4123\",\"+proj=longlat +ellps=intl +towgs84=-96.062,-82.428,-121.753,4.801,0.345,-1.376,1.496 +no_defs \"],\"EPSG:4124\":[\"EPSG:4124\",\"+proj=longlat +ellps=bessel +towgs84=414.1,41.3,603.1,-0.855,2.141,-7.023,0 +no_defs \"],\"EPSG:4125\":[\"EPSG:4125\",\"+proj=longlat +ellps=bessel +towgs84=-404.78,685.68,45.47,0,0,0,0 +no_defs \"],\"EPSG:4126\":[\"EPSG:4126\",\"+proj=longlat +ellps=GRS80 +no_defs \"],\"EPSG:4127\":[\"EPSG:4127\",\"+proj=longlat +ellps=clrk66 +towgs84=-80,-100,-228,0,0,0,0 +no_defs \"],\"EPSG:4129\":[\"EPSG:4129\",\"+proj=longlat +ellps=clrk66 +towgs84=-132,-110,-335,0,0,0,0 +no_defs \"],\"EPSG:4130\":[\"EPSG:4130\",\"+proj=longlat +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +no_defs \"],\"EPSG:4131\":[\"EPSG:4131\",\"+proj=longlat +a=6377276.345 +b=6356075.41314024 +towgs84=198,881,317,0,0,0,0 +no_defs \"],\"EPSG:4132\":[\"EPSG:4132\",\"+proj=longlat +ellps=clrk80 +towgs84=-241.54,-163.64,396.06,0,0,0,0 +no_defs \"],\"EPSG:4133\":[\"EPSG:4133\",\"+proj=longlat +ellps=GRS80 +towgs84=0.055,-0.541,-0.185,0.0183,-0.0003,-0.007,-0.014 +no_defs \"],\"EPSG:4134\":[\"EPSG:4134\",\"+proj=longlat +ellps=clrk80 +towgs84=-180.624,-225.516,173.919,-0.81,-1.898,8.336,16.71006 +no_defs \"],\"EPSG:4135\":[\"EPSG:4135\",\"+proj=longlat +ellps=clrk66 +towgs84=61,-285,-181,0,0,0,0 +no_defs \"],\"EPSG:4136\":[\"EPSG:4136\",\"+proj=longlat +ellps=clrk66 +no_defs \"],\"EPSG:4137\":[\"EPSG:4137\",\"+proj=longlat +ellps=clrk66 +no_defs \"],\"EPSG:4138\":[\"EPSG:4138\",\"+proj=longlat +ellps=clrk66 +no_defs \"],\"EPSG:4139\":[\"EPSG:4139\",\"+proj=longlat +ellps=clrk66 +towgs84=11,72,-101,0,0,0,0 +no_defs \"],\"EPSG:4140\":[\"EPSG:4140\",\"+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs \"],\"EPSG:4141\":[\"EPSG:4141\",\"+proj=longlat +ellps=GRS80 +towgs84=-48,55,52,0,0,0,0 +no_defs \"],\"EPSG:4142\":[\"EPSG:4142\",\"+proj=longlat +ellps=clrk80 +towgs84=-125,53,467,0,0,0,0 +no_defs \"],\"EPSG:4143\":[\"EPSG:4143\",\"+proj=longlat +ellps=clrk80 +towgs84=-124.76,53,466.79,0,0,0,0 +no_defs \"],\"EPSG:4144\":[\"EPSG:4144\",\"+proj=longlat +a=6377276.345 +b=6356075.41314024 +towgs84=214,804,268,0,0,0,0 +no_defs \"],\"EPSG:4145\":[\"EPSG:4145\",\"+proj=longlat +a=6377301.243 +b=6356100.230165384 +towgs84=283,682,231,0,0,0,0 +no_defs \"],\"EPSG:4146\":[\"EPSG:4146\",\"+proj=longlat +a=6377299.151 +b=6356098.145120132 +towgs84=295,736,257,0,0,0,0 +no_defs \"],\"EPSG:4147\":[\"EPSG:4147\",\"+proj=longlat +ellps=krass +towgs84=-17.51,-108.32,-62.39,0,0,0,0 +no_defs \"],\"EPSG:4150\":[\"EPSG:4150\",\"+proj=longlat +ellps=bessel +towgs84=674.374,15.056,405.346,0,0,0,0 +no_defs \"],\"EPSG:4151\":[\"EPSG:4151\",\"+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs \"],\"EPSG:4152\":[\"EPSG:4152\",\"+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs \"],\"EPSG:4153\":[\"EPSG:4153\",\"+proj=longlat +ellps=intl +towgs84=-133.63,-157.5,-158.62,0,0,0,0 +no_defs \"],\"EPSG:4154\":[\"EPSG:4154\",\"+proj=longlat +ellps=intl +towgs84=-117,-132,-164,0,0,0,0 +no_defs \"],\"EPSG:4155\":[\"EPSG:4155\",\"+proj=longlat +a=6378249.2 +b=6356515 +towgs84=-83,37,124,0,0,0,0 +no_defs \"],\"EPSG:4157\":[\"EPSG:4157\",\"+proj=longlat +a=6378293.645208759 +b=6356617.987679838 +no_defs \"],\"EPSG:4158\":[\"EPSG:4158\",\"+proj=longlat +ellps=intl +towgs84=-0.465,372.095,171.736,0,0,0,0 +no_defs \"],\"EPSG:4159\":[\"EPSG:4159\",\"+proj=longlat +ellps=intl +towgs84=-115.8543,-99.0583,-152.4616,0,0,0,0 +no_defs \"],\"EPSG:4160\":[\"EPSG:4160\",\"+proj=longlat +ellps=intl +no_defs \"],\"EPSG:4161\":[\"EPSG:4161\",\"+proj=longlat +ellps=intl +towgs84=27.5,14,186.4,0,0,0,0 +no_defs \"],\"EPSG:4163\":[\"EPSG:4163\",\"+proj=longlat +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +no_defs \"],\"EPSG:4164\":[\"EPSG:4164\",\"+proj=longlat +ellps=krass +towgs84=-76,-138,67,0,0,0,0 +no_defs \"],\"EPSG:4165\":[\"EPSG:4165\",\"+proj=longlat +ellps=intl +towgs84=-173,253,27,0,0,0,0 +no_defs \"],\"EPSG:4166\":[\"EPSG:4166\",\"+proj=longlat +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +no_defs \"],\"EPSG:4167\":[\"EPSG:4167\",\"+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs \"],\"EPSG:4168\":[\"EPSG:4168\",\"+proj=longlat +a=6378300 +b=6356751.689189189 +towgs84=-199,32,322,0,0,0,0 +no_defs \"],\"EPSG:4169\":[\"EPSG:4169\",\"+proj=longlat +ellps=clrk66 +towgs84=-115,118,426,0,0,0,0 +no_defs \"],\"EPSG:4170\":[\"EPSG:4170\",\"+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs \"],\"EPSG:4172\":[\"EPSG:4172\",\"+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs \"],\"EPSG:4173\":[\"EPSG:4173\",\"+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs \"],\"EPSG:4174\":[\"EPSG:4174\",\"+proj=longlat +a=6378300 +b=6356751.689189189 +no_defs \"],\"EPSG:4175\":[\"EPSG:4175\",\"+proj=longlat +ellps=clrk80 +towgs84=-88,4,101,0,0,0,0 +no_defs \"],\"EPSG:4176\":[\"EPSG:4176\",\"+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs \"],\"EPSG:4178\":[\"EPSG:4178\",\"+proj=longlat +ellps=krass +towgs84=26,-121,-78,0,0,0,0 +no_defs \"],\"EPSG:4179\":[\"EPSG:4179\",\"+proj=longlat +ellps=krass +towgs84=2.3287,-147.0425,-92.0802,-0.3092483,0.32482185,0.49729934,5.68906266 +no_defs \"],\"EPSG:4182\":[\"EPSG:4182\",\"+proj=longlat +ellps=intl +towgs84=-425,-169,81,0,0,0,0 +no_defs \"],\"EPSG:4183\":[\"EPSG:4183\",\"+proj=longlat +ellps=intl +towgs84=-104,167,-38,0,0,0,0 +no_defs \"],\"EPSG:4184\":[\"EPSG:4184\",\"+proj=longlat +ellps=intl +towgs84=-203,141,53,0,0,0,0 +no_defs \"],\"EPSG:4185\":[\"EPSG:4185\",\"+proj=longlat +ellps=intl +no_defs \"],\"EPSG:4188\":[\"EPSG:4188\",\"+proj=longlat +ellps=airy +towgs84=482.5,-130.6,564.6,-1.042,-0.214,-0.631,8.15 +no_defs \"],\"EPSG:4190\":[\"EPSG:4190\",\"+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs \"],\"EPSG:4191\":[\"EPSG:4191\",\"+proj=longlat +ellps=krass +towgs84=-44.183,-0.58,-38.489,-2.3867,-2.7072,3.5196,-8.2703 +no_defs \"],\"EPSG:4192\":[\"EPSG:4192\",\"+proj=longlat +ellps=intl +towgs84=-206.1,-174.7,-87.7,0,0,0,0 +no_defs \"],\"EPSG:4193\":[\"EPSG:4193\",\"+proj=longlat +a=6378249.2 +b=6356515 +towgs84=-70.9,-151.8,-41.4,0,0,0,0 +no_defs \"],\"EPSG:4194\":[\"EPSG:4194\",\"+proj=longlat +ellps=intl +towgs84=164,138,-189,0,0,0,0 +no_defs \"],\"EPSG:4195\":[\"EPSG:4195\",\"+proj=longlat +ellps=intl +towgs84=105,326,-102.5,0,0,0.814,-0.6 +no_defs \"],\"EPSG:4196\":[\"EPSG:4196\",\"+proj=longlat +ellps=intl +towgs84=-45,417,-3.5,0,0,0.814,-0.6 +no_defs \"],\"EPSG:4198\":[\"EPSG:4198\",\"+proj=longlat +ellps=clrk80 +no_defs \"],\"EPSG:4199\":[\"EPSG:4199\",\"+proj=longlat +ellps=intl +no_defs \"],\"EPSG:4200\":[\"EPSG:4200\",\"+proj=longlat +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +no_defs \"],\"EPSG:4201\":[\"EPSG:4201\",\"+proj=longlat +ellps=clrk80 +towgs84=-166,-15,204,0,0,0,0 +no_defs \"],\"EPSG:4202\":[\"EPSG:4202\",\"+proj=longlat +ellps=aust_SA +towgs84=-117.808,-51.536,137.784,0.303,0.446,0.234,-0.29 +no_defs \"],\"EPSG:4204\":[\"EPSG:4204\",\"+proj=longlat +ellps=intl +towgs84=-143,-236,7,0,0,0,0 +no_defs \"],\"EPSG:4205\":[\"EPSG:4205\",\"+proj=longlat +ellps=krass +towgs84=-43,-163,45,0,0,0,0 +no_defs \"],\"EPSG:4206\":[\"EPSG:4206\",\"+proj=longlat +a=6378249.2 +b=6356515 +no_defs \"],\"EPSG:4208\":[\"EPSG:4208\",\"+proj=longlat +ellps=intl +towgs84=-151.99,287.04,-147.45,0,0,0,0 +no_defs \"],\"EPSG:4211\":[\"EPSG:4211\",\"+proj=longlat +ellps=bessel +towgs84=-377,681,-50,0,0,0,0 +no_defs \"],\"EPSG:4212\":[\"EPSG:4212\",\"+proj=longlat +ellps=clrk80 +towgs84=31.95,300.99,419.19,0,0,0,0 +no_defs \"],\"EPSG:4213\":[\"EPSG:4213\",\"+proj=longlat +a=6378249.2 +b=6356515 +towgs84=-106,-87,188,0,0,0,0 +no_defs \"],\"EPSG:4215\":[\"EPSG:4215\",\"+proj=longlat +ellps=intl +no_defs \"],\"EPSG:4216\":[\"EPSG:4216\",\"+proj=longlat +ellps=clrk66 +towgs84=-73,213,296,0,0,0,0 +no_defs \"],\"EPSG:4218\":[\"EPSG:4218\",\"+proj=longlat +ellps=intl +towgs84=307,304,-318,0,0,0,0 +no_defs \"],\"EPSG:4219\":[\"EPSG:4219\",\"+proj=longlat +ellps=bessel +towgs84=-384,664,-48,0,0,0,0 +no_defs \"],\"EPSG:4220\":[\"EPSG:4220\",\"+proj=longlat +ellps=clrk80 +towgs84=-50.9,-347.6,-231,0,0,0,0 +no_defs \"],\"EPSG:4221\":[\"EPSG:4221\",\"+proj=longlat +ellps=intl +towgs84=-148,136,90,0,0,0,0 +no_defs \"],\"EPSG:4222\":[\"EPSG:4222\",\"+proj=longlat +a=6378249.145 +b=6356514.966398753 +towgs84=-136,-108,-292,0,0,0,0 +no_defs \"],\"EPSG:4223\":[\"EPSG:4223\",\"+proj=longlat +datum=carthage +no_defs \"],\"EPSG:4224\":[\"EPSG:4224\",\"+proj=longlat +ellps=intl +towgs84=-143.87,243.37,-33.52,0,0,0,0 +no_defs \"],\"EPSG:4226\":[\"EPSG:4226\",\"+proj=longlat +a=6378249.2 +b=6356515 +no_defs \"],\"EPSG:4227\":[\"EPSG:4227\",\"+proj=longlat +a=6378249.2 +b=6356515 +towgs84=-190.421,8.532,238.69,0,0,0,0 +no_defs \"],\"EPSG:4228\":[\"EPSG:4228\",\"+proj=longlat +a=6378249.2 +b=6356515 +no_defs \"],\"EPSG:4232\":[\"EPSG:4232\",\"+proj=longlat +ellps=clrk80 +towgs84=-333.102,-11.02,230.69,0,0,0.554,0.219 +no_defs \"],\"EPSG:4233\":[\"EPSG:4233\",\"+proj=longlat +ellps=intl +towgs84=-133,-321,50,0,0,0,0 +no_defs \"],\"EPSG:4234\":[\"EPSG:4234\",\"+proj=longlat +a=6378249.2 +b=6356515 +no_defs \"],\"EPSG:4235\":[\"EPSG:4235\",\"+proj=longlat +ellps=intl +no_defs \"],\"EPSG:4236\":[\"EPSG:4236\",\"+proj=longlat +ellps=intl +towgs84=-637,-549,-203,0,0,0,0 +no_defs \"],\"EPSG:4237\":[\"EPSG:4237\",\"+proj=longlat +ellps=GRS67 +towgs84=52.17,-71.82,-14.9,0,0,0,0 +no_defs \"],\"EPSG:4238\":[\"EPSG:4238\",\"+proj=longlat +a=6378160 +b=6356774.50408554 +towgs84=-24,-15,5,0,0,0,0 +no_defs \"],\"EPSG:4239\":[\"EPSG:4239\",\"+proj=longlat +a=6377276.345 +b=6356075.41314024 +towgs84=217,823,299,0,0,0,0 +no_defs \"],\"EPSG:4240\":[\"EPSG:4240\",\"+proj=longlat +a=6377276.345 +b=6356075.41314024 +towgs84=210,814,289,0,0,0,0 +no_defs \"],\"EPSG:4241\":[\"EPSG:4241\",\"+proj=longlat +a=6378249.144808011 +b=6356514.966204134 +no_defs \"],\"EPSG:4242\":[\"EPSG:4242\",\"+proj=longlat +ellps=clrk66 +towgs84=70,207,389.5,0,0,0,0 +no_defs \"],\"EPSG:4243\":[\"EPSG:4243\",\"+proj=longlat +a=6377299.36559538 +b=6356098.359005156 +no_defs \"],\"EPSG:4244\":[\"EPSG:4244\",\"+proj=longlat +a=6377276.345 +b=6356075.41314024 +towgs84=-97,787,86,0,0,0,0 +no_defs \"],\"EPSG:4245\":[\"EPSG:4245\",\"+proj=longlat +a=6377304.063 +b=6356103.038993155 +towgs84=-11,851,5,0,0,0,0 +no_defs \"],\"EPSG:4246\":[\"EPSG:4246\",\"+proj=longlat +ellps=clrk80 +towgs84=-294.7,-200.1,525.5,0,0,0,0 +no_defs \"],\"EPSG:4248\":[\"EPSG:4248\",\"+proj=longlat +ellps=intl +towgs84=-288,175,-376,0,0,0,0 +no_defs \"],\"EPSG:4249\":[\"EPSG:4249\",\"+proj=longlat +ellps=intl +no_defs \"],\"EPSG:4250\":[\"EPSG:4250\",\"+proj=longlat +ellps=clrk80 +towgs84=-130,29,364,0,0,0,0 +no_defs \"],\"EPSG:4251\":[\"EPSG:4251\",\"+proj=longlat +ellps=clrk80 +towgs84=-90,40,88,0,0,0,0 +no_defs \"],\"EPSG:4252\":[\"EPSG:4252\",\"+proj=longlat +a=6378249.2 +b=6356515 +no_defs \"],\"EPSG:4253\":[\"EPSG:4253\",\"+proj=longlat +ellps=clrk66 +towgs84=-133,-77,-51,0,0,0,0 +no_defs \"],\"EPSG:4254\":[\"EPSG:4254\",\"+proj=longlat +ellps=intl +towgs84=16,196,93,0,0,0,0 +no_defs \"],\"EPSG:4255\":[\"EPSG:4255\",\"+proj=longlat +ellps=intl +towgs84=-333,-222,114,0,0,0,0 +no_defs \"],\"EPSG:4256\":[\"EPSG:4256\",\"+proj=longlat +ellps=clrk80 +towgs84=41,-220,-134,0,0,0,0 +no_defs \"],\"EPSG:4257\":[\"EPSG:4257\",\"+proj=longlat +ellps=bessel +towgs84=-587.8,519.75,145.76,0,0,0,0 +no_defs \"],\"EPSG:4259\":[\"EPSG:4259\",\"+proj=longlat +ellps=intl +towgs84=-254.1,-5.36,-100.29,0,0,0,0 +no_defs \"],\"EPSG:4260\":[\"EPSG:4260\",\"+proj=longlat +ellps=clrk80 +towgs84=-70.9,-151.8,-41.4,0,0,0,0 +no_defs \"],\"EPSG:4261\":[\"EPSG:4261\",\"+proj=longlat +a=6378249.2 +b=6356515 +towgs84=31,146,47,0,0,0,0 +no_defs \"],\"EPSG:4262\":[\"EPSG:4262\",\"+proj=longlat +ellps=bessel +towgs84=639,405,60,0,0,0,0 +no_defs \"],\"EPSG:4263\":[\"EPSG:4263\",\"+proj=longlat +ellps=clrk80 +towgs84=-92,-93,122,0,0,0,0 +no_defs \"],\"EPSG:4264\":[\"EPSG:4264\",\"+proj=longlat +ellps=intl +towgs84=-252.95,-4.11,-96.38,0,0,0,0 +no_defs \"],\"EPSG:4266\":[\"EPSG:4266\",\"+proj=longlat +a=6378249.2 +b=6356515 +towgs84=-74,-130,42,0,0,0,0 +no_defs \"],\"EPSG:4268\":[\"EPSG:4268\",\"+proj=longlat +a=6378450.047548896 +b=6356826.621488444 +no_defs \"],\"EPSG:4270\":[\"EPSG:4270\",\"+proj=longlat +ellps=clrk80 +towgs84=-249,-156,381,0,0,0,0 +no_defs \"],\"EPSG:4271\":[\"EPSG:4271\",\"+proj=longlat +ellps=intl +towgs84=-10,375,165,0,0,0,0 +no_defs \"],\"EPSG:4273\":[\"EPSG:4273\",\"+proj=longlat +a=6377492.018 +b=6356173.508712696 +towgs84=278.3,93,474.5,7.889,0.05,-6.61,6.21 +no_defs \"],\"EPSG:4275\":[\"EPSG:4275\",\"+proj=longlat +a=6378249.2 +b=6356515 +towgs84=-168,-60,320,0,0,0,0 +no_defs \"],\"EPSG:4276\":[\"EPSG:4276\",\"+proj=longlat +ellps=WGS66 +no_defs \"],\"EPSG:4279\":[\"EPSG:4279\",\"+proj=longlat +ellps=airy +no_defs \"],\"EPSG:4280\":[\"EPSG:4280\",\"+proj=longlat +ellps=bessel +no_defs \"],\"EPSG:4281\":[\"EPSG:4281\",\"+proj=longlat +a=6378300.789 +b=6356566.435 +towgs84=-275.7224,94.7824,340.8944,-8.001,-4.42,-11.821,1 +no_defs \"],\"EPSG:4282\":[\"EPSG:4282\",\"+proj=longlat +a=6378249.2 +b=6356515 +towgs84=-148,51,-291,0,0,0,0 +no_defs \"],\"EPSG:4284\":[\"EPSG:4284\",\"+proj=longlat +ellps=krass +towgs84=23.92,-141.27,-80.9,0,0.35,0.82,-0.12 +no_defs \"],\"EPSG:4285\":[\"EPSG:4285\",\"+proj=longlat +ellps=intl +towgs84=-128.16,-282.42,21.93,0,0,0,0 +no_defs \"],\"EPSG:4286\":[\"EPSG:4286\",\"+proj=longlat +ellps=helmert +no_defs \"],\"EPSG:4287\":[\"EPSG:4287\",\"+proj=longlat +ellps=intl +towgs84=164,138,-189,0,0,0,0 +no_defs \"],\"EPSG:4288\":[\"EPSG:4288\",\"+proj=longlat +ellps=intl +no_defs \"],\"EPSG:4291\":[\"EPSG:4291\",\"+proj=longlat +ellps=GRS67 +towgs84=-57,1,-41,0,0,0,0 +no_defs \"],\"EPSG:4292\":[\"EPSG:4292\",\"+proj=longlat +ellps=intl +towgs84=-355,21,72,0,0,0,0 +no_defs \"],\"EPSG:4293\":[\"EPSG:4293\",\"+proj=longlat +ellps=bess_nam +towgs84=616,97,-251,0,0,0,0 +no_defs \"],\"EPSG:4294\":[\"EPSG:4294\",\"+proj=longlat +ellps=bessel +towgs84=-403,684,41,0,0,0,0 +no_defs \"],\"EPSG:4295\":[\"EPSG:4295\",\"+proj=longlat +ellps=bessel +no_defs \"],\"EPSG:4296\":[\"EPSG:4296\",\"+proj=longlat +a=6378249.2 +b=6356515 +no_defs \"],\"EPSG:7041\":[\"EPSG:7041\",\"+proj=longlat +ellps=GRS80 +no_defs \"],\"EPSG:4297\":[\"EPSG:4297\",\"+proj=longlat +ellps=intl +towgs84=-189,-242,-91,0,0,0,0 +no_defs \"],\"EPSG:4298\":[\"EPSG:4298\",\"+proj=longlat +ellps=evrstSS +towgs84=-679,669,-48,0,0,0,0 +no_defs \"],\"EPSG:4299\":[\"EPSG:4299\",\"+proj=longlat +datum=ire65 +no_defs \"],\"EPSG:4300\":[\"EPSG:4300\",\"+proj=longlat +ellps=mod_airy +towgs84=482.5,-130.6,564.6,-1.042,-0.214,-0.631,8.15 +no_defs \"],\"EPSG:4301\":[\"EPSG:4301\",\"+proj=longlat +ellps=bessel +towgs84=-146.414,507.337,680.507,0,0,0,0 +no_defs \"],\"EPSG:4302\":[\"EPSG:4302\",\"+proj=longlat +a=6378293.645208759 +b=6356617.987679838 +towgs84=-61.702,284.488,472.052,0,0,0,0 +no_defs \"],\"EPSG:4303\":[\"EPSG:4303\",\"+proj=longlat +ellps=helmert +no_defs \"],\"EPSG:4304\":[\"EPSG:4304\",\"+proj=longlat +a=6378249.2 +b=6356515 +towgs84=-73,-247,227,0,0,0,0 +no_defs \"],\"EPSG:4306\":[\"EPSG:4306\",\"+proj=longlat +ellps=bessel +no_defs \"],\"EPSG:4307\":[\"EPSG:4307\",\"+proj=longlat +ellps=clrk80 +towgs84=-209.3622,-87.8162,404.6198,0.0046,3.4784,0.5805,-1.4547 +no_defs \"],\"EPSG:4308\":[\"EPSG:4308\",\"+proj=longlat +ellps=bessel +no_defs \"],\"EPSG:4309\":[\"EPSG:4309\",\"+proj=longlat +ellps=intl +towgs84=-155,171,37,0,0,0,0 +no_defs \"],\"EPSG:4310\":[\"EPSG:4310\",\"+proj=longlat +a=6378249.2 +b=6356515 +towgs84=-30,190,89,0,0,0,0 +no_defs \"],\"EPSG:4311\":[\"EPSG:4311\",\"+proj=longlat +ellps=intl +towgs84=-265,120,-358,0,0,0,0 +no_defs \"],\"EPSG:4315\":[\"EPSG:4315\",\"+proj=longlat +a=6378249.2 +b=6356515 +towgs84=-23,259,-9,0,0,0,0 +no_defs \"],\"EPSG:4605\":[\"EPSG:4605\",\"+proj=longlat +ellps=clrk80 +towgs84=9,183,236,0,0,0,0 +no_defs \"],\"EPSG:4316\":[\"EPSG:4316\",\"+proj=longlat +ellps=intl +towgs84=103.25,-100.4,-307.19,0,0,0,0 +no_defs \"],\"EPSG:4318\":[\"EPSG:4318\",\"+proj=longlat +ellps=WGS84 +towgs84=-3.2,-5.7,2.8,0,0,0,0 +no_defs \"],\"EPSG:4319\":[\"EPSG:4319\",\"+proj=longlat +ellps=GRS80 +towgs84=-20.8,11.3,2.4,0,0,0,0 +no_defs \"],\"EPSG:4463\":[\"EPSG:4463\",\"+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs \"],\"EPSG:4470\":[\"EPSG:4470\",\"+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs \"],\"EPSG:4475\":[\"EPSG:4475\",\"+proj=longlat +ellps=intl +towgs84=-381.788,-57.501,-256.673,0,0,0,0 +no_defs \"],\"EPSG:4490\":[\"EPSG:4490\",\"+proj=longlat +ellps=GRS80 +no_defs \"],\"EPSG:4555\":[\"EPSG:4555\",\"+proj=longlat +ellps=krass +no_defs \"],\"EPSG:4558\":[\"EPSG:4558\",\"+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs \"],\"EPSG:4600\":[\"EPSG:4600\",\"+proj=longlat +ellps=clrk80 +no_defs \"],\"EPSG:4601\":[\"EPSG:4601\",\"+proj=longlat +ellps=clrk80 +towgs84=-255,-15,71,0,0,0,0 +no_defs \"],\"EPSG:4602\":[\"EPSG:4602\",\"+proj=longlat +ellps=clrk80 +towgs84=725,685,536,0,0,0,0 +no_defs \"],\"EPSG:4603\":[\"EPSG:4603\",\"+proj=longlat +ellps=clrk80 +towgs84=72,213.7,93,0,0,0,0 +no_defs \"],\"EPSG:4604\":[\"EPSG:4604\",\"+proj=longlat +ellps=clrk80 +towgs84=174,359,365,0,0,0,0 +no_defs \"],\"EPSG:4606\":[\"EPSG:4606\",\"+proj=longlat +ellps=clrk80 +towgs84=-149,128,296,0,0,0,0 +no_defs \"],\"EPSG:4607\":[\"EPSG:4607\",\"+proj=longlat +ellps=clrk80 +towgs84=195.671,332.517,274.607,0,0,0,0 +no_defs \"],\"EPSG:4608\":[\"EPSG:4608\",\"+proj=longlat +ellps=clrk66 +no_defs \"],\"EPSG:4609\":[\"EPSG:4609\",\"+proj=longlat +ellps=clrk66 +no_defs \"],\"EPSG:4610\":[\"EPSG:4610\",\"+proj=longlat +a=6378140 +b=6356755.288157528 +no_defs \"],\"EPSG:4611\":[\"EPSG:4611\",\"+proj=longlat +ellps=intl +towgs84=-162.619,-276.959,-161.764,0.067753,-2.243649,-1.158827,-1.094246 +no_defs \"],\"EPSG:4613\":[\"EPSG:4613\",\"+proj=longlat +ellps=bessel +towgs84=-403,684,41,0,0,0,0 +no_defs \"],\"EPSG:4614\":[\"EPSG:4614\",\"+proj=longlat +ellps=intl +towgs84=-119.4248,-303.65872,-11.00061,1.164298,0.174458,1.096259,3.657065 +no_defs \"],\"EPSG:4615\":[\"EPSG:4615\",\"+proj=longlat +ellps=intl +towgs84=-499,-249,314,0,0,0,0 +no_defs \"],\"EPSG:4616\":[\"EPSG:4616\",\"+proj=longlat +ellps=intl +towgs84=-289,-124,60,0,0,0,0 +no_defs \"],\"EPSG:4620\":[\"EPSG:4620\",\"+proj=longlat +ellps=clrk80 +towgs84=-106,-129,165,0,0,0,0 +no_defs \"],\"EPSG:4621\":[\"EPSG:4621\",\"+proj=longlat +ellps=intl +towgs84=137,248,-430,0,0,0,0 +no_defs \"],\"EPSG:4622\":[\"EPSG:4622\",\"+proj=longlat +ellps=intl +towgs84=-467,-16,-300,0,0,0,0 +no_defs \"],\"EPSG:4623\":[\"EPSG:4623\",\"+proj=longlat +ellps=intl +towgs84=-186,230,110,0,0,0,0 +no_defs \"],\"EPSG:4624\":[\"EPSG:4624\",\"+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs \"],\"EPSG:4625\":[\"EPSG:4625\",\"+proj=longlat +ellps=intl +towgs84=186,482,151,0,0,0,0 +no_defs \"],\"EPSG:4626\":[\"EPSG:4626\",\"+proj=longlat +ellps=intl +towgs84=94,-948,-1262,0,0,0,0 +no_defs \"],\"EPSG:4627\":[\"EPSG:4627\",\"+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs \"],\"EPSG:4628\":[\"EPSG:4628\",\"+proj=longlat +ellps=intl +towgs84=162,117,154,0,0,0,0 +no_defs \"],\"EPSG:4629\":[\"EPSG:4629\",\"+proj=longlat +ellps=intl +towgs84=72.438,345.918,79.486,1.6045,0.8823,0.5565,1.3746 +no_defs \"],\"EPSG:4630\":[\"EPSG:4630\",\"+proj=longlat +ellps=intl +towgs84=84,274,65,0,0,0,0 +no_defs \"],\"EPSG:4631\":[\"EPSG:4631\",\"+proj=longlat +ellps=intl +towgs84=145,-187,103,0,0,0,0 +no_defs \"],\"EPSG:4632\":[\"EPSG:4632\",\"+proj=longlat +ellps=intl +towgs84=-382,-59,-262,0,0,0,0 +no_defs \"],\"EPSG:4633\":[\"EPSG:4633\",\"+proj=longlat +ellps=intl +towgs84=335.47,222.58,-230.94,0,0,0,0 +no_defs \"],\"EPSG:4634\":[\"EPSG:4634\",\"+proj=longlat +ellps=intl +towgs84=-13,-348,292,0,0,0,0 +no_defs \"],\"EPSG:4635\":[\"EPSG:4635\",\"+proj=longlat +ellps=intl +towgs84=-122.383,-188.696,103.344,3.5107,-4.9668,-5.7047,4.4798 +no_defs \"],\"EPSG:4636\":[\"EPSG:4636\",\"+proj=longlat +ellps=intl +towgs84=365,194,166,0,0,0,0 +no_defs \"],\"EPSG:4637\":[\"EPSG:4637\",\"+proj=longlat +ellps=intl +towgs84=325,154,172,0,0,0,0 +no_defs \"],\"EPSG:4638\":[\"EPSG:4638\",\"+proj=longlat +ellps=clrk66 +towgs84=30,430,368,0,0,0,0 +no_defs \"],\"EPSG:4639\":[\"EPSG:4639\",\"+proj=longlat +ellps=intl +towgs84=253,-132,-127,0,0,0,0 +no_defs \"],\"EPSG:4640\":[\"EPSG:4640\",\"+proj=longlat +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +no_defs \"],\"EPSG:4641\":[\"EPSG:4641\",\"+proj=longlat +ellps=intl +towgs84=287.58,177.78,-135.41,0,0,0,0 +no_defs \"],\"EPSG:4642\":[\"EPSG:4642\",\"+proj=longlat +ellps=intl +towgs84=-13,-348,292,0,0,0,0 +no_defs \"],\"EPSG:4671\":[\"EPSG:4671\",\"+proj=longlat +a=6378249.2 +b=6356515 +no_defs \"],\"EPSG:4643\":[\"EPSG:4643\",\"+proj=longlat +ellps=intl +towgs84=-480.26,-438.32,-643.429,16.3119,20.1721,-4.0349,-111.7002 +no_defs \"],\"EPSG:4644\":[\"EPSG:4644\",\"+proj=longlat +ellps=intl +towgs84=-10.18,-350.43,291.37,0,0,0,0 +no_defs \"],\"EPSG:4645\":[\"EPSG:4645\",\"+proj=longlat +ellps=intl +towgs84=0,0,0,0,0,0,0 +no_defs \"],\"EPSG:4646\":[\"EPSG:4646\",\"+proj=longlat +ellps=intl +towgs84=-963,510,-359,0,0,0,0 +no_defs \"],\"EPSG:4657\":[\"EPSG:4657\",\"+proj=longlat +a=6377019.27 +b=6355762.5391 +towgs84=-28,199,5,0,0,0,0 +no_defs \"],\"EPSG:4659\":[\"EPSG:4659\",\"+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs \"],\"EPSG:4660\":[\"EPSG:4660\",\"+proj=longlat +ellps=intl +towgs84=982.6087,552.753,-540.873,6.6816266,-31.6114924,-19.84816,16.805 +no_defs \"],\"EPSG:4661\":[\"EPSG:4661\",\"+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs \"],\"EPSG:4662\":[\"EPSG:4662\",\"+proj=longlat +ellps=intl +towgs84=-11.64,-348.6,291.98,0,0,0,0 +no_defs \"],\"EPSG:4663\":[\"EPSG:4663\",\"+proj=longlat +ellps=intl +towgs84=-502.862,-247.438,312.724,0,0,0,0 +no_defs \"],\"EPSG:4664\":[\"EPSG:4664\",\"+proj=longlat +ellps=intl +towgs84=-204.619,140.176,55.226,0,0,0,0 +no_defs \"],\"EPSG:4665\":[\"EPSG:4665\",\"+proj=longlat +ellps=intl +towgs84=-106.226,166.366,-37.893,0,0,0,0 +no_defs \"],\"EPSG:4666\":[\"EPSG:4666\",\"+proj=longlat +ellps=bessel +towgs84=508.088,-191.042,565.223,0,0,0,0 +no_defs \"],\"EPSG:4667\":[\"EPSG:4667\",\"+proj=longlat +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +no_defs \"],\"EPSG:4668\":[\"EPSG:4668\",\"+proj=longlat +ellps=intl +towgs84=-86,-98,-119,0,0,0,0 +no_defs \"],\"EPSG:4669\":[\"EPSG:4669\",\"+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs \"],\"EPSG:4670\":[\"EPSG:4670\",\"+proj=longlat +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +no_defs \"],\"EPSG:4746\":[\"EPSG:4746\",\"+proj=longlat +ellps=bessel +no_defs \"],\"EPSG:4672\":[\"EPSG:4672\",\"+proj=longlat +ellps=intl +towgs84=175,-38,113,0,0,0,0 +no_defs \"],\"EPSG:4673\":[\"EPSG:4673\",\"+proj=longlat +ellps=intl +towgs84=174.05,-25.49,112.57,0,0,0.554,0.2263 +no_defs \"],\"EPSG:4675\":[\"EPSG:4675\",\"+proj=longlat +ellps=clrk66 +towgs84=-100,-248,259,0,0,0,0 +no_defs \"],\"EPSG:4676\":[\"EPSG:4676\",\"+proj=longlat +ellps=krass +no_defs \"],\"EPSG:4677\":[\"EPSG:4677\",\"+proj=longlat +ellps=krass +no_defs \"],\"EPSG:4678\":[\"EPSG:4678\",\"+proj=longlat +ellps=krass +towgs84=44.585,-131.212,-39.544,0,0,0,0 +no_defs \"],\"EPSG:4679\":[\"EPSG:4679\",\"+proj=longlat +ellps=clrk80 +towgs84=-80.01,253.26,291.19,0,0,0,0 +no_defs \"],\"EPSG:4680\":[\"EPSG:4680\",\"+proj=longlat +ellps=clrk80 +towgs84=124.5,-63.5,-281,0,0,0,0 +no_defs \"],\"EPSG:4681\":[\"EPSG:4681\",\"+proj=longlat +ellps=clrk80 +no_defs \"],\"EPSG:4682\":[\"EPSG:4682\",\"+proj=longlat +a=6377276.345 +b=6356075.41314024 +towgs84=283.7,735.9,261.1,0,0,0,0 +no_defs \"],\"EPSG:4683\":[\"EPSG:4683\",\"+proj=longlat +ellps=clrk66 +towgs84=-127.62,-67.24,-47.04,-3.068,4.903,1.578,-1.06 +no_defs \"],\"EPSG:4684\":[\"EPSG:4684\",\"+proj=longlat +ellps=intl +towgs84=-133,-321,50,0,0,0,0 +no_defs \"],\"EPSG:4685\":[\"EPSG:4685\",\"+proj=longlat +ellps=intl +no_defs \"],\"EPSG:4686\":[\"EPSG:4686\",\"+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs \"],\"EPSG:4687\":[\"EPSG:4687\",\"+proj=longlat +ellps=GRS80 +towgs84=0.072,-0.507,-0.245,-0.0183,0.0003,-0.007,-0.0093 +no_defs \"],\"EPSG:4688\":[\"EPSG:4688\",\"+proj=longlat +ellps=intl +towgs84=347.103,1078.125,2623.922,-33.8875,70.6773,-9.3943,186.074 +no_defs \"],\"EPSG:4689\":[\"EPSG:4689\",\"+proj=longlat +ellps=intl +towgs84=410.721,55.049,80.746,2.5779,2.3514,0.6664,17.3311 +no_defs \"],\"EPSG:4690\":[\"EPSG:4690\",\"+proj=longlat +ellps=intl +towgs84=221.525,152.948,176.768,-2.3847,-1.3896,-0.877,11.4741 +no_defs \"],\"EPSG:4691\":[\"EPSG:4691\",\"+proj=longlat +ellps=intl +towgs84=215.525,149.593,176.229,-3.2624,-1.692,-1.1571,10.4773 +no_defs \"],\"EPSG:4692\":[\"EPSG:4692\",\"+proj=longlat +ellps=intl +towgs84=217.037,86.959,23.956,0,0,0,0 +no_defs \"],\"EPSG:4693\":[\"EPSG:4693\",\"+proj=longlat +ellps=WGS84 +towgs84=0,-0.15,0.68,0,0,0,0 +no_defs \"],\"EPSG:4694\":[\"EPSG:4694\",\"+proj=longlat +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +no_defs \"],\"EPSG:4695\":[\"EPSG:4695\",\"+proj=longlat +ellps=clrk66 +towgs84=-103.746,-9.614,-255.95,0,0,0,0 +no_defs \"],\"EPSG:4696\":[\"EPSG:4696\",\"+proj=longlat +ellps=clrk80 +no_defs \"],\"EPSG:4697\":[\"EPSG:4697\",\"+proj=longlat +ellps=clrk80 +no_defs \"],\"EPSG:4698\":[\"EPSG:4698\",\"+proj=longlat +ellps=intl +towgs84=145,-187,103,0,0,0,0 +no_defs \"],\"EPSG:4699\":[\"EPSG:4699\",\"+proj=longlat +ellps=clrk80 +towgs84=-770.1,158.4,-498.2,0,0,0,0 +no_defs \"],\"EPSG:4700\":[\"EPSG:4700\",\"+proj=longlat +ellps=clrk80 +no_defs \"],\"EPSG:4701\":[\"EPSG:4701\",\"+proj=longlat +ellps=clrk80 +towgs84=-79.9,-158,-168.9,0,0,0,0 +no_defs \"],\"EPSG:4702\":[\"EPSG:4702\",\"+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs \"],\"EPSG:4703\":[\"EPSG:4703\",\"+proj=longlat +ellps=clrk80 +no_defs \"],\"EPSG:4704\":[\"EPSG:4704\",\"+proj=longlat +ellps=intl +no_defs \"],\"EPSG:4705\":[\"EPSG:4705\",\"+proj=longlat +ellps=intl +no_defs \"],\"EPSG:4706\":[\"EPSG:4706\",\"+proj=longlat +ellps=helmert +towgs84=-146.21,112.63,4.05,0,0,0,0 +no_defs \"],\"EPSG:4707\":[\"EPSG:4707\",\"+proj=longlat +ellps=intl +towgs84=114,-116,-333,0,0,0,0 +no_defs \"],\"EPSG:4708\":[\"EPSG:4708\",\"+proj=longlat +ellps=aust_SA +towgs84=-491,-22,435,0,0,0,0 +no_defs \"],\"EPSG:4709\":[\"EPSG:4709\",\"+proj=longlat +ellps=intl +towgs84=145,75,-272,0,0,0,0 +no_defs \"],\"EPSG:4710\":[\"EPSG:4710\",\"+proj=longlat +ellps=intl +towgs84=-320,550,-494,0,0,0,0 +no_defs \"],\"EPSG:4711\":[\"EPSG:4711\",\"+proj=longlat +ellps=intl +towgs84=124,-234,-25,0,0,0,0 +no_defs \"],\"EPSG:4712\":[\"EPSG:4712\",\"+proj=longlat +ellps=intl +towgs84=-205,107,53,0,0,0,0 +no_defs \"],\"EPSG:4713\":[\"EPSG:4713\",\"+proj=longlat +ellps=clrk80 +towgs84=-77,-128,142,0,0,0,0 +no_defs \"],\"EPSG:4714\":[\"EPSG:4714\",\"+proj=longlat +ellps=intl +towgs84=-127,-769,472,0,0,0,0 +no_defs \"],\"EPSG:4715\":[\"EPSG:4715\",\"+proj=longlat +ellps=intl +towgs84=-104,-129,239,0,0,0,0 +no_defs \"],\"EPSG:4716\":[\"EPSG:4716\",\"+proj=longlat +ellps=intl +towgs84=298,-304,-375,0,0,0,0 +no_defs \"],\"EPSG:4717\":[\"EPSG:4717\",\"+proj=longlat +ellps=clrk66 +towgs84=-2,151,181,0,0,0,0 +no_defs \"],\"EPSG:4718\":[\"EPSG:4718\",\"+proj=longlat +ellps=intl +towgs84=230,-199,-752,0,0,0,0 +no_defs \"],\"EPSG:4719\":[\"EPSG:4719\",\"+proj=longlat +ellps=intl +towgs84=211,147,111,0,0,0,0 +no_defs \"],\"EPSG:4720\":[\"EPSG:4720\",\"+proj=longlat +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +no_defs \"],\"EPSG:4721\":[\"EPSG:4721\",\"+proj=longlat +ellps=intl +towgs84=265.025,384.929,-194.046,0,0,0,0 +no_defs \"],\"EPSG:4722\":[\"EPSG:4722\",\"+proj=longlat +ellps=intl +towgs84=-794,119,-298,0,0,0,0 +no_defs \"],\"EPSG:4723\":[\"EPSG:4723\",\"+proj=longlat +ellps=clrk66 +towgs84=-179.483,-69.379,-27.584,-7.862,8.163,6.042,-13.925 +no_defs \"],\"EPSG:4724\":[\"EPSG:4724\",\"+proj=longlat +ellps=intl +towgs84=208,-435,-229,0,0,0,0 +no_defs \"],\"EPSG:4725\":[\"EPSG:4725\",\"+proj=longlat +ellps=intl +towgs84=189,-79,-202,0,0,0,0 +no_defs \"],\"EPSG:4726\":[\"EPSG:4726\",\"+proj=longlat +ellps=clrk66 +towgs84=8.853,-52.644,180.304,-0.393,-2.323,2.96,-24.081 +no_defs \"],\"EPSG:4727\":[\"EPSG:4727\",\"+proj=longlat +ellps=intl +towgs84=403,-81,277,0,0,0,0 +no_defs \"],\"EPSG:4729\":[\"EPSG:4729\",\"+proj=longlat +ellps=intl +towgs84=185,165,42,0,0,0,0 +no_defs \"],\"EPSG:4730\":[\"EPSG:4730\",\"+proj=longlat +ellps=intl +towgs84=170,42,84,0,0,0,0 +no_defs \"],\"EPSG:4731\":[\"EPSG:4731\",\"+proj=longlat +ellps=clrk80 +towgs84=51,391,-36,0,0,0,0 +no_defs \"],\"EPSG:4732\":[\"EPSG:4732\",\"+proj=longlat +a=6378270 +b=6356794.343434343 +towgs84=102,52,-38,0,0,0,0 +no_defs \"],\"EPSG:4733\":[\"EPSG:4733\",\"+proj=longlat +ellps=intl +towgs84=276,-57,149,0,0,0,0 +no_defs \"],\"EPSG:4734\":[\"EPSG:4734\",\"+proj=longlat +ellps=intl +towgs84=-632,438,-609,0,0,0,0 +no_defs \"],\"EPSG:4735\":[\"EPSG:4735\",\"+proj=longlat +ellps=intl +towgs84=647,1777,-1124,0,0,0,0 +no_defs \"],\"EPSG:4736\":[\"EPSG:4736\",\"+proj=longlat +ellps=clrk80 +towgs84=260,12,-147,0,0,0,0 +no_defs \"],\"EPSG:4737\":[\"EPSG:4737\",\"+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs \"],\"EPSG:4738\":[\"EPSG:4738\",\"+proj=longlat +a=6378293.645208759 +b=6356617.987679838 +no_defs \"],\"EPSG:4739\":[\"EPSG:4739\",\"+proj=longlat +ellps=intl +towgs84=-156,-271,-189,0,0,0,0 +no_defs \"],\"EPSG:4740\":[\"EPSG:4740\",\"+proj=longlat +a=6378136 +b=6356751.361745712 +towgs84=0,0,1.5,0,0,0.076,0 +no_defs \"],\"EPSG:4741\":[\"EPSG:4741\",\"+proj=longlat +ellps=intl +no_defs \"],\"EPSG:4742\":[\"EPSG:4742\",\"+proj=longlat +ellps=GRS80 +no_defs \"],\"EPSG:4743\":[\"EPSG:4743\",\"+proj=longlat +ellps=clrk80 +towgs84=70.995,-335.916,262.898,0,0,0,0 +no_defs \"],\"EPSG:4744\":[\"EPSG:4744\",\"+proj=longlat +ellps=clrk80 +towgs84=-242.2,-144.9,370.3,0,0,0,0 +no_defs \"],\"EPSG:4745\":[\"EPSG:4745\",\"+proj=longlat +ellps=bessel +no_defs \"],\"EPSG:4747\":[\"EPSG:4747\",\"+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs \"],\"EPSG:4748\":[\"EPSG:4748\",\"+proj=longlat +a=6378306.3696 +b=6356571.996 +towgs84=51,391,-36,0,0,0,0 +no_defs \"],\"EPSG:4749\":[\"EPSG:4749\",\"+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs \"],\"EPSG:4750\":[\"EPSG:4750\",\"+proj=longlat +ellps=WGS84 +towgs84=-56.263,16.136,-22.856,0,0,0,0 +no_defs \"],\"EPSG:4751\":[\"EPSG:4751\",\"+proj=longlat +a=6377295.664 +b=6356094.667915204 +no_defs \"],\"EPSG:4752\":[\"EPSG:4752\",\"+proj=longlat +a=6378306.3696 +b=6356571.996 +towgs84=98,390,-22,0,0,0,0 +no_defs \"],\"EPSG:4753\":[\"EPSG:4753\",\"+proj=longlat +ellps=intl +no_defs \"],\"EPSG:4754\":[\"EPSG:4754\",\"+proj=longlat +ellps=intl +towgs84=-208.4058,-109.8777,-2.5764,0,0,0,0 +no_defs \"],\"EPSG:4755\":[\"EPSG:4755\",\"+proj=longlat +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +no_defs \"],\"EPSG:4756\":[\"EPSG:4756\",\"+proj=longlat +ellps=WGS84 +towgs84=-191.90441429,-39.30318279,-111.45032835,0.00928836,-0.01975479,0.00427372,0.252906278 +no_defs \"],\"EPSG:4757\":[\"EPSG:4757\",\"+proj=longlat +ellps=WGS84 +no_defs \"],\"EPSG:4758\":[\"EPSG:4758\",\"+proj=longlat +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +no_defs \"],\"EPSG:4759\":[\"EPSG:4759\",\"+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs \"],\"EPSG:4760\":[\"EPSG:4760\",\"+proj=longlat +ellps=WGS66 +no_defs \"],\"EPSG:4761\":[\"EPSG:4761\",\"+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs \"],\"EPSG:4762\":[\"EPSG:4762\",\"+proj=longlat +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +no_defs \"],\"EPSG:4763\":[\"EPSG:4763\",\"+proj=longlat +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +no_defs \"],\"EPSG:4764\":[\"EPSG:4764\",\"+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs \"],\"EPSG:4765\":[\"EPSG:4765\",\"+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs \"],\"EPSG:4801\":[\"EPSG:4801\",\"+proj=longlat +ellps=bessel +towgs84=674.4,15.1,405.3,0,0,0,0 +pm=bern +no_defs \"],\"EPSG:4802\":[\"EPSG:4802\",\"+proj=longlat +ellps=intl +towgs84=307,304,-318,0,0,0,0 +pm=bogota +no_defs \"],\"EPSG:4803\":[\"EPSG:4803\",\"+proj=longlat +ellps=intl +towgs84=-304.046,-60.576,103.64,0,0,0,0 +pm=lisbon +no_defs \"],\"EPSG:4804\":[\"EPSG:4804\",\"+proj=longlat +ellps=bessel +towgs84=-587.8,519.75,145.76,0,0,0,0 +pm=jakarta +no_defs \"],\"EPSG:4805\":[\"EPSG:4805\",\"+proj=longlat +ellps=bessel +towgs84=682,-203,480,0,0,0,0 +pm=ferro +no_defs \"],\"EPSG:4808\":[\"EPSG:4808\",\"+proj=longlat +ellps=bessel +pm=jakarta +no_defs \"],\"EPSG:4809\":[\"EPSG:4809\",\"+proj=longlat +ellps=intl +pm=brussels +no_defs \"],\"EPSG:4810\":[\"EPSG:4810\",\"+proj=longlat +ellps=intl +towgs84=-189,-242,-91,0,0,0,0 +pm=paris +no_defs \"],\"EPSG:4811\":[\"EPSG:4811\",\"+proj=longlat +a=6378249.2 +b=6356515 +towgs84=-73,-247,227,0,0,0,0 +pm=paris +no_defs \"],\"EPSG:4813\":[\"EPSG:4813\",\"+proj=longlat +ellps=bessel +towgs84=-377,681,-50,0,0,0,0 +pm=jakarta +no_defs \"],\"EPSG:4814\":[\"EPSG:4814\",\"+proj=longlat +ellps=bessel +pm=stockholm +no_defs \"],\"EPSG:4816\":[\"EPSG:4816\",\"+proj=longlat +a=6378249.2 +b=6356515 +towgs84=-263,6,431,0,0,0,0 +pm=paris +no_defs \"],\"EPSG:4818\":[\"EPSG:4818\",\"+proj=longlat +ellps=bessel +towgs84=589,76,480,0,0,0,0 +pm=ferro +no_defs \"],\"EPSG:5340\":[\"EPSG:5340\",\"+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs \"],\"EPSG:4819\":[\"EPSG:4819\",\"+proj=longlat +ellps=clrk80 +towgs84=-209.3622,-87.8162,404.6198,0.0046,3.4784,0.5805,-1.4547 +pm=paris +no_defs \"],\"EPSG:4820\":[\"EPSG:4820\",\"+proj=longlat +ellps=bessel +towgs84=-403,684,41,0,0,0,0 +pm=jakarta +no_defs \"],\"EPSG:4821\":[\"EPSG:4821\",\"+proj=longlat +a=6378249.2 +b=6356515 +pm=paris +no_defs \"],\"EPSG:4823\":[\"EPSG:4823\",\"+proj=longlat +ellps=intl +no_defs \"],\"EPSG:4902\":[\"EPSG:4902\",\"+proj=longlat +a=6376523 +b=6355862.933255573 +pm=paris +no_defs \"],\"EPSG:4903\":[\"EPSG:4903\",\"+proj=longlat +a=6378298.3 +b=6356657.142669561 +pm=madrid +no_defs \"],\"EPSG:4904\":[\"EPSG:4904\",\"+proj=longlat +ellps=bessel +towgs84=508.088,-191.042,565.223,0,0,0,0 +pm=lisbon +no_defs \"],\"EPSG:5013\":[\"EPSG:5013\",\"+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs \"],\"EPSG:5132\":[\"EPSG:5132\",\"+proj=longlat +ellps=bessel +no_defs \"],\"EPSG:5228\":[\"EPSG:5228\",\"+proj=longlat +ellps=bessel +towgs84=572.213,85.334,461.94,4.9732,1.529,5.2484,3.5378 +no_defs \"],\"EPSG:5229\":[\"EPSG:5229\",\"+proj=longlat +ellps=bessel +towgs84=572.213,85.334,461.94,4.9732,1.529,5.2484,3.5378 +pm=ferro +no_defs \"],\"EPSG:5233\":[\"EPSG:5233\",\"+proj=longlat +a=6377276.345 +b=6356075.41314024 +towgs84=-0.293,766.95,87.713,0.195704,1.695068,3.473016,-0.039338 +no_defs \"],\"EPSG:5246\":[\"EPSG:5246\",\"+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs \"],\"EPSG:5252\":[\"EPSG:5252\",\"+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs \"],\"EPSG:5264\":[\"EPSG:5264\",\"+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs \"],\"EPSG:5324\":[\"EPSG:5324\",\"+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs \"],\"EPSG:5354\":[\"EPSG:5354\",\"+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs \"],\"EPSG:5360\":[\"EPSG:5360\",\"+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs \"],\"EPSG:5365\":[\"EPSG:5365\",\"+proj=longlat +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +no_defs \"],\"EPSG:5371\":[\"EPSG:5371\",\"+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs \"],\"EPSG:5373\":[\"EPSG:5373\",\"+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs \"],\"EPSG:5381\":[\"EPSG:5381\",\"+proj=longlat +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +no_defs \"],\"EPSG:5393\":[\"EPSG:5393\",\"+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs \"],\"EPSG:5451\":[\"EPSG:5451\",\"+proj=longlat +ellps=clrk66 +towgs84=205,96,-98,0,0,0,0 +no_defs \"],\"EPSG:5464\":[\"EPSG:5464\",\"+proj=longlat +a=6378293.645208759 +b=6356617.987679838 +no_defs \"],\"EPSG:5467\":[\"EPSG:5467\",\"+proj=longlat +ellps=clrk66 +no_defs \"],\"EPSG:5489\":[\"EPSG:5489\",\"+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs \"],\"EPSG:5527\":[\"EPSG:5527\",\"+proj=longlat +ellps=aust_SA +towgs84=-67.35,3.88,-38.22,0,0,0,0 +no_defs \"],\"EPSG:5546\":[\"EPSG:5546\",\"+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs \"],\"EPSG:5561\":[\"EPSG:5561\",\"+proj=longlat +ellps=krass +towgs84=25,-141,-78.5,0,0.35,0.736,0 +no_defs \"],\"EPSG:5593\":[\"EPSG:5593\",\"+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs \"],\"EPSG:5681\":[\"EPSG:5681\",\"+proj=longlat +ellps=bessel +no_defs \"],\"EPSG:5886\":[\"EPSG:5886\",\"+proj=longlat +ellps=GRS80 +no_defs \"],\"EPSG:6135\":[\"EPSG:6135\",\"+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs \"],\"EPSG:7039\":[\"EPSG:7039\",\"+proj=longlat +ellps=GRS80 +no_defs \"],\"EPSG:6207\":[\"EPSG:6207\",\"+proj=longlat +a=6377276.345 +b=6356075.41314024 +towgs84=293.17,726.18,245.36,0,0,0,0 +no_defs \"],\"EPSG:6311\":[\"EPSG:6311\",\"+proj=longlat +ellps=WGS84 +towgs84=8.846,-4.394,-1.122,0.00237,0.146528,-0.130428,0.783926 +no_defs \"],\"EPSG:6318\":[\"EPSG:6318\",\"+proj=longlat +ellps=GRS80 +no_defs \"],\"EPSG:6322\":[\"EPSG:6322\",\"+proj=longlat +ellps=GRS80 +no_defs \"],\"EPSG:6325\":[\"EPSG:6325\",\"+proj=longlat +ellps=GRS80 +no_defs \"],\"EPSG:6365\":[\"EPSG:6365\",\"+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs \"],\"EPSG:6668\":[\"EPSG:6668\",\"+proj=longlat +ellps=GRS80 +no_defs \"],\"EPSG:6706\":[\"EPSG:6706\",\"+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs \"],\"EPSG:6783\":[\"EPSG:6783\",\"+proj=longlat +ellps=GRS80 +no_defs \"],\"EPSG:6881\":[\"EPSG:6881\",\"+proj=longlat +ellps=clrk80 +towgs84=-24,-203,268,0,0,0,0 +no_defs \"],\"EPSG:6882\":[\"EPSG:6882\",\"+proj=longlat +ellps=clrk80 +towgs84=-183,-15,273,0,0,0,0 +no_defs \"],\"EPSG:6883\":[\"EPSG:6883\",\"+proj=longlat +ellps=intl +towgs84=-235,-110,393,0,0,0,0 +no_defs \"],\"EPSG:6892\":[\"EPSG:6892\",\"+proj=longlat +ellps=clrk80 +towgs84=-43.685,-179.785,-267.721,0,0,0,0 +no_defs \"],\"EPSG:6894\":[\"EPSG:6894\",\"+proj=longlat +ellps=clrk80 +towgs84=-63,176,185,0,0,0,0 +no_defs \"],\"EPSG:6980\":[\"EPSG:6980\",\"+proj=longlat +ellps=GRS80 +no_defs \"],\"EPSG:6983\":[\"EPSG:6983\",\"+proj=longlat +ellps=GRS80 +no_defs \"],\"EPSG:6987\":[\"EPSG:6987\",\"+proj=longlat +ellps=GRS80 +no_defs \"],\"EPSG:6990\":[\"EPSG:6990\",\"+proj=longlat +ellps=GRS80 +no_defs \"],\"EPSG:7035\":[\"EPSG:7035\",\"+proj=longlat +ellps=GRS80 +no_defs \"],\"EPSG:7037\":[\"EPSG:7037\",\"+proj=longlat +ellps=GRS80 +no_defs \"],\"EPSG:7073\":[\"EPSG:7073\",\"+proj=longlat +ellps=GRS80 +no_defs \"],\"EPSG:7084\":[\"EPSG:7084\",\"+proj=longlat +ellps=GRS80 +no_defs \"],\"EPSG:7086\":[\"EPSG:7086\",\"+proj=longlat +ellps=GRS80 +no_defs \"],\"EPSG:7088\":[\"EPSG:7088\",\"+proj=longlat +ellps=GRS80 +no_defs \"],\"EPSG:7133\":[\"EPSG:7133\",\"+proj=longlat +ellps=GRS80 +no_defs \"],\"EPSG:7136\":[\"EPSG:7136\",\"+proj=longlat +ellps=WGS84 +no_defs \"],\"EPSG:7139\":[\"EPSG:7139\",\"+proj=longlat +ellps=WGS84 +no_defs \"],\"EPSG:7373\":[\"EPSG:7373\",\"+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs \"],\"EPSG:2000\":[\"EPSG:2000\",\"+proj=tmerc +lat_0=0 +lon_0=-62 +k=0.9995000000000001 +x_0=400000 +y_0=0 +ellps=clrk80 +units=m +no_defs \"],\"EPSG:2001\":[\"EPSG:2001\",\"+proj=tmerc +lat_0=0 +lon_0=-62 +k=0.9995000000000001 +x_0=400000 +y_0=0 +ellps=clrk80 +towgs84=-255,-15,71,0,0,0,0 +units=m +no_defs \"],\"EPSG:2002\":[\"EPSG:2002\",\"+proj=tmerc +lat_0=0 +lon_0=-62 +k=0.9995000000000001 +x_0=400000 +y_0=0 +ellps=clrk80 +towgs84=725,685,536,0,0,0,0 +units=m +no_defs \"],\"EPSG:2003\":[\"EPSG:2003\",\"+proj=tmerc +lat_0=0 +lon_0=-62 +k=0.9995000000000001 +x_0=400000 +y_0=0 +ellps=clrk80 +towgs84=72,213.7,93,0,0,0,0 +units=m +no_defs \"],\"EPSG:2311\":[\"EPSG:2311\",\"+proj=tmerc +lat_0=0 +lon_0=6 +k=0.9996 +x_0=500000 +y_0=0 +datum=WGS84 +units=m +no_defs \"],\"EPSG:2005\":[\"EPSG:2005\",\"+proj=tmerc +lat_0=0 +lon_0=-62 +k=0.9995000000000001 +x_0=400000 +y_0=0 +ellps=clrk80 +towgs84=9,183,236,0,0,0,0 +units=m +no_defs \"],\"EPSG:2006\":[\"EPSG:2006\",\"+proj=tmerc +lat_0=0 +lon_0=-62 +k=0.9995000000000001 +x_0=400000 +y_0=0 +ellps=clrk80 +towgs84=-149,128,296,0,0,0,0 +units=m +no_defs \"],\"EPSG:2007\":[\"EPSG:2007\",\"+proj=tmerc +lat_0=0 +lon_0=-62 +k=0.9995000000000001 +x_0=400000 +y_0=0 +ellps=clrk80 +towgs84=195.671,332.517,274.607,0,0,0,0 +units=m +no_defs \"],\"EPSG:2008\":[\"EPSG:2008\",\"+proj=tmerc +lat_0=0 +lon_0=-55.5 +k=0.9999 +x_0=304800 +y_0=0 +ellps=clrk66 +units=m +no_defs \"],\"EPSG:2009\":[\"EPSG:2009\",\"+proj=tmerc +lat_0=0 +lon_0=-58.5 +k=0.9999 +x_0=304800 +y_0=0 +ellps=clrk66 +units=m +no_defs \"],\"EPSG:2010\":[\"EPSG:2010\",\"+proj=tmerc +lat_0=0 +lon_0=-61.5 +k=0.9999 +x_0=304800 +y_0=0 +ellps=clrk66 +units=m +no_defs \"],\"EPSG:2011\":[\"EPSG:2011\",\"+proj=tmerc +lat_0=0 +lon_0=-64.5 +k=0.9999 +x_0=304800 +y_0=0 +ellps=clrk66 +units=m +no_defs \"],\"EPSG:2012\":[\"EPSG:2012\",\"+proj=tmerc +lat_0=0 +lon_0=-67.5 +k=0.9999 +x_0=304800 +y_0=0 +ellps=clrk66 +units=m +no_defs \"],\"EPSG:2013\":[\"EPSG:2013\",\"+proj=tmerc +lat_0=0 +lon_0=-70.5 +k=0.9999 +x_0=304800 +y_0=0 +ellps=clrk66 +units=m +no_defs \"],\"EPSG:2014\":[\"EPSG:2014\",\"+proj=tmerc +lat_0=0 +lon_0=-73.5 +k=0.9999 +x_0=304800 +y_0=0 +ellps=clrk66 +units=m +no_defs \"],\"EPSG:2015\":[\"EPSG:2015\",\"+proj=tmerc +lat_0=0 +lon_0=-76.5 +k=0.9999 +x_0=304800 +y_0=0 +ellps=clrk66 +units=m +no_defs \"],\"EPSG:2016\":[\"EPSG:2016\",\"+proj=tmerc +lat_0=0 +lon_0=-79.5 +k=0.9999 +x_0=304800 +y_0=0 +ellps=clrk66 +units=m +no_defs \"],\"EPSG:2017\":[\"EPSG:2017\",\"+proj=tmerc +lat_0=0 +lon_0=-73.5 +k=0.9999 +x_0=304800 +y_0=0 +ellps=clrk66 +units=m +no_defs \"],\"EPSG:2018\":[\"EPSG:2018\",\"+proj=tmerc +lat_0=0 +lon_0=-76.5 +k=0.9999 +x_0=304800 +y_0=0 +ellps=clrk66 +units=m +no_defs \"],\"EPSG:2019\":[\"EPSG:2019\",\"+proj=tmerc +lat_0=0 +lon_0=-79.5 +k=0.9999 +x_0=304800 +y_0=0 +ellps=clrk66 +units=m +no_defs \"],\"EPSG:2020\":[\"EPSG:2020\",\"+proj=tmerc +lat_0=0 +lon_0=-82.5 +k=0.9999 +x_0=304800 +y_0=0 +ellps=clrk66 +units=m +no_defs \"],\"EPSG:2021\":[\"EPSG:2021\",\"+proj=tmerc +lat_0=0 +lon_0=-81 +k=0.9999 +x_0=304800 +y_0=0 +ellps=clrk66 +units=m +no_defs \"],\"EPSG:2022\":[\"EPSG:2022\",\"+proj=tmerc +lat_0=0 +lon_0=-84 +k=0.9999 +x_0=304800 +y_0=0 +ellps=clrk66 +units=m +no_defs \"],\"EPSG:2023\":[\"EPSG:2023\",\"+proj=tmerc +lat_0=0 +lon_0=-87 +k=0.9999 +x_0=304800 +y_0=0 +ellps=clrk66 +units=m +no_defs \"],\"EPSG:2024\":[\"EPSG:2024\",\"+proj=tmerc +lat_0=0 +lon_0=-90 +k=0.9999 +x_0=304800 +y_0=0 +ellps=clrk66 +units=m +no_defs \"],\"EPSG:2025\":[\"EPSG:2025\",\"+proj=tmerc +lat_0=0 +lon_0=-93 +k=0.9999 +x_0=304800 +y_0=0 +ellps=clrk66 +units=m +no_defs \"],\"EPSG:2026\":[\"EPSG:2026\",\"+proj=tmerc +lat_0=0 +lon_0=-96 +k=0.9999 +x_0=304800 +y_0=0 +ellps=clrk66 +units=m +no_defs \"],\"EPSG:2027\":[\"EPSG:2027\",\"+proj=utm +zone=15 +ellps=clrk66 +units=m +no_defs \"],\"EPSG:2028\":[\"EPSG:2028\",\"+proj=utm +zone=16 +ellps=clrk66 +units=m +no_defs \"],\"EPSG:2029\":[\"EPSG:2029\",\"+proj=utm +zone=17 +ellps=clrk66 +units=m +no_defs \"],\"EPSG:2030\":[\"EPSG:2030\",\"+proj=utm +zone=18 +ellps=clrk66 +units=m +no_defs \"],\"EPSG:2031\":[\"EPSG:2031\",\"+proj=utm +zone=17 +ellps=clrk66 +units=m +no_defs \"],\"EPSG:2032\":[\"EPSG:2032\",\"+proj=utm +zone=18 +ellps=clrk66 +units=m +no_defs \"],\"EPSG:2033\":[\"EPSG:2033\",\"+proj=utm +zone=19 +ellps=clrk66 +units=m +no_defs \"],\"EPSG:4360\":[\"EPSG:4360\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:2035\":[\"EPSG:2035\",\"+proj=utm +zone=21 +ellps=clrk66 +units=m +no_defs \"],\"EPSG:2036\":[\"EPSG:2036\",\"+proj=sterea +lat_0=46.5 +lon_0=-66.5 +k=0.999912 +x_0=2500000 +y_0=7500000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2038\":[\"EPSG:2038\",\"+proj=utm +zone=20 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2040\":[\"EPSG:2040\",\"+proj=utm +zone=30 +ellps=clrk80 +towgs84=-125,53,467,0,0,0,0 +units=m +no_defs \"],\"EPSG:2041\":[\"EPSG:2041\",\"+proj=utm +zone=30 +ellps=clrk80 +towgs84=-124.76,53,466.79,0,0,0,0 +units=m +no_defs \"],\"EPSG:2042\":[\"EPSG:2042\",\"+proj=utm +zone=29 +ellps=clrk80 +towgs84=-125,53,467,0,0,0,0 +units=m +no_defs \"],\"EPSG:2043\":[\"EPSG:2043\",\"+proj=utm +zone=29 +ellps=clrk80 +towgs84=-124.76,53,466.79,0,0,0,0 +units=m +no_defs \"],\"EPSG:2044\":[\"EPSG:2044\",\"+proj=tmerc +lat_0=0 +lon_0=105 +k=1 +x_0=18500000 +y_0=0 +ellps=krass +towgs84=-17.51,-108.32,-62.39,0,0,0,0 +units=m +no_defs \"],\"EPSG:2045\":[\"EPSG:2045\",\"+proj=tmerc +lat_0=0 +lon_0=111 +k=1 +x_0=19500000 +y_0=0 +ellps=krass +towgs84=-17.51,-108.32,-62.39,0,0,0,0 +units=m +no_defs \"],\"EPSG:2046\":[\"EPSG:2046\",\"+proj=tmerc +lat_0=0 +lon_0=15 +k=1 +x_0=0 +y_0=0 +axis=wsu +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2047\":[\"EPSG:2047\",\"+proj=tmerc +lat_0=0 +lon_0=17 +k=1 +x_0=0 +y_0=0 +axis=wsu +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2048\":[\"EPSG:2048\",\"+proj=tmerc +lat_0=0 +lon_0=19 +k=1 +x_0=0 +y_0=0 +axis=wsu +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2049\":[\"EPSG:2049\",\"+proj=tmerc +lat_0=0 +lon_0=21 +k=1 +x_0=0 +y_0=0 +axis=wsu +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2052\":[\"EPSG:2052\",\"+proj=tmerc +lat_0=0 +lon_0=27 +k=1 +x_0=0 +y_0=0 +axis=wsu +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2054\":[\"EPSG:2054\",\"+proj=tmerc +lat_0=0 +lon_0=31 +k=1 +x_0=0 +y_0=0 +axis=wsu +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2055\":[\"EPSG:2055\",\"+proj=tmerc +lat_0=0 +lon_0=33 +k=1 +x_0=0 +y_0=0 +axis=wsu +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2056\":[\"EPSG:2056\",\"+proj=somerc +lat_0=46.95240555555556 +lon_0=7.439583333333333 +k_0=1 +x_0=2600000 +y_0=1200000 +ellps=bessel +towgs84=674.374,15.056,405.346,0,0,0,0 +units=m +no_defs \"],\"EPSG:2057\":[\"EPSG:2057\",\"+proj=omerc +lat_0=27.51882880555555 +lonc=52.60353916666667 +alpha=0.5716611944444444 +k=0.999895934 +x_0=658377.437 +y_0=3044969.194 +gamma=0.5716611944444444 +ellps=intl +towgs84=-133.63,-157.5,-158.62,0,0,0,0 +units=m +no_defs \"],\"EPSG:2058\":[\"EPSG:2058\",\"+proj=utm +zone=38 +ellps=intl +towgs84=-117,-132,-164,0,0,0,0 +units=m +no_defs \"],\"EPSG:2059\":[\"EPSG:2059\",\"+proj=utm +zone=39 +ellps=intl +towgs84=-117,-132,-164,0,0,0,0 +units=m +no_defs \"],\"EPSG:2060\":[\"EPSG:2060\",\"+proj=utm +zone=40 +ellps=intl +towgs84=-117,-132,-164,0,0,0,0 +units=m +no_defs \"],\"EPSG:2061\":[\"EPSG:2061\",\"+proj=utm +zone=41 +ellps=intl +towgs84=-117,-132,-164,0,0,0,0 +units=m +no_defs \"],\"EPSG:2062\":[\"EPSG:2062\",\"+proj=lcc +lat_1=40 +lat_0=40 +lon_0=0 +k_0=0.9988085293 +x_0=600000 +y_0=600000 +a=6378298.3 +b=6356657.142669561 +pm=madrid +units=m +no_defs \"],\"EPSG:2063\":[\"EPSG:2063\",\"+proj=utm +zone=28 +a=6378249.2 +b=6356515 +towgs84=-23,259,-9,0,0,0,0 +units=m +no_defs \"],\"EPSG:4362\":[\"EPSG:4362\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:2064\":[\"EPSG:2064\",\"+proj=utm +zone=29 +a=6378249.2 +b=6356515 +towgs84=-23,259,-9,0,0,0,0 +units=m +no_defs \"],\"EPSG:2066\":[\"EPSG:2066\",\"+proj=cass +lat_0=11.25217861111111 +lon_0=-60.68600888888889 +x_0=37718.66159325 +y_0=36209.91512952 +a=6378293.645208759 +b=6356617.987679838 +to_meter=0.201166195164 +no_defs \"],\"EPSG:2067\":[\"EPSG:2067\",\"+proj=utm +zone=20 +ellps=intl +towgs84=-0.465,372.095,171.736,0,0,0,0 +units=m +no_defs \"],\"EPSG:2068\":[\"EPSG:2068\",\"+proj=tmerc +lat_0=0 +lon_0=9 +k=0.9999 +x_0=200000 +y_0=0 +ellps=intl +towgs84=-115.8543,-99.0583,-152.4616,0,0,0,0 +units=m +no_defs \"],\"EPSG:2069\":[\"EPSG:2069\",\"+proj=tmerc +lat_0=0 +lon_0=11 +k=0.9999 +x_0=200000 +y_0=0 +ellps=intl +towgs84=-115.8543,-99.0583,-152.4616,0,0,0,0 +units=m +no_defs \"],\"EPSG:2070\":[\"EPSG:2070\",\"+proj=tmerc +lat_0=0 +lon_0=13 +k=0.9999 +x_0=200000 +y_0=0 +ellps=intl +towgs84=-115.8543,-99.0583,-152.4616,0,0,0,0 +units=m +no_defs \"],\"EPSG:2071\":[\"EPSG:2071\",\"+proj=tmerc +lat_0=0 +lon_0=15 +k=0.9999 +x_0=200000 +y_0=0 +ellps=intl +towgs84=-115.8543,-99.0583,-152.4616,0,0,0,0 +units=m +no_defs \"],\"EPSG:2072\":[\"EPSG:2072\",\"+proj=tmerc +lat_0=0 +lon_0=17 +k=0.9999 +x_0=200000 +y_0=0 +ellps=intl +towgs84=-115.8543,-99.0583,-152.4616,0,0,0,0 +units=m +no_defs \"],\"EPSG:5884\":[\"EPSG:5884\",\"+proj=geocent +ellps=GRS80 +units=m +no_defs \"],\"EPSG:2073\":[\"EPSG:2073\",\"+proj=tmerc +lat_0=0 +lon_0=19 +k=0.9999 +x_0=200000 +y_0=0 +ellps=intl +towgs84=-115.8543,-99.0583,-152.4616,0,0,0,0 +units=m +no_defs \"],\"EPSG:2074\":[\"EPSG:2074\",\"+proj=tmerc +lat_0=0 +lon_0=21 +k=0.9999 +x_0=200000 +y_0=0 +ellps=intl +towgs84=-115.8543,-99.0583,-152.4616,0,0,0,0 +units=m +no_defs \"],\"EPSG:2075\":[\"EPSG:2075\",\"+proj=tmerc +lat_0=0 +lon_0=23 +k=0.9999 +x_0=200000 +y_0=0 +ellps=intl +towgs84=-115.8543,-99.0583,-152.4616,0,0,0,0 +units=m +no_defs \"],\"EPSG:2076\":[\"EPSG:2076\",\"+proj=tmerc +lat_0=0 +lon_0=25 +k=0.9999 +x_0=200000 +y_0=0 +ellps=intl +towgs84=-115.8543,-99.0583,-152.4616,0,0,0,0 +units=m +no_defs \"],\"EPSG:2078\":[\"EPSG:2078\",\"+proj=utm +zone=33 +ellps=intl +towgs84=-115.8543,-99.0583,-152.4616,0,0,0,0 +units=m +no_defs \"],\"EPSG:2079\":[\"EPSG:2079\",\"+proj=utm +zone=34 +ellps=intl +towgs84=-115.8543,-99.0583,-152.4616,0,0,0,0 +units=m +no_defs \"],\"EPSG:2080\":[\"EPSG:2080\",\"+proj=utm +zone=35 +ellps=intl +towgs84=-115.8543,-99.0583,-152.4616,0,0,0,0 +units=m +no_defs \"],\"EPSG:2081\":[\"EPSG:2081\",\"+proj=tmerc +lat_0=-90 +lon_0=-69 +k=1 +x_0=2500000 +y_0=0 +ellps=intl +units=m +no_defs \"],\"EPSG:2082\":[\"EPSG:2082\",\"+proj=tmerc +lat_0=-90 +lon_0=-69 +k=1 +x_0=2500000 +y_0=0 +ellps=intl +towgs84=27.5,14,186.4,0,0,0,0 +units=m +no_defs \"],\"EPSG:2083\":[\"EPSG:2083\",\"+proj=tmerc +lat_0=-90 +lon_0=-69 +k=1 +x_0=2500000 +y_0=0 +ellps=intl +towgs84=16,196,93,0,0,0,0 +units=m +no_defs \"],\"EPSG:2084\":[\"EPSG:2084\",\"+proj=utm +zone=19 +south +ellps=intl +towgs84=16,196,93,0,0,0,0 +units=m +no_defs \"],\"EPSG:2085\":[\"EPSG:2085\",\"+proj=lcc +lat_1=22.35 +lat_0=22.35 +lon_0=-81 +k_0=0.99993602 +x_0=500000 +y_0=280296.016 +datum=NAD27 +units=m +no_defs \"],\"EPSG:2086\":[\"EPSG:2086\",\"+proj=lcc +lat_1=20.71666666666667 +lat_0=20.71666666666667 +lon_0=-76.83333333333333 +k_0=0.99994848 +x_0=500000 +y_0=229126.939 +datum=NAD27 +units=m +no_defs \"],\"EPSG:2087\":[\"EPSG:2087\",\"+proj=tmerc +lat_0=0 +lon_0=12 +k=0.9996 +x_0=500000 +y_0=0 +ellps=intl +towgs84=-115.8543,-99.0583,-152.4616,0,0,0,0 +units=m +no_defs \"],\"EPSG:2088\":[\"EPSG:2088\",\"+proj=tmerc +lat_0=0 +lon_0=11 +k=0.9996 +x_0=500000 +y_0=0 +datum=carthage +units=m +no_defs \"],\"EPSG:2091\":[\"EPSG:2091\",\"+proj=tmerc +lat_0=0 +lon_0=45 +k=1 +x_0=8500000 +y_0=0 +ellps=krass +towgs84=-76,-138,67,0,0,0,0 +units=m +no_defs \"],\"EPSG:2092\":[\"EPSG:2092\",\"+proj=tmerc +lat_0=0 +lon_0=51 +k=1 +x_0=9500000 +y_0=0 +ellps=krass +towgs84=-76,-138,67,0,0,0,0 +units=m +no_defs \"],\"EPSG:2093\":[\"EPSG:2093\",\"+proj=tmerc +lat_0=0 +lon_0=106 +k=1 +x_0=500000 +y_0=0 +ellps=krass +towgs84=-17.51,-108.32,-62.39,0,0,0,0 +units=m +no_defs \"],\"EPSG:2094\":[\"EPSG:2094\",\"+proj=tmerc +lat_0=0 +lon_0=106 +k=0.9996 +x_0=500000 +y_0=0 +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +units=m +no_defs \"],\"EPSG:2095\":[\"EPSG:2095\",\"+proj=utm +zone=28 +ellps=intl +towgs84=-173,253,27,0,0,0,0 +units=m +no_defs \"],\"EPSG:2096\":[\"EPSG:2096\",\"+proj=tmerc +lat_0=38 +lon_0=129 +k=1 +x_0=200000 +y_0=500000 +ellps=bessel +units=m +no_defs \"],\"EPSG:2097\":[\"EPSG:2097\",\"+proj=tmerc +lat_0=38 +lon_0=127 +k=1 +x_0=200000 +y_0=500000 +ellps=bessel +units=m +no_defs \"],\"EPSG:2098\":[\"EPSG:2098\",\"+proj=tmerc +lat_0=38 +lon_0=125 +k=1 +x_0=200000 +y_0=500000 +ellps=bessel +units=m +no_defs \"],\"EPSG:2099\":[\"EPSG:2099\",\"+proj=cass +lat_0=25.38236111111111 +lon_0=50.76138888888889 +x_0=100000 +y_0=100000 +ellps=helmert +units=m +no_defs \"],\"EPSG:2101\":[\"EPSG:2101\",\"+proj=lcc +lat_1=10.16666666666667 +lat_0=10.16666666666667 +lon_0=-71.60561777777777 +k_0=1 +x_0=0 +y_0=-52684.972 +ellps=intl +units=m +no_defs \"],\"EPSG:2102\":[\"EPSG:2102\",\"+proj=lcc +lat_1=10.16666666666667 +lat_0=10.16666666666667 +lon_0=-71.60561777777777 +k_0=1 +x_0=200000 +y_0=147315.028 +ellps=intl +units=m +no_defs \"],\"EPSG:2103\":[\"EPSG:2103\",\"+proj=lcc +lat_1=10.16666666666667 +lat_0=10.16666666666667 +lon_0=-71.60561777777777 +k_0=1 +x_0=500000 +y_0=447315.028 +ellps=intl +units=m +no_defs \"],\"EPSG:2104\":[\"EPSG:2104\",\"+proj=lcc +lat_1=10.16666666666667 +lat_0=10.16666666666667 +lon_0=-71.60561777777777 +k_0=1 +x_0=-17044 +y_0=-23139.97 +ellps=intl +units=m +no_defs \"],\"EPSG:2105\":[\"EPSG:2105\",\"+proj=tmerc +lat_0=-36.87972222222222 +lon_0=174.7641666666667 +k=0.9999 +x_0=400000 +y_0=800000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2106\":[\"EPSG:2106\",\"+proj=tmerc +lat_0=-37.76111111111111 +lon_0=176.4661111111111 +k=1 +x_0=400000 +y_0=800000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2107\":[\"EPSG:2107\",\"+proj=tmerc +lat_0=-38.62444444444444 +lon_0=177.8855555555556 +k=1 +x_0=400000 +y_0=800000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2108\":[\"EPSG:2108\",\"+proj=tmerc +lat_0=-39.65083333333333 +lon_0=176.6736111111111 +k=1 +x_0=400000 +y_0=800000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2109\":[\"EPSG:2109\",\"+proj=tmerc +lat_0=-39.13555555555556 +lon_0=174.2277777777778 +k=1 +x_0=400000 +y_0=800000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2110\":[\"EPSG:2110\",\"+proj=tmerc +lat_0=-39.51222222222222 +lon_0=175.64 +k=1 +x_0=400000 +y_0=800000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"],\"EPSG:2111\":[\"EPSG:2111\",\"+proj=tmerc +lat_0=-40.24194444444444 +lon_0=175.4880555555555 +k=1 +x_0=400000 +y_0=800000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \"]};","/**\n * @module ol/geom/MultiPoint\n */\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    if (layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    extend(this.flatCoordinates, point.getFlatCoordinates());\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @api\n   */\n  clone() {\n    const multiPoint = new MultiPoint(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    multiPoint.applyProperties(this);\n    return multiPoint;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x,\n        y,\n        flatCoordinates[i],\n        flatCoordinates[i + 1]\n      );\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(\n      this.flatCoordinates.slice(\n        index * this.stride,\n        (index + 1) * this.stride\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiPoint';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default MultiPoint;\n","/**\n * @module ol/geom/MultiLineString\n */\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {\n  interpolatePoint,\n  lineStringsCoordinateAtM,\n} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    } else if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = ends;\n    } else {\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      /** @type {Array<number>} */\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      const layout =\n        lineStrings.length === 0\n          ? this.getLayout()\n          : lineStrings[0].getLayout();\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @api\n   */\n  clone() {\n    const multiLineString = new MultiLineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    multiLineString.applyProperties(this);\n    return multiLineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @param {boolean} [interpolate] Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate, interpolate) {\n    if (\n      (this.layout != 'XYM' && this.layout != 'XYZM') ||\n      this.flatCoordinates.length === 0\n    ) {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    interpolate = interpolate !== undefined ? interpolate : false;\n    return lineStringsCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      m,\n      extrapolate,\n      interpolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    /** @type {Array<number>} */\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        0.5\n      );\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiLineString} Simplified MultiLineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new MultiLineString(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiLineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default MultiLineString;\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {\n  assignClosestMultiArrayPoint,\n  multiArrayMaxSquaredDelta,\n} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {\n  linearRingssAreOriented,\n  orientLinearRingsArray,\n} from './flat/orient.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` and `endss` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<Array<number>>} [endss] Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, layout, endss) {\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!endss && !Array.isArray(coordinates[0])) {\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\n      /** @type {Array<number>} */\n      const flatCoordinates = [];\n      const thisEndss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        thisEndss.push(ends);\n      }\n      layout =\n        polygons.length === 0 ? this.getLayout() : polygons[0].getLayout();\n      coordinates = flatCoordinates;\n      endss = thisEndss;\n    }\n    if (layout !== undefined && endss) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.endss_ = endss;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @api\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    const multiPolygon = new MultiPolygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      newEndss\n    );\n    multiPolygon.applyProperties(this);\n\n    return multiPolygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        multiArrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.endss_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n        right\n      );\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates,\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates,\n        0,\n        this.endss_,\n        this.stride\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.endss_,\n        this.stride,\n        flatCenters\n      );\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.flatInteriorPoints_);\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint~MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(this.getFlatInteriorPoints().slice(), 'XYM');\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (\n        linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)\n      ) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRingsArray(\n          this.orientedFlatCoordinates_,\n          0,\n          this.endss_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.orientedFlatCoordinates_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiPolygon} Simplified MultiPolygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<Array<number>>} */\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEndss\n    );\n    return new MultiPolygon(simplifiedFlatCoordinates, 'XY', simplifiedEndss);\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(\n      this.flatCoordinates.slice(offset, end),\n      this.layout,\n      ends\n    );\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(\n        flatCoordinates.slice(offset, end),\n        layout,\n        ends\n      );\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiPolygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.endss_\n    );\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length =\n        lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\nexport default MultiPolygon;\n","/**\n * @module ol/geom/GeometryCollection\n */\nimport EventType from '../events/EventType.js';\nimport Geometry from './Geometry.js';\nimport {\n  closestSquaredDistanceXY,\n  createOrUpdateEmpty,\n  extend,\n  getCenter,\n} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry~Geometry} objects.\n *\n * @api\n */\nclass GeometryCollection extends Geometry {\n  /**\n   * @param {Array<Geometry>} [geometries] Geometries.\n   */\n  constructor(geometries) {\n    super();\n\n    /**\n     * @private\n     * @type {Array<Geometry>}\n     */\n    this.geometries_ = geometries ? geometries : null;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.changeEventsKeys_ = [];\n\n    this.listenGeometriesChange_();\n  }\n\n  /**\n   * @private\n   */\n  unlistenGeometriesChange_() {\n    this.changeEventsKeys_.forEach(unlistenByKey);\n    this.changeEventsKeys_.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  listenGeometriesChange_() {\n    if (!this.geometries_) {\n      return;\n    }\n    for (let i = 0, ii = this.geometries_.length; i < ii; ++i) {\n      this.changeEventsKeys_.push(\n        listen(this.geometries_[i], EventType.CHANGE, this.changed, this)\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!GeometryCollection} Clone.\n   * @api\n   */\n  clone() {\n    const geometryCollection = new GeometryCollection(null);\n    geometryCollection.setGeometries(this.geometries_);\n    geometryCollection.applyProperties(this);\n    return geometryCollection;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(\n        x,\n        y,\n        closestPoint,\n        minSquaredDistance\n      );\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    createOrUpdateEmpty(extent);\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n    return extent;\n  }\n\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array<Geometry>} Geometries.\n   * @api\n   */\n  getGeometries() {\n    return cloneGeometries(this.geometries_);\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArray() {\n    return this.geometries_;\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArrayRecursive() {\n    /** @type {Array<Geometry>} */\n    let geometriesArray = [];\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].getType() === this.getType()) {\n        geometriesArray = geometriesArray.concat(\n          /** @type {GeometryCollection} */ (\n            geometries[i]\n          ).getGeometriesArrayRecursive()\n        );\n      } else {\n        geometriesArray.push(geometries[i]);\n      }\n    }\n    return geometriesArray;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {GeometryCollection} Simplified GeometryCollection.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry =\n        geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(null);\n      simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n      return simplifiedGeometryCollection;\n    }\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'GeometryCollection';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.geometries_.length === 0;\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, sy, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array<Geometry>} geometries Geometries.\n   * @api\n   */\n  setGeometries(geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  }\n\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  setGeometriesArray(geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.unlistenGeometriesChange_();\n    super.disposeInternal();\n  }\n}\n\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  const clonedGeometries = [];\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n}\n\nexport default GeometryCollection;\n","/**\n * @module ol/format/Feature\n */\nimport Feature from '../Feature.js';\nimport RenderFeature from '../render/Feature.js';\nimport {\n  GeometryCollection,\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from '../geom.js';\nimport {abstract} from '../util.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  getTransform,\n  transformExtent,\n} from '../proj.js';\nimport {\n  linearRingsAreOriented,\n  linearRingssAreOriented,\n  orientLinearRings,\n  orientLinearRingsArray,\n} from '../geom/flat/orient.js';\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n/**\n * @typedef {'arraybuffer' | 'json' | 'text' | 'xml'} Type\n */\n\n/**\n * @typedef {Object} SimpleGeometryObject\n * @property {import('../geom/Geometry.js').Type} type Type.\n * @property {Array<number>} flatCoordinates Flat coordinates.\n * @property {Array<number>|Array<Array<number>>} [ends] Ends or endss.\n * @property {import('../geom/Geometry.js').GeometryLayout} [layout] Layout.\n */\n\n/**\n * @typedef {Array<GeometryObject>} GeometryCollectionObject\n */\n\n/**\n * @typedef {SimpleGeometryObject|GeometryCollectionObject} GeometryObject\n */\n\n/**\n * @typedef {Object} FeatureObject\n * @property {string|number} [id] Id.\n * @property {GeometryObject} [geometry] Geometry.\n * @property {Object<string, *>} [properties] Properties.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nclass FeatureFormat {\n  constructor() {\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.dataProjection = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.defaultFeatureProjection = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../Feature.js\").FeatureClass}\n     */\n    this.featureClass = Feature;\n\n    /**\n     * A list media types supported by the format in descending order of preference.\n     * @type {Array<string>}\n     */\n    this.supportedMediaTypes = null;\n  }\n\n  /**\n   * Adds the data projection to the read options.\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Options.\n   * @return {ReadOptions|undefined} Options.\n   * @protected\n   */\n  getReadOptions(source, options) {\n    if (options) {\n      let dataProjection = options.dataProjection\n        ? getProjection(options.dataProjection)\n        : this.readProjection(source);\n      if (\n        options.extent &&\n        dataProjection &&\n        dataProjection.getUnits() === 'tile-pixels'\n      ) {\n        dataProjection = getProjection(dataProjection);\n        dataProjection.setWorldExtent(options.extent);\n      }\n      options = {\n        dataProjection: dataProjection,\n        featureProjection: options.featureProjection,\n      };\n    }\n    return this.adaptOptions(options);\n  }\n\n  /**\n   * Sets the `dataProjection` on the options, if no `dataProjection`\n   * is set.\n   * @param {WriteOptions|ReadOptions|undefined} options\n   *     Options.\n   * @protected\n   * @return {WriteOptions|ReadOptions|undefined}\n   *     Updated options.\n   */\n  adaptOptions(options) {\n    return Object.assign(\n      {\n        dataProjection: this.dataProjection,\n        featureProjection: this.defaultFeatureProjection,\n        featureClass: this.featureClass,\n      },\n      options\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Type} The format type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Read a single feature from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").FeatureLike|Array<import(\"../render/Feature.js\").default>} Feature.\n   */\n  readFeature(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read all features from a source.\n   *\n   * @abstract\n   * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   */\n  readFeatures(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjection(source) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature in this format.\n   *\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeature(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features in this format.\n   *\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeatures(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry in this format.\n   *\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeGeometry(geometry, options) {\n    return abstract();\n  }\n}\n\nexport default FeatureFormat;\n\n/**\n * @template {import(\"../geom/Geometry.js\").default|RenderFeature} T\n * @param {T} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {T} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  let transformed = geometry;\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    if (write) {\n      transformed = /** @type {T} */ (geometry.clone());\n    }\n    const fromProjection = write ? featureProjection : dataProjection;\n    const toProjection = write ? dataProjection : featureProjection;\n    if (fromProjection.getUnits() === 'tile-pixels') {\n      transformed.transform(fromProjection, toProjection);\n    } else {\n      transformed.applyTransform(getTransform(fromProjection, toProjection));\n    }\n  }\n  if (\n    write &&\n    options &&\n    /** @type {WriteOptions} */ (options).decimals !== undefined\n  ) {\n    const power = Math.pow(10, /** @type {WriteOptions} */ (options).decimals);\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    const transform = function (coordinates) {\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = /** @type {T} */ (geometry.clone());\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions} [options] Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    return transformExtent(extent, dataProjection, featureProjection);\n  }\n  return extent;\n}\n\nconst GeometryConstructor = {\n  Point: Point,\n  LineString: LineString,\n  Polygon: Polygon,\n  MultiPoint: MultiPoint,\n  MultiLineString: MultiLineString,\n  MultiPolygon: MultiPolygon,\n};\n\nfunction orientFlatCoordinates(flatCoordinates, ends, stride) {\n  if (Array.isArray(ends[0])) {\n    // MultiPolagon\n    if (!linearRingssAreOriented(flatCoordinates, 0, ends, stride)) {\n      flatCoordinates = flatCoordinates.slice();\n      orientLinearRingsArray(flatCoordinates, 0, ends, stride);\n    }\n    return flatCoordinates;\n  }\n  if (!linearRingsAreOriented(flatCoordinates, 0, ends, stride)) {\n    flatCoordinates = flatCoordinates.slice();\n    orientLinearRings(flatCoordinates, 0, ends, stride);\n  }\n  return flatCoordinates;\n}\n\n/**\n * @param {FeatureObject} object Feature object.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {RenderFeature|Array<RenderFeature>} Render feature.\n */\nexport function createRenderFeature(object, options) {\n  const geometry = object.geometry;\n  if (!geometry) {\n    return [];\n  }\n  if (Array.isArray(geometry)) {\n    return geometry\n      .map((geometry) => createRenderFeature({...object, geometry}))\n      .flat();\n  }\n\n  const geometryType =\n    geometry.type === 'MultiPolygon' ? 'Polygon' : geometry.type;\n  if (geometryType === 'GeometryCollection' || geometryType === 'Circle') {\n    throw new Error('Unsupported geometry type: ' + geometryType);\n  }\n\n  const stride = geometry.layout.length;\n  return transformGeometryWithOptions(\n    new RenderFeature(\n      geometryType,\n      geometryType === 'Polygon'\n        ? orientFlatCoordinates(geometry.flatCoordinates, geometry.ends, stride)\n        : geometry.flatCoordinates,\n      geometry.ends?.flat(),\n      stride,\n      object.properties || {},\n      object.id\n    ).enableSimplifyTransformed(),\n    false,\n    options\n  );\n}\n\n/**\n * @param {GeometryObject|null} object Geometry object.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nexport function createGeometry(object, options) {\n  if (!object) {\n    return null;\n  }\n  if (Array.isArray(object)) {\n    const geometries = object.map((geometry) =>\n      createGeometry(geometry, options)\n    );\n    return new GeometryCollection(geometries);\n  }\n  const Geometry = GeometryConstructor[object.type];\n  return transformGeometryWithOptions(\n    new Geometry(object.flatCoordinates, object.layout, object.ends),\n    false,\n    options\n  );\n}\n","/**\n * @module ol/format/JSONFeature\n */\nimport FeatureFormat from './Feature.js';\nimport {abstract} from '../util.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @abstract\n */\nclass JSONFeature extends FeatureFormat {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   */\n  getType() {\n    return 'json';\n  }\n\n  /**\n   * Read a feature.  Only works for a single feature. Use `readFeatures` to\n   * read a feature collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").FeatureLike|Array<import(\"../render/Feature.js\").default>} Feature.\n   * @api\n   */\n  readFeature(source, options) {\n    return this.readFeatureFromObject(\n      getObject(source),\n      this.getReadOptions(source, options)\n    );\n  }\n\n  /**\n   * Read all features.  Works with both a single feature and a feature\n   * collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   * @api\n   */\n  readFeatures(source, options) {\n    return this.readFeaturesFromObject(\n      getObject(source),\n      this.getReadOptions(source, options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default|import(\"../render/Feature.js\").default|Array<import(\"../render/Feature.js\").default>} Feature.\n   */\n  readFeatureFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default|import(\"../render/Feature.js\").default>} Features.\n   */\n  readFeaturesFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a geometry.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   */\n  readGeometry(source, options) {\n    return this.readGeometryFromObject(\n      getObject(source),\n      this.getReadOptions(source, options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.readProjectionFromObject(getObject(source));\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded feature.\n   * @api\n   */\n  writeFeature(feature, options) {\n    return JSON.stringify(this.writeFeatureObject(feature, options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeatureObject(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded features.\n   * @api\n   */\n  writeFeatures(features, options) {\n    return JSON.stringify(this.writeFeaturesObject(features, options));\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeaturesObject(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded geometry.\n   * @api\n   */\n  writeGeometry(geometry, options) {\n    return JSON.stringify(this.writeGeometryObject(geometry, options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeGeometryObject(geometry, options) {\n    return abstract();\n  }\n}\n\n/**\n * @param {Document|Element|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n  if (typeof source === 'string') {\n    const object = JSON.parse(source);\n    return object ? /** @type {Object} */ (object) : null;\n  }\n  if (source !== null) {\n    return source;\n  }\n  return null;\n}\n\nexport default JSONFeature;\n","/**\n * @module ol/format/GeoJSON\n */\n\nimport Feature from '../Feature.js';\nimport JSONFeature from './JSONFeature.js';\nimport RenderFeature from '../render/Feature.js';\nimport {\n  createGeometry,\n  createRenderFeature,\n  transformGeometryWithOptions,\n} from './Feature.js';\nimport {\n  deflateCoordinatesArray,\n  deflateMultiCoordinatesArray,\n} from '../geom/flat/deflate.js';\nimport {getLayoutForStride} from '../geom/SimpleGeometry.js';\nimport {get as getProjection} from '../proj.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {import(\"geojson\").GeoJSON} GeoJSONObject\n * @typedef {import(\"geojson\").Feature} GeoJSONFeature\n * @typedef {import(\"geojson\").FeatureCollection} GeoJSONFeatureCollection\n * @typedef {import(\"geojson\").Geometry} GeoJSONGeometry\n * @typedef {import(\"geojson\").Point} GeoJSONPoint\n * @typedef {import(\"geojson\").LineString} GeoJSONLineString\n * @typedef {import(\"geojson\").Polygon} GeoJSONPolygon\n * @typedef {import(\"geojson\").MultiPoint} GeoJSONMultiPoint\n * @typedef {import(\"geojson\").MultiLineString} GeoJSONMultiLineString\n * @typedef {import(\"geojson\").MultiPolygon} GeoJSONMultiPolygon\n * @typedef {import(\"geojson\").GeometryCollection} GeoJSONGeometryCollection\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n * @property {import(\"../Feature.js\").FeatureClass} [featureClass] Feature class\n * to be used when reading features. The default is {@link module:ol/Feature~Feature}. If performance is\n * the primary concern, and features are not going to be modified or round-tripped through the format,\n * consider using {@link module:ol/render/Feature~RenderFeature}\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n * @api\n */\nclass GeoJSON extends JSONFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super();\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection(\n      options.dataProjection ? options.dataProjection : 'EPSG:4326'\n    );\n\n    if (options.featureProjection) {\n      /**\n       * @type {import(\"../proj/Projection.js\").default}\n       */\n      this.defaultFeatureProjection = getProjection(options.featureProjection);\n    }\n\n    if (options.featureClass) {\n      this.featureClass = options.featureClass;\n    }\n\n    /**\n     * Name of the geometry attribute for features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * Look for the geometry name in the feature GeoJSON\n     * @type {boolean|undefined}\n     * @private\n     */\n    this.extractGeometryName_ = options.extractGeometryName;\n\n    this.supportedMediaTypes = [\n      'application/geo+json',\n      'application/vnd.geo+json',\n    ];\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Feature|RenderFeature|Array<RenderFeature>}.default} Feature.\n   */\n  readFeatureFromObject(object, options) {\n    /**\n     * @type {GeoJSONFeature}\n     */\n    let geoJSONFeature = null;\n    if (object['type'] === 'Feature') {\n      geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n    } else {\n      geoJSONFeature = {\n        'type': 'Feature',\n        'geometry': /** @type {GeoJSONGeometry} */ (object),\n        'properties': null,\n      };\n    }\n\n    const geometry = readGeometryInternal(geoJSONFeature['geometry'], options);\n    if (this.featureClass === RenderFeature) {\n      return createRenderFeature(\n        {\n          geometry,\n          id: geoJSONFeature['id'],\n          properties: geoJSONFeature['properties'],\n        },\n        options\n      );\n    }\n\n    const feature = new Feature();\n    if (this.geometryName_) {\n      feature.setGeometryName(this.geometryName_);\n    } else if (\n      this.extractGeometryName_ &&\n      'geometry_name' in geoJSONFeature !== undefined\n    ) {\n      feature.setGeometryName(geoJSONFeature['geometry_name']);\n    }\n    feature.setGeometry(createGeometry(geometry, options));\n\n    if ('id' in geoJSONFeature) {\n      feature.setId(geoJSONFeature['id']);\n    }\n\n    if (geoJSONFeature['properties']) {\n      feature.setProperties(geoJSONFeature['properties'], true);\n    }\n    return feature;\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<Feature|RenderFeature>} Features.\n   */\n  readFeaturesFromObject(object, options) {\n    const geoJSONObject = /** @type {GeoJSONObject} */ (object);\n    /** @type {Array<Feature|RenderFeature|Array<RenderFeature>>} */\n    let features = null;\n    if (geoJSONObject['type'] === 'FeatureCollection') {\n      const geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (\n        object\n      );\n      features = [];\n      const geoJSONFeatures = geoJSONFeatureCollection['features'];\n      for (let i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n        const featureObject = this.readFeatureFromObject(\n          geoJSONFeatures[i],\n          options\n        );\n        if (!featureObject) {\n          continue;\n        }\n        features.push(featureObject);\n      }\n    } else {\n      features = [this.readFeatureFromObject(object, options)];\n    }\n    return features.flat();\n  }\n\n  /**\n   * @param {GeoJSONGeometry} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, options) {\n    return readGeometry(object, options);\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    const crs = object['crs'];\n    let projection;\n    if (crs) {\n      if (crs['type'] == 'name') {\n        projection = getProjection(crs['properties']['name']);\n      } else if (crs['type'] === 'EPSG') {\n        projection = getProjection('EPSG:' + crs['properties']['code']);\n      } else {\n        throw new Error('Unknown SRS type');\n      }\n    } else {\n      projection = this.dataProjection;\n    }\n    return /** @type {import(\"../proj/Projection.js\").default} */ (projection);\n  }\n\n  /**\n   * Encode a feature as a GeoJSON Feature object.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONFeature} Object.\n   * @api\n   */\n  writeFeatureObject(feature, options) {\n    options = this.adaptOptions(options);\n\n    /** @type {GeoJSONFeature} */\n    const object = {\n      'type': 'Feature',\n      geometry: null,\n      properties: null,\n    };\n\n    const id = feature.getId();\n    if (id !== undefined) {\n      object.id = id;\n    }\n\n    if (!feature.hasProperties()) {\n      return object;\n    }\n\n    const properties = feature.getProperties();\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      object.geometry = writeGeometry(geometry, options);\n\n      delete properties[feature.getGeometryName()];\n    }\n\n    if (!isEmpty(properties)) {\n      object.properties = properties;\n    }\n\n    return object;\n  }\n\n  /**\n   * Encode an array of features as a GeoJSON object.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONFeatureCollection} GeoJSON Object.\n   * @api\n   */\n  writeFeaturesObject(features, options) {\n    options = this.adaptOptions(options);\n    const objects = [];\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      objects.push(this.writeFeatureObject(features[i], options));\n    }\n    return {\n      type: 'FeatureCollection',\n      features: objects,\n    };\n  }\n\n  /**\n   * Encode a geometry as a GeoJSON object.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n   * @api\n   */\n  writeGeometryObject(geometry, options) {\n    return writeGeometry(geometry, this.adaptOptions(options));\n  }\n}\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {import(\"./Feature.js\").GeometryObject} Geometry.\n */\nfunction readGeometryInternal(object, options) {\n  if (!object) {\n    return null;\n  }\n\n  /** @type {import(\"./Feature.js\").GeometryObject} */\n  let geometry;\n  switch (object['type']) {\n    case 'Point': {\n      geometry = readPointGeometry(/** @type {GeoJSONPoint} */ (object));\n      break;\n    }\n    case 'LineString': {\n      geometry = readLineStringGeometry(\n        /** @type {GeoJSONLineString} */ (object)\n      );\n      break;\n    }\n    case 'Polygon': {\n      geometry = readPolygonGeometry(/** @type {GeoJSONPolygon} */ (object));\n      break;\n    }\n    case 'MultiPoint': {\n      geometry = readMultiPointGeometry(\n        /** @type {GeoJSONMultiPoint} */ (object)\n      );\n      break;\n    }\n    case 'MultiLineString': {\n      geometry = readMultiLineStringGeometry(\n        /** @type {GeoJSONMultiLineString} */ (object)\n      );\n      break;\n    }\n    case 'MultiPolygon': {\n      geometry = readMultiPolygonGeometry(\n        /** @type {GeoJSONMultiPolygon} */ (object)\n      );\n      break;\n    }\n    case 'GeometryCollection': {\n      geometry = readGeometryCollectionGeometry(\n        /** @type {GeoJSONGeometryCollection} */ (object)\n      );\n      break;\n    }\n    default: {\n      throw new Error('Unsupported GeoJSON type: ' + object['type']);\n    }\n  }\n  return geometry;\n}\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, options) {\n  const geometryObject = readGeometryInternal(object, options);\n  return createGeometry(geometryObject, options);\n}\n\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {import(\"./Feature.js\").GeometryCollectionObject} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, options) {\n  const geometries = object['geometries'].map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {import(\"./Feature.js\").GeometryObject} geometry Geometry.\n     */\n    function (geometry) {\n      return readGeometryInternal(geometry, options);\n    }\n  );\n  return geometries;\n}\n\n/**\n * @param {GeoJSONPoint} object Input object.\n * @return {import(\"./Feature.js\").GeometryObject} Point geometry.\n */\nfunction readPointGeometry(object) {\n  const flatCoordinates = object['coordinates'];\n  return {\n    type: 'Point',\n    flatCoordinates,\n    layout: getLayoutForStride(flatCoordinates.length),\n  };\n}\n\n/**\n * @param {GeoJSONLineString} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} LineString geometry.\n */\nfunction readLineStringGeometry(object) {\n  const coordinates = object['coordinates'];\n  const flatCoordinates = coordinates.flat();\n  return {\n    type: 'LineString',\n    flatCoordinates,\n    ends: [flatCoordinates.length],\n    layout: getLayoutForStride(coordinates[0].length),\n  };\n}\n\n/**\n * @param {GeoJSONMultiLineString} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} MultiLineString geometry.\n */\nfunction readMultiLineStringGeometry(object) {\n  const coordinates = object['coordinates'];\n  const stride = coordinates[0][0].length;\n  const flatCoordinates = [];\n  const ends = deflateCoordinatesArray(flatCoordinates, 0, coordinates, stride);\n  return {\n    type: 'MultiLineString',\n    flatCoordinates,\n    ends,\n    layout: getLayoutForStride(stride),\n  };\n}\n\n/**\n * @param {GeoJSONMultiPoint} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} MultiPoint geometry.\n */\nfunction readMultiPointGeometry(object) {\n  const coordinates = object['coordinates'];\n  return {\n    type: 'MultiPoint',\n    flatCoordinates: coordinates.flat(),\n    layout: getLayoutForStride(coordinates[0].length),\n  };\n}\n\n/**\n * @param {GeoJSONMultiPolygon} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} MultiPolygon geometry.\n */\nfunction readMultiPolygonGeometry(object) {\n  const coordinates = object['coordinates'];\n  const flatCoordinates = [];\n  const stride = coordinates[0][0][0].length;\n  const endss = deflateMultiCoordinatesArray(\n    flatCoordinates,\n    0,\n    coordinates,\n    stride\n  );\n  return {\n    type: 'MultiPolygon',\n    flatCoordinates,\n    ends: endss,\n    layout: getLayoutForStride(stride),\n  };\n}\n\n/**\n * @param {GeoJSONPolygon} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  const coordinates = object['coordinates'];\n  const flatCoordinates = [];\n  const stride = coordinates[0][0].length;\n  const ends = deflateCoordinatesArray(flatCoordinates, 0, coordinates, stride);\n  return {\n    type: 'Polygon',\n    flatCoordinates,\n    ends,\n    layout: getLayoutForStride(stride),\n  };\n}\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, options) {\n  geometry = transformGeometryWithOptions(geometry, true, options);\n\n  const type = geometry.getType();\n\n  /** @type {GeoJSONGeometry} */\n  let geoJSON;\n  switch (type) {\n    case 'Point': {\n      geoJSON = writePointGeometry(\n        /** @type {import(\"../geom/Point.js\").default} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'LineString': {\n      geoJSON = writeLineStringGeometry(\n        /** @type {import(\"../geom/LineString.js\").default} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'Polygon': {\n      geoJSON = writePolygonGeometry(\n        /** @type {import(\"../geom/Polygon.js\").default} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'MultiPoint': {\n      geoJSON = writeMultiPointGeometry(\n        /** @type {import(\"../geom/MultiPoint.js\").default} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'MultiLineString': {\n      geoJSON = writeMultiLineStringGeometry(\n        /** @type {import(\"../geom/MultiLineString.js\").default} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'MultiPolygon': {\n      geoJSON = writeMultiPolygonGeometry(\n        /** @type {import(\"../geom/MultiPolygon.js\").default} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'GeometryCollection': {\n      geoJSON = writeGeometryCollectionGeometry(\n        /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n          geometry\n        ),\n        options\n      );\n      break;\n    }\n    case 'Circle': {\n      geoJSON = {\n        type: 'GeometryCollection',\n        geometries: [],\n      };\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return geoJSON;\n}\n\n/**\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, options) {\n  options = Object.assign({}, options);\n  delete options.featureProjection;\n  const geometries = geometry.getGeometriesArray().map(function (geometry) {\n    return writeGeometry(geometry, options);\n  });\n  return {\n    type: 'GeometryCollection',\n    geometries: geometries,\n  };\n}\n\n/**\n * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, options) {\n  return {\n    type: 'LineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, options) {\n  return {\n    type: 'MultiLineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, options) {\n  return {\n    type: 'MultiPoint',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, options) {\n  let right;\n  if (options) {\n    right = options.rightHanded;\n  }\n  return {\n    type: 'MultiPolygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\n/**\n * @param {import(\"../geom/Point.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, options) {\n  return {\n    type: 'Point',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, options) {\n  let right;\n  if (options) {\n    right = options.rightHanded;\n  }\n  return {\n    type: 'Polygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\nexport default GeoJSON;\n","/**\n * @module ol/xml\n */\nimport {extend} from './array.js';\n\n/**\n * When using {@link module:ol/xml.makeChildAppender} or\n * {@link module:ol/xml.makeSimpleNodeFactory}, the top `objectStack` item needs\n * to have this structure.\n * @typedef {Object} NodeStackItem\n * @property {Element} node Node.\n */\n\n/**\n * @typedef {function(Element, Array<*>): void} Parser\n */\n\n/**\n * @typedef {function(Element, *, Array<*>): void} Serializer\n */\n\n/**\n * @type {string}\n */\nexport const XML_SCHEMA_INSTANCE_URI =\n  'http://www.w3.org/2001/XMLSchema-instance';\n\n/**\n * @param {string} namespaceURI Namespace URI.\n * @param {string} qualifiedName Qualified name.\n * @return {Element} Node.\n */\nexport function createElementNS(namespaceURI, qualifiedName) {\n  return getDocument().createElementNS(namespaceURI, qualifiedName);\n}\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @return {string} All text content.\n * @api\n */\nexport function getAllTextContent(node, normalizeWhitespace) {\n  return getAllTextContent_(node, normalizeWhitespace, []).join('');\n}\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @param {Array<string>} accumulator Accumulator.\n * @private\n * @return {Array<string>} Accumulator.\n */\nexport function getAllTextContent_(node, normalizeWhitespace, accumulator) {\n  if (\n    node.nodeType == Node.CDATA_SECTION_NODE ||\n    node.nodeType == Node.TEXT_NODE\n  ) {\n    if (normalizeWhitespace) {\n      accumulator.push(String(node.nodeValue).replace(/(\\r\\n|\\r|\\n)/g, ''));\n    } else {\n      accumulator.push(node.nodeValue);\n    }\n  } else {\n    let n;\n    for (n = node.firstChild; n; n = n.nextSibling) {\n      getAllTextContent_(n, normalizeWhitespace, accumulator);\n    }\n  }\n  return accumulator;\n}\n\n/**\n * @param {Object} object Object.\n * @return {boolean} Is a document.\n */\nexport function isDocument(object) {\n  return 'documentElement' in object;\n}\n\n/**\n * @param {Element} node Node.\n * @param {?string} namespaceURI Namespace URI.\n * @param {string} name Attribute name.\n * @return {string} Value\n */\nexport function getAttributeNS(node, namespaceURI, name) {\n  return node.getAttributeNS(namespaceURI, name) || '';\n}\n\n/**\n * Parse an XML string to an XML Document.\n * @param {string} xml XML.\n * @return {Document} Document.\n * @api\n */\nexport function parse(xml) {\n  return new DOMParser().parseFromString(xml, 'application/xml');\n}\n\n/**\n * Make an array extender function for extending the array at the top of the\n * object stack.\n * @param {function(this: T, Node, Array<*>): (Array<*>|undefined)} valueReader Value reader.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayExtender(valueReader, thisArg) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        thisArg !== undefined ? thisArg : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const array = /** @type {Array<*>} */ (\n          objectStack[objectStack.length - 1]\n        );\n        extend(array, value);\n      }\n    }\n  );\n}\n\n/**\n * Make an array pusher function for pushing to the array at the top of the\n * object stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayPusher(valueReader, thisArg) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        thisArg !== undefined ? thisArg : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const array = /** @type {Array<*>} */ (\n          objectStack[objectStack.length - 1]\n        );\n        array.push(value);\n      }\n    }\n  );\n}\n\n/**\n * Make an object stack replacer function for replacing the object at the\n * top of the stack.\n * @param {function(this: T, Node, Array<*>): *} valueReader Value reader.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeReplacer(valueReader, thisArg) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        thisArg !== undefined ? thisArg : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        objectStack[objectStack.length - 1] = value;\n      }\n    }\n  );\n}\n\n/**\n * Make an object property pusher function for adding a property to the\n * object at the top of the stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string} [property] Property.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertyPusher(valueReader, property, thisArg) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        thisArg !== undefined ? thisArg : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const object = /** @type {!Object} */ (\n          objectStack[objectStack.length - 1]\n        );\n        const name = property !== undefined ? property : node.localName;\n        let array;\n        if (name in object) {\n          array = object[name];\n        } else {\n          array = [];\n          object[name] = array;\n        }\n        array.push(value);\n      }\n    }\n  );\n}\n\n/**\n * Make an object property setter function.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string} [property] Property.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertySetter(valueReader, property, thisArg) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        thisArg !== undefined ? thisArg : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const object = /** @type {!Object} */ (\n          objectStack[objectStack.length - 1]\n        );\n        const name = property !== undefined ? property : node.localName;\n        object[name] = value;\n      }\n    }\n  );\n}\n\n/**\n * Create a serializer that appends nodes written by its `nodeWriter` to its\n * designated parent. The parent is the `node` of the\n * {@link module:ol/xml~NodeStackItem} at the top of the `objectStack`.\n * @param {function(this: T, Node, V, Array<*>): void} nodeWriter Node writer.\n * @param {T} [thisArg] The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeChildAppender(nodeWriter, thisArg) {\n  return function (node, value, objectStack) {\n    nodeWriter.call(\n      thisArg !== undefined ? thisArg : this,\n      node,\n      value,\n      objectStack\n    );\n    const parent = /** @type {NodeStackItem} */ (\n      objectStack[objectStack.length - 1]\n    );\n    const parentNode = parent.node;\n    parentNode.appendChild(node);\n  };\n}\n\n/**\n * Create a serializer that calls the provided `nodeWriter` from\n * {@link module:ol/xml.serialize}. This can be used by the parent writer to have the\n * `nodeWriter` called with an array of values when the `nodeWriter` was\n * designed to serialize a single item. An example would be a LineString\n * geometry writer, which could be reused for writing MultiLineString\n * geometries.\n * @param {function(this: T, Element, V, Array<*>): void} nodeWriter Node writer.\n * @param {T} [thisArg] The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeArraySerializer(nodeWriter, thisArg) {\n  let serializersNS, nodeFactory;\n  return function (node, value, objectStack) {\n    if (serializersNS === undefined) {\n      serializersNS = {};\n      const serializers = {};\n      serializers[node.localName] = nodeWriter;\n      serializersNS[node.namespaceURI] = serializers;\n      nodeFactory = makeSimpleNodeFactory(node.localName);\n    }\n    serialize(serializersNS, nodeFactory, value, objectStack);\n  };\n}\n\n/**\n * Create a node factory which can use the `keys` passed to\n * {@link module:ol/xml.serialize} or {@link module:ol/xml.pushSerializeAndPop} as node names,\n * or a fixed node name. The namespace of the created nodes can either be fixed,\n * or the parent namespace will be used.\n * @param {string} [fixedNodeName] Fixed node name which will be used for all\n *     created nodes. If not provided, the 3rd argument to the resulting node\n *     factory needs to be provided and will be the nodeName.\n * @param {string} [fixedNamespaceURI] Fixed namespace URI which will be used for\n *     all created nodes. If not provided, the namespace of the parent node will\n *     be used.\n * @return {function(*, Array<*>, string=): (Node|undefined)} Node factory.\n */\nexport function makeSimpleNodeFactory(fixedNodeName, fixedNamespaceURI) {\n  return (\n    /**\n     * @param {*} value Value.\n     * @param {Array<*>} objectStack Object stack.\n     * @param {string} [newNodeName] Node name.\n     * @return {Node} Node.\n     */\n    function (value, objectStack, newNodeName) {\n      const context = /** @type {NodeStackItem} */ (\n        objectStack[objectStack.length - 1]\n      );\n      const node = context.node;\n      let nodeName = fixedNodeName;\n      if (nodeName === undefined) {\n        nodeName = newNodeName;\n      }\n\n      const namespaceURI =\n        fixedNamespaceURI !== undefined ? fixedNamespaceURI : node.namespaceURI;\n      return createElementNS(namespaceURI, /** @type {string} */ (nodeName));\n    }\n  );\n}\n\n/**\n * A node factory that creates a node using the parent's `namespaceURI` and the\n * `nodeName` passed by {@link module:ol/xml.serialize} or\n * {@link module:ol/xml.pushSerializeAndPop} to the node factory.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nexport const OBJECT_PROPERTY_NODE_FACTORY = makeSimpleNodeFactory();\n\n/**\n * Create an array of `values` to be used with {@link module:ol/xml.serialize} or\n * {@link module:ol/xml.pushSerializeAndPop}, where `orderedKeys` has to be provided as\n * `key` argument.\n * @param {Object<string, *>} object Key-value pairs for the sequence. Keys can\n *     be a subset of the `orderedKeys`.\n * @param {Array<string>} orderedKeys Keys in the order of the sequence.\n * @return {Array<*>} Values in the order of the sequence. The resulting array\n *     has the same length as the `orderedKeys` array. Values that are not\n *     present in `object` will be `undefined` in the resulting array.\n */\nexport function makeSequence(object, orderedKeys) {\n  const length = orderedKeys.length;\n  const sequence = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    sequence[i] = object[orderedKeys[i]];\n  }\n  return sequence;\n}\n\n/**\n * Create a namespaced structure, using the same values for each namespace.\n * This can be used as a starting point for versioned parsers, when only a few\n * values are version specific.\n * @param {Array<string>} namespaceURIs Namespace URIs.\n * @param {T} structure Structure.\n * @param {Object<string, T>} [structureNS] Namespaced structure to add to.\n * @return {Object<string, T>} Namespaced structure.\n * @template T\n */\nexport function makeStructureNS(namespaceURIs, structure, structureNS) {\n  structureNS = structureNS !== undefined ? structureNS : {};\n  let i, ii;\n  for (i = 0, ii = namespaceURIs.length; i < ii; ++i) {\n    structureNS[namespaceURIs[i]] = structure;\n  }\n  return structureNS;\n}\n\n/**\n * Parse a node using the parsers and object stack.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*} [thisArg] The object to use as `this`.\n */\nexport function parseNode(parsersNS, node, objectStack, thisArg) {\n  let n;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const parsers = parsersNS[n.namespaceURI];\n    if (parsers !== undefined) {\n      const parser = parsers[n.localName];\n      if (parser !== undefined) {\n        parser.call(thisArg, n, objectStack);\n      }\n    }\n  }\n}\n\n/**\n * Push an object on top of the stack, parse and return the popped object.\n * @param {T} object Object.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*} [thisArg] The object to use as `this`.\n * @return {T} Object.\n * @template T\n */\nexport function pushParseAndPop(object, parsersNS, node, objectStack, thisArg) {\n  objectStack.push(object);\n  parseNode(parsersNS, node, objectStack, thisArg);\n  return /** @type {T} */ (objectStack.pop());\n}\n\n/**\n * Walk through an array of `values` and call a serializer for each value.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>} [keys] Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `keys` has\n *     to match the length of `values`. For serializing a sequence, `keys`\n *     determines the order of the sequence.\n * @param {T} [thisArg] The object to use as `this` for the node factory and\n *     serializers.\n * @template T\n */\nexport function serialize(\n  serializersNS,\n  nodeFactory,\n  values,\n  objectStack,\n  keys,\n  thisArg\n) {\n  const length = (keys !== undefined ? keys : values).length;\n  let value, node;\n  for (let i = 0; i < length; ++i) {\n    value = values[i];\n    if (value !== undefined) {\n      node = nodeFactory.call(\n        thisArg !== undefined ? thisArg : this,\n        value,\n        objectStack,\n        keys !== undefined ? keys[i] : undefined\n      );\n      if (node !== undefined) {\n        serializersNS[node.namespaceURI][node.localName].call(\n          thisArg,\n          node,\n          value,\n          objectStack\n        );\n      }\n    }\n  }\n}\n\n/**\n * @param {O} object Object.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>} [keys] Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `keys` has\n *     to match the length of `values`. For serializing a sequence, `keys`\n *     determines the order of the sequence.\n * @param {T} [thisArg] The object to use as `this` for the node factory and\n *     serializers.\n * @return {O|undefined} Object.\n * @template O, T\n */\nexport function pushSerializeAndPop(\n  object,\n  serializersNS,\n  nodeFactory,\n  values,\n  objectStack,\n  keys,\n  thisArg\n) {\n  objectStack.push(object);\n  serialize(serializersNS, nodeFactory, values, objectStack, keys, thisArg);\n  return /** @type {O|undefined} */ (objectStack.pop());\n}\n\nlet xmlSerializer_ = undefined;\n\n/**\n * Register a XMLSerializer. Can be used  to inject a XMLSerializer\n * where there is no globally available implementation.\n *\n * @param {XMLSerializer} xmlSerializer A XMLSerializer.\n * @api\n */\nexport function registerXMLSerializer(xmlSerializer) {\n  xmlSerializer_ = xmlSerializer;\n}\n\n/**\n * @return {XMLSerializer} The XMLSerializer.\n */\nexport function getXMLSerializer() {\n  if (xmlSerializer_ === undefined && typeof XMLSerializer !== 'undefined') {\n    xmlSerializer_ = new XMLSerializer();\n  }\n  return xmlSerializer_;\n}\n\nlet document_ = undefined;\n\n/**\n * Register a Document to use when creating nodes for XML serializations. Can be used\n * to inject a Document where there is no globally available implementation.\n *\n * @param {Document} document A Document.\n * @api\n */\nexport function registerDocument(document) {\n  document_ = document;\n}\n\n/**\n * Get a document that should be used when creating nodes for XML serializations.\n * @return {Document} The document.\n */\nexport function getDocument() {\n  if (document_ === undefined && typeof document !== 'undefined') {\n    document_ = document.implementation.createDocument('', '', null);\n  }\n  return document_;\n}\n","/**\n * @module ol/format/XMLFeature\n */\nimport FeatureFormat from '../format/Feature.js';\nimport {abstract} from '../util.js';\nimport {extend} from '../array.js';\nimport {getXMLSerializer, isDocument, parse} from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for XML feature formats.\n *\n * @abstract\n */\nclass XMLFeature extends FeatureFormat {\n  constructor() {\n    super();\n\n    /**\n     * @type {XMLSerializer}\n     * @private\n     */\n    this.xmlSerializer_ = getXMLSerializer();\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   */\n  getType() {\n    return 'xml';\n  }\n\n  /**\n   * Read a single feature.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  readFeature(source, options) {\n    if (!source) {\n      return null;\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFeatureFromDocument(doc, options);\n    }\n    if (isDocument(source)) {\n      return this.readFeatureFromDocument(\n        /** @type {Document} */ (source),\n        options\n      );\n    }\n    return this.readFeatureFromNode(/** @type {Element} */ (source), options);\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromDocument(doc, options) {\n    const features = this.readFeaturesFromDocument(doc, options);\n    if (features.length > 0) {\n      return features[0];\n    }\n    return null;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromNode(node, options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Read all features from a feature collection.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  readFeatures(source, options) {\n    if (!source) {\n      return [];\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFeaturesFromDocument(doc, options);\n    }\n    if (isDocument(source)) {\n      return this.readFeaturesFromDocument(\n        /** @type {Document} */ (source),\n        options\n      );\n    }\n    return this.readFeaturesFromNode(/** @type {Element} */ (source), options);\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromDocument(doc, options) {\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    const features = [];\n    for (let n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(\n          features,\n          this.readFeaturesFromNode(/** @type {Element} */ (n), options)\n        );\n      }\n    }\n    return features;\n  }\n\n  /**\n   * @abstract\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, options) {\n    if (!source) {\n      return null;\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readGeometryFromDocument(doc, options);\n    }\n    if (isDocument(source)) {\n      return this.readGeometryFromDocument(\n        /** @type {Document} */ (source),\n        options\n      );\n    }\n    return this.readGeometryFromNode(/** @type {Element} */ (source), options);\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromDocument(doc, options) {\n    return null; // not implemented\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromNode(node, options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    if (!source) {\n      return null;\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readProjectionFromDocument(doc);\n    }\n    if (isDocument(source)) {\n      return this.readProjectionFromDocument(/** @type {Document} */ (source));\n    }\n    return this.readProjectionFromNode(/** @type {Element} */ (source));\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromDocument(doc) {\n    return this.dataProjection;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromNode(node) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded feature.\n   */\n  writeFeature(feature, options) {\n    const node = this.writeFeatureNode(feature, options);\n    return this.xmlSerializer_.serializeToString(node);\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @protected\n   * @return {Node} Node.\n   */\n  writeFeatureNode(feature, options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Result.\n   * @api\n   */\n  writeFeatures(features, options) {\n    const node = this.writeFeaturesNode(features, options);\n    return this.xmlSerializer_.serializeToString(node);\n  }\n\n  /**\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Node} Node.\n   */\n  writeFeaturesNode(features, options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded geometry.\n   */\n  writeGeometry(geometry, options) {\n    const node = this.writeGeometryNode(geometry, options);\n    return this.xmlSerializer_.serializeToString(node);\n  }\n\n  /**\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Node} Node.\n   */\n  writeGeometryNode(geometry, options) {\n    return null; // not implemented\n  }\n}\n\nexport default XMLFeature;\n","/**\n * @module ol/format/xsd\n */\nimport {getAllTextContent, getDocument} from '../xml.js';\nimport {padNumber} from '../string.js';\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBoolean(node) {\n  const s = getAllTextContent(node, false);\n  return readBooleanString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBooleanString(string) {\n  const m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n  if (m) {\n    return m[1] !== undefined || false;\n  }\n  return undefined;\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nexport function readDateTime(node) {\n  const s = getAllTextContent(node, false);\n  const dateTime = Date.parse(s);\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimal(node) {\n  const s = getAllTextContent(node, false);\n  return readDecimalString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimalString(string) {\n  // FIXME check spec\n  const m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n  if (m) {\n    return parseFloat(m[1]);\n  }\n  return undefined;\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nexport function readPositiveInteger(node) {\n  const s = getAllTextContent(node, false);\n  return readNonNegativeIntegerString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nexport function readNonNegativeIntegerString(string) {\n  const m = /^\\s*(\\d+)\\s*$/.exec(string);\n  if (m) {\n    return parseInt(m[1], 10);\n  }\n  return undefined;\n}\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nexport function readString(node) {\n  return getAllTextContent(node, false).trim();\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nexport function writeBooleanTextNode(node, bool) {\n  writeStringTextNode(node, bool ? '1' : '0');\n}\n\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nexport function writeCDATASection(node, string) {\n  node.appendChild(getDocument().createCDATASection(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nexport function writeDateTimeTextNode(node, dateTime) {\n  const date = new Date(dateTime * 1000);\n  const string =\n    date.getUTCFullYear() +\n    '-' +\n    padNumber(date.getUTCMonth() + 1, 2) +\n    '-' +\n    padNumber(date.getUTCDate(), 2) +\n    'T' +\n    padNumber(date.getUTCHours(), 2) +\n    ':' +\n    padNumber(date.getUTCMinutes(), 2) +\n    ':' +\n    padNumber(date.getUTCSeconds(), 2) +\n    'Z';\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nexport function writeDecimalTextNode(node, decimal) {\n  const string = decimal.toPrecision();\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nexport function writeNonNegativeIntegerTextNode(node, nonNegativeInteger) {\n  const string = nonNegativeInteger.toString();\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nexport function writeStringTextNode(node, string) {\n  node.appendChild(getDocument().createTextNode(string));\n}\n","/**\n * @module ol/format/KML\n */\nimport Feature from '../Feature.js';\nimport Fill from '../style/Fill.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport Icon from '../style/Icon.js';\nimport ImageState from '../ImageState.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport Stroke from '../style/Stroke.js';\nimport Style from '../style/Style.js';\nimport Text from '../style/Text.js';\nimport XMLFeature from './XMLFeature.js';\nimport {\n  OBJECT_PROPERTY_NODE_FACTORY,\n  XML_SCHEMA_INSTANCE_URI,\n  createElementNS,\n  getAllTextContent,\n  isDocument,\n  makeArrayExtender,\n  makeArrayPusher,\n  makeChildAppender,\n  makeObjectPropertySetter,\n  makeReplacer,\n  makeSequence,\n  makeSimpleNodeFactory,\n  makeStructureNS,\n  parse,\n  parseNode,\n  pushParseAndPop,\n  pushSerializeAndPop,\n} from '../xml.js';\nimport {asArray} from '../color.js';\nimport {extend} from '../array.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  readBoolean,\n  readDecimal,\n  readString,\n  writeBooleanTextNode,\n  writeCDATASection,\n  writeDecimalTextNode,\n  writeStringTextNode,\n} from './xsd.js';\nimport {toRadians} from '../math.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {Object} Vec2\n * @property {number} x X coordinate.\n * @property {import(\"../style/Icon.js\").IconAnchorUnits} xunits Units of x.\n * @property {number} y Y coordinate.\n * @property {import(\"../style/Icon.js\").IconAnchorUnits} yunits Units of Y.\n * @property {import(\"../style/Icon.js\").IconOrigin} [origin] Origin.\n */\n\n/**\n * @typedef {Object} GxTrackObject\n * @property {Array<Array<number>>} coordinates Coordinates.\n * @property {Array<number>} whens Whens.\n */\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst GX_NAMESPACE_URIS = ['http://www.google.com/kml/ext/2.2'];\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [\n  null,\n  'http://earth.google.com/kml/2.0',\n  'http://earth.google.com/kml/2.1',\n  'http://earth.google.com/kml/2.2',\n  'http://www.opengis.net/kml/2.2',\n];\n\n/**\n * @const\n * @type {string}\n */\nconst SCHEMA_LOCATION =\n  'http://www.opengis.net/kml/2.2 ' +\n  'https://developers.google.com/kml/schema/kml22gx.xsd';\n\n/**\n * @type {Object<string, import(\"../style/Icon.js\").IconAnchorUnits>}\n */\nconst ICON_ANCHOR_UNITS_MAP = {\n  'fraction': 'fraction',\n  'pixels': 'pixels',\n  'insetPixels': 'pixels',\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PLACEMARK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'ExtendedData': extendedDataParser,\n    'Region': regionParser,\n    'MultiGeometry': makeObjectPropertySetter(readMultiGeometry, 'geometry'),\n    'LineString': makeObjectPropertySetter(readLineString, 'geometry'),\n    'LinearRing': makeObjectPropertySetter(readLinearRing, 'geometry'),\n    'Point': makeObjectPropertySetter(readPoint, 'geometry'),\n    'Polygon': makeObjectPropertySetter(readPolygon, 'geometry'),\n    'Style': makeObjectPropertySetter(readStyle),\n    'StyleMap': placemarkStyleMapParser,\n    'address': makeObjectPropertySetter(readString),\n    'description': makeObjectPropertySetter(readString),\n    'name': makeObjectPropertySetter(readString),\n    'open': makeObjectPropertySetter(readBoolean),\n    'phoneNumber': makeObjectPropertySetter(readString),\n    'styleUrl': makeObjectPropertySetter(readStyleURL),\n    'visibility': makeObjectPropertySetter(readBoolean),\n  },\n  makeStructureNS(GX_NAMESPACE_URIS, {\n    'MultiTrack': makeObjectPropertySetter(readGxMultiTrack, 'geometry'),\n    'Track': makeObjectPropertySetter(readGxTrack, 'geometry'),\n  })\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst NETWORK_LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ExtendedData': extendedDataParser,\n  'Region': regionParser,\n  'Link': linkParser,\n  'address': makeObjectPropertySetter(readString),\n  'description': makeObjectPropertySetter(readString),\n  'name': makeObjectPropertySetter(readString),\n  'open': makeObjectPropertySetter(readBoolean),\n  'phoneNumber': makeObjectPropertySetter(readString),\n  'visibility': makeObjectPropertySetter(readBoolean),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'href': makeObjectPropertySetter(readURI),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CAMERA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  Altitude: makeObjectPropertySetter(readDecimal),\n  Longitude: makeObjectPropertySetter(readDecimal),\n  Latitude: makeObjectPropertySetter(readDecimal),\n  Tilt: makeObjectPropertySetter(readDecimal),\n  AltitudeMode: makeObjectPropertySetter(readString),\n  Heading: makeObjectPropertySetter(readDecimal),\n  Roll: makeObjectPropertySetter(readDecimal),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst REGION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LatLonAltBox': latLonAltBoxParser,\n  'Lod': lodParser,\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst KML_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['Document', 'Placemark']);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst KML_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Document': makeChildAppender(writeDocument),\n  'Placemark': makeChildAppender(writePlacemark),\n});\n\n/**\n * @type {import(\"../color.js\").Color}\n */\nlet DEFAULT_COLOR;\n\n/**\n * @type {Fill|null}\n */\nlet DEFAULT_FILL_STYLE = null;\n\n/**\n * Get the default fill style (or null if not yet set).\n * @return {Fill|null} The default fill style.\n */\nexport function getDefaultFillStyle() {\n  return DEFAULT_FILL_STYLE;\n}\n\n/**\n * @type {import(\"../size.js\").Size}\n */\nlet DEFAULT_IMAGE_STYLE_ANCHOR;\n\n/**\n * @type {import(\"../style/Icon.js\").IconAnchorUnits}\n */\nlet DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n\n/**\n * @type {import(\"../style/Icon.js\").IconAnchorUnits}\n */\nlet DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n\n/**\n * @type {import(\"../size.js\").Size}\n */\nlet DEFAULT_IMAGE_STYLE_SIZE;\n\n/**\n * @type {string}\n */\nlet DEFAULT_IMAGE_STYLE_SRC;\n\n/**\n * @type {import(\"../style/Image.js\").default|null}\n */\nlet DEFAULT_IMAGE_STYLE = null;\n\n/**\n * Get the default image style (or null if not yet set).\n * @return {import(\"../style/Image.js\").default|null} The default image style.\n */\nexport function getDefaultImageStyle() {\n  return DEFAULT_IMAGE_STYLE;\n}\n\n/**\n * @type {string}\n */\nlet DEFAULT_NO_IMAGE_STYLE;\n\n/**\n * @type {Stroke|null}\n */\nlet DEFAULT_STROKE_STYLE = null;\n\n/**\n * Get the default stroke style (or null if not yet set).\n * @return {Stroke|null} The default stroke style.\n */\nexport function getDefaultStrokeStyle() {\n  return DEFAULT_STROKE_STYLE;\n}\n\n/**\n * @type {Stroke}\n */\nlet DEFAULT_TEXT_STROKE_STYLE;\n\n/**\n * @type {Text|null}\n */\nlet DEFAULT_TEXT_STYLE = null;\n\n/**\n * Get the default text style (or null if not yet set).\n * @return {Text|null} The default text style.\n */\nexport function getDefaultTextStyle() {\n  return DEFAULT_TEXT_STYLE;\n}\n\n/**\n * @type {Style|null}\n */\nlet DEFAULT_STYLE = null;\n\n/**\n * Get the default style (or null if not yet set).\n * @return {Style|null} The default style.\n */\nexport function getDefaultStyle() {\n  return DEFAULT_STYLE;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet DEFAULT_STYLE_ARRAY = null;\n\n/**\n * Get the default style array (or null if not yet set).\n * @return {Array<Style>|null} The default style.\n */\nexport function getDefaultStyleArray() {\n  return DEFAULT_STYLE_ARRAY;\n}\n\n/**\n * Function that returns the scale needed to normalize an icon image to 32 pixels.\n * @param {import(\"../size.js\").Size} size Image size.\n * @return {number} Scale.\n */\nfunction scaleForSize(size) {\n  return 32 / Math.min(size[0], size[1]);\n}\n\nfunction createStyleDefaults() {\n  DEFAULT_COLOR = [255, 255, 255, 1];\n\n  DEFAULT_FILL_STYLE = new Fill({\n    color: DEFAULT_COLOR,\n  });\n\n  DEFAULT_IMAGE_STYLE_ANCHOR = [20, 2];\n\n  DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS = 'pixels';\n\n  DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS = 'pixels';\n\n  DEFAULT_IMAGE_STYLE_SIZE = [64, 64];\n\n  DEFAULT_IMAGE_STYLE_SRC =\n    'https://maps.google.com/mapfiles/kml/pushpin/ylw-pushpin.png';\n\n  DEFAULT_IMAGE_STYLE = new Icon({\n    anchor: DEFAULT_IMAGE_STYLE_ANCHOR,\n    anchorOrigin: 'bottom-left',\n    anchorXUnits: DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS,\n    anchorYUnits: DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS,\n    crossOrigin: 'anonymous',\n    rotation: 0,\n    scale: scaleForSize(DEFAULT_IMAGE_STYLE_SIZE),\n    size: DEFAULT_IMAGE_STYLE_SIZE,\n    src: DEFAULT_IMAGE_STYLE_SRC,\n  });\n\n  DEFAULT_NO_IMAGE_STYLE = 'NO_IMAGE';\n\n  DEFAULT_STROKE_STYLE = new Stroke({\n    color: DEFAULT_COLOR,\n    width: 1,\n  });\n\n  DEFAULT_TEXT_STROKE_STYLE = new Stroke({\n    color: [51, 51, 51, 1],\n    width: 2,\n  });\n\n  DEFAULT_TEXT_STYLE = new Text({\n    font: 'bold 16px Helvetica',\n    fill: DEFAULT_FILL_STYLE,\n    stroke: DEFAULT_TEXT_STROKE_STYLE,\n    scale: 0.8,\n  });\n\n  DEFAULT_STYLE = new Style({\n    fill: DEFAULT_FILL_STYLE,\n    image: DEFAULT_IMAGE_STYLE,\n    text: DEFAULT_TEXT_STYLE,\n    stroke: DEFAULT_STROKE_STYLE,\n    zIndex: 0,\n  });\n\n  DEFAULT_STYLE_ARRAY = [DEFAULT_STYLE];\n}\n\n/**\n * @type {HTMLTextAreaElement}\n */\nlet TEXTAREA;\n\n/**\n * A function that takes a url `{string}` and returns a url `{string}`.\n * Might be used to change an icon path or to substitute a\n * data url obtained from a KMZ array buffer.\n *\n * @typedef {function(string):string} IconUrlFunction\n * @api\n */\n\n/**\n * Function that returns a url unchanged.\n * @param {string} href Input url.\n * @return {string} Output url.\n */\nfunction defaultIconUrlFunction(href) {\n  return href;\n}\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [extractStyles=true] Extract styles from the KML.\n * @property {boolean} [showPointNames=true] Show names as labels for placemarks which contain points.\n * @property {Array<Style>} [defaultStyle] Default style. The\n * default default style is the same as Google Earth.\n * @property {boolean} [writeStyles=true] Write styles into KML.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * @property {IconUrlFunction} [iconUrlFunction] Function that takes a url string and returns a url string.\n * Might be used to change an icon path or to substitute a data url obtained from a KMZ array buffer.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the KML format.\n *\n * {@link module:ol/format/KML~KML#readFeature} will read the first feature from\n * a KML source.\n *\n * MultiGeometries are converted into GeometryCollections if they are a mix of\n * geometry types, and into MultiPoint/MultiLineString/MultiPolygon if they are\n * all of the same type.\n *\n * @api\n */\nclass KML extends XMLFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    if (!DEFAULT_STYLE_ARRAY) {\n      createStyleDefaults();\n    }\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @private\n     * @type {Array<Style>}\n     */\n    this.defaultStyle_ = options.defaultStyle\n      ? options.defaultStyle\n      : DEFAULT_STYLE_ARRAY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.extractStyles_ =\n      options.extractStyles !== undefined ? options.extractStyles : true;\n\n    /**\n     * @type {boolean}\n     */\n    this.writeStyles_ =\n      options.writeStyles !== undefined ? options.writeStyles : true;\n\n    /**\n     * @private\n     * @type {!Object<string, (Array<Style>|string)>}\n     */\n    this.sharedStyles_ = {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.showPointNames_ =\n      options.showPointNames !== undefined ? options.showPointNames : true;\n\n    /**\n     * @type {null|string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    /**\n     * @type {IconUrlFunction}\n     */\n    this.iconUrlFunction_ = options.iconUrlFunction\n      ? options.iconUrlFunction\n      : defaultIconUrlFunction;\n\n    this.supportedMediaTypes = ['application/vnd.google-earth.kml+xml'];\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<Feature>|undefined} Features.\n   */\n  readDocumentOrFolder_(node, objectStack) {\n    // FIXME use scope somehow\n    const parsersNS = makeStructureNS(NAMESPACE_URIS, {\n      'Document': makeArrayExtender(this.readDocumentOrFolder_, this),\n      'Folder': makeArrayExtender(this.readDocumentOrFolder_, this),\n      'Placemark': makeArrayPusher(this.readPlacemark_, this),\n      'Style': this.readSharedStyle_.bind(this),\n      'StyleMap': this.readSharedStyleMap_.bind(this),\n    });\n    /** @type {Array<Feature>} */\n    // @ts-ignore\n    const features = pushParseAndPop([], parsersNS, node, objectStack, this);\n    if (features) {\n      return features;\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Feature|undefined} Feature.\n   */\n  readPlacemark_(node, objectStack) {\n    const object = pushParseAndPop(\n      {'geometry': null},\n      PLACEMARK_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (!object) {\n      return undefined;\n    }\n    const feature = new Feature();\n    const id = node.getAttribute('id');\n    if (id !== null) {\n      feature.setId(id);\n    }\n    const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (\n      objectStack[0]\n    );\n\n    const geometry = object['geometry'];\n    if (geometry) {\n      transformGeometryWithOptions(geometry, false, options);\n    }\n    feature.setGeometry(geometry);\n    delete object['geometry'];\n\n    if (this.extractStyles_) {\n      const style = object['Style'];\n      const styleUrl = object['styleUrl'];\n      const styleFunction = createFeatureStyleFunction(\n        style,\n        styleUrl,\n        this.defaultStyle_,\n        this.sharedStyles_,\n        this.showPointNames_\n      );\n      feature.setStyle(styleFunction);\n    }\n    delete object['Style'];\n    // we do not remove the styleUrl property from the object, so it\n    // gets stored on feature when setProperties is called\n\n    feature.setProperties(object, true);\n\n    return feature;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  readSharedStyle_(node, objectStack) {\n    const id = node.getAttribute('id');\n    if (id !== null) {\n      const style = readStyle.call(this, node, objectStack);\n      if (style) {\n        let styleUri;\n        let baseURI = node.baseURI;\n        if (!baseURI || baseURI == 'about:blank') {\n          baseURI = window.location.href;\n        }\n        if (baseURI) {\n          const url = new URL('#' + id, baseURI);\n          styleUri = url.href;\n        } else {\n          styleUri = '#' + id;\n        }\n        this.sharedStyles_[styleUri] = style;\n      }\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  readSharedStyleMap_(node, objectStack) {\n    const id = node.getAttribute('id');\n    if (id === null) {\n      return;\n    }\n    const styleMapValue = readStyleMapValue.call(this, node, objectStack);\n    if (!styleMapValue) {\n      return;\n    }\n    let styleUri;\n    let baseURI = node.baseURI;\n    if (!baseURI || baseURI == 'about:blank') {\n      baseURI = window.location.href;\n    }\n    if (baseURI) {\n      const url = new URL('#' + id, baseURI);\n      styleUri = url.href;\n    } else {\n      styleUri = '#' + id;\n    }\n    this.sharedStyles_[styleUri] = styleMapValue;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromNode(node, options) {\n    if (!NAMESPACE_URIS.includes(node.namespaceURI)) {\n      return null;\n    }\n    const feature = this.readPlacemark_(node, [\n      this.getReadOptions(node, options),\n    ]);\n    if (feature) {\n      return feature;\n    }\n    return null;\n  }\n\n  /**\n   * @protected\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, options) {\n    if (!NAMESPACE_URIS.includes(node.namespaceURI)) {\n      return [];\n    }\n    let features;\n    const localName = node.localName;\n    if (localName == 'Document' || localName == 'Folder') {\n      features = this.readDocumentOrFolder_(node, [\n        this.getReadOptions(node, options),\n      ]);\n      if (features) {\n        return features;\n      }\n      return [];\n    }\n    if (localName == 'Placemark') {\n      const feature = this.readPlacemark_(node, [\n        this.getReadOptions(node, options),\n      ]);\n      if (feature) {\n        return [feature];\n      }\n      return [];\n    }\n    if (localName == 'kml') {\n      features = [];\n      for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n        const fs = this.readFeaturesFromNode(n, options);\n        if (fs) {\n          extend(features, fs);\n        }\n      }\n      return features;\n    }\n    return [];\n  }\n\n  /**\n   * Read the name of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {string|undefined} Name.\n   * @api\n   */\n  readName(source) {\n    if (!source) {\n      return undefined;\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readNameFromDocument(doc);\n    }\n    if (isDocument(source)) {\n      return this.readNameFromDocument(/** @type {Document} */ (source));\n    }\n    return this.readNameFromNode(/** @type {Element} */ (source));\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {string|undefined} Name.\n   */\n  readNameFromDocument(doc) {\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        const name = this.readNameFromNode(/** @type {Element} */ (n));\n        if (name) {\n          return name;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {string|undefined} Name.\n   */\n  readNameFromNode(node) {\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (NAMESPACE_URIS.includes(n.namespaceURI) && n.localName == 'name') {\n        return readString(n);\n      }\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const localName = n.localName;\n      if (\n        NAMESPACE_URIS.includes(n.namespaceURI) &&\n        (localName == 'Document' ||\n          localName == 'Folder' ||\n          localName == 'Placemark' ||\n          localName == 'kml')\n      ) {\n        const name = this.readNameFromNode(n);\n        if (name) {\n          return name;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Read the network links of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {Array<Object>} Network links.\n   * @api\n   */\n  readNetworkLinks(source) {\n    const networkLinks = [];\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      extend(networkLinks, this.readNetworkLinksFromDocument(doc));\n    } else if (isDocument(source)) {\n      extend(\n        networkLinks,\n        this.readNetworkLinksFromDocument(/** @type {Document} */ (source))\n      );\n    } else {\n      extend(\n        networkLinks,\n        this.readNetworkLinksFromNode(/** @type {Element} */ (source))\n      );\n    }\n    return networkLinks;\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Array<Object>} Network links.\n   */\n  readNetworkLinksFromDocument(doc) {\n    const networkLinks = [];\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(\n          networkLinks,\n          this.readNetworkLinksFromNode(/** @type {Element} */ (n))\n        );\n      }\n    }\n    return networkLinks;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Array<Object>} Network links.\n   */\n  readNetworkLinksFromNode(node) {\n    const networkLinks = [];\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (\n        NAMESPACE_URIS.includes(n.namespaceURI) &&\n        n.localName == 'NetworkLink'\n      ) {\n        const obj = pushParseAndPop({}, NETWORK_LINK_PARSERS, n, []);\n        networkLinks.push(obj);\n      }\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const localName = n.localName;\n      if (\n        NAMESPACE_URIS.includes(n.namespaceURI) &&\n        (localName == 'Document' || localName == 'Folder' || localName == 'kml')\n      ) {\n        extend(networkLinks, this.readNetworkLinksFromNode(n));\n      }\n    }\n    return networkLinks;\n  }\n\n  /**\n   * Read the regions of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {Array<Object>} Regions.\n   * @api\n   */\n  readRegion(source) {\n    const regions = [];\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      extend(regions, this.readRegionFromDocument(doc));\n    } else if (isDocument(source)) {\n      extend(\n        regions,\n        this.readRegionFromDocument(/** @type {Document} */ (source))\n      );\n    } else {\n      extend(regions, this.readRegionFromNode(/** @type {Element} */ (source)));\n    }\n    return regions;\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Array<Object>} Region.\n   */\n  readRegionFromDocument(doc) {\n    const regions = [];\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(regions, this.readRegionFromNode(/** @type {Element} */ (n)));\n      }\n    }\n    return regions;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Array<Object>} Region.\n   * @api\n   */\n  readRegionFromNode(node) {\n    const regions = [];\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (NAMESPACE_URIS.includes(n.namespaceURI) && n.localName == 'Region') {\n        const obj = pushParseAndPop({}, REGION_PARSERS, n, []);\n        regions.push(obj);\n      }\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const localName = n.localName;\n      if (\n        NAMESPACE_URIS.includes(n.namespaceURI) &&\n        (localName == 'Document' || localName == 'Folder' || localName == 'kml')\n      ) {\n        extend(regions, this.readRegionFromNode(n));\n      }\n    }\n    return regions;\n  }\n\n  /**\n   * @typedef {Object} KMLCamera Specifies the observer's viewpoint and associated view parameters.\n   * @property {number} [Latitude] Latitude of the camera.\n   * @property {number} [Longitude] Longitude of the camera.\n   * @property {number} [Altitude] Altitude of the camera.\n   * @property {string} [AltitudeMode] Floor-related altitude mode.\n   * @property {number} [Heading] Horizontal camera rotation.\n   * @property {number} [Tilt] Lateral camera rotation.\n   * @property {number} [Roll] Vertical camera rotation.\n   */\n\n  /**\n   * Read the cameras of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {Array<KMLCamera>} Cameras.\n   * @api\n   */\n  readCamera(source) {\n    const cameras = [];\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      extend(cameras, this.readCameraFromDocument(doc));\n    } else if (isDocument(source)) {\n      extend(\n        cameras,\n        this.readCameraFromDocument(/** @type {Document} */ (source))\n      );\n    } else {\n      extend(cameras, this.readCameraFromNode(/** @type {Element} */ (source)));\n    }\n    return cameras;\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Array<KMLCamera>} Cameras.\n   */\n  readCameraFromDocument(doc) {\n    const cameras = [];\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType === Node.ELEMENT_NODE) {\n        extend(cameras, this.readCameraFromNode(/** @type {Element} */ (n)));\n      }\n    }\n    return cameras;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Array<KMLCamera>} Cameras.\n   * @api\n   */\n  readCameraFromNode(node) {\n    const cameras = [];\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (NAMESPACE_URIS.includes(n.namespaceURI) && n.localName === 'Camera') {\n        const obj = pushParseAndPop({}, CAMERA_PARSERS, n, []);\n        cameras.push(obj);\n      }\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const localName = n.localName;\n      if (\n        NAMESPACE_URIS.includes(n.namespaceURI) &&\n        (localName === 'Document' ||\n          localName === 'Folder' ||\n          localName === 'Placemark' ||\n          localName === 'kml')\n      ) {\n        extend(cameras, this.readCameraFromNode(n));\n      }\n    }\n    return cameras;\n  }\n\n  /**\n   * Encode an array of features in the KML format as an XML node. GeometryCollections,\n   * MultiPoints, MultiLineStrings, and MultiPolygons are output as MultiGeometries.\n   *\n   * @param {Array<Feature>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Node} Node.\n   * @api\n   */\n  writeFeaturesNode(features, options) {\n    options = this.adaptOptions(options);\n    const kml = createElementNS(NAMESPACE_URIS[4], 'kml');\n    const xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n    kml.setAttributeNS(xmlnsUri, 'xmlns:gx', GX_NAMESPACE_URIS[0]);\n    kml.setAttributeNS(xmlnsUri, 'xmlns:xsi', XML_SCHEMA_INSTANCE_URI);\n    kml.setAttributeNS(\n      XML_SCHEMA_INSTANCE_URI,\n      'xsi:schemaLocation',\n      SCHEMA_LOCATION\n    );\n\n    const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {\n        node: kml,\n      };\n    /** @type {!Object<string, (Array<Feature>|Feature|undefined)>} */\n    const properties = {};\n    if (features.length > 1) {\n      properties['Document'] = features;\n    } else if (features.length == 1) {\n      properties['Placemark'] = features[0];\n    }\n    const orderedKeys = KML_SEQUENCE[kml.namespaceURI];\n    const values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(\n      context,\n      KML_SERIALIZERS,\n      OBJECT_PROPERTY_NODE_FACTORY,\n      values,\n      [options],\n      orderedKeys,\n      this\n    );\n    return kml;\n  }\n}\n\n/**\n * @param {Style|undefined} foundStyle Style.\n * @param {string} name Name.\n * @return {Style} style Style.\n */\nfunction createNameStyleFunction(foundStyle, name) {\n  const textOffset = [0, 0];\n  /** @type {CanvasTextAlign} */\n  let textAlign = 'start';\n  const imageStyle = foundStyle.getImage();\n  if (imageStyle) {\n    const imageSize = imageStyle.getSize();\n    if (imageSize && imageSize.length == 2) {\n      const imageScale = imageStyle.getScaleArray();\n      const anchor = imageStyle.getAnchor();\n      // Offset the label to be centered to the right of the icon,\n      // if there is one.\n      textOffset[0] = imageScale[0] * (imageSize[0] - anchor[0]);\n      textOffset[1] = imageScale[1] * (imageSize[1] / 2 - anchor[1]);\n      textAlign = 'left';\n    }\n  }\n  let textStyle = foundStyle.getText();\n  if (textStyle) {\n    // clone the text style, customizing it with name, alignments and offset.\n    // Note that kml does not support many text options that OpenLayers does (rotation, textBaseline).\n    textStyle = textStyle.clone();\n    textStyle.setFont(textStyle.getFont() || DEFAULT_TEXT_STYLE.getFont());\n    textStyle.setScale(textStyle.getScale() || DEFAULT_TEXT_STYLE.getScale());\n    textStyle.setFill(textStyle.getFill() || DEFAULT_TEXT_STYLE.getFill());\n    textStyle.setStroke(textStyle.getStroke() || DEFAULT_TEXT_STROKE_STYLE);\n  } else {\n    textStyle = DEFAULT_TEXT_STYLE.clone();\n  }\n  textStyle.setText(name);\n  textStyle.setOffsetX(textOffset[0]);\n  textStyle.setOffsetY(textOffset[1]);\n  textStyle.setTextAlign(textAlign);\n\n  const nameStyle = new Style({\n    image: imageStyle,\n    text: textStyle,\n  });\n  return nameStyle;\n}\n\n/**\n * @param {Array<Style>|undefined} style Style.\n * @param {string} styleUrl Style URL.\n * @param {Array<Style>} defaultStyle Default style.\n * @param {!Object<string, (Array<Style>|string)>} sharedStyles Shared styles.\n * @param {boolean|undefined} showPointNames true to show names for point placemarks.\n * @return {import(\"../style/Style.js\").StyleFunction} Feature style function.\n */\nfunction createFeatureStyleFunction(\n  style,\n  styleUrl,\n  defaultStyle,\n  sharedStyles,\n  showPointNames\n) {\n  return (\n    /**\n     * @param {Feature} feature feature.\n     * @param {number} resolution Resolution.\n     * @return {Array<Style>|Style} Style.\n     */\n    function (feature, resolution) {\n      let drawName = showPointNames;\n      let name = '';\n      let multiGeometryPoints = [];\n      if (drawName) {\n        const geometry = feature.getGeometry();\n        if (geometry) {\n          if (geometry instanceof GeometryCollection) {\n            multiGeometryPoints = geometry\n              .getGeometriesArrayRecursive()\n              .filter(function (geometry) {\n                const type = geometry.getType();\n                return type === 'Point' || type === 'MultiPoint';\n              });\n            drawName = multiGeometryPoints.length > 0;\n          } else {\n            const type = geometry.getType();\n            drawName = type === 'Point' || type === 'MultiPoint';\n          }\n        }\n      }\n\n      if (drawName) {\n        name = /** @type {string} */ (feature.get('name'));\n        drawName = drawName && !!name;\n        // convert any html character codes\n        if (drawName && /&[^&]+;/.test(name)) {\n          if (!TEXTAREA) {\n            TEXTAREA = document.createElement('textarea');\n          }\n          TEXTAREA.innerHTML = name;\n          name = TEXTAREA.value;\n        }\n      }\n\n      let featureStyle = defaultStyle;\n      if (style) {\n        featureStyle = style;\n      } else if (styleUrl) {\n        featureStyle = findStyle(styleUrl, defaultStyle, sharedStyles);\n      }\n      if (drawName) {\n        const nameStyle = createNameStyleFunction(featureStyle[0], name);\n        if (multiGeometryPoints.length > 0) {\n          // in multigeometries restrict the name style to points and create a\n          // style without image or text for geometries requiring fill or stroke\n          // including any polygon specific style if there is one\n          nameStyle.setGeometry(new GeometryCollection(multiGeometryPoints));\n          const baseStyle = new Style({\n            geometry: featureStyle[0].getGeometry(),\n            image: null,\n            fill: featureStyle[0].getFill(),\n            stroke: featureStyle[0].getStroke(),\n            text: null,\n          });\n          return [nameStyle, baseStyle].concat(featureStyle.slice(1));\n        }\n        return nameStyle;\n      }\n      return featureStyle;\n    }\n  );\n}\n\n/**\n * @param {Array<Style>|string|undefined} styleValue Style value.\n * @param {Array<Style>} defaultStyle Default style.\n * @param {!Object<string, (Array<Style>|string)>} sharedStyles\n * Shared styles.\n * @return {Array<Style>} Style.\n */\nfunction findStyle(styleValue, defaultStyle, sharedStyles) {\n  if (Array.isArray(styleValue)) {\n    return styleValue;\n  }\n  if (typeof styleValue === 'string') {\n    return findStyle(sharedStyles[styleValue], defaultStyle, sharedStyles);\n  }\n  return defaultStyle;\n}\n\n/**\n * @param {Node} node Node.\n * @return {import(\"../color.js\").Color|undefined} Color.\n */\nfunction readColor(node) {\n  const s = getAllTextContent(node, false);\n  // The KML specification states that colors should not include a leading `#`\n  // but we tolerate them.\n  const m = /^\\s*#?\\s*([0-9A-Fa-f]{8})\\s*$/.exec(s);\n  if (m) {\n    const hexColor = m[1];\n    return [\n      parseInt(hexColor.substr(6, 2), 16),\n      parseInt(hexColor.substr(4, 2), 16),\n      parseInt(hexColor.substr(2, 2), 16),\n      parseInt(hexColor.substr(0, 2), 16) / 255,\n    ];\n  }\n  return undefined;\n}\n\n/**\n * @param {Node} node Node.\n * @return {Array<number>|undefined} Flat coordinates.\n */\nexport function readFlatCoordinates(node) {\n  let s = getAllTextContent(node, false);\n  const flatCoordinates = [];\n  // The KML specification states that coordinate tuples should not include\n  // spaces, but we tolerate them.\n  s = s.replace(/\\s*,\\s*/g, ',');\n  const re =\n    /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?),([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s+|,|$)(?:([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s+|$))?\\s*/i;\n  let m;\n  while ((m = re.exec(s))) {\n    const x = parseFloat(m[1]);\n    const y = parseFloat(m[2]);\n    const z = m[3] ? parseFloat(m[3]) : 0;\n    flatCoordinates.push(x, y, z);\n    s = s.substr(m[0].length);\n  }\n  if (s !== '') {\n    return undefined;\n  }\n  return flatCoordinates;\n}\n\n/**\n * @param {Node} node Node.\n * @return {string} URI.\n */\nfunction readURI(node) {\n  const s = getAllTextContent(node, false).trim();\n  let baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    const url = new URL(s, baseURI);\n    return url.href;\n  }\n  return s;\n}\n\n/**\n * @param {Node} node Node.\n * @return {string} URI.\n */\nfunction readStyleURL(node) {\n  // KML files in the wild occasionally forget the leading\n  // `#` on styleUrlsdefined in the same document.\n  const s = getAllTextContent(node, false)\n    .trim()\n    .replace(/^(?!.*#)/, '#');\n  let baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    const url = new URL(s, baseURI);\n    return url.href;\n  }\n  return s;\n}\n\n/**\n * @param {Element} node Node.\n * @return {Vec2} Vec2.\n */\nfunction readVec2(node) {\n  const xunits = node.getAttribute('xunits');\n  const yunits = node.getAttribute('yunits');\n  /** @type {import('../style/Icon.js').IconOrigin} */\n  let origin;\n  if (xunits !== 'insetPixels') {\n    if (yunits !== 'insetPixels') {\n      origin = 'bottom-left';\n    } else {\n      origin = 'top-left';\n    }\n  } else {\n    if (yunits !== 'insetPixels') {\n      origin = 'bottom-right';\n    } else {\n      origin = 'top-right';\n    }\n  }\n  return {\n    x: parseFloat(node.getAttribute('x')),\n    xunits: ICON_ANCHOR_UNITS_MAP[xunits],\n    y: parseFloat(node.getAttribute('y')),\n    yunits: ICON_ANCHOR_UNITS_MAP[yunits],\n    origin: origin,\n  };\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Scale.\n */\nfunction readScale(node) {\n  return readDecimal(node);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst STYLE_MAP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Pair': pairDataParser,\n});\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<Style>|string|undefined} StyleMap.\n */\nfunction readStyleMapValue(node, objectStack) {\n  return pushParseAndPop(undefined, STYLE_MAP_PARSERS, node, objectStack, this);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ICON_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Icon': makeObjectPropertySetter(readIcon),\n  'color': makeObjectPropertySetter(readColor),\n  'heading': makeObjectPropertySetter(readDecimal),\n  'hotSpot': makeObjectPropertySetter(readVec2),\n  'scale': makeObjectPropertySetter(readScale),\n});\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction iconStyleParser(node, objectStack) {\n  // FIXME refreshMode\n  // FIXME refreshInterval\n  // FIXME viewRefreshTime\n  // FIXME viewBoundScale\n  // FIXME viewFormat\n  // FIXME httpQuery\n  const object = pushParseAndPop({}, ICON_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = /** @type {Object} */ (\n    objectStack[objectStack.length - 1]\n  );\n  const IconObject = 'Icon' in object ? object['Icon'] : {};\n  const drawIcon = !('Icon' in object) || Object.keys(IconObject).length > 0;\n  let src;\n  const href = /** @type {string|undefined} */ (IconObject['href']);\n  if (href) {\n    src = href;\n  } else if (drawIcon) {\n    src = DEFAULT_IMAGE_STYLE_SRC;\n  }\n  let anchor, anchorXUnits, anchorYUnits;\n  /** @type {import('../style/Icon.js').IconOrigin|undefined} */\n  let anchorOrigin = 'bottom-left';\n  const hotSpot = /** @type {Vec2|undefined} */ (object['hotSpot']);\n  if (hotSpot) {\n    anchor = [hotSpot.x, hotSpot.y];\n    anchorXUnits = hotSpot.xunits;\n    anchorYUnits = hotSpot.yunits;\n    anchorOrigin = hotSpot.origin;\n  } else if (/^https?:\\/\\/maps\\.(?:google|gstatic)\\.com\\//.test(src)) {\n    // Google hotspots from https://kml4earth.appspot.com/icons.html#notes\n    if (src.includes('pushpin')) {\n      anchor = DEFAULT_IMAGE_STYLE_ANCHOR;\n      anchorXUnits = DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n      anchorYUnits = DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n    } else if (src.includes('arrow-reverse')) {\n      anchor = [54, 42];\n      anchorXUnits = DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n      anchorYUnits = DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n    } else if (src.includes('paddle')) {\n      anchor = [32, 1];\n      anchorXUnits = DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n      anchorYUnits = DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n    }\n  }\n\n  let offset;\n  const x = /** @type {number|undefined} */ (IconObject['x']);\n  const y = /** @type {number|undefined} */ (IconObject['y']);\n  if (x !== undefined && y !== undefined) {\n    offset = [x, y];\n  }\n\n  let size;\n  const w = /** @type {number|undefined} */ (IconObject['w']);\n  const h = /** @type {number|undefined} */ (IconObject['h']);\n  if (w !== undefined && h !== undefined) {\n    size = [w, h];\n  }\n\n  let rotation;\n  const heading = /** @type {number} */ (object['heading']);\n  if (heading !== undefined) {\n    rotation = toRadians(heading);\n  }\n\n  const scale = /** @type {number|undefined} */ (object['scale']);\n\n  const color = /** @type {Array<number>|undefined} */ (object['color']);\n\n  if (drawIcon) {\n    if (src == DEFAULT_IMAGE_STYLE_SRC) {\n      size = DEFAULT_IMAGE_STYLE_SIZE;\n    }\n\n    const imageStyle = new Icon({\n      anchor: anchor,\n      anchorOrigin: anchorOrigin,\n      anchorXUnits: anchorXUnits,\n      anchorYUnits: anchorYUnits,\n      crossOrigin: this.crossOrigin_,\n      offset: offset,\n      offsetOrigin: 'bottom-left',\n      rotation: rotation,\n      scale: scale,\n      size: size,\n      src: this.iconUrlFunction_(src),\n      color: color,\n    });\n\n    const imageScale = imageStyle.getScaleArray()[0];\n    const imageSize = imageStyle.getSize();\n    if (imageSize === null) {\n      const imageState = imageStyle.getImageState();\n      if (imageState === ImageState.IDLE || imageState === ImageState.LOADING) {\n        const listener = function () {\n          const imageState = imageStyle.getImageState();\n          if (\n            !(\n              imageState === ImageState.IDLE ||\n              imageState === ImageState.LOADING\n            )\n          ) {\n            const imageSize = imageStyle.getSize();\n            if (imageSize && imageSize.length == 2) {\n              const resizeScale = scaleForSize(imageSize);\n              imageStyle.setScale(imageScale * resizeScale);\n            }\n            imageStyle.unlistenImageChange(listener);\n          }\n        };\n        imageStyle.listenImageChange(listener);\n        if (imageState === ImageState.IDLE) {\n          imageStyle.load();\n        }\n      }\n    } else if (imageSize.length == 2) {\n      const resizeScale = scaleForSize(imageSize);\n      imageStyle.setScale(imageScale * resizeScale);\n    }\n    styleObject['imageStyle'] = imageStyle;\n  } else {\n    // handle the case when we explicitly want to draw no icon.\n    styleObject['imageStyle'] = DEFAULT_NO_IMAGE_STYLE;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LABEL_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeObjectPropertySetter(readColor),\n  'scale': makeObjectPropertySetter(readScale),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction labelStyleParser(node, objectStack) {\n  // FIXME colorMode\n  const object = pushParseAndPop({}, LABEL_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const textStyle = new Text({\n    fill: new Fill({\n      color:\n        /** @type {import(\"../color.js\").Color} */\n        ('color' in object ? object['color'] : DEFAULT_COLOR),\n    }),\n    scale: /** @type {number|undefined} */ (object['scale']),\n  });\n  styleObject['textStyle'] = textStyle;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LINE_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeObjectPropertySetter(readColor),\n  'width': makeObjectPropertySetter(readDecimal),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction lineStyleParser(node, objectStack) {\n  // FIXME colorMode\n  // FIXME gx:outerColor\n  // FIXME gx:outerWidth\n  // FIXME gx:physicalWidth\n  // FIXME gx:labelVisibility\n  const object = pushParseAndPop({}, LINE_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const strokeStyle = new Stroke({\n    color:\n      /** @type {import(\"../color.js\").Color} */\n      ('color' in object ? object['color'] : DEFAULT_COLOR),\n    width: /** @type {number} */ ('width' in object ? object['width'] : 1),\n  });\n  styleObject['strokeStyle'] = strokeStyle;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst POLY_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeObjectPropertySetter(readColor),\n  'fill': makeObjectPropertySetter(readBoolean),\n  'outline': makeObjectPropertySetter(readBoolean),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction polyStyleParser(node, objectStack) {\n  // FIXME colorMode\n  const object = pushParseAndPop({}, POLY_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const fillStyle = new Fill({\n    color:\n      /** @type {import(\"../color.js\").Color} */\n      ('color' in object ? object['color'] : DEFAULT_COLOR),\n  });\n  styleObject['fillStyle'] = fillStyle;\n  const fill = /** @type {boolean|undefined} */ (object['fill']);\n  if (fill !== undefined) {\n    styleObject['fill'] = fill;\n  }\n  const outline = /** @type {boolean|undefined} */ (object['outline']);\n  if (outline !== undefined) {\n    styleObject['outline'] = outline;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst FLAT_LINEAR_RING_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'coordinates': makeReplacer(readFlatCoordinates),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<number>} LinearRing flat coordinates.\n */\nfunction readFlatLinearRing(node, objectStack) {\n  return pushParseAndPop(null, FLAT_LINEAR_RING_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction gxCoordParser(node, objectStack) {\n  const gxTrackObject =\n    /** @type {GxTrackObject} */\n    (objectStack[objectStack.length - 1]);\n  const coordinates = gxTrackObject.coordinates;\n  const s = getAllTextContent(node, false);\n  const re =\n    /^\\s*([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s*$/i;\n  const m = re.exec(s);\n  if (m) {\n    const x = parseFloat(m[1]);\n    const y = parseFloat(m[2]);\n    const z = parseFloat(m[3]);\n    coordinates.push([x, y, z]);\n  } else {\n    coordinates.push([]);\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst GX_MULTITRACK_GEOMETRY_PARSERS = makeStructureNS(GX_NAMESPACE_URIS, {\n  'Track': makeArrayPusher(readGxTrack),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {MultiLineString|undefined} MultiLineString.\n */\nfunction readGxMultiTrack(node, objectStack) {\n  const lineStrings = pushParseAndPop(\n    [],\n    GX_MULTITRACK_GEOMETRY_PARSERS,\n    node,\n    objectStack\n  );\n  if (!lineStrings) {\n    return undefined;\n  }\n  return new MultiLineString(lineStrings);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst GX_TRACK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'when': whenParser,\n  },\n  makeStructureNS(GX_NAMESPACE_URIS, {\n    'coord': gxCoordParser,\n  })\n);\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {LineString|undefined} LineString.\n */\nfunction readGxTrack(node, objectStack) {\n  const gxTrackObject = pushParseAndPop(\n    /** @type {GxTrackObject} */ ({\n      coordinates: [],\n      whens: [],\n    }),\n    GX_TRACK_PARSERS,\n    node,\n    objectStack\n  );\n  if (!gxTrackObject) {\n    return undefined;\n  }\n  const flatCoordinates = [];\n  const coordinates = gxTrackObject.coordinates;\n  const whens = gxTrackObject.whens;\n  for (\n    let i = 0, ii = Math.min(coordinates.length, whens.length);\n    i < ii;\n    ++i\n  ) {\n    if (coordinates[i].length == 3) {\n      flatCoordinates.push(\n        coordinates[i][0],\n        coordinates[i][1],\n        coordinates[i][2],\n        whens[i]\n      );\n    }\n  }\n  return new LineString(flatCoordinates, 'XYZM');\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ICON_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'href': makeObjectPropertySetter(readURI),\n  },\n  makeStructureNS(GX_NAMESPACE_URIS, {\n    'x': makeObjectPropertySetter(readDecimal),\n    'y': makeObjectPropertySetter(readDecimal),\n    'w': makeObjectPropertySetter(readDecimal),\n    'h': makeObjectPropertySetter(readDecimal),\n  })\n);\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object} Icon object.\n */\nfunction readIcon(node, objectStack) {\n  const iconObject = pushParseAndPop({}, ICON_PARSERS, node, objectStack);\n  if (iconObject) {\n    return iconObject;\n  }\n  return null;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst GEOMETRY_FLAT_COORDINATES_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'coordinates': makeReplacer(readFlatCoordinates),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<number>} Flat coordinates.\n */\nfunction readFlatCoordinatesFromNode(node, objectStack) {\n  return pushParseAndPop(\n    null,\n    GEOMETRY_FLAT_COORDINATES_PARSERS,\n    node,\n    objectStack\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst EXTRUDE_AND_ALTITUDE_MODE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'extrude': makeObjectPropertySetter(readBoolean),\n  'tessellate': makeObjectPropertySetter(readBoolean),\n  'altitudeMode': makeObjectPropertySetter(readString),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {LineString|undefined} LineString.\n */\nfunction readLineString(node, objectStack) {\n  const properties = pushParseAndPop(\n    {},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS,\n    node,\n    objectStack\n  );\n  const flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    const lineString = new LineString(flatCoordinates, 'XYZ');\n    lineString.setProperties(properties, true);\n    return lineString;\n  }\n  return undefined;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Polygon|undefined} Polygon.\n */\nfunction readLinearRing(node, objectStack) {\n  const properties = pushParseAndPop(\n    {},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS,\n    node,\n    objectStack\n  );\n  const flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    const polygon = new Polygon(flatCoordinates, 'XYZ', [\n      flatCoordinates.length,\n    ]);\n    polygon.setProperties(properties, true);\n    return polygon;\n  }\n  return undefined;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst MULTI_GEOMETRY_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LineString': makeArrayPusher(readLineString),\n  'LinearRing': makeArrayPusher(readLinearRing),\n  'MultiGeometry': makeArrayPusher(readMultiGeometry),\n  'Point': makeArrayPusher(readPoint),\n  'Polygon': makeArrayPusher(readPolygon),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readMultiGeometry(node, objectStack) {\n  const geometries = pushParseAndPop(\n    [],\n    MULTI_GEOMETRY_PARSERS,\n    node,\n    objectStack\n  );\n  if (!geometries) {\n    return null;\n  }\n  if (geometries.length === 0) {\n    return new GeometryCollection(geometries);\n  }\n  let multiGeometry;\n  let homogeneous = true;\n  const type = geometries[0].getType();\n  let geometry;\n  for (let i = 1, ii = geometries.length; i < ii; ++i) {\n    geometry = geometries[i];\n    if (geometry.getType() != type) {\n      homogeneous = false;\n      break;\n    }\n  }\n  if (homogeneous) {\n    let layout;\n    let flatCoordinates;\n    if (type == 'Point') {\n      const point = geometries[0];\n      layout = point.getLayout();\n      flatCoordinates = point.getFlatCoordinates();\n      for (let i = 1, ii = geometries.length; i < ii; ++i) {\n        geometry = geometries[i];\n        extend(flatCoordinates, geometry.getFlatCoordinates());\n      }\n      multiGeometry = new MultiPoint(flatCoordinates, layout);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == 'LineString') {\n      multiGeometry = new MultiLineString(geometries);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == 'Polygon') {\n      multiGeometry = new MultiPolygon(geometries);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == 'GeometryCollection') {\n      multiGeometry = new GeometryCollection(geometries);\n    } else {\n      throw new Error('Unknown geometry type found');\n    }\n  } else {\n    multiGeometry = new GeometryCollection(geometries);\n  }\n  return /** @type {import(\"../geom/Geometry.js\").default} */ (multiGeometry);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Point|undefined} Point.\n */\nfunction readPoint(node, objectStack) {\n  const properties = pushParseAndPop(\n    {},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS,\n    node,\n    objectStack\n  );\n  const flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    const point = new Point(flatCoordinates, 'XYZ');\n    point.setProperties(properties, true);\n    return point;\n  }\n  return undefined;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst FLAT_LINEAR_RINGS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'innerBoundaryIs': innerBoundaryIsParser,\n  'outerBoundaryIs': outerBoundaryIsParser,\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Polygon|undefined} Polygon.\n */\nfunction readPolygon(node, objectStack) {\n  const properties = pushParseAndPop(\n    /** @type {Object<string,*>} */ ({}),\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS,\n    node,\n    objectStack\n  );\n  const flatLinearRings = pushParseAndPop(\n    [null],\n    FLAT_LINEAR_RINGS_PARSERS,\n    node,\n    objectStack\n  );\n  if (flatLinearRings && flatLinearRings[0]) {\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    for (let i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    const polygon = new Polygon(flatCoordinates, 'XYZ', ends);\n    polygon.setProperties(properties, true);\n    return polygon;\n  }\n  return undefined;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'IconStyle': iconStyleParser,\n  'LabelStyle': labelStyleParser,\n  'LineStyle': lineStyleParser,\n  'PolyStyle': polyStyleParser,\n});\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<Style>} Style.\n */\nfunction readStyle(node, objectStack) {\n  const styleObject = pushParseAndPop(\n    {},\n    STYLE_PARSERS,\n    node,\n    objectStack,\n    this\n  );\n  if (!styleObject) {\n    return null;\n  }\n  let fillStyle =\n    /** @type {Fill} */\n    (\n      'fillStyle' in styleObject ? styleObject['fillStyle'] : DEFAULT_FILL_STYLE\n    );\n  const fill = /** @type {boolean|undefined} */ (styleObject['fill']);\n  if (fill !== undefined && !fill) {\n    fillStyle = null;\n  }\n  let imageStyle;\n  if ('imageStyle' in styleObject) {\n    if (styleObject['imageStyle'] != DEFAULT_NO_IMAGE_STYLE) {\n      imageStyle = /** @type {import(\"../style/Image.js\").default} */ (\n        styleObject['imageStyle']\n      );\n    }\n  } else {\n    imageStyle = DEFAULT_IMAGE_STYLE;\n  }\n  const textStyle =\n    /** @type {Text} */\n    (\n      'textStyle' in styleObject ? styleObject['textStyle'] : DEFAULT_TEXT_STYLE\n    );\n  const strokeStyle =\n    /** @type {Stroke} */\n    (\n      'strokeStyle' in styleObject\n        ? styleObject['strokeStyle']\n        : DEFAULT_STROKE_STYLE\n    );\n  const outline = /** @type {boolean|undefined} */ (styleObject['outline']);\n  if (outline !== undefined && !outline) {\n    // if the polystyle specifies no outline two styles are needed,\n    // one for non-polygon geometries where linestrings require a stroke\n    // and one for polygons where there should be no stroke\n    return [\n      new Style({\n        geometry: function (feature) {\n          const geometry = feature.getGeometry();\n          const type = geometry.getType();\n          if (type === 'GeometryCollection') {\n            const collection =\n              /** @type {import(\"../geom/GeometryCollection\").default} */ (\n                geometry\n              );\n            return new GeometryCollection(\n              collection\n                .getGeometriesArrayRecursive()\n                .filter(function (geometry) {\n                  const type = geometry.getType();\n                  return type !== 'Polygon' && type !== 'MultiPolygon';\n                })\n            );\n          }\n          if (type !== 'Polygon' && type !== 'MultiPolygon') {\n            return geometry;\n          }\n        },\n        fill: fillStyle,\n        image: imageStyle,\n        stroke: strokeStyle,\n        text: textStyle,\n        zIndex: undefined, // FIXME\n      }),\n      new Style({\n        geometry: function (feature) {\n          const geometry = feature.getGeometry();\n          const type = geometry.getType();\n          if (type === 'GeometryCollection') {\n            const collection =\n              /** @type {import(\"../geom/GeometryCollection\").default} */ (\n                geometry\n              );\n            return new GeometryCollection(\n              collection\n                .getGeometriesArrayRecursive()\n                .filter(function (geometry) {\n                  const type = geometry.getType();\n                  return type === 'Polygon' || type === 'MultiPolygon';\n                })\n            );\n          }\n          if (type === 'Polygon' || type === 'MultiPolygon') {\n            return geometry;\n          }\n        },\n        fill: fillStyle,\n        stroke: null,\n        zIndex: undefined, // FIXME\n      }),\n    ];\n  }\n  return [\n    new Style({\n      fill: fillStyle,\n      image: imageStyle,\n      stroke: strokeStyle,\n      text: textStyle,\n      zIndex: undefined, // FIXME\n    }),\n  ];\n}\n\n/**\n * Reads an array of geometries and creates arrays for common geometry\n * properties. Then sets them to the multi geometry.\n * @param {MultiPoint|MultiLineString|MultiPolygon} multiGeometry A multi-geometry.\n * @param {Array<import(\"../geom/Geometry.js\").default>} geometries List of geometries.\n */\nfunction setCommonGeometryProperties(multiGeometry, geometries) {\n  const ii = geometries.length;\n  const extrudes = new Array(geometries.length);\n  const tessellates = new Array(geometries.length);\n  const altitudeModes = new Array(geometries.length);\n  let hasExtrude, hasTessellate, hasAltitudeMode;\n  hasExtrude = false;\n  hasTessellate = false;\n  hasAltitudeMode = false;\n  for (let i = 0; i < ii; ++i) {\n    const geometry = geometries[i];\n    extrudes[i] = geometry.get('extrude');\n    tessellates[i] = geometry.get('tessellate');\n    altitudeModes[i] = geometry.get('altitudeMode');\n    hasExtrude = hasExtrude || extrudes[i] !== undefined;\n    hasTessellate = hasTessellate || tessellates[i] !== undefined;\n    hasAltitudeMode = hasAltitudeMode || altitudeModes[i];\n  }\n  if (hasExtrude) {\n    multiGeometry.set('extrude', extrudes);\n  }\n  if (hasTessellate) {\n    multiGeometry.set('tessellate', tessellates);\n  }\n  if (hasAltitudeMode) {\n    multiGeometry.set('altitudeMode', altitudeModes);\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'displayName': makeObjectPropertySetter(readString),\n  'value': makeObjectPropertySetter(readString),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction dataParser(node, objectStack) {\n  const name = node.getAttribute('name');\n  parseNode(DATA_PARSERS, node, objectStack);\n  const featureObject = /** @type {Object} */ (\n    objectStack[objectStack.length - 1]\n  );\n  if (name && featureObject.displayName) {\n    featureObject[name] = {\n      value: featureObject.value,\n      displayName: featureObject.displayName,\n      toString: function () {\n        return featureObject.value;\n      },\n    };\n  } else if (name !== null) {\n    featureObject[name] = featureObject.value;\n  } else if (featureObject.displayName !== null) {\n    featureObject[featureObject.displayName] = featureObject.value;\n  }\n  delete featureObject['value'];\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst EXTENDED_DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Data': dataParser,\n  'SchemaData': schemaDataParser,\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction extendedDataParser(node, objectStack) {\n  parseNode(EXTENDED_DATA_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction regionParser(node, objectStack) {\n  parseNode(REGION_PARSERS, node, objectStack);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PAIR_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Style': makeObjectPropertySetter(readStyle),\n  'key': makeObjectPropertySetter(readString),\n  'styleUrl': makeObjectPropertySetter(readStyleURL),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction pairDataParser(node, objectStack) {\n  const pairObject = pushParseAndPop({}, PAIR_PARSERS, node, objectStack, this);\n  if (!pairObject) {\n    return;\n  }\n  const key = /** @type {string|undefined} */ (pairObject['key']);\n  if (key && key == 'normal') {\n    const styleUrl = /** @type {string|undefined} */ (pairObject['styleUrl']);\n    if (styleUrl) {\n      objectStack[objectStack.length - 1] = styleUrl;\n    }\n    const style = /** @type {Style} */ (pairObject['Style']);\n    if (style) {\n      objectStack[objectStack.length - 1] = style;\n    }\n  }\n}\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction placemarkStyleMapParser(node, objectStack) {\n  const styleMapValue = readStyleMapValue.call(this, node, objectStack);\n  if (!styleMapValue) {\n    return;\n  }\n  const placemarkObject = objectStack[objectStack.length - 1];\n  if (Array.isArray(styleMapValue)) {\n    placemarkObject['Style'] = styleMapValue;\n  } else if (typeof styleMapValue === 'string') {\n    placemarkObject['styleUrl'] = styleMapValue;\n  } else {\n    throw new Error('`styleMapValue` has an unknown type');\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SCHEMA_DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'SimpleData': simpleDataParser,\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction schemaDataParser(node, objectStack) {\n  parseNode(SCHEMA_DATA_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction simpleDataParser(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (name !== null) {\n    const data = readString(node);\n    const featureObject = /** @type {Object} */ (\n      objectStack[objectStack.length - 1]\n    );\n    featureObject[name] = data;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LAT_LON_ALT_BOX_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'altitudeMode': makeObjectPropertySetter(readString),\n  'minAltitude': makeObjectPropertySetter(readDecimal),\n  'maxAltitude': makeObjectPropertySetter(readDecimal),\n  'north': makeObjectPropertySetter(readDecimal),\n  'south': makeObjectPropertySetter(readDecimal),\n  'east': makeObjectPropertySetter(readDecimal),\n  'west': makeObjectPropertySetter(readDecimal),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction latLonAltBoxParser(node, objectStack) {\n  const object = pushParseAndPop(\n    {},\n    LAT_LON_ALT_BOX_PARSERS,\n    node,\n    objectStack\n  );\n  if (!object) {\n    return;\n  }\n  const regionObject = /** @type {Object} */ (\n    objectStack[objectStack.length - 1]\n  );\n  const extent = [\n    parseFloat(object['west']),\n    parseFloat(object['south']),\n    parseFloat(object['east']),\n    parseFloat(object['north']),\n  ];\n  regionObject['extent'] = extent;\n  regionObject['altitudeMode'] = object['altitudeMode'];\n  regionObject['minAltitude'] = parseFloat(object['minAltitude']);\n  regionObject['maxAltitude'] = parseFloat(object['maxAltitude']);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LOD_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'minLodPixels': makeObjectPropertySetter(readDecimal),\n  'maxLodPixels': makeObjectPropertySetter(readDecimal),\n  'minFadeExtent': makeObjectPropertySetter(readDecimal),\n  'maxFadeExtent': makeObjectPropertySetter(readDecimal),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction lodParser(node, objectStack) {\n  const object = pushParseAndPop({}, LOD_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const lodObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  lodObject['minLodPixels'] = parseFloat(object['minLodPixels']);\n  lodObject['maxLodPixels'] = parseFloat(object['maxLodPixels']);\n  lodObject['minFadeExtent'] = parseFloat(object['minFadeExtent']);\n  lodObject['maxFadeExtent'] = parseFloat(object['maxFadeExtent']);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst INNER_BOUNDARY_IS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  // KML spec only allows one LinearRing  per innerBoundaryIs, but Google Earth\n  // allows multiple, so we parse multiple here too.\n  'LinearRing': makeArrayPusher(readFlatLinearRing),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction innerBoundaryIsParser(node, objectStack) {\n  const innerBoundaryFlatLinearRings = pushParseAndPop(\n    /** @type {Array<Array<number>>} */ ([]),\n    INNER_BOUNDARY_IS_PARSERS,\n    node,\n    objectStack\n  );\n  if (innerBoundaryFlatLinearRings.length > 0) {\n    const flatLinearRings =\n      /** @type {Array<Array<number>>} */\n      (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(...innerBoundaryFlatLinearRings);\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst OUTER_BOUNDARY_IS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LinearRing': makeReplacer(readFlatLinearRing),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction outerBoundaryIsParser(node, objectStack) {\n  /** @type {Array<number>|undefined} */\n  const flatLinearRing = pushParseAndPop(\n    undefined,\n    OUTER_BOUNDARY_IS_PARSERS,\n    node,\n    objectStack\n  );\n  if (flatLinearRing) {\n    const flatLinearRings =\n      /** @type {Array<Array<number>>} */\n      (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction linkParser(node, objectStack) {\n  parseNode(LINK_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction whenParser(node, objectStack) {\n  const gxTrackObject =\n    /** @type {GxTrackObject} */\n    (objectStack[objectStack.length - 1]);\n  const whens = gxTrackObject.whens;\n  const s = getAllTextContent(node, false);\n  const when = Date.parse(s);\n  whens.push(isNaN(when) ? 0 : when);\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the color to.\n * @param {import(\"../color.js\").Color|string} color Color.\n */\nfunction writeColorTextNode(node, color) {\n  const rgba = asArray(color);\n  const opacity = rgba.length == 4 ? rgba[3] : 1;\n  /** @type {Array<string|number>} */\n  const abgr = [opacity * 255, rgba[2], rgba[1], rgba[0]];\n  for (let i = 0; i < 4; ++i) {\n    const hex = Math.floor(/** @type {number} */ (abgr[i])).toString(16);\n    abgr[i] = hex.length == 1 ? '0' + hex : hex;\n  }\n  writeStringTextNode(node, abgr.join(''));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the coordinates to.\n * @param {Array<number>} coordinates Coordinates.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeCoordinatesTextNode(node, coordinates, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n\n  const layout = context['layout'];\n  const stride = context['stride'];\n\n  let dimension;\n  if (layout == 'XY' || layout == 'XYM') {\n    dimension = 2;\n  } else if (layout == 'XYZ' || layout == 'XYZM') {\n    dimension = 3;\n  } else {\n    throw new Error('Invalid geometry layout');\n  }\n\n  const ii = coordinates.length;\n  let text = '';\n  if (ii > 0) {\n    text += coordinates[0];\n    for (let d = 1; d < dimension; ++d) {\n      text += ',' + coordinates[d];\n    }\n    for (let i = stride; i < ii; i += stride) {\n      text += ' ' + coordinates[i];\n      for (let d = 1; d < dimension; ++d) {\n        text += ',' + coordinates[i + d];\n      }\n    }\n  }\n  writeStringTextNode(node, text);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst EXTENDEDDATA_NODE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Data': makeChildAppender(writeDataNode),\n  'value': makeChildAppender(writeDataNodeValue),\n  'displayName': makeChildAppender(writeDataNodeName),\n});\n\n/**\n * @param {Element} node Node.\n * @param {{name: *, value: *}} pair Name value pair.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeDataNode(node, pair, objectStack) {\n  node.setAttribute('name', pair.name);\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const value = pair.value;\n\n  if (typeof value == 'object') {\n    if (value !== null && value.displayName) {\n      pushSerializeAndPop(\n        context,\n        EXTENDEDDATA_NODE_SERIALIZERS,\n        OBJECT_PROPERTY_NODE_FACTORY,\n        [value.displayName],\n        objectStack,\n        ['displayName']\n      );\n    }\n\n    if (value !== null && value.value) {\n      pushSerializeAndPop(\n        context,\n        EXTENDEDDATA_NODE_SERIALIZERS,\n        OBJECT_PROPERTY_NODE_FACTORY,\n        [value.value],\n        objectStack,\n        ['value']\n      );\n    }\n  } else {\n    pushSerializeAndPop(\n      context,\n      EXTENDEDDATA_NODE_SERIALIZERS,\n      OBJECT_PROPERTY_NODE_FACTORY,\n      [value],\n      objectStack,\n      ['value']\n    );\n  }\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the name to.\n * @param {string} name DisplayName.\n */\nfunction writeDataNodeName(node, name) {\n  writeCDATASection(node, name);\n}\n\n/**\n * @param {Node} node Node to append a CDATA Section with the value to.\n * @param {string} value Value.\n */\nfunction writeDataNodeValue(node, value) {\n  writeStringTextNode(node, value);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst DOCUMENT_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Placemark': makeChildAppender(writePlacemark),\n});\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nconst DOCUMENT_NODE_FACTORY = function (value, objectStack, nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return createElementNS(parentNode.namespaceURI, 'Placemark');\n};\n\n/**\n * @param {Element} node Node.\n * @param {Array<Feature>} features Features.\n * @param {Array<*>} objectStack Object stack.\n * @this {KML}\n */\nfunction writeDocument(node, features, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  pushSerializeAndPop(\n    context,\n    DOCUMENT_SERIALIZERS,\n    DOCUMENT_NODE_FACTORY,\n    features,\n    objectStack,\n    undefined,\n    this\n  );\n}\n\n/**\n * A factory for creating Data nodes.\n * @const\n * @type {function(*, Array<*>): (Node|undefined)}\n */\nconst DATA_NODE_FACTORY = makeSimpleNodeFactory('Data');\n\n/**\n * @param {Element} node Node.\n * @param {{names: Array<string>, values: (Array<*>)}} namesAndValues Names and values.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeExtendedData(node, namesAndValues, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const names = namesAndValues.names;\n  const values = namesAndValues.values;\n  const length = names.length;\n\n  for (let i = 0; i < length; i++) {\n    pushSerializeAndPop(\n      context,\n      EXTENDEDDATA_NODE_SERIALIZERS,\n      DATA_NODE_FACTORY,\n      [{name: names[i], value: values[i]}],\n      objectStack\n    );\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst ICON_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS,\n  ['href'],\n  makeStructureNS(GX_NAMESPACE_URIS, ['x', 'y', 'w', 'h'])\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst ICON_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'href': makeChildAppender(writeStringTextNode),\n  },\n  makeStructureNS(GX_NAMESPACE_URIS, {\n    'x': makeChildAppender(writeDecimalTextNode),\n    'y': makeChildAppender(writeDecimalTextNode),\n    'w': makeChildAppender(writeDecimalTextNode),\n    'h': makeChildAppender(writeDecimalTextNode),\n  })\n);\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nconst GX_NODE_FACTORY = function (value, objectStack, nodeName) {\n  return createElementNS(GX_NAMESPACE_URIS[0], 'gx:' + nodeName);\n};\n\n/**\n * @param {Element} node Node.\n * @param {Object} icon Icon object.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeIcon(node, icon, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const parentNode = objectStack[objectStack.length - 1].node;\n  let orderedKeys = ICON_SEQUENCE[parentNode.namespaceURI];\n  let values = makeSequence(icon, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    ICON_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n  orderedKeys = ICON_SEQUENCE[GX_NAMESPACE_URIS[0]];\n  values = makeSequence(icon, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    ICON_SERIALIZERS,\n    GX_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst ICON_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'scale',\n  'heading',\n  'Icon',\n  'color',\n  'hotSpot',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst ICON_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Icon': makeChildAppender(writeIcon),\n  'color': makeChildAppender(writeColorTextNode),\n  'heading': makeChildAppender(writeDecimalTextNode),\n  'hotSpot': makeChildAppender(writeVec2),\n  'scale': makeChildAppender(writeScaleTextNode),\n});\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../style/Icon.js\").default} style Icon style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeIconStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const /** @type {Object<string, any>} */ properties = {};\n  const src = style.getSrc();\n  const size = style.getSize();\n  const iconImageSize = style.getImageSize();\n  const iconProperties = {\n    'href': src,\n  };\n\n  if (size) {\n    iconProperties['w'] = size[0];\n    iconProperties['h'] = size[1];\n    const anchor = style.getAnchor(); // top-left\n    const origin = style.getOrigin(); // top-left\n\n    if (origin && iconImageSize && origin[0] !== 0 && origin[1] !== size[1]) {\n      iconProperties['x'] = origin[0];\n      iconProperties['y'] = iconImageSize[1] - (origin[1] + size[1]);\n    }\n\n    if (anchor && (anchor[0] !== size[0] / 2 || anchor[1] !== size[1] / 2)) {\n      const /** @type {Vec2} */ hotSpot = {\n          x: anchor[0],\n          xunits: 'pixels',\n          y: size[1] - anchor[1],\n          yunits: 'pixels',\n        };\n      properties['hotSpot'] = hotSpot;\n    }\n  }\n\n  properties['Icon'] = iconProperties;\n\n  let scale = style.getScaleArray()[0];\n  let imageSize = size;\n  if (imageSize === null) {\n    imageSize = DEFAULT_IMAGE_STYLE_SIZE;\n  }\n  if (imageSize.length == 2) {\n    const resizeScale = scaleForSize(imageSize);\n    scale = scale / resizeScale;\n  }\n  if (scale !== 1) {\n    properties['scale'] = scale;\n  }\n\n  const rotation = style.getRotation();\n  if (rotation !== 0) {\n    properties['heading'] = rotation; // 0-360\n  }\n\n  const color = style.getColor();\n  if (color) {\n    properties['color'] = color;\n  }\n\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = ICON_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    ICON_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst LABEL_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'color',\n  'scale',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst LABEL_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeChildAppender(writeColorTextNode),\n  'scale': makeChildAppender(writeScaleTextNode),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Text} style style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeLabelStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const properties = {};\n  const fill = style.getFill();\n  if (fill) {\n    properties['color'] = fill.getColor();\n  }\n  const scale = style.getScale();\n  if (scale && scale !== 1) {\n    properties['scale'] = scale;\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = LABEL_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    LABEL_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst LINE_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['color', 'width']);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst LINE_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeChildAppender(writeColorTextNode),\n  'width': makeChildAppender(writeDecimalTextNode),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Stroke} style style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeLineStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const properties = {\n    'color': style.getColor(),\n    'width': Number(style.getWidth()) || 1,\n  };\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = LINE_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    LINE_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nconst GEOMETRY_TYPE_TO_NODENAME = {\n  'Point': 'Point',\n  'LineString': 'LineString',\n  'LinearRing': 'LinearRing',\n  'Polygon': 'Polygon',\n  'MultiPoint': 'MultiGeometry',\n  'MultiLineString': 'MultiGeometry',\n  'MultiPolygon': 'MultiGeometry',\n  'GeometryCollection': 'MultiGeometry',\n};\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nconst GEOMETRY_NODE_FACTORY = function (value, objectStack, nodeName) {\n  if (value) {\n    const parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS(\n      parentNode.namespaceURI,\n      GEOMETRY_TYPE_TO_NODENAME[\n        /** @type {import(\"../geom/Geometry.js\").default} */ (value).getType()\n      ]\n    );\n  }\n};\n\n/**\n * A factory for creating Point nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst POINT_NODE_FACTORY = makeSimpleNodeFactory('Point');\n\n/**\n * A factory for creating LineString nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst LINE_STRING_NODE_FACTORY = makeSimpleNodeFactory('LineString');\n\n/**\n * A factory for creating LinearRing nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst LINEAR_RING_NODE_FACTORY = makeSimpleNodeFactory('LinearRing');\n\n/**\n * A factory for creating Polygon nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst POLYGON_NODE_FACTORY = makeSimpleNodeFactory('Polygon');\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst MULTI_GEOMETRY_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'LineString': makeChildAppender(writePrimitiveGeometry),\n  'Point': makeChildAppender(writePrimitiveGeometry),\n  'Polygon': makeChildAppender(writePolygon),\n  'GeometryCollection': makeChildAppender(writeMultiGeometry),\n});\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeMultiGeometry(node, geometry, objectStack) {\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const context = {node: node};\n  const type = geometry.getType();\n  /** @type {Array<import(\"../geom/Geometry.js\").default>} */\n  let geometries = [];\n  /** @type {function(*, Array<*>, string=): (Node|undefined)} */\n  let factory;\n  if (type === 'GeometryCollection') {\n    /** @type {GeometryCollection} */ (geometry)\n      .getGeometriesArrayRecursive()\n      .forEach(function (geometry) {\n        const type = geometry.getType();\n        if (type === 'MultiPoint') {\n          geometries = geometries.concat(\n            /** @type {MultiPoint} */ (geometry).getPoints()\n          );\n        } else if (type === 'MultiLineString') {\n          geometries = geometries.concat(\n            /** @type {MultiLineString} */ (geometry).getLineStrings()\n          );\n        } else if (type === 'MultiPolygon') {\n          geometries = geometries.concat(\n            /** @type {MultiPolygon} */ (geometry).getPolygons()\n          );\n        } else if (\n          type === 'Point' ||\n          type === 'LineString' ||\n          type === 'Polygon'\n        ) {\n          geometries.push(geometry);\n        } else {\n          throw new Error('Unknown geometry type');\n        }\n      });\n    factory = GEOMETRY_NODE_FACTORY;\n  } else if (type === 'MultiPoint') {\n    geometries = /** @type {MultiPoint} */ (geometry).getPoints();\n    factory = POINT_NODE_FACTORY;\n  } else if (type === 'MultiLineString') {\n    geometries = /** @type {MultiLineString} */ (geometry).getLineStrings();\n    factory = LINE_STRING_NODE_FACTORY;\n  } else if (type === 'MultiPolygon') {\n    geometries = /** @type {MultiPolygon} */ (geometry).getPolygons();\n    factory = POLYGON_NODE_FACTORY;\n  } else {\n    throw new Error('Unknown geometry type');\n  }\n  pushSerializeAndPop(\n    context,\n    MULTI_GEOMETRY_SERIALIZERS,\n    factory,\n    geometries,\n    objectStack\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst BOUNDARY_IS_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'LinearRing': makeChildAppender(writePrimitiveGeometry),\n});\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../geom/LinearRing.js\").default} linearRing Linear ring.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeBoundaryIs(node, linearRing, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  pushSerializeAndPop(\n    context,\n    BOUNDARY_IS_SERIALIZERS,\n    LINEAR_RING_NODE_FACTORY,\n    [linearRing],\n    objectStack\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst PLACEMARK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'ExtendedData': makeChildAppender(writeExtendedData),\n  'MultiGeometry': makeChildAppender(writeMultiGeometry),\n  'LineString': makeChildAppender(writePrimitiveGeometry),\n  'LinearRing': makeChildAppender(writePrimitiveGeometry),\n  'Point': makeChildAppender(writePrimitiveGeometry),\n  'Polygon': makeChildAppender(writePolygon),\n  'Style': makeChildAppender(writeStyle),\n  'address': makeChildAppender(writeStringTextNode),\n  'description': makeChildAppender(writeStringTextNode),\n  'name': makeChildAppender(writeStringTextNode),\n  'open': makeChildAppender(writeBooleanTextNode),\n  'phoneNumber': makeChildAppender(writeStringTextNode),\n  'styleUrl': makeChildAppender(writeStringTextNode),\n  'visibility': makeChildAppender(writeBooleanTextNode),\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst PLACEMARK_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'name',\n  'open',\n  'visibility',\n  'address',\n  'phoneNumber',\n  'description',\n  'styleUrl',\n  'Style',\n]);\n\n/**\n * A factory for creating ExtendedData nodes.\n * @const\n * @type {function(*, Array<*>): (Node|undefined)}\n */\nconst EXTENDEDDATA_NODE_FACTORY = makeSimpleNodeFactory('ExtendedData');\n\n/**\n * FIXME currently we do serialize arbitrary/custom feature properties\n * (ExtendedData).\n * @param {Element} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n * @this {KML}\n */\nfunction writePlacemark(node, feature, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n\n  // set id\n  if (feature.getId()) {\n    node.setAttribute('id', /** @type {string} */ (feature.getId()));\n  }\n\n  // serialize properties (properties unknown to KML are not serialized)\n  const properties = feature.getProperties();\n\n  // don't export these to ExtendedData\n  const filter = {\n    'address': 1,\n    'description': 1,\n    'name': 1,\n    'open': 1,\n    'phoneNumber': 1,\n    'styleUrl': 1,\n    'visibility': 1,\n  };\n  filter[feature.getGeometryName()] = 1;\n  const keys = Object.keys(properties || {})\n    .sort()\n    .filter(function (v) {\n      return !filter[v];\n    });\n\n  const styleFunction = feature.getStyleFunction();\n  if (styleFunction) {\n    // FIXME the styles returned by the style function are supposed to be\n    // resolution-independent here\n    const styles = styleFunction(feature, 0);\n    if (styles) {\n      const styleArray = Array.isArray(styles) ? styles : [styles];\n      let pointStyles = styleArray;\n      if (feature.getGeometry()) {\n        pointStyles = styleArray.filter(function (style) {\n          const geometry = style.getGeometryFunction()(feature);\n          if (geometry) {\n            const type = geometry.getType();\n            if (type === 'GeometryCollection') {\n              return /** @type {GeometryCollection} */ (geometry)\n                .getGeometriesArrayRecursive()\n                .filter(function (geometry) {\n                  const type = geometry.getType();\n                  return type === 'Point' || type === 'MultiPoint';\n                }).length;\n            }\n            return type === 'Point' || type === 'MultiPoint';\n          }\n        });\n        ('Point');\n      }\n      if (this.writeStyles_) {\n        let lineStyles = styleArray;\n        let polyStyles = styleArray;\n        if (feature.getGeometry()) {\n          lineStyles = styleArray.filter(function (style) {\n            const geometry = style.getGeometryFunction()(feature);\n            if (geometry) {\n              const type = geometry.getType();\n              if (type === 'GeometryCollection') {\n                return /** @type {GeometryCollection} */ (geometry)\n                  .getGeometriesArrayRecursive()\n                  .filter(function (geometry) {\n                    const type = geometry.getType();\n                    return type === 'LineString' || type === 'MultiLineString';\n                  }).length;\n              }\n              return type === 'LineString' || type === 'MultiLineString';\n            }\n          });\n          polyStyles = styleArray.filter(function (style) {\n            const geometry = style.getGeometryFunction()(feature);\n            if (geometry) {\n              const type = geometry.getType();\n              if (type === 'GeometryCollection') {\n                return /** @type {GeometryCollection} */ (geometry)\n                  .getGeometriesArrayRecursive()\n                  .filter(function (geometry) {\n                    const type = geometry.getType();\n                    return type === 'Polygon' || type === 'MultiPolygon';\n                  }).length;\n              }\n              return type === 'Polygon' || type === 'MultiPolygon';\n            }\n          });\n        }\n        properties['Style'] = {\n          pointStyles: pointStyles,\n          lineStyles: lineStyles,\n          polyStyles: polyStyles,\n        };\n      }\n      if (pointStyles.length && properties['name'] === undefined) {\n        const textStyle = pointStyles[0].getText();\n        if (textStyle) {\n          properties['name'] = textStyle.getText();\n        }\n      }\n    }\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = PLACEMARK_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    PLACEMARK_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n\n  if (keys.length > 0) {\n    const sequence = makeSequence(properties, keys);\n    const namesAndValues = {names: keys, values: sequence};\n    pushSerializeAndPop(\n      context,\n      PLACEMARK_SERIALIZERS,\n      EXTENDEDDATA_NODE_FACTORY,\n      [namesAndValues],\n      objectStack\n    );\n  }\n\n  // serialize geometry\n  const options = /** @type {import(\"./Feature.js\").WriteOptions} */ (\n    objectStack[0]\n  );\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = transformGeometryWithOptions(geometry, true, options);\n  }\n  pushSerializeAndPop(\n    context,\n    PLACEMARK_SERIALIZERS,\n    GEOMETRY_NODE_FACTORY,\n    [geometry],\n    objectStack\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst PRIMITIVE_GEOMETRY_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'extrude',\n  'tessellate',\n  'altitudeMode',\n  'coordinates',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst PRIMITIVE_GEOMETRY_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'extrude': makeChildAppender(writeBooleanTextNode),\n  'tessellate': makeChildAppender(writeBooleanTextNode),\n  'altitudeMode': makeChildAppender(writeStringTextNode),\n  'coordinates': makeChildAppender(writeCoordinatesTextNode),\n});\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePrimitiveGeometry(node, geometry, objectStack) {\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  context['layout'] = geometry.getLayout();\n  context['stride'] = geometry.getStride();\n\n  // serialize properties (properties unknown to KML are not serialized)\n  const properties = geometry.getProperties();\n  properties.coordinates = flatCoordinates;\n\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = PRIMITIVE_GEOMETRY_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    PRIMITIVE_GEOMETRY_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst POLY_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'color',\n  'fill',\n  'outline',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst POLYGON_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'outerBoundaryIs': makeChildAppender(writeBoundaryIs),\n  'innerBoundaryIs': makeChildAppender(writeBoundaryIs),\n});\n\n/**\n * A factory for creating innerBoundaryIs nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst INNER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('innerBoundaryIs');\n\n/**\n * A factory for creating outerBoundaryIs nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst OUTER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('outerBoundaryIs');\n\n/**\n * @param {Element} node Node.\n * @param {Polygon} polygon Polygon.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePolygon(node, polygon, objectStack) {\n  const linearRings = polygon.getLinearRings();\n  const outerRing = linearRings.shift();\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  // inner rings\n  pushSerializeAndPop(\n    context,\n    POLYGON_SERIALIZERS,\n    INNER_BOUNDARY_NODE_FACTORY,\n    linearRings,\n    objectStack\n  );\n  // outer ring\n  pushSerializeAndPop(\n    context,\n    POLYGON_SERIALIZERS,\n    OUTER_BOUNDARY_NODE_FACTORY,\n    [outerRing],\n    objectStack\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst POLY_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeChildAppender(writeColorTextNode),\n  'fill': makeChildAppender(writeBooleanTextNode),\n  'outline': makeChildAppender(writeBooleanTextNode),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Style} style Style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePolyStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const fill = style.getFill();\n  const stroke = style.getStroke();\n  const properties = {\n    'color': fill ? fill.getColor() : undefined,\n    'fill': fill ? undefined : false,\n    'outline': stroke ? undefined : false,\n  };\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = POLY_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    POLY_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the scale to.\n * @param {number|undefined} scale Scale.\n */\nfunction writeScaleTextNode(node, scale) {\n  // the Math is to remove any excess decimals created by float arithmetic\n  writeDecimalTextNode(node, Math.round(scale * 1e6) / 1e6);\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'IconStyle',\n  'LabelStyle',\n  'LineStyle',\n  'PolyStyle',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'IconStyle': makeChildAppender(writeIconStyle),\n  'LabelStyle': makeChildAppender(writeLabelStyle),\n  'LineStyle': makeChildAppender(writeLineStyle),\n  'PolyStyle': makeChildAppender(writePolyStyle),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Object<string, Array<Style>>} styles Styles.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeStyle(node, styles, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const properties = {};\n  if (styles.pointStyles.length) {\n    const textStyle = styles.pointStyles[0].getText();\n    if (textStyle) {\n      properties['LabelStyle'] = textStyle;\n    }\n    const imageStyle = styles.pointStyles[0].getImage();\n    if (\n      imageStyle &&\n      typeof (/** @type {?} */ (imageStyle).getSrc) === 'function'\n    ) {\n      properties['IconStyle'] = imageStyle;\n    }\n  }\n  if (styles.lineStyles.length) {\n    const strokeStyle = styles.lineStyles[0].getStroke();\n    if (strokeStyle) {\n      properties['LineStyle'] = strokeStyle;\n    }\n  }\n  if (styles.polyStyles.length) {\n    const strokeStyle = styles.polyStyles[0].getStroke();\n    if (strokeStyle && !properties['LineStyle']) {\n      properties['LineStyle'] = strokeStyle;\n    }\n    properties['PolyStyle'] = styles.polyStyles[0];\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @param {Element} node Node to append a TextNode with the Vec2 to.\n * @param {Vec2} vec2 Vec2.\n */\nfunction writeVec2(node, vec2) {\n  node.setAttribute('x', String(vec2.x));\n  node.setAttribute('y', String(vec2.y));\n  node.setAttribute('xunits', vec2.xunits);\n  node.setAttribute('yunits', vec2.yunits);\n}\n\nexport default KML;\n","/**\n * @module ol/source/Zoomify\n */\nimport {DEFAULT_TILE_SIZE} from '../tilegrid/common.js';\n\nimport ImageTile from '../ImageTile.js';\nimport TileGrid from '../tilegrid/TileGrid.js';\nimport TileImage from './TileImage.js';\nimport TileState from '../TileState.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {createFromTileUrlFunctions, expandUrl} from '../tileurlfunction.js';\nimport {getCenter} from '../extent.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {'default' | 'truncated'} TierSizeCalculation\n */\n\nexport class CustomTile extends ImageTile {\n  /**\n   * @param {import(\"../size.js\").Size} tileSize Full tile size.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"../Tile.js\").Options} [options] Tile options.\n   */\n  constructor(\n    tileSize,\n    tileCoord,\n    state,\n    src,\n    crossOrigin,\n    tileLoadFunction,\n    options\n  ) {\n    super(tileCoord, state, src, crossOrigin, tileLoadFunction, options);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.zoomifyImage_ = null;\n\n    /**\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tileSize_ = tileSize;\n  }\n\n  /**\n   * Get the image element for this tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  getImage() {\n    if (this.zoomifyImage_) {\n      return this.zoomifyImage_;\n    }\n    const image = super.getImage();\n    if (this.state == TileState.LOADED) {\n      const tileSize = this.tileSize_;\n      if (image.width == tileSize[0] && image.height == tileSize[1]) {\n        this.zoomifyImage_ = image;\n        return image;\n      }\n      const context = createCanvasContext2D(tileSize[0], tileSize[1]);\n      context.drawImage(image, 0, 0);\n      this.zoomifyImage_ = context.canvas;\n      return context.canvas;\n    }\n    return image;\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value  you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {number} [tilePixelRatio] The pixel ratio used by the tile service. For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px by 512px images (for retina/hidpi devices) then `tilePixelRatio` should be set to `2`\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {string} url URL template or base URL of the Zoomify service.\n * A base URL is the fixed part\n * of the URL, excluding the tile group, z, x, and y folder structure, e.g.\n * `http://my.zoomify.info/IMAGE.TIF/`. A URL template must include\n * `{TileGroup}`, `{x}`, `{y}`, and `{z}` placeholders, e.g.\n * `http://my.zoomify.info/IMAGE.TIF/{TileGroup}/{z}-{x}-{y}.jpg`.\n * Internet Imaging Protocol (IIP) with JTL extension can be also used with\n * `{tileIndex}` and `{z}` placeholders, e.g.\n * `http://my.zoomify.info?FIF=IMAGE.TIF&JTL={z},{tileIndex}`.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {TierSizeCalculation} [tierSizeCalculation] Tier size calculation method: `default` or `truncated`.\n * @property {import(\"../size.js\").Size} size Size.\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the TileGrid that is created.\n * Default sets the TileGrid in the\n * fourth quadrant, meaning extent is `[0, -height, width, 0]`. To change the\n * extent to the first quadrant (the default for OpenLayers 2) set the extent\n * as `[0, 0, width, height]`.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number} [tileSize=256] Tile size. Same tile size is used for all zoom levels.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data in Zoomify format (both Zoomify and Internet\n * Imaging Protocol are supported).\n * @api\n */\nclass Zoomify extends TileImage {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    const size = options.size;\n    const tierSizeCalculation =\n      options.tierSizeCalculation !== undefined\n        ? options.tierSizeCalculation\n        : 'default';\n\n    const tilePixelRatio = options.tilePixelRatio || 1;\n    const imageWidth = size[0];\n    const imageHeight = size[1];\n    const tierSizeInTiles = [];\n    const tileSize = options.tileSize || DEFAULT_TILE_SIZE;\n    let tileSizeForTierSizeCalculation = tileSize * tilePixelRatio;\n\n    switch (tierSizeCalculation) {\n      case 'default':\n        while (\n          imageWidth > tileSizeForTierSizeCalculation ||\n          imageHeight > tileSizeForTierSizeCalculation\n        ) {\n          tierSizeInTiles.push([\n            Math.ceil(imageWidth / tileSizeForTierSizeCalculation),\n            Math.ceil(imageHeight / tileSizeForTierSizeCalculation),\n          ]);\n          tileSizeForTierSizeCalculation += tileSizeForTierSizeCalculation;\n        }\n        break;\n      case 'truncated':\n        let width = imageWidth;\n        let height = imageHeight;\n        while (\n          width > tileSizeForTierSizeCalculation ||\n          height > tileSizeForTierSizeCalculation\n        ) {\n          tierSizeInTiles.push([\n            Math.ceil(width / tileSizeForTierSizeCalculation),\n            Math.ceil(height / tileSizeForTierSizeCalculation),\n          ]);\n          width >>= 1;\n          height >>= 1;\n        }\n        break;\n      default:\n        throw new Error('Unknown `tierSizeCalculation` configured');\n    }\n\n    tierSizeInTiles.push([1, 1]);\n    tierSizeInTiles.reverse();\n\n    const resolutions = [tilePixelRatio];\n    const tileCountUpToTier = [0];\n    for (let i = 1, ii = tierSizeInTiles.length; i < ii; i++) {\n      resolutions.push(tilePixelRatio << i);\n      tileCountUpToTier.push(\n        tierSizeInTiles[i - 1][0] * tierSizeInTiles[i - 1][1] +\n          tileCountUpToTier[i - 1]\n      );\n    }\n    resolutions.reverse();\n\n    const tileGrid = new TileGrid({\n      tileSize: tileSize,\n      extent: options.extent || [0, -imageHeight, imageWidth, 0],\n      resolutions: resolutions,\n    });\n\n    let url = options.url;\n    if (url && !url.includes('{TileGroup}') && !url.includes('{tileIndex}')) {\n      url += '{TileGroup}/{z}-{x}-{y}.jpg';\n    }\n    const urls = expandUrl(url);\n\n    let tileWidth = tileSize * tilePixelRatio;\n\n    /**\n     * @param {string} template Template.\n     * @return {import(\"../Tile.js\").UrlFunction} Tile URL function.\n     */\n    function createFromTemplate(template) {\n      return (\n        /**\n         * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n         * @param {number} pixelRatio Pixel ratio.\n         * @param {import(\"../proj/Projection.js\").default} projection Projection.\n         * @return {string|undefined} Tile URL.\n         */\n        function (tileCoord, pixelRatio, projection) {\n          if (!tileCoord) {\n            return undefined;\n          }\n          const tileCoordZ = tileCoord[0];\n          const tileCoordX = tileCoord[1];\n          const tileCoordY = tileCoord[2];\n          const tileIndex =\n            tileCoordX + tileCoordY * tierSizeInTiles[tileCoordZ][0];\n          const tileGroup =\n            ((tileIndex + tileCountUpToTier[tileCoordZ]) / tileWidth) | 0;\n          const localContext = {\n            'z': tileCoordZ,\n            'x': tileCoordX,\n            'y': tileCoordY,\n            'tileIndex': tileIndex,\n            'TileGroup': 'TileGroup' + tileGroup,\n          };\n          return template.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n            return localContext[p];\n          });\n        }\n      );\n    }\n\n    const tileUrlFunction = createFromTileUrlFunctions(\n      urls.map(createFromTemplate)\n    );\n\n    const ZoomifyTileClass = CustomTile.bind(\n      null,\n      toSize(tileSize * tilePixelRatio)\n    );\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      projection: options.projection,\n      tilePixelRatio: tilePixelRatio,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileClass: ZoomifyTileClass,\n      tileGrid: tileGrid,\n      tileUrlFunction: tileUrlFunction,\n      transition: options.transition,\n    });\n\n    /**\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection;\n\n    // Server retina tile detection (non-standard):\n    // Try loading the center tile for the highest resolution. If it is not\n    // available, we are dealing with retina tiles, and need to adjust the\n    // tile url calculation.\n    const tileUrl = tileGrid.getTileCoordForCoordAndResolution(\n      getCenter(tileGrid.getExtent()),\n      resolutions[resolutions.length - 1]\n    );\n    const testTileUrl = tileUrlFunction(tileUrl, 1, null);\n    const image = new Image();\n    image.addEventListener('error', () => {\n      tileWidth = tileSize;\n      this.changed();\n    });\n    image.src = testTileUrl;\n  }\n}\n\nexport default Zoomify;\n","/**\r\n * @module ol/maplat/source/Maplat\r\n */\r\nimport TileGrid from 'ol/tilegrid/TileGrid.js';\r\nimport TileImage from 'ol/source/TileImage.js';\r\nimport {CustomTile} from 'ol/source/Zoomify.js';\r\nimport {DEFAULT_TILE_SIZE} from 'ol/tilegrid/common.js';\r\nimport {Size, toSize} from 'ol/size.js';\r\nimport { AttributionLike } from 'ol/source/Source';\r\nimport { ProjectionLike } from 'ol/proj';\r\nimport interpolate from '@turf/interpolate';\r\nimport { Extent } from 'ol/extent';\r\nimport { NearestDirectionFunction } from 'ol/array';\r\nimport { MaplatCompiledLegacy, MaplatSpecLegacy } from '../types/specLegacy';\r\n\r\ntype TierSizeCalculation = 'default' | 'truncated';\r\n\r\n/**\r\n * @typedef {'default' | 'truncated'} TierSizeCalculation\r\n */\r\n\r\n/*\r\n * @property {import(\"ol/source/Source\").AttributionLike} [attributions] Attributions.\r\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\r\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\r\n * you must provide a `crossOrigin` value  you want to access pixel data with the Canvas renderer.\r\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\r\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\r\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\r\n * @property {number} [tilePixelRatio] The pixel ratio used by the tile service. For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px by 512px images (for retina/hidpi devices) then `tilePixelRatio` should be set to `2`\r\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\r\n * Higher values can increase reprojection performance, but decrease precision.\r\n * @property {string} url URL template of the Maplat tile.\r\n * @property {import(\"ol/size\").Size} size Size.\r\n * @property {number} [transition] Duration of the opacity transition for rendering.\r\n * To disable the opacity transition, pass `transition: 0`.\r\n * @property {number} [tileSize=256] Tile size. Same tile size is used for all zoom levels.\r\n * @property {number|import(\"ol/array\").NearestDirectionFunction} [zDirection=0]\r\n * Choose whether to use tiles with a higher or lower zoom level when between integer\r\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\r\n * @property {MaplatCompiledLegacy} [tinCompiled] Compiled data of Maplat TIN (Triangle Irregular Network) setting.\r\n * @property {string} [mapID] Map ID of Maplat data.\r\n * @property {MaplatSpecLegacy} settings Setting of Tin.\r\n */\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"ol/source/Source.js\").AttributionLike} [attributions] Attributions.\r\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\r\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\r\n * you must provide a `crossOrigin` value  you want to access pixel data with the Canvas renderer.\r\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\r\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\r\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\r\n * @property {import(\"ol/proj.js\").ProjectionLike} [projection] Projection.\r\n * @property {number} [tilePixelRatio] The pixel ratio used by the tile service. For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px by 512px images (for retina/hidpi devices) then `tilePixelRatio` should be set to `2`\r\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\r\n * Higher values can increase reprojection performance, but decrease precision.\r\n * @property {string} url URL template or base URL of the Zoomify service.\r\n * A base URL is the fixed part\r\n * of the URL, excluding the tile group, z, x, and y folder structure, e.g.\r\n * `http://my.zoomify.info/IMAGE.TIF/`. A URL template must include\r\n * `{TileGroup}`, `{x}`, `{y}`, and `{z}` placeholders, e.g.\r\n * `http://my.zoomify.info/IMAGE.TIF/{TileGroup}/{z}-{x}-{y}.jpg`.\r\n * Internet Imaging Protocol (IIP) with JTL extension can be also used with\r\n * `{tileIndex}` and `{z}` placeholders, e.g.\r\n * `http://my.zoomify.info?FIF=IMAGE.TIF&JTL={z},{tileIndex}`.\r\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\r\n * used instead of defining each one separately in the `urls` option.\r\n * @property {TierSizeCalculation} [tierSizeCalculation] Tier size calculation method: `default` or `truncated`.\r\n * @property {import(\"ol/size.js\").Size} size Size.\r\n * @property {import(\"ol/extent.js\").Extent} [extent] Extent for the TileGrid that is created.\r\n * Default sets the TileGrid in the\r\n * fourth quadrant, meaning extent is `[0, -height, width, 0]`. To change the\r\n * extent to the first quadrant (the default for OpenLayers 2) set the extent\r\n * as `[0, 0, width, height]`.\r\n * @property {number} [transition] Duration of the opacity transition for rendering.\r\n * To disable the opacity transition, pass `transition: 0`.\r\n * @property {number} [tileSize=256] Tile size. Same tile size is used for all zoom levels.\r\n * @property {number|import(\"ol/array.js\").NearestDirectionFunction} [zDirection=0]\r\n * Choose whether to use tiles with a higher or lower zoom level when between integer\r\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\r\n * @property {MaplatCompiledLegacy} [tinCompiled] Compiled data of Maplat TIN (Triangle Irregular Network) setting.\r\n * @property {string} [mapID] Map ID of Maplat data.\r\n * @property {MaplatSpecLegacy} settings Setting of Tin.\r\n */\r\n\r\nexport interface Options extends Object {\r\n  attributions: AttributionLike;\r\n  cacheSize?: number;\r\n  crossOrigin?: null | string;\r\n  interpolate?: boolean;\r\n  projection?: ProjectionLike;\r\n  tilePixelRatio?: number;\r\n  reprojectionErrorThreshold?: number;\r\n  url?: string;\r\n  tierSizeCalculation?: TierSizeCalculation;\r\n  size?: Size;\r\n  extent?: Extent;\r\n  transition?: number;\r\n  tileSize?: number;\r\n  zDirection?: number | NearestDirectionFunction;\r\n  tinCompiled?: MaplatCompiledLegacy;\r\n  mapID?: string;\r\n  settings: MaplatSpecLegacy;\r\n  maxZoom?: number;\r\n};\r\n\r\n/**\r\n * @classdesc\r\n * Layer source for tile data in Zoomify format (both Zoomify and Internet\r\n * Imaging Protocol are supported).\r\n * @api\r\n */\r\nclass Maplat extends TileImage {\r\n  /**\r\n   * @param {!Options} options Maplat options.\r\n   */\r\n  constructor(options: Options) {\r\n    const op = options;\r\n    const size = op.size;\r\n\r\n    const tilePixelRatio = options.tilePixelRatio || 1;\r\n    const imageWidth = size![0];\r\n    const imageHeight = size![1];\r\n    const tierSizeInTiles: number[][] = [];\r\n    const tileSize = options.tileSize || DEFAULT_TILE_SIZE;\r\n    const tileSizeForTierSizeCalculation = tileSize * tilePixelRatio;\r\n\r\n    let width = imageWidth;\r\n    let height = imageHeight;\r\n    while (\r\n      width > tileSizeForTierSizeCalculation ||\r\n      height > tileSizeForTierSizeCalculation\r\n    ) {\r\n      tierSizeInTiles.push([\r\n        Math.ceil(width / tileSizeForTierSizeCalculation),\r\n        Math.ceil(height / tileSizeForTierSizeCalculation),\r\n      ]);\r\n      width >>= 1;\r\n      height >>= 1;\r\n    }\r\n\r\n    tierSizeInTiles.push([1, 1]);\r\n    tierSizeInTiles.reverse();\r\n\r\n    const resolutions = [tilePixelRatio];\r\n    const tileCountUpToTier = [0];\r\n    for (let i = 1, ii = tierSizeInTiles.length; i < ii; i++) {\r\n      resolutions.push(tilePixelRatio << i);\r\n      tileCountUpToTier.push(\r\n        tierSizeInTiles[i - 1][0] * tierSizeInTiles[i - 1][1] +\r\n          tileCountUpToTier[i - 1]\r\n      );\r\n    }\r\n    resolutions.reverse();\r\n\r\n    const tileGrid = new TileGrid({\r\n      tileSize,\r\n      extent: options.extent || [0, -imageHeight, imageWidth, 0],\r\n      resolutions,\r\n    });\r\n\r\n    const url = options.url!;\r\n    const tileUrlFunction = (tileCoord: number[]) =>\r\n      url\r\n        .replace('{z}', `${tileCoord[0]}`)\r\n        .replace('{x}', `${tileCoord[1]}`)\r\n        .replace('{y}', `${tileCoord[2]}`);\r\n\r\n    const ZoomifyTileClass = CustomTile.bind(\r\n      null,\r\n      toSize(tileSize * tilePixelRatio)\r\n    );\r\n\r\n    super({\r\n      attributions: options.attributions,\r\n      cacheSize: options.cacheSize,\r\n      crossOrigin: options.crossOrigin,\r\n      interpolate: options.interpolate,\r\n      projection: options.projection,\r\n      tilePixelRatio,\r\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\r\n      tileClass: ZoomifyTileClass,\r\n      tileGrid,\r\n      tileUrlFunction,\r\n      transition: options.transition,\r\n    });\r\n\r\n    /**\r\n     * @type {number|import(\"ol/array.js\").NearestDirectionFunction}\r\n     */\r\n    this.zDirection = options.zDirection!;\r\n  }\r\n}\r\n\r\nexport default Maplat;\r\n","export var PJD_3PARAM = 1;\nexport var PJD_7PARAM = 2;\nexport var PJD_GRIDSHIFT = 3;\nexport var PJD_WGS84 = 4; // WGS84 or equivalent\nexport var PJD_NODATUM = 5; // WGS84 or equivalent\nexport var SRS_WGS84_SEMIMAJOR = 6378137.0;  // only used in grid shift transforms\nexport var SRS_WGS84_SEMIMINOR = 6356752.314;  // only used in grid shift transforms\nexport var SRS_WGS84_ESQUARED = 0.0066943799901413165; // only used in grid shift transforms\nexport var SEC_TO_RAD = 4.84813681109535993589914102357e-6;\nexport var HALF_PI = Math.PI/2;\n// ellipoid pj_set_ell.c\nexport var SIXTH = 0.1666666666666666667;\n/* 1/6 */\nexport var RA4 = 0.04722222222222222222;\n/* 17/360 */\nexport var RA6 = 0.02215608465608465608;\nexport var EPSLN = 1.0e-10;\n// you'd think you could use Number.EPSILON above but that makes\n// Mollweide get into an infinate loop.\n\nexport var D2R = 0.01745329251994329577;\nexport var R2D = 57.29577951308232088;\nexport var FORTPI = Math.PI/4;\nexport var TWO_PI = Math.PI * 2;\n// SPI is slightly greater than Math.PI, so values that exceed the -180..180\n// degree range by a tiny amount don't get wrapped. This prevents points that\n// have drifted from their original location along the 180th meridian (due to\n// floating point error) from changing their sign.\nexport var SPI = 3.14159265359;\n","var exports = {};\nexport {exports as default};\n\nexports.greenwich = 0.0; //\"0dE\",\nexports.lisbon = -9.131906111111; //\"9d07'54.862\\\"W\",\nexports.paris = 2.337229166667; //\"2d20'14.025\\\"E\",\nexports.bogota = -74.080916666667; //\"74d04'51.3\\\"W\",\nexports.madrid = -3.687938888889; //\"3d41'16.58\\\"W\",\nexports.rome = 12.452333333333; //\"12d27'8.4\\\"E\",\nexports.bern = 7.439583333333; //\"7d26'22.5\\\"E\",\nexports.jakarta = 106.807719444444; //\"106d48'27.79\\\"E\",\nexports.ferro = -17.666666666667; //\"17d40'W\",\nexports.brussels = 4.367975; //\"4d22'4.71\\\"E\",\nexports.stockholm = 18.058277777778; //\"18d3'29.8\\\"E\",\nexports.athens = 23.7163375; //\"23d42'58.815\\\"E\",\nexports.oslo = 10.722916666667; //\"10d43'22.5\\\"E\"\n","export default {\n  ft: {to_meter: 0.3048},\n  'us-ft': {to_meter: 1200 / 3937}\n};\n","var ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nexport default function match(obj, key) {\n  if (obj[key]) {\n    return obj[key];\n  }\n  var keys = Object.keys(obj);\n  var lkey = key.toLowerCase().replace(ignoredChar, '');\n  var i = -1;\n  var testkey, processedKey;\n  while (++i < keys.length) {\n    testkey = keys[i];\n    processedKey = testkey.toLowerCase().replace(ignoredChar, '');\n    if (processedKey === lkey) {\n      return obj[testkey];\n    }\n  }\n}\n","import {D2R} from './constants/values';\nimport PrimeMeridian from './constants/PrimeMeridian';\nimport units from './constants/units';\nimport match from './match';\n\nexport default function(defData) {\n  var self = {};\n  var paramObj = defData.split('+').map(function(v) {\n    return v.trim();\n  }).filter(function(a) {\n    return a;\n  }).reduce(function(p, a) {\n    var split = a.split('=');\n    split.push(true);\n    p[split[0].toLowerCase()] = split[1];\n    return p;\n  }, {});\n  var paramName, paramVal, paramOutname;\n  var params = {\n    proj: 'projName',\n    datum: 'datumCode',\n    rf: function(v) {\n      self.rf = parseFloat(v);\n    },\n    lat_0: function(v) {\n      self.lat0 = v * D2R;\n    },\n    lat_1: function(v) {\n      self.lat1 = v * D2R;\n    },\n    lat_2: function(v) {\n      self.lat2 = v * D2R;\n    },\n    lat_ts: function(v) {\n      self.lat_ts = v * D2R;\n    },\n    lon_0: function(v) {\n      self.long0 = v * D2R;\n    },\n    lon_1: function(v) {\n      self.long1 = v * D2R;\n    },\n    lon_2: function(v) {\n      self.long2 = v * D2R;\n    },\n    alpha: function(v) {\n      self.alpha = parseFloat(v) * D2R;\n    },\n    gamma: function(v) {\n      self.rectified_grid_angle = parseFloat(v);\n    },\n    lonc: function(v) {\n      self.longc = v * D2R;\n    },\n    x_0: function(v) {\n      self.x0 = parseFloat(v);\n    },\n    y_0: function(v) {\n      self.y0 = parseFloat(v);\n    },\n    k_0: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    k: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    a: function(v) {\n      self.a = parseFloat(v);\n    },\n    b: function(v) {\n      self.b = parseFloat(v);\n    },\n    r_a: function() {\n      self.R_A = true;\n    },\n    zone: function(v) {\n      self.zone = parseInt(v, 10);\n    },\n    south: function() {\n      self.utmSouth = true;\n    },\n    towgs84: function(v) {\n      self.datum_params = v.split(\",\").map(function(a) {\n        return parseFloat(a);\n      });\n    },\n    to_meter: function(v) {\n      self.to_meter = parseFloat(v);\n    },\n    units: function(v) {\n      self.units = v;\n      var unit = match(units, v);\n      if (unit) {\n        self.to_meter = unit.to_meter;\n      }\n    },\n    from_greenwich: function(v) {\n      self.from_greenwich = v * D2R;\n    },\n    pm: function(v) {\n      var pm = match(PrimeMeridian, v);\n      self.from_greenwich = (pm ? pm : parseFloat(v)) * D2R;\n    },\n    nadgrids: function(v) {\n      if (v === '@null') {\n        self.datumCode = 'none';\n      }\n      else {\n        self.nadgrids = v;\n      }\n    },\n    axis: function(v) {\n      var legalAxis = \"ewnsud\";\n      if (v.length === 3 && legalAxis.indexOf(v.substr(0, 1)) !== -1 && legalAxis.indexOf(v.substr(1, 1)) !== -1 && legalAxis.indexOf(v.substr(2, 1)) !== -1) {\n        self.axis = v;\n      }\n    },\n    approx: function() {\n      self.approx = true;\n    }\n  };\n  for (paramName in paramObj) {\n    paramVal = paramObj[paramName];\n    if (paramName in params) {\n      paramOutname = params[paramName];\n      if (typeof paramOutname === 'function') {\n        paramOutname(paramVal);\n      }\n      else {\n        self[paramOutname] = paramVal;\n      }\n    }\n    else {\n      self[paramName] = paramVal;\n    }\n  }\n  if(typeof self.datumCode === 'string' && self.datumCode !== \"WGS84\"){\n    self.datumCode = self.datumCode.toLowerCase();\n  }\n  return self;\n}\n","export default parseString;\n\nvar NEUTRAL = 1;\nvar KEYWORD = 2;\nvar NUMBER = 3;\nvar QUOTED = 4;\nvar AFTERQUOTE = 5;\nvar ENDED = -1;\nvar whitespace = /\\s/;\nvar latin = /[A-Za-z]/;\nvar keyword = /[A-Za-z84_]/;\nvar endThings = /[,\\]]/;\nvar digets = /[\\d\\.E\\-\\+]/;\n// const ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nfunction Parser(text) {\n  if (typeof text !== 'string') {\n    throw new Error('not a string');\n  }\n  this.text = text.trim();\n  this.level = 0;\n  this.place = 0;\n  this.root = null;\n  this.stack = [];\n  this.currentObject = null;\n  this.state = NEUTRAL;\n}\nParser.prototype.readCharicter = function() {\n  var char = this.text[this.place++];\n  if (this.state !== QUOTED) {\n    while (whitespace.test(char)) {\n      if (this.place >= this.text.length) {\n        return;\n      }\n      char = this.text[this.place++];\n    }\n  }\n  switch (this.state) {\n    case NEUTRAL:\n      return this.neutral(char);\n    case KEYWORD:\n      return this.keyword(char)\n    case QUOTED:\n      return this.quoted(char);\n    case AFTERQUOTE:\n      return this.afterquote(char);\n    case NUMBER:\n      return this.number(char);\n    case ENDED:\n      return;\n  }\n};\nParser.prototype.afterquote = function(char) {\n  if (char === '\"') {\n    this.word += '\"';\n    this.state = QUOTED;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = this.word.trim();\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in afterquote yet, index ' + this.place);\n};\nParser.prototype.afterItem = function(char) {\n  if (char === ',') {\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n    }\n    this.word = null;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (char === ']') {\n    this.level--;\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n      this.word = null;\n    }\n    this.state = NEUTRAL;\n    this.currentObject = this.stack.pop();\n    if (!this.currentObject) {\n      this.state = ENDED;\n    }\n\n    return;\n  }\n};\nParser.prototype.number = function(char) {\n  if (digets.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = parseFloat(this.word);\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in number yet, index ' + this.place);\n};\nParser.prototype.quoted = function(char) {\n  if (char === '\"') {\n    this.state = AFTERQUOTE;\n    return;\n  }\n  this.word += char;\n  return;\n};\nParser.prototype.keyword = function(char) {\n  if (keyword.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (char === '[') {\n    var newObjects = [];\n    newObjects.push(this.word);\n    this.level++;\n    if (this.root === null) {\n      this.root = newObjects;\n    } else {\n      this.currentObject.push(newObjects);\n    }\n    this.stack.push(this.currentObject);\n    this.currentObject = newObjects;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in keyword yet, index ' + this.place);\n};\nParser.prototype.neutral = function(char) {\n  if (latin.test(char)) {\n    this.word = char;\n    this.state = KEYWORD;\n    return;\n  }\n  if (char === '\"') {\n    this.word = '';\n    this.state = QUOTED;\n    return;\n  }\n  if (digets.test(char)) {\n    this.word = char;\n    this.state = NUMBER;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in neutral yet, index ' + this.place);\n};\nParser.prototype.output = function() {\n  while (this.place < this.text.length) {\n    this.readCharicter();\n  }\n  if (this.state === ENDED) {\n    return this.root;\n  }\n  throw new Error('unable to parse string \"' +this.text + '\". State is ' + this.state);\n};\n\nfunction parseString(txt) {\n  var parser = new Parser(txt);\n  return parser.output();\n}\n","\n\nfunction mapit(obj, key, value) {\n  if (Array.isArray(key)) {\n    value.unshift(key);\n    key = null;\n  }\n  var thing = key ? {} : obj;\n\n  var out = value.reduce(function(newObj, item) {\n    sExpr(item, newObj);\n    return newObj\n  }, thing);\n  if (key) {\n    obj[key] = out;\n  }\n}\n\nexport function sExpr(v, obj) {\n  if (!Array.isArray(v)) {\n    obj[v] = true;\n    return;\n  }\n  var key = v.shift();\n  if (key === 'PARAMETER') {\n    key = v.shift();\n  }\n  if (v.length === 1) {\n    if (Array.isArray(v[0])) {\n      obj[key] = {};\n      sExpr(v[0], obj[key]);\n      return;\n    }\n    obj[key] = v[0];\n    return;\n  }\n  if (!v.length) {\n    obj[key] = true;\n    return;\n  }\n  if (key === 'TOWGS84') {\n    obj[key] = v;\n    return;\n  }\n  if (key === 'AXIS') {\n    if (!(key in obj)) {\n      obj[key] = [];\n    }\n    obj[key].push(v);\n    return;\n  }\n  if (!Array.isArray(key)) {\n    obj[key] = {};\n  }\n\n  var i;\n  switch (key) {\n    case 'UNIT':\n    case 'PRIMEM':\n    case 'VERT_DATUM':\n      obj[key] = {\n        name: v[0].toLowerCase(),\n        convert: v[1]\n      };\n      if (v.length === 3) {\n        sExpr(v[2], obj[key]);\n      }\n      return;\n    case 'SPHEROID':\n    case 'ELLIPSOID':\n      obj[key] = {\n        name: v[0],\n        a: v[1],\n        rf: v[2]\n      };\n      if (v.length === 4) {\n        sExpr(v[3], obj[key]);\n      }\n      return;\n    case 'PROJECTEDCRS':\n    case 'PROJCRS':\n    case 'GEOGCS':\n    case 'GEOCCS':\n    case 'PROJCS':\n    case 'LOCAL_CS':\n    case 'GEODCRS':\n    case 'GEODETICCRS':\n    case 'GEODETICDATUM':\n    case 'EDATUM':\n    case 'ENGINEERINGDATUM':\n    case 'VERT_CS':\n    case 'VERTCRS':\n    case 'VERTICALCRS':\n    case 'COMPD_CS':\n    case 'COMPOUNDCRS':\n    case 'ENGINEERINGCRS':\n    case 'ENGCRS':\n    case 'FITTED_CS':\n    case 'LOCAL_DATUM':\n    case 'DATUM':\n      v[0] = ['name', v[0]];\n      mapit(obj, key, v);\n      return;\n    default:\n      i = -1;\n      while (++i < v.length) {\n        if (!Array.isArray(v[i])) {\n          return sExpr(v, obj[key]);\n        }\n      }\n      return mapit(obj, key, v);\n  }\n}\n","var D2R = 0.01745329251994329577;\nimport parser from './parser';\nimport {sExpr} from './process';\n\n\n\nfunction rename(obj, params) {\n  var outName = params[0];\n  var inName = params[1];\n  if (!(outName in obj) && (inName in obj)) {\n    obj[outName] = obj[inName];\n    if (params.length === 3) {\n      obj[outName] = params[2](obj[outName]);\n    }\n  }\n}\n\nfunction d2r(input) {\n  return input * D2R;\n}\n\nfunction cleanWKT(wkt) {\n  if (wkt.type === 'GEOGCS') {\n    wkt.projName = 'longlat';\n  } else if (wkt.type === 'LOCAL_CS') {\n    wkt.projName = 'identity';\n    wkt.local = true;\n  } else {\n    if (typeof wkt.PROJECTION === 'object') {\n      wkt.projName = Object.keys(wkt.PROJECTION)[0];\n    } else {\n      wkt.projName = wkt.PROJECTION;\n    }\n  }\n  if (wkt.AXIS) {\n    var axisOrder = '';\n    for (var i = 0, ii = wkt.AXIS.length; i < ii; ++i) {\n      var axis = [wkt.AXIS[i][0].toLowerCase(), wkt.AXIS[i][1].toLowerCase()];\n      if (axis[0].indexOf('north') !== -1 || ((axis[0] === 'y' || axis[0] === 'lat') && axis[1] === 'north')) {\n        axisOrder += 'n';\n      } else if (axis[0].indexOf('south') !== -1 || ((axis[0] === 'y' || axis[0] === 'lat') && axis[1] === 'south')) {\n        axisOrder += 's';\n      } else if (axis[0].indexOf('east') !== -1 || ((axis[0] === 'x' || axis[0] === 'lon') && axis[1] === 'east')) {\n        axisOrder += 'e';\n      } else if (axis[0].indexOf('west') !== -1 || ((axis[0] === 'x' || axis[0] === 'lon') && axis[1] === 'west')) {\n        axisOrder += 'w';\n      }\n    }\n    if (axisOrder.length === 2) {\n      axisOrder += 'u';\n    }\n    if (axisOrder.length === 3) {\n      wkt.axis = axisOrder;\n    }\n  }\n  if (wkt.UNIT) {\n    wkt.units = wkt.UNIT.name.toLowerCase();\n    if (wkt.units === 'metre') {\n      wkt.units = 'meter';\n    }\n    if (wkt.UNIT.convert) {\n      if (wkt.type === 'GEOGCS') {\n        if (wkt.DATUM && wkt.DATUM.SPHEROID) {\n          wkt.to_meter = wkt.UNIT.convert*wkt.DATUM.SPHEROID.a;\n        }\n      } else {\n        wkt.to_meter = wkt.UNIT.convert;\n      }\n    }\n  }\n  var geogcs = wkt.GEOGCS;\n  if (wkt.type === 'GEOGCS') {\n    geogcs = wkt;\n  }\n  if (geogcs) {\n    //if(wkt.GEOGCS.PRIMEM&&wkt.GEOGCS.PRIMEM.convert){\n    //  wkt.from_greenwich=wkt.GEOGCS.PRIMEM.convert*D2R;\n    //}\n    if (geogcs.DATUM) {\n      wkt.datumCode = geogcs.DATUM.name.toLowerCase();\n    } else {\n      wkt.datumCode = geogcs.name.toLowerCase();\n    }\n    if (wkt.datumCode.slice(0, 2) === 'd_') {\n      wkt.datumCode = wkt.datumCode.slice(2);\n    }\n    if (wkt.datumCode === 'new_zealand_geodetic_datum_1949' || wkt.datumCode === 'new_zealand_1949') {\n      wkt.datumCode = 'nzgd49';\n    }\n    if (wkt.datumCode === 'wgs_1984' || wkt.datumCode === 'world_geodetic_system_1984') {\n      if (wkt.PROJECTION === 'Mercator_Auxiliary_Sphere') {\n        wkt.sphere = true;\n      }\n      wkt.datumCode = 'wgs84';\n    }\n    if (wkt.datumCode.slice(-6) === '_ferro') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 6);\n    }\n    if (wkt.datumCode.slice(-8) === '_jakarta') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 8);\n    }\n    if (~wkt.datumCode.indexOf('belge')) {\n      wkt.datumCode = 'rnb72';\n    }\n    if (geogcs.DATUM && geogcs.DATUM.SPHEROID) {\n      wkt.ellps = geogcs.DATUM.SPHEROID.name.replace('_19', '').replace(/[Cc]larke\\_18/, 'clrk');\n      if (wkt.ellps.toLowerCase().slice(0, 13) === 'international') {\n        wkt.ellps = 'intl';\n      }\n\n      wkt.a = geogcs.DATUM.SPHEROID.a;\n      wkt.rf = parseFloat(geogcs.DATUM.SPHEROID.rf, 10);\n    }\n\n    if (geogcs.DATUM && geogcs.DATUM.TOWGS84) {\n      wkt.datum_params = geogcs.DATUM.TOWGS84;\n    }\n    if (~wkt.datumCode.indexOf('osgb_1936')) {\n      wkt.datumCode = 'osgb36';\n    }\n    if (~wkt.datumCode.indexOf('osni_1952')) {\n      wkt.datumCode = 'osni52';\n    }\n    if (~wkt.datumCode.indexOf('tm65')\n      || ~wkt.datumCode.indexOf('geodetic_datum_of_1965')) {\n      wkt.datumCode = 'ire65';\n    }\n    if (wkt.datumCode === 'ch1903+') {\n      wkt.datumCode = 'ch1903';\n    }\n    if (~wkt.datumCode.indexOf('israel')) {\n      wkt.datumCode = 'isr93';\n    }\n  }\n  if (wkt.b && !isFinite(wkt.b)) {\n    wkt.b = wkt.a;\n  }\n\n  function toMeter(input) {\n    var ratio = wkt.to_meter || 1;\n    return input * ratio;\n  }\n  var renamer = function(a) {\n    return rename(wkt, a);\n  };\n  var list = [\n    ['standard_parallel_1', 'Standard_Parallel_1'],\n    ['standard_parallel_1', 'Latitude of 1st standard parallel'],\n    ['standard_parallel_2', 'Standard_Parallel_2'],\n    ['standard_parallel_2', 'Latitude of 2nd standard parallel'],\n    ['false_easting', 'False_Easting'],\n    ['false_easting', 'False easting'],\n    ['false-easting', 'Easting at false origin'],\n    ['false_northing', 'False_Northing'],\n    ['false_northing', 'False northing'],\n    ['false_northing', 'Northing at false origin'],\n    ['central_meridian', 'Central_Meridian'],\n    ['central_meridian', 'Longitude of natural origin'],\n    ['central_meridian', 'Longitude of false origin'],\n    ['latitude_of_origin', 'Latitude_Of_Origin'],\n    ['latitude_of_origin', 'Central_Parallel'],\n    ['latitude_of_origin', 'Latitude of natural origin'],\n    ['latitude_of_origin', 'Latitude of false origin'],\n    ['scale_factor', 'Scale_Factor'],\n    ['k0', 'scale_factor'],\n    ['latitude_of_center', 'Latitude_Of_Center'],\n    ['latitude_of_center', 'Latitude_of_center'],\n    ['lat0', 'latitude_of_center', d2r],\n    ['longitude_of_center', 'Longitude_Of_Center'],\n    ['longitude_of_center', 'Longitude_of_center'],\n    ['longc', 'longitude_of_center', d2r],\n    ['x0', 'false_easting', toMeter],\n    ['y0', 'false_northing', toMeter],\n    ['long0', 'central_meridian', d2r],\n    ['lat0', 'latitude_of_origin', d2r],\n    ['lat0', 'standard_parallel_1', d2r],\n    ['lat1', 'standard_parallel_1', d2r],\n    ['lat2', 'standard_parallel_2', d2r],\n    ['azimuth', 'Azimuth'],\n    ['alpha', 'azimuth', d2r],\n    ['srsCode', 'name']\n  ];\n  list.forEach(renamer);\n  if (!wkt.long0 && wkt.longc && (wkt.projName === 'Albers_Conic_Equal_Area' || wkt.projName === 'Lambert_Azimuthal_Equal_Area')) {\n    wkt.long0 = wkt.longc;\n  }\n  if (!wkt.lat_ts && wkt.lat1 && (wkt.projName === 'Stereographic_South_Pole' || wkt.projName === 'Polar Stereographic (variant B)')) {\n    wkt.lat0 = d2r(wkt.lat1 > 0 ? 90 : -90);\n    wkt.lat_ts = wkt.lat1;\n  } else if (!wkt.lat_ts && wkt.lat0 && wkt.projName === 'Polar_Stereographic') {\n    wkt.lat_ts = wkt.lat0;\n    wkt.lat0 = d2r(wkt.lat0 > 0 ? 90 : -90);\n  }\n}\nexport default function(wkt) {\n  var lisp = parser(wkt);\n  var type = lisp.shift();\n  var name = lisp.shift();\n  lisp.unshift(['name', name]);\n  lisp.unshift(['type', type]);\n  var obj = {};\n  sExpr(lisp, obj);\n  cleanWKT(obj);\n  return obj;\n}\n","import globals from './global';\nimport parseProj from './projString';\nimport wkt from 'wkt-parser';\n\nfunction defs(name) {\n  /*global console*/\n  var that = this;\n  if (arguments.length === 2) {\n    var def = arguments[1];\n    if (typeof def === 'string') {\n      if (def.charAt(0) === '+') {\n        defs[name] = parseProj(arguments[1]);\n      }\n      else {\n        defs[name] = wkt(arguments[1]);\n      }\n    } else {\n      defs[name] = def;\n    }\n  }\n  else if (arguments.length === 1) {\n    if (Array.isArray(name)) {\n      return name.map(function(v) {\n        if (Array.isArray(v)) {\n          defs.apply(that, v);\n        }\n        else {\n          defs(v);\n        }\n      });\n    }\n    else if (typeof name === 'string') {\n      if (name in defs) {\n        return defs[name];\n      }\n    }\n    else if ('EPSG' in name) {\n      defs['EPSG:' + name.EPSG] = name;\n    }\n    else if ('ESRI' in name) {\n      defs['ESRI:' + name.ESRI] = name;\n    }\n    else if ('IAU2000' in name) {\n      defs['IAU2000:' + name.IAU2000] = name;\n    }\n    else {\n      console.log(name);\n    }\n    return;\n  }\n\n\n}\nglobals(defs);\nexport default defs;\n","export default function(defs) {\n  defs('EPSG:4326', \"+title=WGS 84 (long/lat) +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees\");\n  defs('EPSG:4269', \"+title=NAD83 (long/lat) +proj=longlat +a=6378137.0 +b=6356752.31414036 +ellps=GRS80 +datum=NAD83 +units=degrees\");\n  defs('EPSG:3857', \"+title=WGS 84 / Pseudo-Mercator +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs\");\n\n  defs.WGS84 = defs['EPSG:4326'];\n  defs['EPSG:3785'] = defs['EPSG:3857']; // maintain backward compat, official code is 3857\n  defs.GOOGLE = defs['EPSG:3857'];\n  defs['EPSG:900913'] = defs['EPSG:3857'];\n  defs['EPSG:102113'] = defs['EPSG:3857'];\n}\n","import defs from './defs';\nimport wkt from 'wkt-parser';\nimport projStr from './projString';\nimport match from './match';\nfunction testObj(code){\n  return typeof code === 'string';\n}\nfunction testDef(code){\n  return code in defs;\n}\nvar codeWords = ['PROJECTEDCRS', 'PROJCRS', 'GEOGCS','GEOCCS','PROJCS','LOCAL_CS', 'GEODCRS', 'GEODETICCRS', 'GEODETICDATUM', 'ENGCRS', 'ENGINEERINGCRS'];\nfunction testWKT(code){\n  return codeWords.some(function (word) {\n    return code.indexOf(word) > -1;\n  });\n}\nvar codes = ['3857', '900913', '3785', '102113'];\nfunction checkMercator(item) {\n  var auth = match(item, 'authority');\n  if (!auth) {\n    return;\n  }\n  var code = match(auth, 'epsg');\n  return code && codes.indexOf(code) > -1;\n}\nfunction checkProjStr(item) {\n  var ext = match(item, 'extension');\n  if (!ext) {\n    return;\n  }\n  return match(ext, 'proj4');\n}\nfunction testProj(code){\n  return code[0] === '+';\n}\nfunction parse(code){\n  if (testObj(code)) {\n    //check to see if this is a WKT string\n    if (testDef(code)) {\n      return defs[code];\n    }\n    if (testWKT(code)) {\n      var out = wkt(code);\n      // test of spetial case, due to this being a very common and often malformed\n      if (checkMercator(out)) {\n        return defs['EPSG:3857'];\n      }\n      var maybeProjStr = checkProjStr(out);\n      if (maybeProjStr) {\n        return projStr(maybeProjStr);\n      }\n      return out;\n    }\n    if (testProj(code)) {\n      return projStr(code);\n    }\n  }else{\n    return code;\n  }\n}\n\nexport default parse;\n","export default function(destination, source) {\n  destination = destination || {};\n  var value, property;\n  if (!source) {\n    return destination;\n  }\n  for (property in source) {\n    value = source[property];\n    if (value !== undefined) {\n      destination[property] = value;\n    }\n  }\n  return destination;\n}\n","export default function(eccent, sinphi, cosphi) {\n  var con = eccent * sinphi;\n  return cosphi / (Math.sqrt(1 - con * con));\n}","export default function(x) {\n  return x<0 ? -1 : 1;\n}","\nimport {TWO_PI, SPI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) <= SPI) ? x : (x - (sign(x) * TWO_PI));\n}\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, phi, sinphi) {\n  var con = eccent * sinphi;\n  var com = 0.5 * eccent;\n  con = Math.pow(((1 - con) / (1 + con)), com);\n  return (Math.tan(0.5 * (HALF_PI - phi)) / con);\n}\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, ts) {\n  var eccnth = 0.5 * eccent;\n  var con, dphi;\n  var phi = HALF_PI - 2 * Math.atan(ts);\n  for (var i = 0; i <= 15; i++) {\n    con = eccent * Math.sin(phi);\n    dphi = HALF_PI - 2 * Math.atan(ts * (Math.pow(((1 - con) / (1 + con)), eccnth))) - phi;\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n  //console.log(\"phi2z has NoConvergence\");\n  return -9999;\n}\n","export function init() {\n  //no-op for longlat\n}\n\nfunction identity(pt) {\n  return pt;\n}\nexport {identity as forward};\nexport {identity as inverse};\nexport var names = [\"longlat\", \"identity\"];\nexport default {\n  init: init,\n  forward: identity,\n  inverse: identity,\n  names: names\n};\n","import merc from \"./projections/merc\";\nimport longlat from \"./projections/longlat\";\nvar projs = [merc, longlat];\nvar names = {};\nvar projStore = [];\n\nfunction add(proj, i) {\n  var len = projStore.length;\n  if (!proj.names) {\n    console.log(i);\n    return true;\n  }\n  projStore[len] = proj;\n  proj.names.forEach(function(n) {\n    names[n.toLowerCase()] = len;\n  });\n  return this;\n}\n\nexport {add};\n\nexport function get(name) {\n  if (!name) {\n    return false;\n  }\n  var n = name.toLowerCase();\n  if (typeof names[n] !== 'undefined' && projStore[names[n]]) {\n    return projStore[names[n]];\n  }\n}\n\nexport function start() {\n  projs.forEach(add);\n}\nexport default {\n  start: start,\n  add: add,\n  get: get\n};\n","import msfnz from '../common/msfnz';\n\nimport adjust_lon from '../common/adjust_lon';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport {FORTPI, R2D, EPSLN, HALF_PI} from '../constants/values';\nexport function init() {\n  var con = this.b / this.a;\n  this.es = 1 - con * con;\n  if(!('x0' in this)){\n    this.x0 = 0;\n  }\n  if(!('y0' in this)){\n    this.y0 = 0;\n  }\n  this.e = Math.sqrt(this.es);\n  if (this.lat_ts) {\n    if (this.sphere) {\n      this.k0 = Math.cos(this.lat_ts);\n    }\n    else {\n      this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n    }\n  }\n  else {\n    if (!this.k0) {\n      if (this.k) {\n        this.k0 = this.k;\n      }\n      else {\n        this.k0 = 1;\n      }\n    }\n  }\n}\n\n/* Mercator forward equations--mapping lat,long to x,y\n  --------------------------------------------------*/\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  // convert to radians\n  if (lat * R2D > 90 && lat * R2D < -90 && lon * R2D > 180 && lon * R2D < -180) {\n    return null;\n  }\n\n  var x, y;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    return null;\n  }\n  else {\n    if (this.sphere) {\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 + this.a * this.k0 * Math.log(Math.tan(FORTPI + 0.5 * lat));\n    }\n    else {\n      var sinphi = Math.sin(lat);\n      var ts = tsfnz(this.e, lat, sinphi);\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 - this.a * this.k0 * Math.log(ts);\n    }\n    p.x = x;\n    p.y = y;\n    return p;\n  }\n}\n\n/* Mercator inverse equations--mapping x,y to lat/long\n  --------------------------------------------------*/\nexport function inverse(p) {\n\n  var x = p.x - this.x0;\n  var y = p.y - this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lat = HALF_PI - 2 * Math.atan(Math.exp(-y / (this.a * this.k0)));\n  }\n  else {\n    var ts = Math.exp(-y / (this.a * this.k0));\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  lon = adjust_lon(this.long0 + x / (this.a * this.k0));\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mercator\", \"Popular Visualisation Pseudo Mercator\", \"Mercator_1SP\", \"Mercator_Auxiliary_Sphere\", \"merc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","var exports = {};\nexport {exports as default};\nexports.MERIT = {\n  a: 6378137.0,\n  rf: 298.257,\n  ellipseName: \"MERIT 1983\"\n};\n\nexports.SGS85 = {\n  a: 6378136.0,\n  rf: 298.257,\n  ellipseName: \"Soviet Geodetic System 85\"\n};\n\nexports.GRS80 = {\n  a: 6378137.0,\n  rf: 298.257222101,\n  ellipseName: \"GRS 1980(IUGG, 1980)\"\n};\n\nexports.IAU76 = {\n  a: 6378140.0,\n  rf: 298.257,\n  ellipseName: \"IAU 1976\"\n};\n\nexports.airy = {\n  a: 6377563.396,\n  b: 6356256.910,\n  ellipseName: \"Airy 1830\"\n};\n\nexports.APL4 = {\n  a: 6378137,\n  rf: 298.25,\n  ellipseName: \"Appl. Physics. 1965\"\n};\n\nexports.NWL9D = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"Naval Weapons Lab., 1965\"\n};\n\nexports.mod_airy = {\n  a: 6377340.189,\n  b: 6356034.446,\n  ellipseName: \"Modified Airy\"\n};\n\nexports.andrae = {\n  a: 6377104.43,\n  rf: 300.0,\n  ellipseName: \"Andrae 1876 (Den., Iclnd.)\"\n};\n\nexports.aust_SA = {\n  a: 6378160.0,\n  rf: 298.25,\n  ellipseName: \"Australian Natl & S. Amer. 1969\"\n};\n\nexports.GRS67 = {\n  a: 6378160.0,\n  rf: 298.2471674270,\n  ellipseName: \"GRS 67(IUGG 1967)\"\n};\n\nexports.bessel = {\n  a: 6377397.155,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841\"\n};\n\nexports.bess_nam = {\n  a: 6377483.865,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841 (Namibia)\"\n};\n\nexports.clrk66 = {\n  a: 6378206.4,\n  b: 6356583.8,\n  ellipseName: \"Clarke 1866\"\n};\n\nexports.clrk80 = {\n  a: 6378249.145,\n  rf: 293.4663,\n  ellipseName: \"Clarke 1880 mod.\"\n};\n\nexports.clrk80ign = {\n  a: 6378249.2,\n  b: 6356515,\n  rf: 293.4660213,\n  ellipseName: \"Clarke 1880 (IGN)\"\n};\n\nexports.clrk58 = {\n  a: 6378293.645208759,\n  rf: 294.2606763692654,\n  ellipseName: \"Clarke 1858\"\n};\n\nexports.CPM = {\n  a: 6375738.7,\n  rf: 334.29,\n  ellipseName: \"Comm. des Poids et Mesures 1799\"\n};\n\nexports.delmbr = {\n  a: 6376428.0,\n  rf: 311.5,\n  ellipseName: \"Delambre 1810 (Belgium)\"\n};\n\nexports.engelis = {\n  a: 6378136.05,\n  rf: 298.2566,\n  ellipseName: \"Engelis 1985\"\n};\n\nexports.evrst30 = {\n  a: 6377276.345,\n  rf: 300.8017,\n  ellipseName: \"Everest 1830\"\n};\n\nexports.evrst48 = {\n  a: 6377304.063,\n  rf: 300.8017,\n  ellipseName: \"Everest 1948\"\n};\n\nexports.evrst56 = {\n  a: 6377301.243,\n  rf: 300.8017,\n  ellipseName: \"Everest 1956\"\n};\n\nexports.evrst69 = {\n  a: 6377295.664,\n  rf: 300.8017,\n  ellipseName: \"Everest 1969\"\n};\n\nexports.evrstSS = {\n  a: 6377298.556,\n  rf: 300.8017,\n  ellipseName: \"Everest (Sabah & Sarawak)\"\n};\n\nexports.fschr60 = {\n  a: 6378166.0,\n  rf: 298.3,\n  ellipseName: \"Fischer (Mercury Datum) 1960\"\n};\n\nexports.fschr60m = {\n  a: 6378155.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1960\"\n};\n\nexports.fschr68 = {\n  a: 6378150.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1968\"\n};\n\nexports.helmert = {\n  a: 6378200.0,\n  rf: 298.3,\n  ellipseName: \"Helmert 1906\"\n};\n\nexports.hough = {\n  a: 6378270.0,\n  rf: 297.0,\n  ellipseName: \"Hough\"\n};\n\nexports.intl = {\n  a: 6378388.0,\n  rf: 297.0,\n  ellipseName: \"International 1909 (Hayford)\"\n};\n\nexports.kaula = {\n  a: 6378163.0,\n  rf: 298.24,\n  ellipseName: \"Kaula 1961\"\n};\n\nexports.lerch = {\n  a: 6378139.0,\n  rf: 298.257,\n  ellipseName: \"Lerch 1979\"\n};\n\nexports.mprts = {\n  a: 6397300.0,\n  rf: 191.0,\n  ellipseName: \"Maupertius 1738\"\n};\n\nexports.new_intl = {\n  a: 6378157.5,\n  b: 6356772.2,\n  ellipseName: \"New International 1967\"\n};\n\nexports.plessis = {\n  a: 6376523.0,\n  rf: 6355863.0,\n  ellipseName: \"Plessis 1817 (France)\"\n};\n\nexports.krass = {\n  a: 6378245.0,\n  rf: 298.3,\n  ellipseName: \"Krassovsky, 1942\"\n};\n\nexports.SEasia = {\n  a: 6378155.0,\n  b: 6356773.3205,\n  ellipseName: \"Southeast Asia\"\n};\n\nexports.walbeck = {\n  a: 6376896.0,\n  b: 6355834.8467,\n  ellipseName: \"Walbeck\"\n};\n\nexports.WGS60 = {\n  a: 6378165.0,\n  rf: 298.3,\n  ellipseName: \"WGS 60\"\n};\n\nexports.WGS66 = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"WGS 66\"\n};\n\nexports.WGS7 = {\n  a: 6378135.0,\n  rf: 298.26,\n  ellipseName: \"WGS 72\"\n};\n\nexport var WGS84 = exports.WGS84 = {\n  a: 6378137.0,\n  rf: 298.257223563,\n  ellipseName: \"WGS 84\"\n};\n\nexports.sphere = {\n  a: 6370997.0,\n  b: 6370997.0,\n  ellipseName: \"Normal Sphere (r=6370997)\"\n};\n","var exports = {};\nexport {exports as default};\nexports.wgs84 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"WGS84\",\n  datumName: \"WGS84\"\n};\n\nexports.ch1903 = {\n  towgs84: \"674.374,15.056,405.346\",\n  ellipse: \"bessel\",\n  datumName: \"swiss\"\n};\n\nexports.ggrs87 = {\n  towgs84: \"-199.87,74.79,246.62\",\n  ellipse: \"GRS80\",\n  datumName: \"Greek_Geodetic_Reference_System_1987\"\n};\n\nexports.nad83 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"GRS80\",\n  datumName: \"North_American_Datum_1983\"\n};\n\nexports.nad27 = {\n  nadgrids: \"@conus,@alaska,@ntv2_0.gsb,@ntv1_can.dat\",\n  ellipse: \"clrk66\",\n  datumName: \"North_American_Datum_1927\"\n};\n\nexports.potsdam = {\n  towgs84: \"598.1,73.7,418.2,0.202,0.045,-2.455,6.7\",\n  ellipse: \"bessel\",\n  datumName: \"Potsdam Rauenberg 1950 DHDN\"\n};\n\nexports.carthage = {\n  towgs84: \"-263.0,6.0,431.0\",\n  ellipse: \"clark80\",\n  datumName: \"Carthage 1934 Tunisia\"\n};\n\nexports.hermannskogel = {\n  towgs84: \"577.326,90.129,463.919,5.137,1.474,5.297,2.4232\",\n  ellipse: \"bessel\",\n  datumName: \"Hermannskogel\"\n};\n\nexports.osni52 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"airy\",\n  datumName: \"Irish National\"\n};\n\nexports.ire65 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"mod_airy\",\n  datumName: \"Ireland 1965\"\n};\n\nexports.rassadiran = {\n  towgs84: \"-133.63,-157.5,-158.62\",\n  ellipse: \"intl\",\n  datumName: \"Rassadiran\"\n};\n\nexports.nzgd49 = {\n  towgs84: \"59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993\",\n  ellipse: \"intl\",\n  datumName: \"New Zealand Geodetic Datum 1949\"\n};\n\nexports.osgb36 = {\n  towgs84: \"446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894\",\n  ellipse: \"airy\",\n  datumName: \"Airy 1830\"\n};\n\nexports.s_jtsk = {\n  towgs84: \"589,76,480\",\n  ellipse: 'bessel',\n  datumName: 'S-JTSK (Ferro)'\n};\n\nexports.beduaram = {\n  towgs84: '-106,-87,188',\n  ellipse: 'clrk80',\n  datumName: 'Beduaram'\n};\n\nexports.gunung_segara = {\n  towgs84: '-403,684,41',\n  ellipse: 'bessel',\n  datumName: 'Gunung Segara Jakarta'\n};\n\nexports.rnb72 = {\n  towgs84: \"106.869,-52.2978,103.724,-0.33657,0.456955,-1.84218,1\",\n  ellipse: \"intl\",\n  datumName: \"Reseau National Belge 1972\"\n};\n","import {PJD_3PARAM, PJD_7PARAM, PJD_GRIDSHIFT, PJD_WGS84, PJD_NODATUM, SEC_TO_RAD} from './constants/values';\n\nfunction datum(datumCode, datum_params, a, b, es, ep2, nadgrids) {\n  var out = {};\n\n  if (datumCode === undefined || datumCode === 'none') {\n    out.datum_type = PJD_NODATUM;\n  } else {\n    out.datum_type = PJD_WGS84;\n  }\n\n  if (datum_params) {\n    out.datum_params = datum_params.map(parseFloat);\n    if (out.datum_params[0] !== 0 || out.datum_params[1] !== 0 || out.datum_params[2] !== 0) {\n      out.datum_type = PJD_3PARAM;\n    }\n    if (out.datum_params.length > 3) {\n      if (out.datum_params[3] !== 0 || out.datum_params[4] !== 0 || out.datum_params[5] !== 0 || out.datum_params[6] !== 0) {\n        out.datum_type = PJD_7PARAM;\n        out.datum_params[3] *= SEC_TO_RAD;\n        out.datum_params[4] *= SEC_TO_RAD;\n        out.datum_params[5] *= SEC_TO_RAD;\n        out.datum_params[6] = (out.datum_params[6] / 1000000.0) + 1.0;\n      }\n    }\n  }\n\n  if (nadgrids) {\n    out.datum_type = PJD_GRIDSHIFT;\n    out.grids = nadgrids;\n  }\n  out.a = a; //datum object also uses these values\n  out.b = b;\n  out.es = es;\n  out.ep2 = ep2;\n  return out;\n}\n\nexport default datum;\n","/**\n * Resources for details of NTv2 file formats:\n * - https://web.archive.org/web/20140127204822if_/http://www.mgs.gov.on.ca:80/stdprodconsume/groups/content/@mgs/@iandit/documents/resourcelist/stel02_047447.pdf\n * - http://mimaka.com/help/gs/html/004_NTV2%20Data%20Format.htm\n */\n\nvar loadedNadgrids = {};\n\n/**\n * Load a binary NTv2 file (.gsb) to a key that can be used in a proj string like +nadgrids=<key>. Pass the NTv2 file\n * as an ArrayBuffer.\n */\nexport default function nadgrid(key, data) {\n  var view = new DataView(data);\n  var isLittleEndian = detectLittleEndian(view);\n  var header = readHeader(view, isLittleEndian);\n  if (header.nSubgrids > 1) {\n    console.log('Only single NTv2 subgrids are currently supported, subsequent sub grids are ignored');\n  }\n  var subgrids = readSubgrids(view, header, isLittleEndian);\n  var nadgrid = {header: header, subgrids: subgrids};\n  loadedNadgrids[key] = nadgrid;\n  return nadgrid;\n}\n\n/**\n * Given a proj4 value for nadgrids, return an array of loaded grids\n */\nexport function getNadgrids(nadgrids) {\n  // Format details: http://proj.maptools.org/gen_parms.html\n  if (nadgrids === undefined) { return null; }\n  var grids = nadgrids.split(',');\n  return grids.map(parseNadgridString);\n}\n\nfunction parseNadgridString(value) {\n  if (value.length === 0) {\n    return null;\n  }\n  var optional = value[0] === '@';\n  if (optional) {\n    value = value.slice(1);\n  }\n  if (value === 'null') {\n    return {name: 'null', mandatory: !optional, grid: null, isNull: true};\n  }\n  return {\n    name: value,\n    mandatory: !optional,\n    grid: loadedNadgrids[value] || null,\n    isNull: false\n  };\n}\n\nfunction secondsToRadians(seconds) {\n  return (seconds / 3600) * Math.PI / 180;\n}\n\nfunction detectLittleEndian(view) {\n  var nFields = view.getInt32(8, false);\n  if (nFields === 11) {\n    return false;\n  }\n  nFields = view.getInt32(8, true);\n  if (nFields !== 11) {\n    console.warn('Failed to detect nadgrid endian-ness, defaulting to little-endian');\n  }\n  return true;\n}\n\nfunction readHeader(view, isLittleEndian) {\n  return {\n    nFields: view.getInt32(8, isLittleEndian),\n    nSubgridFields: view.getInt32(24, isLittleEndian),\n    nSubgrids: view.getInt32(40, isLittleEndian),\n    shiftType: decodeString(view, 56, 56 + 8).trim(),\n    fromSemiMajorAxis: view.getFloat64(120, isLittleEndian),\n    fromSemiMinorAxis: view.getFloat64(136, isLittleEndian),\n    toSemiMajorAxis: view.getFloat64(152, isLittleEndian),\n    toSemiMinorAxis: view.getFloat64(168, isLittleEndian),\n  };\n}\n\nfunction decodeString(view, start, end) {\n  return String.fromCharCode.apply(null, new Uint8Array(view.buffer.slice(start, end)));\n}\n\nfunction readSubgrids(view, header, isLittleEndian) {\n  var gridOffset = 176;\n  var grids = [];\n  for (var i = 0; i < header.nSubgrids; i++) {\n    var subHeader = readGridHeader(view, gridOffset, isLittleEndian);\n    var nodes = readGridNodes(view, gridOffset, subHeader, isLittleEndian);\n    var lngColumnCount = Math.round(\n      1 + (subHeader.upperLongitude - subHeader.lowerLongitude) / subHeader.longitudeInterval);\n    var latColumnCount = Math.round(\n      1 + (subHeader.upperLatitude - subHeader.lowerLatitude) / subHeader.latitudeInterval);\n    // Proj4 operates on radians whereas the coordinates are in seconds in the grid\n    grids.push({\n      ll: [secondsToRadians(subHeader.lowerLongitude), secondsToRadians(subHeader.lowerLatitude)],\n      del: [secondsToRadians(subHeader.longitudeInterval), secondsToRadians(subHeader.latitudeInterval)],\n      lim: [lngColumnCount, latColumnCount],\n      count: subHeader.gridNodeCount,\n      cvs: mapNodes(nodes)\n    });\n  }\n  return grids;\n}\n\nfunction mapNodes(nodes) {\n  return nodes.map(function (r) {return [secondsToRadians(r.longitudeShift), secondsToRadians(r.latitudeShift)];});\n}\n\nfunction readGridHeader(view, offset, isLittleEndian) {\n  return {\n    name: decodeString(view, offset + 8, offset + 16).trim(),\n    parent: decodeString(view, offset + 24, offset + 24 + 8).trim(),\n    lowerLatitude: view.getFloat64(offset + 72, isLittleEndian),\n    upperLatitude: view.getFloat64(offset + 88, isLittleEndian),\n    lowerLongitude: view.getFloat64(offset + 104, isLittleEndian),\n    upperLongitude: view.getFloat64(offset + 120, isLittleEndian),\n    latitudeInterval: view.getFloat64(offset + 136, isLittleEndian),\n    longitudeInterval: view.getFloat64(offset + 152, isLittleEndian),\n    gridNodeCount: view.getInt32(offset + 168, isLittleEndian)\n  };\n}\n\nfunction readGridNodes(view, offset, gridHeader, isLittleEndian) {\n  var nodesOffset = offset + 176;\n  var gridRecordLength = 16;\n  var gridShiftRecords = [];\n  for (var i = 0; i < gridHeader.gridNodeCount; i++) {\n    var record = {\n      latitudeShift: view.getFloat32(nodesOffset + i * gridRecordLength, isLittleEndian),\n      longitudeShift: view.getFloat32(nodesOffset + i * gridRecordLength + 4, isLittleEndian),\n      latitudeAccuracy: view.getFloat32(nodesOffset + i * gridRecordLength + 8, isLittleEndian),\n      longitudeAccuracy: view.getFloat32(nodesOffset + i * gridRecordLength + 12, isLittleEndian),\n    };\n    gridShiftRecords.push(record);\n  }\n  return gridShiftRecords;\n}\n","import parseCode from './parseCode';\nimport extend from './extend';\nimport projections from './projections';\nimport {sphere as dc_sphere, eccentricity as dc_eccentricity} from './deriveConstants';\nimport Datum from './constants/Datum';\nimport datum from './datum';\nimport match from './match';\nimport {getNadgrids} from \"./nadgrid\";\n\nfunction Projection(srsCode,callback) {\n  if (!(this instanceof Projection)) {\n    return new Projection(srsCode);\n  }\n  callback = callback || function(error){\n    if(error){\n      throw error;\n    }\n  };\n  var json = parseCode(srsCode);\n  if(typeof json !== 'object'){\n    callback(srsCode);\n    return;\n  }\n  var ourProj = Projection.projections.get(json.projName);\n  if(!ourProj){\n    callback(srsCode);\n    return;\n  }\n  if (json.datumCode && json.datumCode !== 'none') {\n    var datumDef = match(Datum, json.datumCode);\n    if (datumDef) {\n      json.datum_params = json.datum_params || (datumDef.towgs84 ? datumDef.towgs84.split(',') : null);\n      json.ellps = datumDef.ellipse;\n      json.datumName = datumDef.datumName ? datumDef.datumName : json.datumCode;\n    }\n  }\n  json.k0 = json.k0 || 1.0;\n  json.axis = json.axis || 'enu';\n  json.ellps = json.ellps || 'wgs84';\n  json.lat1 = json.lat1 || json.lat0; // Lambert_Conformal_Conic_1SP, for example, needs this\n\n  var sphere_ = dc_sphere(json.a, json.b, json.rf, json.ellps, json.sphere);\n  var ecc = dc_eccentricity(sphere_.a, sphere_.b, sphere_.rf, json.R_A);\n  var nadgrids = getNadgrids(json.nadgrids);\n  var datumObj = json.datum || datum(json.datumCode, json.datum_params, sphere_.a, sphere_.b, ecc.es, ecc.ep2,\n    nadgrids);\n\n  extend(this, json); // transfer everything over from the projection because we don't know what we'll need\n  extend(this, ourProj); // transfer all the methods from the projection\n\n  // copy the 4 things over we calculated in deriveConstants.sphere\n  this.a = sphere_.a;\n  this.b = sphere_.b;\n  this.rf = sphere_.rf;\n  this.sphere = sphere_.sphere;\n\n  // copy the 3 things we calculated in deriveConstants.eccentricity\n  this.es = ecc.es;\n  this.e = ecc.e;\n  this.ep2 = ecc.ep2;\n\n  // add in the datum object\n  this.datum = datumObj;\n\n  // init the projection\n  this.init();\n\n  // legecy callback from back in the day when it went to spatialreference.org\n  callback(null, this);\n\n}\nProjection.projections = projections;\nProjection.projections.start();\nexport default Projection;\n","import {SIXTH, RA4, RA6, EPSLN} from './constants/values';\nimport {default as Ellipsoid, WGS84} from './constants/Ellipsoid';\nimport match from './match';\n\nexport function eccentricity(a, b, rf, R_A) {\n  var a2 = a * a; // used in geocentric\n  var b2 = b * b; // used in geocentric\n  var es = (a2 - b2) / a2; // e ^ 2\n  var e = 0;\n  if (R_A) {\n    a *= 1 - es * (SIXTH + es * (RA4 + es * RA6));\n    a2 = a * a;\n    es = 0;\n  } else {\n    e = Math.sqrt(es); // eccentricity\n  }\n  var ep2 = (a2 - b2) / b2; // used in geocentric\n  return {\n    es: es,\n    e: e,\n    ep2: ep2\n  };\n}\nexport function sphere(a, b, rf, ellps, sphere) {\n  if (!a) { // do we have an ellipsoid?\n    var ellipse = match(Ellipsoid, ellps);\n    if (!ellipse) {\n      ellipse = WGS84;\n    }\n    a = ellipse.a;\n    b = ellipse.b;\n    rf = ellipse.rf;\n  }\n\n  if (rf && !b) {\n    b = (1.0 - 1.0 / rf) * a;\n  }\n  if (rf === 0 || Math.abs(a - b) < EPSLN) {\n    sphere = true;\n    b = a;\n  }\n  return {\n    a: a,\n    b: b,\n    rf: rf,\n    sphere: sphere\n  };\n}\n","'use strict';\nimport {PJD_3PARAM, PJD_7PARAM, HALF_PI} from './constants/values';\nexport function compareDatums(source, dest) {\n  if (source.datum_type !== dest.datum_type) {\n    return false; // false, datums are not equal\n  } else if (source.a !== dest.a || Math.abs(source.es - dest.es) > 0.000000000050) {\n    // the tolerance for es is to ensure that GRS80 and WGS84\n    // are considered identical\n    return false;\n  } else if (source.datum_type === PJD_3PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2]);\n  } else if (source.datum_type === PJD_7PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2] && source.datum_params[3] === dest.datum_params[3] && source.datum_params[4] === dest.datum_params[4] && source.datum_params[5] === dest.datum_params[5] && source.datum_params[6] === dest.datum_params[6]);\n  } else {\n    return true; // datums are equal\n  }\n} // cs_compare_datums()\n\n/*\n * The function Convert_Geodetic_To_Geocentric converts geodetic coordinates\n * (latitude, longitude, and height) to geocentric coordinates (X, Y, Z),\n * according to the current ellipsoid parameters.\n *\n *    Latitude  : Geodetic latitude in radians                     (input)\n *    Longitude : Geodetic longitude in radians                    (input)\n *    Height    : Geodetic height, in meters                       (input)\n *    X         : Calculated Geocentric X coordinate, in meters    (output)\n *    Y         : Calculated Geocentric Y coordinate, in meters    (output)\n *    Z         : Calculated Geocentric Z coordinate, in meters    (output)\n *\n */\nexport function geodeticToGeocentric(p, es, a) {\n  var Longitude = p.x;\n  var Latitude = p.y;\n  var Height = p.z ? p.z : 0; //Z value not always supplied\n\n  var Rn; /*  Earth radius at location  */\n  var Sin_Lat; /*  Math.sin(Latitude)  */\n  var Sin2_Lat; /*  Square of Math.sin(Latitude)  */\n  var Cos_Lat; /*  Math.cos(Latitude)  */\n\n  /*\n   ** Don't blow up if Latitude is just a little out of the value\n   ** range as it may just be a rounding issue.  Also removed longitude\n   ** test, it should be wrapped by Math.cos() and Math.sin().  NFW for PROJ.4, Sep/2001.\n   */\n  if (Latitude < -HALF_PI && Latitude > -1.001 * HALF_PI) {\n    Latitude = -HALF_PI;\n  } else if (Latitude > HALF_PI && Latitude < 1.001 * HALF_PI) {\n    Latitude = HALF_PI;\n  } else if (Latitude < -HALF_PI) {\n    /* Latitude out of range */\n    //..reportError('geocent:lat out of range:' + Latitude);\n    return { x: -Infinity, y: -Infinity, z: p.z };\n  } else if (Latitude > HALF_PI) {\n    /* Latitude out of range */\n    return { x: Infinity, y: Infinity, z: p.z };\n  }\n\n  if (Longitude > Math.PI) {\n    Longitude -= (2 * Math.PI);\n  }\n  Sin_Lat = Math.sin(Latitude);\n  Cos_Lat = Math.cos(Latitude);\n  Sin2_Lat = Sin_Lat * Sin_Lat;\n  Rn = a / (Math.sqrt(1.0e0 - es * Sin2_Lat));\n  return {\n    x: (Rn + Height) * Cos_Lat * Math.cos(Longitude),\n    y: (Rn + Height) * Cos_Lat * Math.sin(Longitude),\n    z: ((Rn * (1 - es)) + Height) * Sin_Lat\n  };\n} // cs_geodetic_to_geocentric()\n\nexport function geocentricToGeodetic(p, es, a, b) {\n  /* local defintions and variables */\n  /* end-criterium of loop, accuracy of sin(Latitude) */\n  var genau = 1e-12;\n  var genau2 = (genau * genau);\n  var maxiter = 30;\n\n  var P; /* distance between semi-minor axis and location */\n  var RR; /* distance between center and location */\n  var CT; /* sin of geocentric latitude */\n  var ST; /* cos of geocentric latitude */\n  var RX;\n  var RK;\n  var RN; /* Earth radius at location */\n  var CPHI0; /* cos of start or old geodetic latitude in iterations */\n  var SPHI0; /* sin of start or old geodetic latitude in iterations */\n  var CPHI; /* cos of searched geodetic latitude */\n  var SPHI; /* sin of searched geodetic latitude */\n  var SDPHI; /* end-criterium: addition-theorem of sin(Latitude(iter)-Latitude(iter-1)) */\n  var iter; /* # of continous iteration, max. 30 is always enough (s.a.) */\n\n  var X = p.x;\n  var Y = p.y;\n  var Z = p.z ? p.z : 0.0; //Z value not always supplied\n  var Longitude;\n  var Latitude;\n  var Height;\n\n  P = Math.sqrt(X * X + Y * Y);\n  RR = Math.sqrt(X * X + Y * Y + Z * Z);\n\n  /*      special cases for latitude and longitude */\n  if (P / a < genau) {\n\n    /*  special case, if P=0. (X=0., Y=0.) */\n    Longitude = 0.0;\n\n    /*  if (X,Y,Z)=(0.,0.,0.) then Height becomes semi-minor axis\n     *  of ellipsoid (=center of mass), Latitude becomes PI/2 */\n    if (RR / a < genau) {\n      Latitude = HALF_PI;\n      Height = -b;\n      return {\n        x: p.x,\n        y: p.y,\n        z: p.z\n      };\n    }\n  } else {\n    /*  ellipsoidal (geodetic) longitude\n     *  interval: -PI < Longitude <= +PI */\n    Longitude = Math.atan2(Y, X);\n  }\n\n  /* --------------------------------------------------------------\n   * Following iterative algorithm was developped by\n   * \"Institut for Erdmessung\", University of Hannover, July 1988.\n   * Internet: www.ife.uni-hannover.de\n   * Iterative computation of CPHI,SPHI and Height.\n   * Iteration of CPHI and SPHI to 10**-12 radian resp.\n   * 2*10**-7 arcsec.\n   * --------------------------------------------------------------\n   */\n  CT = Z / RR;\n  ST = P / RR;\n  RX = 1.0 / Math.sqrt(1.0 - es * (2.0 - es) * ST * ST);\n  CPHI0 = ST * (1.0 - es) * RX;\n  SPHI0 = CT * RX;\n  iter = 0;\n\n  /* loop to find sin(Latitude) resp. Latitude\n   * until |sin(Latitude(iter)-Latitude(iter-1))| < genau */\n  do {\n    iter++;\n    RN = a / Math.sqrt(1.0 - es * SPHI0 * SPHI0);\n\n    /*  ellipsoidal (geodetic) height */\n    Height = P * CPHI0 + Z * SPHI0 - RN * (1.0 - es * SPHI0 * SPHI0);\n\n    RK = es * RN / (RN + Height);\n    RX = 1.0 / Math.sqrt(1.0 - RK * (2.0 - RK) * ST * ST);\n    CPHI = ST * (1.0 - RK) * RX;\n    SPHI = CT * RX;\n    SDPHI = SPHI * CPHI0 - CPHI * SPHI0;\n    CPHI0 = CPHI;\n    SPHI0 = SPHI;\n  }\n  while (SDPHI * SDPHI > genau2 && iter < maxiter);\n\n  /*      ellipsoidal (geodetic) latitude */\n  Latitude = Math.atan(SPHI / Math.abs(CPHI));\n  return {\n    x: Longitude,\n    y: Latitude,\n    z: Height\n  };\n} // cs_geocentric_to_geodetic()\n\n/****************************************************************/\n// pj_geocentic_to_wgs84( p )\n//  p = point to transform in geocentric coordinates (x,y,z)\n\n\n/** point object, nothing fancy, just allows values to be\n    passed back and forth by reference rather than by value.\n    Other point classes may be used as long as they have\n    x and y properties, which will get modified in the transform method.\n*/\nexport function geocentricToWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x + datum_params[0],\n      y: p.y + datum_params[1],\n      z: p.z + datum_params[2],\n    };\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: M_BF * (p.x - Rz_BF * p.y + Ry_BF * p.z) + Dx_BF,\n      y: M_BF * (Rz_BF * p.x + p.y - Rx_BF * p.z) + Dy_BF,\n      z: M_BF * (-Ry_BF * p.x + Rx_BF * p.y + p.z) + Dz_BF\n    };\n  }\n} // cs_geocentric_to_wgs84\n\n/****************************************************************/\n// pj_geocentic_from_wgs84()\n//  coordinate system definition,\n//  point to transform in geocentric coordinates (x,y,z)\nexport function geocentricFromWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x - datum_params[0],\n      y: p.y - datum_params[1],\n      z: p.z - datum_params[2],\n    };\n\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    var x_tmp = (p.x - Dx_BF) / M_BF;\n    var y_tmp = (p.y - Dy_BF) / M_BF;\n    var z_tmp = (p.z - Dz_BF) / M_BF;\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n\n    return {\n      x: x_tmp + Rz_BF * y_tmp - Ry_BF * z_tmp,\n      y: -Rz_BF * x_tmp + y_tmp + Rx_BF * z_tmp,\n      z: Ry_BF * x_tmp - Rx_BF * y_tmp + z_tmp\n    };\n  } //cs_geocentric_from_wgs84()\n}\n","import {\n  PJD_3PARAM,\n  PJD_7PARAM,\n  PJD_GRIDSHIFT,\n  PJD_NODATUM,\n  R2D,\n  SRS_WGS84_ESQUARED,\n  SRS_WGS84_SEMIMAJOR, SRS_WGS84_SEMIMINOR\n} from './constants/values';\n\nimport {geodeticToGeocentric, geocentricToGeodetic, geocentricToWgs84, geocentricFromWgs84, compareDatums} from './datumUtils';\nimport adjust_lon from \"./common/adjust_lon\";\nfunction checkParams(type) {\n  return (type === PJD_3PARAM || type === PJD_7PARAM);\n}\n\nexport default function(source, dest, point) {\n  // Short cut if the datums are identical.\n  if (compareDatums(source, dest)) {\n    return point; // in this case, zero is sucess,\n    // whereas cs_compare_datums returns 1 to indicate TRUE\n    // confusing, should fix this\n  }\n\n  // Explicitly skip datum transform by setting 'datum=none' as parameter for either source or dest\n  if (source.datum_type === PJD_NODATUM || dest.datum_type === PJD_NODATUM) {\n    return point;\n  }\n\n  // If this datum requires grid shifts, then apply it to geodetic coordinates.\n  var source_a = source.a;\n  var source_es = source.es;\n  if (source.datum_type === PJD_GRIDSHIFT) {\n    var gridShiftCode = applyGridShift(source, false, point);\n    if (gridShiftCode !== 0) {\n      return undefined;\n    }\n    source_a = SRS_WGS84_SEMIMAJOR;\n    source_es = SRS_WGS84_ESQUARED;\n  }\n\n  var dest_a = dest.a;\n  var dest_b = dest.b;\n  var dest_es = dest.es;\n  if (dest.datum_type === PJD_GRIDSHIFT) {\n    dest_a = SRS_WGS84_SEMIMAJOR;\n    dest_b = SRS_WGS84_SEMIMINOR;\n    dest_es = SRS_WGS84_ESQUARED;\n  }\n\n  // Do we need to go through geocentric coordinates?\n  if (source_es === dest_es && source_a === dest_a && !checkParams(source.datum_type) &&  !checkParams(dest.datum_type)) {\n    return point;\n  }\n\n  // Convert to geocentric coordinates.\n  point = geodeticToGeocentric(point, source_es, source_a);\n  // Convert between datums\n  if (checkParams(source.datum_type)) {\n    point = geocentricToWgs84(point, source.datum_type, source.datum_params);\n  }\n  if (checkParams(dest.datum_type)) {\n    point = geocentricFromWgs84(point, dest.datum_type, dest.datum_params);\n  }\n  point = geocentricToGeodetic(point, dest_es, dest_a, dest_b);\n\n  if (dest.datum_type === PJD_GRIDSHIFT) {\n    var destGridShiftResult = applyGridShift(dest, true, point);\n    if (destGridShiftResult !== 0) {\n      return undefined;\n    }\n  }\n\n  return point;\n}\n\nexport function applyGridShift(source, inverse, point) {\n  if (source.grids === null || source.grids.length === 0) {\n    console.log('Grid shift grids not found');\n    return -1;\n  }\n  var input = {x: -point.x, y: point.y};\n  var output = {x: Number.NaN, y: Number.NaN};\n  var onlyMandatoryGrids = false;\n  var attemptedGrids = [];\n  for (var i = 0; i < source.grids.length; i++) {\n    var grid = source.grids[i];\n    attemptedGrids.push(grid.name);\n    if (grid.isNull) {\n      output = input;\n      break;\n    }\n    onlyMandatoryGrids = grid.mandatory;\n    if (grid.grid === null) {\n      if (grid.mandatory) {\n        console.log(\"Unable to find mandatory grid '\" + grid.name + \"'\");\n        return -1;\n      }\n      continue;\n    }\n    var subgrid = grid.grid.subgrids[0];\n    // skip tables that don't match our point at all\n    var epsilon = (Math.abs(subgrid.del[1]) + Math.abs(subgrid.del[0])) / 10000.0;\n    var minX = subgrid.ll[0] - epsilon;\n    var minY = subgrid.ll[1] - epsilon;\n    var maxX = subgrid.ll[0] + (subgrid.lim[0] - 1) * subgrid.del[0] + epsilon;\n    var maxY = subgrid.ll[1] + (subgrid.lim[1] - 1) * subgrid.del[1] + epsilon;\n    if (minY > input.y || minX > input.x || maxY < input.y || maxX < input.x ) {\n      continue;\n    }\n    output = applySubgridShift(input, inverse, subgrid);\n    if (!isNaN(output.x)) {\n      break;\n    }\n  }\n  if (isNaN(output.x)) {\n    console.log(\"Failed to find a grid shift table for location '\"+\n      -input.x * R2D + \" \" + input.y * R2D + \" tried: '\" + attemptedGrids + \"'\");\n    return -1;\n  }\n  point.x = -output.x;\n  point.y = output.y;\n  return 0;\n}\n\nfunction applySubgridShift(pin, inverse, ct) {\n  var val = {x: Number.NaN, y: Number.NaN};\n  if (isNaN(pin.x)) { return val; }\n  var tb = {x: pin.x, y: pin.y};\n  tb.x -= ct.ll[0];\n  tb.y -= ct.ll[1];\n  tb.x = adjust_lon(tb.x - Math.PI) + Math.PI;\n  var t = nadInterpolate(tb, ct);\n  if (inverse) {\n    if (isNaN(t.x)) {\n      return val;\n    }\n    t.x = tb.x - t.x;\n    t.y = tb.y - t.y;\n    var i = 9, tol = 1e-12;\n    var dif, del;\n    do {\n      del = nadInterpolate(t, ct);\n      if (isNaN(del.x)) {\n        console.log(\"Inverse grid shift iteration failed, presumably at grid edge.  Using first approximation.\");\n        break;\n      }\n      dif = {x: tb.x - (del.x + t.x), y: tb.y - (del.y + t.y)};\n      t.x += dif.x;\n      t.y += dif.y;\n    } while (i-- && Math.abs(dif.x) > tol && Math.abs(dif.y) > tol);\n    if (i < 0) {\n      console.log(\"Inverse grid shift iterator failed to converge.\");\n      return val;\n    }\n    val.x = adjust_lon(t.x + ct.ll[0]);\n    val.y = t.y + ct.ll[1];\n  } else {\n    if (!isNaN(t.x)) {\n      val.x = pin.x + t.x;\n      val.y = pin.y + t.y;\n    }\n  }\n  return val;\n}\n\nfunction nadInterpolate(pin, ct) {\n  var t = {x: pin.x / ct.del[0], y: pin.y / ct.del[1]};\n  var indx = {x: Math.floor(t.x), y: Math.floor(t.y)};\n  var frct = {x: t.x - 1.0 * indx.x, y: t.y - 1.0 * indx.y};\n  var val= {x: Number.NaN, y: Number.NaN};\n  var inx;\n  if (indx.x < 0 || indx.x >= ct.lim[0]) {\n    return val;\n  }\n  if (indx.y < 0 || indx.y >= ct.lim[1]) {\n    return val;\n  }\n  inx = (indx.y * ct.lim[0]) + indx.x;\n  var f00 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  inx++;\n  var f10= {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  inx += ct.lim[0];\n  var f11 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  inx--;\n  var f01 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  var m11 = frct.x * frct.y, m10 = frct.x * (1.0 - frct.y),\n    m00 = (1.0 - frct.x) * (1.0 - frct.y), m01 = (1.0 - frct.x) * frct.y;\n  val.x = (m00 * f00.x + m10 * f10.x + m01 * f01.x + m11 * f11.x);\n  val.y = (m00 * f00.y + m10 * f10.y + m01 * f01.y + m11 * f11.y);\n  return val;\n}\n","export default function(crs, denorm, point) {\n  var xin = point.x,\n    yin = point.y,\n    zin = point.z || 0.0;\n  var v, t, i;\n  var out = {};\n  for (i = 0; i < 3; i++) {\n    if (denorm && i === 2 && point.z === undefined) {\n      continue;\n    }\n    if (i === 0) {\n      v = xin;\n      if (\"ew\".indexOf(crs.axis[i]) !== -1) {\n        t = 'x';\n      } else {\n        t = 'y';\n      }\n\n    }\n    else if (i === 1) {\n      v = yin;\n      if (\"ns\".indexOf(crs.axis[i]) !== -1) {\n        t = 'y';\n      } else {\n        t = 'x';\n      }\n    }\n    else {\n      v = zin;\n      t = 'z';\n    }\n    switch (crs.axis[i]) {\n    case 'e':\n      out[t] = v;\n      break;\n    case 'w':\n      out[t] = -v;\n      break;\n    case 'n':\n      out[t] = v;\n      break;\n    case 's':\n      out[t] = -v;\n      break;\n    case 'u':\n      if (point[t] !== undefined) {\n        out.z = v;\n      }\n      break;\n    case 'd':\n      if (point[t] !== undefined) {\n        out.z = -v;\n      }\n      break;\n    default:\n      //console.log(\"ERROR: unknow axis (\"+crs.axis[i]+\") - check definition of \"+crs.projName);\n      return null;\n    }\n  }\n  return out;\n}\n","export default function (array){\n  var out = {\n    x: array[0],\n    y: array[1]\n  };\n  if (array.length>2) {\n    out.z = array[2];\n  }\n  if (array.length>3) {\n    out.m = array[3];\n  }\n  return out;\n}","export default function (point) {\n  checkCoord(point.x);\n  checkCoord(point.y);\n}\nfunction checkCoord(num) {\n  if (typeof Number.isFinite === 'function') {\n    if (Number.isFinite(num)) {\n      return;\n    }\n    throw new TypeError('coordinates must be finite numbers');\n  }\n  if (typeof num !== 'number' || num !== num || !isFinite(num)) {\n    throw new TypeError('coordinates must be finite numbers');\n  }\n}\n","import {D2R, R2D, PJD_3PARAM, PJD_7PARAM, PJD_GRIDSHIFT} from './constants/values';\nimport datum_transform from './datum_transform';\nimport adjust_axis from './adjust_axis';\nimport proj from './Proj';\nimport toPoint from './common/toPoint';\nimport checkSanity from './checkSanity';\n\nfunction checkNotWGS(source, dest) {\n  return (\n    (source.datum.datum_type === PJD_3PARAM || source.datum.datum_type === PJD_7PARAM || source.datum.datum_type === PJD_GRIDSHIFT) && dest.datumCode !== 'WGS84') ||\n    ((dest.datum.datum_type === PJD_3PARAM || dest.datum.datum_type === PJD_7PARAM || dest.datum.datum_type === PJD_GRIDSHIFT) && source.datumCode !== 'WGS84');\n}\n\nexport default function transform(source, dest, point, enforceAxis) {\n  var wgs84;\n  if (Array.isArray(point)) {\n    point = toPoint(point);\n  } else {\n    // Clone the point object so inputs don't get modified\n    point = {\n      x: point.x,\n      y: point.y,\n      z: point.z,\n      m: point.m\n    };\n  }\n  var hasZ = point.z !== undefined;\n  checkSanity(point);\n  // Workaround for datum shifts towgs84, if either source or destination projection is not wgs84\n  if (source.datum && dest.datum && checkNotWGS(source, dest)) {\n    wgs84 = new proj('WGS84');\n    point = transform(source, wgs84, point, enforceAxis);\n    source = wgs84;\n  }\n  // DGR, 2010/11/12\n  if (enforceAxis && source.axis !== 'enu') {\n    point = adjust_axis(source, false, point);\n  }\n  // Transform source points to long/lat, if they aren't already.\n  if (source.projName === 'longlat') {\n    point = {\n      x: point.x * D2R,\n      y: point.y * D2R,\n      z: point.z || 0\n    };\n  } else {\n    if (source.to_meter) {\n      point = {\n        x: point.x * source.to_meter,\n        y: point.y * source.to_meter,\n        z: point.z || 0\n      };\n    }\n    point = source.inverse(point); // Convert Cartesian to longlat\n    if (!point) {\n      return;\n    }\n  }\n  // Adjust for the prime meridian if necessary\n  if (source.from_greenwich) {\n    point.x += source.from_greenwich;\n  }\n\n  // Convert datums if needed, and if possible.\n  point = datum_transform(source.datum, dest.datum, point);\n  if (!point) {\n    return;\n  }\n\n  // Adjust for the prime meridian if necessary\n  if (dest.from_greenwich) {\n    point = {\n      x: point.x - dest.from_greenwich,\n      y: point.y,\n      z: point.z || 0\n    };\n  }\n\n  if (dest.projName === 'longlat') {\n    // convert radians to decimal degrees\n    point = {\n      x: point.x * R2D,\n      y: point.y * R2D,\n      z: point.z || 0\n    };\n  } else { // else project\n    point = dest.forward(point);\n    if (dest.to_meter) {\n      point = {\n        x: point.x / dest.to_meter,\n        y: point.y / dest.to_meter,\n        z: point.z || 0\n      };\n    }\n  }\n\n  // DGR, 2010/11/12\n  if (enforceAxis && dest.axis !== 'enu') {\n    return adjust_axis(dest, true, point);\n  }\n\n  if (!hasZ) {\n    delete point.z;\n  }\n  return point;\n}\n","import proj from './Proj';\nimport transform from './transform';\nvar wgs84 = proj('WGS84');\n\nfunction transformer(from, to, coords, enforceAxis) {\n  var transformedArray, out, keys;\n  if (Array.isArray(coords)) {\n    transformedArray = transform(from, to, coords, enforceAxis) || {x: NaN, y: NaN};\n    if (coords.length > 2) {\n      if ((typeof from.name !== 'undefined' && from.name === 'geocent') || (typeof to.name !== 'undefined' && to.name === 'geocent')) {\n        if (typeof transformedArray.z === 'number') {\n          return [transformedArray.x, transformedArray.y, transformedArray.z].concat(coords.splice(3));\n        } else {\n          return [transformedArray.x, transformedArray.y, coords[2]].concat(coords.splice(3));\n        }\n      } else {\n        return [transformedArray.x, transformedArray.y].concat(coords.splice(2));\n      }\n    } else {\n      return [transformedArray.x, transformedArray.y];\n    }\n  } else {\n    out = transform(from, to, coords, enforceAxis);\n    keys = Object.keys(coords);\n    if (keys.length === 2) {\n      return out;\n    }\n    keys.forEach(function (key) {\n      if ((typeof from.name !== 'undefined' && from.name === 'geocent') || (typeof to.name !== 'undefined' && to.name === 'geocent')) {\n        if (key === 'x' || key === 'y' || key === 'z') {\n          return;\n        }\n      } else {\n        if (key === 'x' || key === 'y') {\n          return;\n        }\n      }\n      out[key] = coords[key];\n    });\n    return out;\n  }\n}\n\nfunction checkProj(item) {\n  if (item instanceof proj) {\n    return item;\n  }\n  if (item.oProj) {\n    return item.oProj;\n  }\n  return proj(item);\n}\n\nfunction proj4(fromProj, toProj, coord) {\n  fromProj = checkProj(fromProj);\n  var single = false;\n  var obj;\n  if (typeof toProj === 'undefined') {\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  } else if (typeof toProj.x !== 'undefined' || Array.isArray(toProj)) {\n    coord = toProj;\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  toProj = checkProj(toProj);\n  if (coord) {\n    return transformer(fromProj, toProj, coord);\n  } else {\n    obj = {\n      forward: function (coords, enforceAxis) {\n        return transformer(fromProj, toProj, coords, enforceAxis);\n      },\n      inverse: function (coords, enforceAxis) {\n        return transformer(toProj, fromProj, coords, enforceAxis);\n      }\n    };\n    if (single) {\n      obj.oProj = toProj;\n    }\n    return obj;\n  }\n}\nexport default proj4;","\n\n\n/**\n * UTM zones are grouped, and assigned to one of a group of 6\n * sets.\n *\n * {int} @private\n */\nvar NUM_100K_SETS = 6;\n\n/**\n * The column letters (for easting) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_COLUMN_LETTERS = 'AJSAJS';\n\n/**\n * The row letters (for northing) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_ROW_LETTERS = 'AFAFAF';\n\nvar A = 65; // A\nvar I = 73; // I\nvar O = 79; // O\nvar V = 86; // V\nvar Z = 90; // Z\nexport default {\n  forward: forward,\n  inverse: inverse,\n  toPoint: toPoint\n};\n/**\n * Conversion of lat/lon to MGRS.\n *\n * @param {object} ll Object literal with lat and lon properties on a\n *     WGS84 ellipsoid.\n * @param {int} accuracy Accuracy in digits (5 for 1 m, 4 for 10 m, 3 for\n *      100 m, 2 for 1000 m or 1 for 10000 m). Optional, default is 5.\n * @return {string} the MGRS string for the given location and accuracy.\n */\nexport function forward(ll, accuracy) {\n  accuracy = accuracy || 5; // default accuracy 1m\n  return encode(LLtoUTM({\n    lat: ll[1],\n    lon: ll[0]\n  }), accuracy);\n};\n\n/**\n * Conversion of MGRS to lat/lon.\n *\n * @param {string} mgrs MGRS string.\n * @return {array} An array with left (longitude), bottom (latitude), right\n *     (longitude) and top (latitude) values in WGS84, representing the\n *     bounding box for the provided MGRS reference.\n */\nexport function inverse(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat, bbox.lon, bbox.lat];\n  }\n  return [bbox.left, bbox.bottom, bbox.right, bbox.top];\n};\n\nexport function toPoint(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat];\n  }\n  return [(bbox.left + bbox.right) / 2, (bbox.top + bbox.bottom) / 2];\n};\n/**\n * Conversion from degrees to radians.\n *\n * @private\n * @param {number} deg the angle in degrees.\n * @return {number} the angle in radians.\n */\nfunction degToRad(deg) {\n  return (deg * (Math.PI / 180.0));\n}\n\n/**\n * Conversion from radians to degrees.\n *\n * @private\n * @param {number} rad the angle in radians.\n * @return {number} the angle in degrees.\n */\nfunction radToDeg(rad) {\n  return (180.0 * (rad / Math.PI));\n}\n\n/**\n * Converts a set of Longitude and Latitude co-ordinates to UTM\n * using the WGS84 ellipsoid.\n *\n * @private\n * @param {object} ll Object literal with lat and lon properties\n *     representing the WGS84 coordinate to be converted.\n * @return {object} Object literal containing the UTM value with easting,\n *     northing, zoneNumber and zoneLetter properties, and an optional\n *     accuracy property in digits. Returns null if the conversion failed.\n */\nfunction LLtoUTM(ll) {\n  var Lat = ll.lat;\n  var Long = ll.lon;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var k0 = 0.9996;\n  var LongOrigin;\n  var eccPrimeSquared;\n  var N, T, C, A, M;\n  var LatRad = degToRad(Lat);\n  var LongRad = degToRad(Long);\n  var LongOriginRad;\n  var ZoneNumber;\n  // (int)\n  ZoneNumber = Math.floor((Long + 180) / 6) + 1;\n\n  //Make sure the longitude 180.00 is in Zone 60\n  if (Long === 180) {\n    ZoneNumber = 60;\n  }\n\n  // Special zone for Norway\n  if (Lat >= 56.0 && Lat < 64.0 && Long >= 3.0 && Long < 12.0) {\n    ZoneNumber = 32;\n  }\n\n  // Special zones for Svalbard\n  if (Lat >= 72.0 && Lat < 84.0) {\n    if (Long >= 0.0 && Long < 9.0) {\n      ZoneNumber = 31;\n    }\n    else if (Long >= 9.0 && Long < 21.0) {\n      ZoneNumber = 33;\n    }\n    else if (Long >= 21.0 && Long < 33.0) {\n      ZoneNumber = 35;\n    }\n    else if (Long >= 33.0 && Long < 42.0) {\n      ZoneNumber = 37;\n    }\n  }\n\n  LongOrigin = (ZoneNumber - 1) * 6 - 180 + 3; //+3 puts origin\n  // in middle of\n  // zone\n  LongOriginRad = degToRad(LongOrigin);\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  N = a / Math.sqrt(1 - eccSquared * Math.sin(LatRad) * Math.sin(LatRad));\n  T = Math.tan(LatRad) * Math.tan(LatRad);\n  C = eccPrimeSquared * Math.cos(LatRad) * Math.cos(LatRad);\n  A = Math.cos(LatRad) * (LongRad - LongOriginRad);\n\n  M = a * ((1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256) * LatRad - (3 * eccSquared / 8 + 3 * eccSquared * eccSquared / 32 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(2 * LatRad) + (15 * eccSquared * eccSquared / 256 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(4 * LatRad) - (35 * eccSquared * eccSquared * eccSquared / 3072) * Math.sin(6 * LatRad));\n\n  var UTMEasting = (k0 * N * (A + (1 - T + C) * A * A * A / 6.0 + (5 - 18 * T + T * T + 72 * C - 58 * eccPrimeSquared) * A * A * A * A * A / 120.0) + 500000.0);\n\n  var UTMNorthing = (k0 * (M + N * Math.tan(LatRad) * (A * A / 2 + (5 - T + 9 * C + 4 * C * C) * A * A * A * A / 24.0 + (61 - 58 * T + T * T + 600 * C - 330 * eccPrimeSquared) * A * A * A * A * A * A / 720.0)));\n  if (Lat < 0.0) {\n    UTMNorthing += 10000000.0; //10000000 meter offset for\n    // southern hemisphere\n  }\n\n  return {\n    northing: Math.round(UTMNorthing),\n    easting: Math.round(UTMEasting),\n    zoneNumber: ZoneNumber,\n    zoneLetter: getLetterDesignator(Lat)\n  };\n}\n\n/**\n * Converts UTM coords to lat/long, using the WGS84 ellipsoid. This is a convenience\n * class where the Zone can be specified as a single string eg.\"60N\" which\n * is then broken down into the ZoneNumber and ZoneLetter.\n *\n * @private\n * @param {object} utm An object literal with northing, easting, zoneNumber\n *     and zoneLetter properties. If an optional accuracy property is\n *     provided (in meters), a bounding box will be returned instead of\n *     latitude and longitude.\n * @return {object} An object literal containing either lat and lon values\n *     (if no accuracy was provided), or top, right, bottom and left values\n *     for the bounding box calculated according to the provided accuracy.\n *     Returns null if the conversion failed.\n */\nfunction UTMtoLL(utm) {\n\n  var UTMNorthing = utm.northing;\n  var UTMEasting = utm.easting;\n  var zoneLetter = utm.zoneLetter;\n  var zoneNumber = utm.zoneNumber;\n  // check the ZoneNummber is valid\n  if (zoneNumber < 0 || zoneNumber > 60) {\n    return null;\n  }\n\n  var k0 = 0.9996;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var eccPrimeSquared;\n  var e1 = (1 - Math.sqrt(1 - eccSquared)) / (1 + Math.sqrt(1 - eccSquared));\n  var N1, T1, C1, R1, D, M;\n  var LongOrigin;\n  var mu, phi1Rad;\n\n  // remove 500,000 meter offset for longitude\n  var x = UTMEasting - 500000.0;\n  var y = UTMNorthing;\n\n  // We must know somehow if we are in the Northern or Southern\n  // hemisphere, this is the only time we use the letter So even\n  // if the Zone letter isn't exactly correct it should indicate\n  // the hemisphere correctly\n  if (zoneLetter < 'N') {\n    y -= 10000000.0; // remove 10,000,000 meter offset used\n    // for southern hemisphere\n  }\n\n  // There are 60 zones with zone 1 being at West -180 to -174\n  LongOrigin = (zoneNumber - 1) * 6 - 180 + 3; // +3 puts origin\n  // in middle of\n  // zone\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  M = y / k0;\n  mu = M / (a * (1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256));\n\n  phi1Rad = mu + (3 * e1 / 2 - 27 * e1 * e1 * e1 / 32) * Math.sin(2 * mu) + (21 * e1 * e1 / 16 - 55 * e1 * e1 * e1 * e1 / 32) * Math.sin(4 * mu) + (151 * e1 * e1 * e1 / 96) * Math.sin(6 * mu);\n  // double phi1 = ProjMath.radToDeg(phi1Rad);\n\n  N1 = a / Math.sqrt(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad));\n  T1 = Math.tan(phi1Rad) * Math.tan(phi1Rad);\n  C1 = eccPrimeSquared * Math.cos(phi1Rad) * Math.cos(phi1Rad);\n  R1 = a * (1 - eccSquared) / Math.pow(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad), 1.5);\n  D = x / (N1 * k0);\n\n  var lat = phi1Rad - (N1 * Math.tan(phi1Rad) / R1) * (D * D / 2 - (5 + 3 * T1 + 10 * C1 - 4 * C1 * C1 - 9 * eccPrimeSquared) * D * D * D * D / 24 + (61 + 90 * T1 + 298 * C1 + 45 * T1 * T1 - 252 * eccPrimeSquared - 3 * C1 * C1) * D * D * D * D * D * D / 720);\n  lat = radToDeg(lat);\n\n  var lon = (D - (1 + 2 * T1 + C1) * D * D * D / 6 + (5 - 2 * C1 + 28 * T1 - 3 * C1 * C1 + 8 * eccPrimeSquared + 24 * T1 * T1) * D * D * D * D * D / 120) / Math.cos(phi1Rad);\n  lon = LongOrigin + radToDeg(lon);\n\n  var result;\n  if (utm.accuracy) {\n    var topRight = UTMtoLL({\n      northing: utm.northing + utm.accuracy,\n      easting: utm.easting + utm.accuracy,\n      zoneLetter: utm.zoneLetter,\n      zoneNumber: utm.zoneNumber\n    });\n    result = {\n      top: topRight.lat,\n      right: topRight.lon,\n      bottom: lat,\n      left: lon\n    };\n  }\n  else {\n    result = {\n      lat: lat,\n      lon: lon\n    };\n  }\n  return result;\n}\n\n/**\n * Calculates the MGRS letter designator for the given latitude.\n *\n * @private\n * @param {number} lat The latitude in WGS84 to get the letter designator\n *     for.\n * @return {char} The letter designator.\n */\nfunction getLetterDesignator(lat) {\n  //This is here as an error flag to show that the Latitude is\n  //outside MGRS limits\n  var LetterDesignator = 'Z';\n\n  if ((84 >= lat) && (lat >= 72)) {\n    LetterDesignator = 'X';\n  }\n  else if ((72 > lat) && (lat >= 64)) {\n    LetterDesignator = 'W';\n  }\n  else if ((64 > lat) && (lat >= 56)) {\n    LetterDesignator = 'V';\n  }\n  else if ((56 > lat) && (lat >= 48)) {\n    LetterDesignator = 'U';\n  }\n  else if ((48 > lat) && (lat >= 40)) {\n    LetterDesignator = 'T';\n  }\n  else if ((40 > lat) && (lat >= 32)) {\n    LetterDesignator = 'S';\n  }\n  else if ((32 > lat) && (lat >= 24)) {\n    LetterDesignator = 'R';\n  }\n  else if ((24 > lat) && (lat >= 16)) {\n    LetterDesignator = 'Q';\n  }\n  else if ((16 > lat) && (lat >= 8)) {\n    LetterDesignator = 'P';\n  }\n  else if ((8 > lat) && (lat >= 0)) {\n    LetterDesignator = 'N';\n  }\n  else if ((0 > lat) && (lat >= -8)) {\n    LetterDesignator = 'M';\n  }\n  else if ((-8 > lat) && (lat >= -16)) {\n    LetterDesignator = 'L';\n  }\n  else if ((-16 > lat) && (lat >= -24)) {\n    LetterDesignator = 'K';\n  }\n  else if ((-24 > lat) && (lat >= -32)) {\n    LetterDesignator = 'J';\n  }\n  else if ((-32 > lat) && (lat >= -40)) {\n    LetterDesignator = 'H';\n  }\n  else if ((-40 > lat) && (lat >= -48)) {\n    LetterDesignator = 'G';\n  }\n  else if ((-48 > lat) && (lat >= -56)) {\n    LetterDesignator = 'F';\n  }\n  else if ((-56 > lat) && (lat >= -64)) {\n    LetterDesignator = 'E';\n  }\n  else if ((-64 > lat) && (lat >= -72)) {\n    LetterDesignator = 'D';\n  }\n  else if ((-72 > lat) && (lat >= -80)) {\n    LetterDesignator = 'C';\n  }\n  return LetterDesignator;\n}\n\n/**\n * Encodes a UTM location as MGRS string.\n *\n * @private\n * @param {object} utm An object literal with easting, northing,\n *     zoneLetter, zoneNumber\n * @param {number} accuracy Accuracy in digits (1-5).\n * @return {string} MGRS string for the given UTM location.\n */\nfunction encode(utm, accuracy) {\n  // prepend with leading zeroes\n  var seasting = \"00000\" + utm.easting,\n    snorthing = \"00000\" + utm.northing;\n\n  return utm.zoneNumber + utm.zoneLetter + get100kID(utm.easting, utm.northing, utm.zoneNumber) + seasting.substr(seasting.length - 5, accuracy) + snorthing.substr(snorthing.length - 5, accuracy);\n}\n\n/**\n * Get the two letter 100k designator for a given UTM easting,\n * northing and zone number value.\n *\n * @private\n * @param {number} easting\n * @param {number} northing\n * @param {number} zoneNumber\n * @return the two letter 100k designator for the given UTM location.\n */\nfunction get100kID(easting, northing, zoneNumber) {\n  var setParm = get100kSetForZone(zoneNumber);\n  var setColumn = Math.floor(easting / 100000);\n  var setRow = Math.floor(northing / 100000) % 20;\n  return getLetter100kID(setColumn, setRow, setParm);\n}\n\n/**\n * Given a UTM zone number, figure out the MGRS 100K set it is in.\n *\n * @private\n * @param {number} i An UTM zone number.\n * @return {number} the 100k set the UTM zone is in.\n */\nfunction get100kSetForZone(i) {\n  var setParm = i % NUM_100K_SETS;\n  if (setParm === 0) {\n    setParm = NUM_100K_SETS;\n  }\n\n  return setParm;\n}\n\n/**\n * Get the two-letter MGRS 100k designator given information\n * translated from the UTM northing, easting and zone number.\n *\n * @private\n * @param {number} column the column index as it relates to the MGRS\n *        100k set spreadsheet, created from the UTM easting.\n *        Values are 1-8.\n * @param {number} row the row index as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM northing value. Values\n *        are from 0-19.\n * @param {number} parm the set block, as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM zone. Values are from\n *        1-60.\n * @return two letter MGRS 100k code.\n */\nfunction getLetter100kID(column, row, parm) {\n  // colOrigin and rowOrigin are the letters at the origin of the set\n  var index = parm - 1;\n  var colOrigin = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(index);\n  var rowOrigin = SET_ORIGIN_ROW_LETTERS.charCodeAt(index);\n\n  // colInt and rowInt are the letters to build to return\n  var colInt = colOrigin + column - 1;\n  var rowInt = rowOrigin + row;\n  var rollover = false;\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n    rollover = true;\n  }\n\n  if (colInt === I || (colOrigin < I && colInt > I) || ((colInt > I || colOrigin < I) && rollover)) {\n    colInt++;\n  }\n\n  if (colInt === O || (colOrigin < O && colInt > O) || ((colInt > O || colOrigin < O) && rollover)) {\n    colInt++;\n\n    if (colInt === I) {\n      colInt++;\n    }\n  }\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n    rollover = true;\n  }\n  else {\n    rollover = false;\n  }\n\n  if (((rowInt === I) || ((rowOrigin < I) && (rowInt > I))) || (((rowInt > I) || (rowOrigin < I)) && rollover)) {\n    rowInt++;\n  }\n\n  if (((rowInt === O) || ((rowOrigin < O) && (rowInt > O))) || (((rowInt > O) || (rowOrigin < O)) && rollover)) {\n    rowInt++;\n\n    if (rowInt === I) {\n      rowInt++;\n    }\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n  }\n\n  var twoLetter = String.fromCharCode(colInt) + String.fromCharCode(rowInt);\n  return twoLetter;\n}\n\n/**\n * Decode the UTM parameters from a MGRS string.\n *\n * @private\n * @param {string} mgrsString an UPPERCASE coordinate string is expected.\n * @return {object} An object literal with easting, northing, zoneLetter,\n *     zoneNumber and accuracy (in meters) properties.\n */\nfunction decode(mgrsString) {\n\n  if (mgrsString && mgrsString.length === 0) {\n    throw (\"MGRSPoint coverting from nothing\");\n  }\n\n  var length = mgrsString.length;\n\n  var hunK = null;\n  var sb = \"\";\n  var testChar;\n  var i = 0;\n\n  // get Zone number\n  while (!(/[A-Z]/).test(testChar = mgrsString.charAt(i))) {\n    if (i >= 2) {\n      throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n    }\n    sb += testChar;\n    i++;\n  }\n\n  var zoneNumber = parseInt(sb, 10);\n\n  if (i === 0 || i + 3 > length) {\n    // A good MGRS string has to be 4-5 digits long,\n    // ##AAA/#AAA at least.\n    throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n  }\n\n  var zoneLetter = mgrsString.charAt(i++);\n\n  // Should we check the zone letter here? Why not.\n  if (zoneLetter <= 'A' || zoneLetter === 'B' || zoneLetter === 'Y' || zoneLetter >= 'Z' || zoneLetter === 'I' || zoneLetter === 'O') {\n    throw (\"MGRSPoint zone letter \" + zoneLetter + \" not handled: \" + mgrsString);\n  }\n\n  hunK = mgrsString.substring(i, i += 2);\n\n  var set = get100kSetForZone(zoneNumber);\n\n  var east100k = getEastingFromChar(hunK.charAt(0), set);\n  var north100k = getNorthingFromChar(hunK.charAt(1), set);\n\n  // We have a bug where the northing may be 2000000 too low.\n  // How\n  // do we know when to roll over?\n\n  while (north100k < getMinNorthing(zoneLetter)) {\n    north100k += 2000000;\n  }\n\n  // calculate the char index for easting/northing separator\n  var remainder = length - i;\n\n  if (remainder % 2 !== 0) {\n    throw (\"MGRSPoint has to have an even number \\nof digits after the zone letter and two 100km letters - front \\nhalf for easting meters, second half for \\nnorthing meters\" + mgrsString);\n  }\n\n  var sep = remainder / 2;\n\n  var sepEasting = 0.0;\n  var sepNorthing = 0.0;\n  var accuracyBonus, sepEastingString, sepNorthingString, easting, northing;\n  if (sep > 0) {\n    accuracyBonus = 100000.0 / Math.pow(10, sep);\n    sepEastingString = mgrsString.substring(i, i + sep);\n    sepEasting = parseFloat(sepEastingString) * accuracyBonus;\n    sepNorthingString = mgrsString.substring(i + sep);\n    sepNorthing = parseFloat(sepNorthingString) * accuracyBonus;\n  }\n\n  easting = sepEasting + east100k;\n  northing = sepNorthing + north100k;\n\n  return {\n    easting: easting,\n    northing: northing,\n    zoneLetter: zoneLetter,\n    zoneNumber: zoneNumber,\n    accuracy: accuracyBonus\n  };\n}\n\n/**\n * Given the first letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the easting value that\n * should be added to the other, secondary easting value.\n *\n * @private\n * @param {char} e The first letter from a two-letter MGRS 100´k zone.\n * @param {number} set The MGRS table set for the zone number.\n * @return {number} The easting value for the given letter and set.\n */\nfunction getEastingFromChar(e, set) {\n  // colOrigin is the letter at the origin of the set for the\n  // column\n  var curCol = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(set - 1);\n  var eastingValue = 100000.0;\n  var rewindMarker = false;\n\n  while (curCol !== e.charCodeAt(0)) {\n    curCol++;\n    if (curCol === I) {\n      curCol++;\n    }\n    if (curCol === O) {\n      curCol++;\n    }\n    if (curCol > Z) {\n      if (rewindMarker) {\n        throw (\"Bad character: \" + e);\n      }\n      curCol = A;\n      rewindMarker = true;\n    }\n    eastingValue += 100000.0;\n  }\n\n  return eastingValue;\n}\n\n/**\n * Given the second letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the northing value that\n * should be added to the other, secondary northing value. You have to\n * remember that Northings are determined from the equator, and the vertical\n * cycle of letters mean a 2000000 additional northing meters. This happens\n * approx. every 18 degrees of latitude. This method does *NOT* count any\n * additional northings. You have to figure out how many 2000000 meters need\n * to be added for the zone letter of the MGRS coordinate.\n *\n * @private\n * @param {char} n Second letter of the MGRS 100k zone\n * @param {number} set The MGRS table set number, which is dependent on the\n *     UTM zone number.\n * @return {number} The northing value for the given letter and set.\n */\nfunction getNorthingFromChar(n, set) {\n\n  if (n > 'V') {\n    throw (\"MGRSPoint given invalid Northing \" + n);\n  }\n\n  // rowOrigin is the letter at the origin of the set for the\n  // column\n  var curRow = SET_ORIGIN_ROW_LETTERS.charCodeAt(set - 1);\n  var northingValue = 0.0;\n  var rewindMarker = false;\n\n  while (curRow !== n.charCodeAt(0)) {\n    curRow++;\n    if (curRow === I) {\n      curRow++;\n    }\n    if (curRow === O) {\n      curRow++;\n    }\n    // fixing a bug making whole application hang in this loop\n    // when 'n' is a wrong character\n    if (curRow > V) {\n      if (rewindMarker) { // making sure that this loop ends\n        throw (\"Bad character: \" + n);\n      }\n      curRow = A;\n      rewindMarker = true;\n    }\n    northingValue += 100000.0;\n  }\n\n  return northingValue;\n}\n\n/**\n * The function getMinNorthing returns the minimum northing value of a MGRS\n * zone.\n *\n * Ported from Geotrans' c Lattitude_Band_Value structure table.\n *\n * @private\n * @param {char} zoneLetter The MGRS zone to get the min northing for.\n * @return {number}\n */\nfunction getMinNorthing(zoneLetter) {\n  var northing;\n  switch (zoneLetter) {\n  case 'C':\n    northing = 1100000.0;\n    break;\n  case 'D':\n    northing = 2000000.0;\n    break;\n  case 'E':\n    northing = 2800000.0;\n    break;\n  case 'F':\n    northing = 3700000.0;\n    break;\n  case 'G':\n    northing = 4600000.0;\n    break;\n  case 'H':\n    northing = 5500000.0;\n    break;\n  case 'J':\n    northing = 6400000.0;\n    break;\n  case 'K':\n    northing = 7300000.0;\n    break;\n  case 'L':\n    northing = 8200000.0;\n    break;\n  case 'M':\n    northing = 9100000.0;\n    break;\n  case 'N':\n    northing = 0.0;\n    break;\n  case 'P':\n    northing = 800000.0;\n    break;\n  case 'Q':\n    northing = 1700000.0;\n    break;\n  case 'R':\n    northing = 2600000.0;\n    break;\n  case 'S':\n    northing = 3500000.0;\n    break;\n  case 'T':\n    northing = 4400000.0;\n    break;\n  case 'U':\n    northing = 5300000.0;\n    break;\n  case 'V':\n    northing = 6200000.0;\n    break;\n  case 'W':\n    northing = 7000000.0;\n    break;\n  case 'X':\n    northing = 7900000.0;\n    break;\n  default:\n    northing = -1.0;\n  }\n  if (northing >= 0.0) {\n    return northing;\n  }\n  else {\n    throw (\"Invalid zone letter: \" + zoneLetter);\n  }\n\n}\n","import {toPoint, forward} from 'mgrs';\n\nfunction Point(x, y, z) {\n  if (!(this instanceof Point)) {\n    return new Point(x, y, z);\n  }\n  if (Array.isArray(x)) {\n    this.x = x[0];\n    this.y = x[1];\n    this.z = x[2] || 0.0;\n  } else if(typeof x === 'object') {\n    this.x = x.x;\n    this.y = x.y;\n    this.z = x.z || 0.0;\n  } else if (typeof x === 'string' && typeof y === 'undefined') {\n    var coords = x.split(',');\n    this.x = parseFloat(coords[0], 10);\n    this.y = parseFloat(coords[1], 10);\n    this.z = parseFloat(coords[2], 10) || 0.0;\n  } else {\n    this.x = x;\n    this.y = y;\n    this.z = z || 0.0;\n  }\n  console.warn('proj4.Point will be removed in version 3, use proj4.toPoint');\n}\n\nPoint.fromMGRS = function(mgrsStr) {\n  return new Point(toPoint(mgrsStr));\n};\nPoint.prototype.toMGRS = function(accuracy) {\n  return forward([this.x, this.y], accuracy);\n};\nexport default Point;\n","var C00 = 1;\nvar C02 = 0.25;\nvar C04 = 0.046875;\nvar C06 = 0.01953125;\nvar C08 = 0.01068115234375;\nvar C22 = 0.75;\nvar C44 = 0.46875;\nvar C46 = 0.01302083333333333333;\nvar C48 = 0.00712076822916666666;\nvar C66 = 0.36458333333333333333;\nvar C68 = 0.00569661458333333333;\nvar C88 = 0.3076171875;\n\nexport default function(es) {\n  var en = [];\n  en[0] = C00 - es * (C02 + es * (C04 + es * (C06 + es * C08)));\n  en[1] = es * (C22 - es * (C04 + es * (C06 + es * C08)));\n  var t = es * es;\n  en[2] = t * (C44 - es * (C46 + es * C48));\n  t *= es;\n  en[3] = t * (C66 - es * C68);\n  en[4] = t * es * C88;\n  return en;\n}","export default function(phi, sphi, cphi, en) {\n  cphi *= sphi;\n  sphi *= sphi;\n  return (en[0] * phi - cphi * (en[1] + sphi * (en[2] + sphi * (en[3] + sphi * en[4]))));\n}","import pj_mlfn from \"./pj_mlfn\";\nimport {EPSLN} from '../constants/values';\n\nvar MAX_ITER = 20;\n\nexport default function(arg, es, en) {\n  var k = 1 / (1 - es);\n  var phi = arg;\n  for (var i = MAX_ITER; i; --i) { /* rarely goes over 2 iterations */\n    var s = Math.sin(phi);\n    var t = 1 - es * s * s;\n    //t = this.pj_mlfn(phi, s, Math.cos(phi), en) - arg;\n    //phi -= t * (t * Math.sqrt(t)) * k;\n    t = (pj_mlfn(phi, s, Math.cos(phi), en) - arg) * (t * Math.sqrt(t)) * k;\n    phi -= t;\n    if (Math.abs(t) < EPSLN) {\n      return phi;\n    }\n  }\n  //..reportError(\"cass:pj_inv_mlfn: Convergence error\");\n  return phi;\n}\n","// Heavily based on this tmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/tmerc.js\n\nimport pj_enfn from '../common/pj_enfn';\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport adjust_lon from '../common/adjust_lon';\n\nimport {EPSLN, HALF_PI} from '../constants/values';\nimport sign from '../common/sign';\n\nexport function init() {\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  if (this.es) {\n    this.en = pj_enfn(this.es);\n    this.ml0 = pj_mlfn(this.lat0, Math.sin(this.lat0), Math.cos(this.lat0), this.en);\n  }\n}\n\n/**\n    Transverse Mercator Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var con;\n  var x, y;\n  var sin_phi = Math.sin(lat);\n  var cos_phi = Math.cos(lat);\n\n  if (!this.es) {\n    var b = cos_phi * Math.sin(delta_lon);\n\n    if ((Math.abs(Math.abs(b) - 1)) < EPSLN) {\n      return (93);\n    }\n    else {\n      x = 0.5 * this.a * this.k0 * Math.log((1 + b) / (1 - b)) + this.x0;\n      y = cos_phi * Math.cos(delta_lon) / Math.sqrt(1 - Math.pow(b, 2));\n      b = Math.abs(y);\n\n      if (b >= 1) {\n        if ((b - 1) > EPSLN) {\n          return (93);\n        }\n        else {\n          y = 0;\n        }\n      }\n      else {\n        y = Math.acos(y);\n      }\n\n      if (lat < 0) {\n        y = -y;\n      }\n\n      y = this.a * this.k0 * (y - this.lat0) + this.y0;\n    }\n  }\n  else {\n    var al = cos_phi * delta_lon;\n    var als = Math.pow(al, 2);\n    var c = this.ep2 * Math.pow(cos_phi, 2);\n    var cs = Math.pow(c, 2);\n    var tq = Math.abs(cos_phi) > EPSLN ? Math.tan(lat) : 0;\n    var t = Math.pow(tq, 2);\n    var ts = Math.pow(t, 2);\n    con = 1 - this.es * Math.pow(sin_phi, 2);\n    al = al / Math.sqrt(con);\n    var ml = pj_mlfn(lat, sin_phi, cos_phi, this.en);\n\n    x = this.a * (this.k0 * al * (1 +\n      als / 6 * (1 - t + c +\n      als / 20 * (5 - 18 * t + ts + 14 * c - 58 * t * c +\n      als / 42 * (61 + 179 * ts - ts * t - 479 * t))))) +\n      this.x0;\n\n    y = this.a * (this.k0 * (ml - this.ml0 +\n      sin_phi * delta_lon * al / 2 * (1 +\n      als / 12 * (5 - t + 9 * c + 4 * cs +\n      als / 30 * (61 + ts - 58 * t + 270 * c - 330 * t * c +\n      als / 56 * (1385 + 543 * ts - ts * t - 3111 * t)))))) +\n      this.y0;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\n/**\n    Transverse Mercator Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var con, phi;\n  var lat, lon;\n  var x = (p.x - this.x0) * (1 / this.a);\n  var y = (p.y - this.y0) * (1 / this.a);\n\n  if (!this.es) {\n    var f = Math.exp(x / this.k0);\n    var g = 0.5 * (f - 1 / f);\n    var temp = this.lat0 + y / this.k0;\n    var h = Math.cos(temp);\n    con = Math.sqrt((1 - Math.pow(h, 2)) / (1 + Math.pow(g, 2)));\n    lat = Math.asin(con);\n\n    if (y < 0) {\n      lat = -lat;\n    }\n\n    if ((g === 0) && (h === 0)) {\n      lon = 0;\n    }\n    else {\n      lon = adjust_lon(Math.atan2(g, h) + this.long0);\n    }\n  }\n  else { // ellipsoidal form\n    con = this.ml0 + y / this.k0;\n    phi = pj_inv_mlfn(con, this.es, this.en);\n\n    if (Math.abs(phi) < HALF_PI) {\n      var sin_phi = Math.sin(phi);\n      var cos_phi = Math.cos(phi);\n      var tan_phi = Math.abs(cos_phi) > EPSLN ? Math.tan(phi) : 0;\n      var c = this.ep2 * Math.pow(cos_phi, 2);\n      var cs = Math.pow(c, 2);\n      var t = Math.pow(tan_phi, 2);\n      var ts = Math.pow(t, 2);\n      con = 1 - this.es * Math.pow(sin_phi, 2);\n      var d = x * Math.sqrt(con) / this.k0;\n      var ds = Math.pow(d, 2);\n      con = con * tan_phi;\n\n      lat = phi - (con * ds / (1 - this.es)) * 0.5 * (1 -\n        ds / 12 * (5 + 3 * t - 9 * c * t + c - 4 * cs -\n        ds / 30 * (61 + 90 * t - 252 * c * t + 45 * ts + 46 * c -\n        ds / 56 * (1385 + 3633 * t + 4095 * ts + 1574 * ts * t))));\n\n      lon = adjust_lon(this.long0 + (d * (1 -\n        ds / 6 * (1 + 2 * t + c -\n        ds / 20 * (5 + 28 * t + 24 * ts + 8 * c * t + 6 * c -\n        ds / 42 * (61 + 662 * t + 1320 * ts + 720 * ts * t)))) / cos_phi));\n    }\n    else {\n      lat = HALF_PI * sign(y);\n      lon = 0;\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Fast_Transverse_Mercator\", \"Fast Transverse Mercator\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(x) {\n  var r = Math.exp(x);\n  r = (r - 1 / r) / 2;\n  return r;\n}","export default function(x, y) {\n  x = Math.abs(x);\n  y = Math.abs(y);\n  var a = Math.max(x, y);\n  var b = Math.min(x, y) / (a ? a : 1);\n\n  return a * Math.sqrt(1 + Math.pow(b, 2));\n}\n","import hypot from './hypot';\nimport log1py from './log1py';\n\nexport default function(x) {\n  var y = Math.abs(x);\n  y = log1py(y * (1 + y / (hypot(1, y) + 1)));\n\n  return x < 0 ? -y : y;\n}\n","export default function(x) {\n  var y = 1 + x;\n  var z = y - 1;\n\n  return z === 0 ? x : x * Math.log(y) / z;\n}\n","export default function(pp, B) {\n  var cos_2B = 2 * Math.cos(2 * B);\n  var i = pp.length - 1;\n  var h1 = pp[i];\n  var h2 = 0;\n  var h;\n\n  while (--i >= 0) {\n    h = -h2 + cos_2B * h1 + pp[i];\n    h2 = h1;\n    h1 = h;\n  }\n\n  return (B + h * Math.sin(2 * B));\n}\n","import sinh from './sinh';\nimport cosh from './cosh';\n\nexport default function(pp, arg_r, arg_i) {\n  var sin_arg_r = Math.sin(arg_r);\n  var cos_arg_r = Math.cos(arg_r);\n  var sinh_arg_i = sinh(arg_i);\n  var cosh_arg_i = cosh(arg_i);\n  var r = 2 * cos_arg_r * cosh_arg_i;\n  var i = -2 * sin_arg_r * sinh_arg_i;\n  var j = pp.length - 1;\n  var hr = pp[j];\n  var hi1 = 0;\n  var hr1 = 0;\n  var hi = 0;\n  var hr2;\n  var hi2;\n\n  while (--j >= 0) {\n    hr2 = hr1;\n    hi2 = hi1;\n    hr1 = hr;\n    hi1 = hi;\n    hr = -hr2 + r * hr1 - i * hi1 + pp[j];\n    hi = -hi2 + i * hr1 + r * hi1;\n  }\n\n  r = sin_arg_r * cosh_arg_i;\n  i = cos_arg_r * sinh_arg_i;\n\n  return [r * hr - i * hi, r * hi + i * hr];\n}\n","export default function(x) {\n  var r = Math.exp(x);\n  r = (r + 1 / r) / 2;\n  return r;\n}","// Heavily based on this etmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/etmerc.js\n\nimport tmerc from '../projections/tmerc';\nimport sinh from '../common/sinh';\nimport hypot from '../common/hypot';\nimport asinhy from '../common/asinhy';\nimport gatg from '../common/gatg';\nimport clens from '../common/clens';\nimport clens_cmplx from '../common/clens_cmplx';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  if (!this.approx && (isNaN(this.es) || this.es <= 0)) {\n    throw new Error('Incorrect elliptical usage. Try using the +approx option in the proj string, or PROJECTION[\"Fast_Transverse_Mercator\"] in the WKT.');\n  }\n  if (this.approx) {\n    // When '+approx' is set, use tmerc instead\n    tmerc.init.apply(this);\n    this.forward = tmerc.forward;\n    this.inverse = tmerc.inverse;\n  }\n\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  this.cgb = [];\n  this.cbg = [];\n  this.utg = [];\n  this.gtu = [];\n\n  var f = this.es / (1 + Math.sqrt(1 - this.es));\n  var n = f / (2 - f);\n  var np = n;\n\n  this.cgb[0] = n * (2 + n * (-2 / 3 + n * (-2 + n * (116 / 45 + n * (26 / 45 + n * (-2854 / 675 ))))));\n  this.cbg[0] = n * (-2 + n * ( 2 / 3 + n * ( 4 / 3 + n * (-82 / 45 + n * (32 / 45 + n * (4642 / 4725))))));\n\n  np = np * n;\n  this.cgb[1] = np * (7 / 3 + n * (-8 / 5 + n * (-227 / 45 + n * (2704 / 315 + n * (2323 / 945)))));\n  this.cbg[1] = np * (5 / 3 + n * (-16 / 15 + n * ( -13 / 9 + n * (904 / 315 + n * (-1522 / 945)))));\n\n  np = np * n;\n  this.cgb[2] = np * (56 / 15 + n * (-136 / 35 + n * (-1262 / 105 + n * (73814 / 2835))));\n  this.cbg[2] = np * (-26 / 15 + n * (34 / 21 + n * (8 / 5 + n * (-12686 / 2835))));\n\n  np = np * n;\n  this.cgb[3] = np * (4279 / 630 + n * (-332 / 35 + n * (-399572 / 14175)));\n  this.cbg[3] = np * (1237 / 630 + n * (-12 / 5 + n * ( -24832 / 14175)));\n\n  np = np * n;\n  this.cgb[4] = np * (4174 / 315 + n * (-144838 / 6237));\n  this.cbg[4] = np * (-734 / 315 + n * (109598 / 31185));\n\n  np = np * n;\n  this.cgb[5] = np * (601676 / 22275);\n  this.cbg[5] = np * (444337 / 155925);\n\n  np = Math.pow(n, 2);\n  this.Qn = this.k0 / (1 + n) * (1 + np * (1 / 4 + np * (1 / 64 + np / 256)));\n\n  this.utg[0] = n * (-0.5 + n * ( 2 / 3 + n * (-37 / 96 + n * ( 1 / 360 + n * (81 / 512 + n * (-96199 / 604800))))));\n  this.gtu[0] = n * (0.5 + n * (-2 / 3 + n * (5 / 16 + n * (41 / 180 + n * (-127 / 288 + n * (7891 / 37800))))));\n\n  this.utg[1] = np * (-1 / 48 + n * (-1 / 15 + n * (437 / 1440 + n * (-46 / 105 + n * (1118711 / 3870720)))));\n  this.gtu[1] = np * (13 / 48 + n * (-3 / 5 + n * (557 / 1440 + n * (281 / 630 + n * (-1983433 / 1935360)))));\n\n  np = np * n;\n  this.utg[2] = np * (-17 / 480 + n * (37 / 840 + n * (209 / 4480 + n * (-5569 / 90720 ))));\n  this.gtu[2] = np * (61 / 240 + n * (-103 / 140 + n * (15061 / 26880 + n * (167603 / 181440))));\n\n  np = np * n;\n  this.utg[3] = np * (-4397 / 161280 + n * (11 / 504 + n * (830251 / 7257600)));\n  this.gtu[3] = np * (49561 / 161280 + n * (-179 / 168 + n * (6601661 / 7257600)));\n\n  np = np * n;\n  this.utg[4] = np * (-4583 / 161280 + n * (108847 / 3991680));\n  this.gtu[4] = np * (34729 / 80640 + n * (-3418889 / 1995840));\n\n  np = np * n;\n  this.utg[5] = np * (-20648693 / 638668800);\n  this.gtu[5] = np * (212378941 / 319334400);\n\n  var Z = gatg(this.cbg, this.lat0);\n  this.Zb = -this.Qn * (Z + clens(this.gtu, 2 * Z));\n}\n\nexport function forward(p) {\n  var Ce = adjust_lon(p.x - this.long0);\n  var Cn = p.y;\n\n  Cn = gatg(this.cbg, Cn);\n  var sin_Cn = Math.sin(Cn);\n  var cos_Cn = Math.cos(Cn);\n  var sin_Ce = Math.sin(Ce);\n  var cos_Ce = Math.cos(Ce);\n\n  Cn = Math.atan2(sin_Cn, cos_Ce * cos_Cn);\n  Ce = Math.atan2(sin_Ce * cos_Cn, hypot(sin_Cn, cos_Cn * cos_Ce));\n  Ce = asinhy(Math.tan(Ce));\n\n  var tmp = clens_cmplx(this.gtu, 2 * Cn, 2 * Ce);\n\n  Cn = Cn + tmp[0];\n  Ce = Ce + tmp[1];\n\n  var x;\n  var y;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    x = this.a * (this.Qn * Ce) + this.x0;\n    y = this.a * (this.Qn * Cn + this.Zb) + this.y0;\n  }\n  else {\n    x = Infinity;\n    y = Infinity;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\nexport function inverse(p) {\n  var Ce = (p.x - this.x0) * (1 / this.a);\n  var Cn = (p.y - this.y0) * (1 / this.a);\n\n  Cn = (Cn - this.Zb) / this.Qn;\n  Ce = Ce / this.Qn;\n\n  var lon;\n  var lat;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    var tmp = clens_cmplx(this.utg, 2 * Cn, 2 * Ce);\n\n    Cn = Cn + tmp[0];\n    Ce = Ce + tmp[1];\n    Ce = Math.atan(sinh(Ce));\n\n    var sin_Cn = Math.sin(Cn);\n    var cos_Cn = Math.cos(Cn);\n    var sin_Ce = Math.sin(Ce);\n    var cos_Ce = Math.cos(Ce);\n\n    Cn = Math.atan2(sin_Cn * cos_Ce, hypot(sin_Ce, cos_Ce * cos_Cn));\n    Ce = Math.atan2(sin_Ce, cos_Ce * cos_Cn);\n\n    lon = adjust_lon(Ce + this.long0);\n    lat = gatg(this.cgb, Cn);\n  }\n  else {\n    lon = Infinity;\n    lat = Infinity;\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Extended_Transverse_Mercator\", \"Extended Transverse Mercator\", \"etmerc\", \"Transverse_Mercator\", \"Transverse Mercator\", \"tmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(pp, arg_r) {\n  var r = 2 * Math.cos(arg_r);\n  var i = pp.length - 1;\n  var hr1 = pp[i];\n  var hr2 = 0;\n  var hr;\n\n  while (--i >= 0) {\n    hr = -hr2 + r * hr1 + pp[i];\n    hr2 = hr1;\n    hr1 = hr;\n  }\n\n  return Math.sin(arg_r) * hr;\n}\n","import adjust_zone from '../common/adjust_zone';\nimport etmerc from './etmerc';\nexport var dependsOn = 'etmerc';\nimport {D2R} from '../constants/values';\n\n\nexport function init() {\n  var zone = adjust_zone(this.zone, this.long0);\n  if (zone === undefined) {\n    throw new Error('unknown utm zone');\n  }\n  this.lat0 = 0;\n  this.long0 =  ((6 * Math.abs(zone)) - 183) * D2R;\n  this.x0 = 500000;\n  this.y0 = this.utmSouth ? 10000000 : 0;\n  this.k0 = 0.9996;\n\n  etmerc.init.apply(this);\n  this.forward = etmerc.forward;\n  this.inverse = etmerc.inverse;\n}\n\nexport var names = [\"Universal Transverse Mercator System\", \"utm\"];\nexport default {\n  init: init,\n  names: names,\n  dependsOn: dependsOn\n};\n","import adjust_lon from './adjust_lon';\n\nexport default function(zone, lon) {\n  if (zone === undefined) {\n    zone = Math.floor((adjust_lon(lon) + Math.PI) * 30 / Math.PI) + 1;\n\n    if (zone < 0) {\n      return 0;\n    } else if (zone > 60) {\n      return 60;\n    }\n  }\n  return zone;\n}\n","export default function(esinp, exp) {\n  return (Math.pow((1 - esinp) / (1 + esinp), exp));\n}","import srat from '../common/srat';\nvar MAX_ITER = 20;\nimport {HALF_PI, FORTPI} from '../constants/values';\n\nexport function init() {\n  var sphi = Math.sin(this.lat0);\n  var cphi = Math.cos(this.lat0);\n  cphi *= cphi;\n  this.rc = Math.sqrt(1 - this.es) / (1 - this.es * sphi * sphi);\n  this.C = Math.sqrt(1 + this.es * cphi * cphi / (1 - this.es));\n  this.phic0 = Math.asin(sphi / this.C);\n  this.ratexp = 0.5 * this.C * this.e;\n  this.K = Math.tan(0.5 * this.phic0 + FORTPI) / (Math.pow(Math.tan(0.5 * this.lat0 + FORTPI), this.C) * srat(this.e * sphi, this.ratexp));\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  p.y = 2 * Math.atan(this.K * Math.pow(Math.tan(0.5 * lat + FORTPI), this.C) * srat(this.e * Math.sin(lat), this.ratexp)) - HALF_PI;\n  p.x = this.C * lon;\n  return p;\n}\n\nexport function inverse(p) {\n  var DEL_TOL = 1e-14;\n  var lon = p.x / this.C;\n  var lat = p.y;\n  var num = Math.pow(Math.tan(0.5 * lat + FORTPI) / this.K, 1 / this.C);\n  for (var i = MAX_ITER; i > 0; --i) {\n    lat = 2 * Math.atan(num * srat(this.e * Math.sin(p.y), - 0.5 * this.e)) - HALF_PI;\n    if (Math.abs(lat - p.y) < DEL_TOL) {\n      break;\n    }\n    p.y = lat;\n  }\n  /* convergence failed */\n  if (!i) {\n    return null;\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gauss\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import gauss from './gauss';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  gauss.init.apply(this);\n  if (!this.rc) {\n    return;\n  }\n  this.sinc0 = Math.sin(this.phic0);\n  this.cosc0 = Math.cos(this.phic0);\n  this.R2 = 2 * this.rc;\n  if (!this.title) {\n    this.title = \"Oblique Stereographic Alternative\";\n  }\n}\n\nexport function forward(p) {\n  var sinc, cosc, cosl, k;\n  p.x = adjust_lon(p.x - this.long0);\n  gauss.forward.apply(this, [p]);\n  sinc = Math.sin(p.y);\n  cosc = Math.cos(p.y);\n  cosl = Math.cos(p.x);\n  k = this.k0 * this.R2 / (1 + this.sinc0 * sinc + this.cosc0 * cosc * cosl);\n  p.x = k * cosc * Math.sin(p.x);\n  p.y = k * (this.cosc0 * sinc - this.sinc0 * cosc * cosl);\n  p.x = this.a * p.x + this.x0;\n  p.y = this.a * p.y + this.y0;\n  return p;\n}\n\nexport function inverse(p) {\n  var sinc, cosc, lon, lat, rho;\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n  if ((rho = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    var c = 2 * Math.atan2(rho, this.R2);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n    lat = Math.asin(cosc * this.sinc0 + p.y * sinc * this.cosc0 / rho);\n    lon = Math.atan2(p.x * sinc, rho * this.cosc0 * cosc - p.y * this.sinc0 * sinc);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  gauss.inverse.apply(this, [p]);\n  p.x = adjust_lon(p.x + this.long0);\n  return p;\n}\n\nexport var names = [\"Stereographic_North_Pole\", \"Oblique_Stereographic\", \"Polar_Stereographic\", \"sterea\",\"Oblique Stereographic Alternative\",\"Double_Stereographic\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {EPSLN, HALF_PI} from '../constants/values';\n\nimport sign from '../common/sign';\nimport msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function ssfn_(phit, sinphi, eccen) {\n  sinphi *= eccen;\n  return (Math.tan(0.5 * (HALF_PI + phit)) * Math.pow((1 - sinphi) / (1 + sinphi), 0.5 * eccen));\n}\n\nexport function init() {\n  this.coslat0 = Math.cos(this.lat0);\n  this.sinlat0 = Math.sin(this.lat0);\n  if (this.sphere) {\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * (1 + sign(this.lat0) * Math.sin(this.lat_ts));\n    }\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (this.lat0 > 0) {\n        //North pole\n        //trace('stere:north pole');\n        this.con = 1;\n      }\n      else {\n        //South pole\n        //trace('stere:south pole');\n        this.con = -1;\n      }\n    }\n    this.cons = Math.sqrt(Math.pow(1 + this.e, 1 + this.e) * Math.pow(1 - this.e, 1 - this.e));\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * this.cons * msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts)) / tsfnz(this.e, this.con * this.lat_ts, this.con * Math.sin(this.lat_ts));\n    }\n    this.ms1 = msfnz(this.e, this.sinlat0, this.coslat0);\n    this.X0 = 2 * Math.atan(this.ssfn_(this.lat0, this.sinlat0, this.e)) - HALF_PI;\n    this.cosX0 = Math.cos(this.X0);\n    this.sinX0 = Math.sin(this.X0);\n  }\n}\n\n// Stereographic forward equations--mapping lat,long to x,y\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinlat = Math.sin(lat);\n  var coslat = Math.cos(lat);\n  var A, X, sinX, cosX, ts, rh;\n  var dlon = adjust_lon(lon - this.long0);\n\n  if (Math.abs(Math.abs(lon - this.long0) - Math.PI) <= EPSLN && Math.abs(lat + this.lat0) <= EPSLN) {\n    //case of the origine point\n    //trace('stere:this is the origin point');\n    p.x = NaN;\n    p.y = NaN;\n    return p;\n  }\n  if (this.sphere) {\n    //trace('stere:sphere case');\n    A = 2 * this.k0 / (1 + this.sinlat0 * sinlat + this.coslat0 * coslat * Math.cos(dlon));\n    p.x = this.a * A * coslat * Math.sin(dlon) + this.x0;\n    p.y = this.a * A * (this.coslat0 * sinlat - this.sinlat0 * coslat * Math.cos(dlon)) + this.y0;\n    return p;\n  }\n  else {\n    X = 2 * Math.atan(this.ssfn_(lat, sinlat, this.e)) - HALF_PI;\n    cosX = Math.cos(X);\n    sinX = Math.sin(X);\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      ts = tsfnz(this.e, lat * this.con, this.con * sinlat);\n      rh = 2 * this.a * this.k0 * ts / this.cons;\n      p.x = this.x0 + rh * Math.sin(lon - this.long0);\n      p.y = this.y0 - this.con * rh * Math.cos(lon - this.long0);\n      //trace(p.toString());\n      return p;\n    }\n    else if (Math.abs(this.sinlat0) < EPSLN) {\n      //Eq\n      //trace('stere:equateur');\n      A = 2 * this.a * this.k0 / (1 + cosX * Math.cos(dlon));\n      p.y = A * sinX;\n    }\n    else {\n      //other case\n      //trace('stere:normal case');\n      A = 2 * this.a * this.k0 * this.ms1 / (this.cosX0 * (1 + this.sinX0 * sinX + this.cosX0 * cosX * Math.cos(dlon)));\n      p.y = A * (this.cosX0 * sinX - this.sinX0 * cosX * Math.cos(dlon)) + this.y0;\n    }\n    p.x = A * cosX * Math.sin(dlon) + this.x0;\n  }\n  //trace(p.toString());\n  return p;\n}\n\n//* Stereographic inverse equations--mapping x,y to lat/long\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat, ts, ce, Chi;\n  var rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  if (this.sphere) {\n    var c = 2 * Math.atan(rh / (2 * this.a * this.k0));\n    lon = this.long0;\n    lat = this.lat0;\n    if (rh <= EPSLN) {\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    lat = Math.asin(Math.cos(c) * this.sinlat0 + p.y * Math.sin(c) * this.coslat0 / rh);\n    if (Math.abs(this.coslat0) < EPSLN) {\n      if (this.lat0 > 0) {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      }\n      else {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      }\n    }\n    else {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(c), rh * this.coslat0 * Math.cos(c) - p.y * this.sinlat0 * Math.sin(c)));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (rh <= EPSLN) {\n        lat = this.lat0;\n        lon = this.long0;\n        p.x = lon;\n        p.y = lat;\n        //trace(p.toString());\n        return p;\n      }\n      p.x *= this.con;\n      p.y *= this.con;\n      ts = rh * this.cons / (2 * this.a * this.k0);\n      lat = this.con * phi2z(this.e, ts);\n      lon = this.con * adjust_lon(this.con * this.long0 + Math.atan2(p.x, - 1 * p.y));\n    }\n    else {\n      ce = 2 * Math.atan(rh * this.cosX0 / (2 * this.a * this.k0 * this.ms1));\n      lon = this.long0;\n      if (rh <= EPSLN) {\n        Chi = this.X0;\n      }\n      else {\n        Chi = Math.asin(Math.cos(ce) * this.sinX0 + p.y * Math.sin(ce) * this.cosX0 / rh);\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(ce), rh * this.cosX0 * Math.cos(ce) - p.y * this.sinX0 * Math.sin(ce)));\n      }\n      lat = -1 * phi2z(this.e, Math.tan(0.5 * (HALF_PI + Chi)));\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n\n  //trace(p.toString());\n  return p;\n\n}\n\nexport var names = [\"stere\", \"Stereographic_South_Pole\", \"Polar Stereographic (variant B)\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  ssfn_: ssfn_\n};\n","/*\n  references:\n    Formules et constantes pour le Calcul pour la\n    projection cylindrique conforme à axe oblique et pour la transformation entre\n    des systèmes de référence.\n    http://www.swisstopo.admin.ch/internet/swisstopo/fr/home/topics/survey/sys/refsys/switzerland.parsysrelated1.31216.downloadList.77004.DownloadFile.tmp/swissprojectionfr.pdf\n  */\n\nexport function init() {\n  var phy0 = this.lat0;\n  this.lambda0 = this.long0;\n  var sinPhy0 = Math.sin(phy0);\n  var semiMajorAxis = this.a;\n  var invF = this.rf;\n  var flattening = 1 / invF;\n  var e2 = 2 * flattening - Math.pow(flattening, 2);\n  var e = this.e = Math.sqrt(e2);\n  this.R = this.k0 * semiMajorAxis * Math.sqrt(1 - e2) / (1 - e2 * Math.pow(sinPhy0, 2));\n  this.alpha = Math.sqrt(1 + e2 / (1 - e2) * Math.pow(Math.cos(phy0), 4));\n  this.b0 = Math.asin(sinPhy0 / this.alpha);\n  var k1 = Math.log(Math.tan(Math.PI / 4 + this.b0 / 2));\n  var k2 = Math.log(Math.tan(Math.PI / 4 + phy0 / 2));\n  var k3 = Math.log((1 + e * sinPhy0) / (1 - e * sinPhy0));\n  this.K = k1 - this.alpha * k2 + this.alpha * e / 2 * k3;\n}\n\nexport function forward(p) {\n  var Sa1 = Math.log(Math.tan(Math.PI / 4 - p.y / 2));\n  var Sa2 = this.e / 2 * Math.log((1 + this.e * Math.sin(p.y)) / (1 - this.e * Math.sin(p.y)));\n  var S = -this.alpha * (Sa1 + Sa2) + this.K;\n\n  // spheric latitude\n  var b = 2 * (Math.atan(Math.exp(S)) - Math.PI / 4);\n\n  // spheric longitude\n  var I = this.alpha * (p.x - this.lambda0);\n\n  // psoeudo equatorial rotation\n  var rotI = Math.atan(Math.sin(I) / (Math.sin(this.b0) * Math.tan(b) + Math.cos(this.b0) * Math.cos(I)));\n\n  var rotB = Math.asin(Math.cos(this.b0) * Math.sin(b) - Math.sin(this.b0) * Math.cos(b) * Math.cos(I));\n\n  p.y = this.R / 2 * Math.log((1 + Math.sin(rotB)) / (1 - Math.sin(rotB))) + this.y0;\n  p.x = this.R * rotI + this.x0;\n  return p;\n}\n\nexport function inverse(p) {\n  var Y = p.x - this.x0;\n  var X = p.y - this.y0;\n\n  var rotI = Y / this.R;\n  var rotB = 2 * (Math.atan(Math.exp(X / this.R)) - Math.PI / 4);\n\n  var b = Math.asin(Math.cos(this.b0) * Math.sin(rotB) + Math.sin(this.b0) * Math.cos(rotB) * Math.cos(rotI));\n  var I = Math.atan(Math.sin(rotI) / (Math.cos(this.b0) * Math.cos(rotI) - Math.sin(this.b0) * Math.tan(rotB)));\n\n  var lambda = this.lambda0 + I / this.alpha;\n\n  var S = 0;\n  var phy = b;\n  var prevPhy = -1000;\n  var iteration = 0;\n  while (Math.abs(phy - prevPhy) > 0.0000001) {\n    if (++iteration > 20) {\n      //...reportError(\"omercFwdInfinity\");\n      return;\n    }\n    //S = Math.log(Math.tan(Math.PI / 4 + phy / 2));\n    S = 1 / this.alpha * (Math.log(Math.tan(Math.PI / 4 + b / 2)) - this.K) + this.e * Math.log(Math.tan(Math.PI / 4 + Math.asin(this.e * Math.sin(phy)) / 2));\n    prevPhy = phy;\n    phy = 2 * Math.atan(Math.exp(S)) - Math.PI / 2;\n  }\n\n  p.x = lambda;\n  p.y = phy;\n  return p;\n}\n\nexport var names = [\"somerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import tsfnz from '../common/tsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport { D2R, EPSLN, HALF_PI, TWO_PI, FORTPI } from '../constants/values';\n\nvar TOL = 1e-7;\n\nfunction isTypeA(P) {\n  var typeAProjections = ['Hotine_Oblique_Mercator','Hotine_Oblique_Mercator_Azimuth_Natural_Origin'];\n  var projectionName = typeof P.PROJECTION === \"object\" ? Object.keys(P.PROJECTION)[0] : P.PROJECTION;\n  \n  return 'no_uoff' in P || 'no_off' in P || typeAProjections.indexOf(projectionName) !== -1;\n}\n\n\n/* Initialize the Oblique Mercator  projection\n    ------------------------------------------*/\nexport function init() {  \n  var con, com, cosph0, D, F, H, L, sinph0, p, J, gamma = 0,\n    gamma0, lamc = 0, lam1 = 0, lam2 = 0, phi1 = 0, phi2 = 0, alpha_c = 0, AB;\n  \n  // only Type A uses the no_off or no_uoff property\n  // https://github.com/OSGeo/proj.4/issues/104\n  this.no_off = isTypeA(this);\n  this.no_rot = 'no_rot' in this;\n  \n  var alp = false;\n  if (\"alpha\" in this) {\n    alp = true;\n  }\n\n  var gam = false;\n  if (\"rectified_grid_angle\" in this) {\n    gam = true;\n  }\n\n  if (alp) {\n    alpha_c = this.alpha;\n  }\n  \n  if (gam) {\n    gamma = (this.rectified_grid_angle * D2R);\n  }\n  \n  if (alp || gam) {\n    lamc = this.longc;\n  } else {\n    lam1 = this.long1;\n    phi1 = this.lat1;\n    lam2 = this.long2;\n    phi2 = this.lat2;\n    \n    if (Math.abs(phi1 - phi2) <= TOL || (con = Math.abs(phi1)) <= TOL ||\n        Math.abs(con - HALF_PI) <= TOL || Math.abs(Math.abs(this.lat0) - HALF_PI) <= TOL ||\n        Math.abs(Math.abs(phi2) - HALF_PI) <= TOL) {\n      throw new Error();\n    }\n  }\n  \n  var one_es = 1.0 - this.es;\n  com = Math.sqrt(one_es);\n  \n  if (Math.abs(this.lat0) > EPSLN) {\n    sinph0 = Math.sin(this.lat0);\n    cosph0 = Math.cos(this.lat0);\n    con = 1 - this.es * sinph0 * sinph0;\n    this.B = cosph0 * cosph0;\n    this.B = Math.sqrt(1 + this.es * this.B * this.B / one_es);\n    this.A = this.B * this.k0 * com / con;\n    D = this.B * com / (cosph0 * Math.sqrt(con));\n    F = D * D -1;\n    \n    if (F <= 0) {\n      F = 0;\n    } else {\n      F = Math.sqrt(F);\n      if (this.lat0 < 0) {\n        F = -F;\n      }\n    }\n    \n    this.E = F += D;\n    this.E *= Math.pow(tsfnz(this.e, this.lat0, sinph0), this.B);\n  } else {\n    this.B = 1 / com;\n    this.A = this.k0;\n    this.E = D = F = 1;\n  }\n  \n  if (alp || gam) {\n    if (alp) {\n      gamma0 = Math.asin(Math.sin(alpha_c) / D);\n      if (!gam) {\n        gamma = alpha_c;\n      }\n    } else {\n      gamma0 = gamma;\n      alpha_c = Math.asin(D * Math.sin(gamma0));\n    }\n    this.lam0 = lamc - Math.asin(0.5 * (F - 1 / F) * Math.tan(gamma0)) / this.B;\n  } else {\n    H = Math.pow(tsfnz(this.e, phi1, Math.sin(phi1)), this.B);\n    L = Math.pow(tsfnz(this.e, phi2, Math.sin(phi2)), this.B);\n    F = this.E / H;\n    p = (L - H) / (L + H);\n    J = this.E * this.E;\n    J = (J - L * H) / (J + L * H);\n    con = lam1 - lam2;\n    \n    if (con < -Math.pi) {\n      lam2 -=TWO_PI;\n    } else if (con > Math.pi) {\n      lam2 += TWO_PI;\n    }\n    \n    this.lam0 = adjust_lon(0.5 * (lam1 + lam2) - Math.atan(J * Math.tan(0.5 * this.B * (lam1 - lam2)) / p) / this.B);\n    gamma0 = Math.atan(2 * Math.sin(this.B * adjust_lon(lam1 - this.lam0)) / (F - 1 / F));\n    gamma = alpha_c = Math.asin(D * Math.sin(gamma0));\n  }\n  \n  this.singam = Math.sin(gamma0);\n  this.cosgam = Math.cos(gamma0);\n  this.sinrot = Math.sin(gamma);\n  this.cosrot = Math.cos(gamma);\n  \n  this.rB = 1 / this.B;\n  this.ArB = this.A * this.rB;\n  this.BrA = 1 / this.ArB;\n  AB = this.A * this.B;\n  \n  if (this.no_off) {\n    this.u_0 = 0;\n  } else {\n    this.u_0 = Math.abs(this.ArB * Math.atan(Math.sqrt(D * D - 1) / Math.cos(alpha_c)));\n    \n    if (this.lat0 < 0) {\n      this.u_0 = - this.u_0;\n    }  \n  }\n    \n  F = 0.5 * gamma0;\n  this.v_pole_n = this.ArB * Math.log(Math.tan(FORTPI - F));\n  this.v_pole_s = this.ArB * Math.log(Math.tan(FORTPI + F));\n}\n\n\n/* Oblique Mercator forward equations--mapping lat,long to x,y\n    ----------------------------------------------------------*/\nexport function forward(p) {\n  var coords = {};\n  var S, T, U, V, W, temp, u, v;\n  p.x = p.x - this.lam0;\n  \n  if (Math.abs(Math.abs(p.y) - HALF_PI) > EPSLN) {\n    W = this.E / Math.pow(tsfnz(this.e, p.y, Math.sin(p.y)), this.B);\n    \n    temp = 1 / W;\n    S = 0.5 * (W - temp);\n    T = 0.5 * (W + temp);\n    V = Math.sin(this.B * p.x);\n    U = (S * this.singam - V * this.cosgam) / T;\n        \n    if (Math.abs(Math.abs(U) - 1.0) < EPSLN) {\n      throw new Error();\n    }\n    \n    v = 0.5 * this.ArB * Math.log((1 - U)/(1 + U));\n    temp = Math.cos(this.B * p.x);\n    \n    if (Math.abs(temp) < TOL) {\n      u = this.A * p.x;\n    } else {\n      u = this.ArB * Math.atan2((S * this.cosgam + V * this.singam), temp);\n    }    \n  } else {\n    v = p.y > 0 ? this.v_pole_n : this.v_pole_s;\n    u = this.ArB * p.y;\n  }\n     \n  if (this.no_rot) {\n    coords.x = u;\n    coords.y = v;\n  } else {\n    u -= this.u_0;\n    coords.x = v * this.cosrot + u * this.sinrot;\n    coords.y = u * this.cosrot - v * this.sinrot;\n  }\n  \n  coords.x = (this.a * coords.x + this.x0);\n  coords.y = (this.a * coords.y + this.y0);\n  \n  return coords;\n}\n\nexport function inverse(p) {\n  var u, v, Qp, Sp, Tp, Vp, Up;\n  var coords = {};\n  \n  p.x = (p.x - this.x0) * (1.0 / this.a);\n  p.y = (p.y - this.y0) * (1.0 / this.a);\n\n  if (this.no_rot) {\n    v = p.y;\n    u = p.x;\n  } else {\n    v = p.x * this.cosrot - p.y * this.sinrot;\n    u = p.y * this.cosrot + p.x * this.sinrot + this.u_0;\n  }\n  \n  Qp = Math.exp(-this.BrA * v);\n  Sp = 0.5 * (Qp - 1 / Qp);\n  Tp = 0.5 * (Qp + 1 / Qp);\n  Vp = Math.sin(this.BrA * u);\n  Up = (Vp * this.cosgam + Sp * this.singam) / Tp;\n  \n  if (Math.abs(Math.abs(Up) - 1) < EPSLN) {\n    coords.x = 0;\n    coords.y = Up < 0 ? -HALF_PI : HALF_PI;\n  } else {\n    coords.y = this.E / Math.sqrt((1 + Up) / (1 - Up));\n    coords.y = phi2z(this.e, Math.pow(coords.y, 1 / this.B));\n    \n    if (coords.y === Infinity) {\n      throw new Error();\n    }\n        \n    coords.x = -this.rB * Math.atan2((Sp * this.cosgam - Vp * this.singam), Math.cos(this.BrA * u));\n  }\n  \n  coords.x += this.lam0;\n  \n  return coords;\n}\n\nexport var names = [\"Hotine_Oblique_Mercator\", \"Hotine Oblique Mercator\", \"Hotine_Oblique_Mercator_Azimuth_Natural_Origin\", \"Hotine_Oblique_Mercator_Two_Point_Natural_Origin\", \"Hotine_Oblique_Mercator_Azimuth_Center\", \"Oblique_Mercator\", \"omerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport sign from '../common/sign';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {HALF_PI, EPSLN} from '../constants/values';\nexport function init() {\n  \n  //double lat0;                    /* the reference latitude               */\n  //double long0;                   /* the reference longitude              */\n  //double lat1;                    /* first standard parallel              */\n  //double lat2;                    /* second standard parallel             */\n  //double r_maj;                   /* major axis                           */\n  //double r_min;                   /* minor axis                           */\n  //double false_east;              /* x offset in meters                   */\n  //double false_north;             /* y offset in meters                   */\n  \n  //the above value can be set with proj4.defs\n  //example: proj4.defs(\"EPSG:2154\",\"+proj=lcc +lat_1=49 +lat_2=44 +lat_0=46.5 +lon_0=3 +x_0=700000 +y_0=6600000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs\");\n\n  if (!this.lat2) {\n    this.lat2 = this.lat1;\n  } //if lat2 is not defined\n  if (!this.k0) {\n    this.k0 = 1;\n  }\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n\n  var temp = this.b / this.a;\n  this.e = Math.sqrt(1 - temp * temp);\n\n  var sin1 = Math.sin(this.lat1);\n  var cos1 = Math.cos(this.lat1);\n  var ms1 = msfnz(this.e, sin1, cos1);\n  var ts1 = tsfnz(this.e, this.lat1, sin1);\n\n  var sin2 = Math.sin(this.lat2);\n  var cos2 = Math.cos(this.lat2);\n  var ms2 = msfnz(this.e, sin2, cos2);\n  var ts2 = tsfnz(this.e, this.lat2, sin2);\n\n  var ts0 = tsfnz(this.e, this.lat0, Math.sin(this.lat0));\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns = Math.log(ms1 / ms2) / Math.log(ts1 / ts2);\n  }\n  else {\n    this.ns = sin1;\n  }\n  if (isNaN(this.ns)) {\n    this.ns = sin1;\n  }\n  this.f0 = ms1 / (this.ns * Math.pow(ts1, this.ns));\n  this.rh = this.a * this.f0 * Math.pow(ts0, this.ns);\n  if (!this.title) {\n    this.title = \"Lambert Conformal Conic\";\n  }\n}\n\n// Lambert Conformal conic forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  // singular cases :\n  if (Math.abs(2 * Math.abs(lat) - Math.PI) <= EPSLN) {\n    lat = sign(lat) * (HALF_PI - 2 * EPSLN);\n  }\n\n  var con = Math.abs(Math.abs(lat) - HALF_PI);\n  var ts, rh1;\n  if (con > EPSLN) {\n    ts = tsfnz(this.e, lat, Math.sin(lat));\n    rh1 = this.a * this.f0 * Math.pow(ts, this.ns);\n  }\n  else {\n    con = lat * this.ns;\n    if (con <= 0) {\n      return null;\n    }\n    rh1 = 0;\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  p.x = this.k0 * (rh1 * Math.sin(theta)) + this.x0;\n  p.y = this.k0 * (this.rh - rh1 * Math.cos(theta)) + this.y0;\n\n  return p;\n}\n\n// Lambert Conformal Conic inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var rh1, con, ts;\n  var lat, lon;\n  var x = (p.x - this.x0) / this.k0;\n  var y = (this.rh - (p.y - this.y0) / this.k0);\n  if (this.ns > 0) {\n    rh1 = Math.sqrt(x * x + y * y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(x * x + y * y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2((con * x), (con * y));\n  }\n  if ((rh1 !== 0) || (this.ns > 0)) {\n    con = 1 / this.ns;\n    ts = Math.pow((rh1 / (this.a * this.f0)), con);\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  else {\n    lat = -HALF_PI;\n  }\n  lon = adjust_lon(theta / this.ns + this.long0);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\n  \"Lambert Tangential Conformal Conic Projection\",\n  \"Lambert_Conformal_Conic\",\n  \"Lambert_Conformal_Conic_1SP\",\n  \"Lambert_Conformal_Conic_2SP\",\n  \"lcc\",\n  \"Lambert Conic Conformal (1SP)\",\n  \"Lambert Conic Conformal (2SP)\"\n];\n\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  this.a = 6377397.155;\n  this.es = 0.006674372230614;\n  this.e = Math.sqrt(this.es);\n  if (!this.lat0) {\n    this.lat0 = 0.863937979737193;\n  }\n  if (!this.long0) {\n    this.long0 = 0.7417649320975901 - 0.308341501185665;\n  }\n  /* if scale not set default to 0.9999 */\n  if (!this.k0) {\n    this.k0 = 0.9999;\n  }\n  this.s45 = 0.785398163397448; /* 45 */\n  this.s90 = 2 * this.s45;\n  this.fi0 = this.lat0;\n  this.e2 = this.es;\n  this.e = Math.sqrt(this.e2);\n  this.alfa = Math.sqrt(1 + (this.e2 * Math.pow(Math.cos(this.fi0), 4)) / (1 - this.e2));\n  this.uq = 1.04216856380474;\n  this.u0 = Math.asin(Math.sin(this.fi0) / this.alfa);\n  this.g = Math.pow((1 + this.e * Math.sin(this.fi0)) / (1 - this.e * Math.sin(this.fi0)), this.alfa * this.e / 2);\n  this.k = Math.tan(this.u0 / 2 + this.s45) / Math.pow(Math.tan(this.fi0 / 2 + this.s45), this.alfa) * this.g;\n  this.k1 = this.k0;\n  this.n0 = this.a * Math.sqrt(1 - this.e2) / (1 - this.e2 * Math.pow(Math.sin(this.fi0), 2));\n  this.s0 = 1.37008346281555;\n  this.n = Math.sin(this.s0);\n  this.ro0 = this.k1 * this.n0 / Math.tan(this.s0);\n  this.ad = this.s90 - this.uq;\n}\n\n/* ellipsoid */\n/* calculate xy from lat/lon */\n/* Constants, identical to inverse transform function */\nexport function forward(p) {\n  var gfi, u, deltav, s, d, eps, ro;\n  var lon = p.x;\n  var lat = p.y;\n  var delta_lon = adjust_lon(lon - this.long0);\n  /* Transformation */\n  gfi = Math.pow(((1 + this.e * Math.sin(lat)) / (1 - this.e * Math.sin(lat))), (this.alfa * this.e / 2));\n  u = 2 * (Math.atan(this.k * Math.pow(Math.tan(lat / 2 + this.s45), this.alfa) / gfi) - this.s45);\n  deltav = -delta_lon * this.alfa;\n  s = Math.asin(Math.cos(this.ad) * Math.sin(u) + Math.sin(this.ad) * Math.cos(u) * Math.cos(deltav));\n  d = Math.asin(Math.cos(u) * Math.sin(deltav) / Math.cos(s));\n  eps = this.n * d;\n  ro = this.ro0 * Math.pow(Math.tan(this.s0 / 2 + this.s45), this.n) / Math.pow(Math.tan(s / 2 + this.s45), this.n);\n  p.y = ro * Math.cos(eps) / 1;\n  p.x = ro * Math.sin(eps) / 1;\n\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  return (p);\n}\n\n/* calculate lat/lon from xy */\nexport function inverse(p) {\n  var u, deltav, s, d, eps, ro, fi1;\n  var ok;\n\n  /* Transformation */\n  /* revert y, x*/\n  var tmp = p.x;\n  p.x = p.y;\n  p.y = tmp;\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  ro = Math.sqrt(p.x * p.x + p.y * p.y);\n  eps = Math.atan2(p.y, p.x);\n  d = eps / Math.sin(this.s0);\n  s = 2 * (Math.atan(Math.pow(this.ro0 / ro, 1 / this.n) * Math.tan(this.s0 / 2 + this.s45)) - this.s45);\n  u = Math.asin(Math.cos(this.ad) * Math.sin(s) - Math.sin(this.ad) * Math.cos(s) * Math.cos(d));\n  deltav = Math.asin(Math.cos(s) * Math.sin(d) / Math.cos(u));\n  p.x = this.long0 - deltav / this.alfa;\n  fi1 = u;\n  ok = 0;\n  var iter = 0;\n  do {\n    p.y = 2 * (Math.atan(Math.pow(this.k, - 1 / this.alfa) * Math.pow(Math.tan(u / 2 + this.s45), 1 / this.alfa) * Math.pow((1 + this.e * Math.sin(fi1)) / (1 - this.e * Math.sin(fi1)), this.e / 2)) - this.s45);\n    if (Math.abs(fi1 - p.y) < 0.0000000001) {\n      ok = 1;\n    }\n    fi1 = p.y;\n    iter += 1;\n  } while (ok === 0 && iter < 15);\n  if (iter >= 15) {\n    return null;\n  }\n\n  return (p);\n}\n\nexport var names = [\"Krovak\", \"krovak\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(e0, e1, e2, e3, phi) {\n  return (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi));\n}","export default function(x) {\n  return (1 - 0.25 * x * (1 + x / 16 * (3 + 1.25 * x)));\n}","export default function(x) {\n  return (0.375 * x * (1 + 0.25 * x * (1 + 0.46875 * x)));\n}","export default function(x) {\n  return (0.05859375 * x * x * (1 + 0.75 * x));\n}","export default function(x) {\n  return (x * x * x * (35 / 3072));\n}","export default function(a, e, sinphi) {\n  var temp = e * sinphi;\n  return a / Math.sqrt(1 - temp * temp);\n}","import {HALF_PI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) < HALF_PI) ? x : (x - (sign(x) * Math.PI));\n}\n","export default function(ml, e0, e1, e2, e3) {\n  var phi;\n  var dphi;\n\n  phi = ml / e0;\n  for (var i = 0; i < 15; i++) {\n    dphi = (ml - (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi))) / (e0 - 2 * e1 * Math.cos(2 * phi) + 4 * e2 * Math.cos(4 * phi) - 6 * e3 * Math.cos(6 * phi));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //..reportError(\"IMLFN-CONV:Latitude failed to converge after 15 iterations\");\n  return NaN;\n}","import mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nexport function init() {\n  if (!this.sphere) {\n    this.e0 = e0fn(this.es);\n    this.e1 = e1fn(this.es);\n    this.e2 = e2fn(this.es);\n    this.e3 = e3fn(this.es);\n    this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  }\n}\n\n/* Cassini forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y;\n  var lam = p.x;\n  var phi = p.y;\n  lam = adjust_lon(lam - this.long0);\n\n  if (this.sphere) {\n    x = this.a * Math.asin(Math.cos(phi) * Math.sin(lam));\n    y = this.a * (Math.atan2(Math.tan(phi), Math.cos(lam)) - this.lat0);\n  }\n  else {\n    //ellipsoid\n    var sinphi = Math.sin(phi);\n    var cosphi = Math.cos(phi);\n    var nl = gN(this.a, this.e, sinphi);\n    var tl = Math.tan(phi) * Math.tan(phi);\n    var al = lam * Math.cos(phi);\n    var asq = al * al;\n    var cl = this.es * cosphi * cosphi / (1 - this.es);\n    var ml = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n\n    x = nl * al * (1 - asq * tl * (1 / 6 - (8 - tl + 8 * cl) * asq / 120));\n    y = ml - this.ml0 + nl * sinphi / cosphi * asq * (0.5 + (5 - tl + 6 * cl) * asq / 24);\n\n\n  }\n\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var phi, lam;\n\n  if (this.sphere) {\n    var dd = y + this.lat0;\n    phi = Math.asin(Math.sin(dd) * Math.cos(x));\n    lam = Math.atan2(Math.tan(x), Math.cos(dd));\n  }\n  else {\n    /* ellipsoid */\n    var ml1 = this.ml0 / this.a + y;\n    var phi1 = imlfn(ml1, this.e0, this.e1, this.e2, this.e3);\n    if (Math.abs(Math.abs(phi1) - HALF_PI) <= EPSLN) {\n      p.x = this.long0;\n      p.y = HALF_PI;\n      if (y < 0) {\n        p.y *= -1;\n      }\n      return p;\n    }\n    var nl1 = gN(this.a, this.e, Math.sin(phi1));\n\n    var rl1 = nl1 * nl1 * nl1 / this.a / this.a * (1 - this.es);\n    var tl1 = Math.pow(Math.tan(phi1), 2);\n    var dl = x * this.a / nl1;\n    var dsq = dl * dl;\n    phi = phi1 - nl1 * Math.tan(phi1) / rl1 * dl * dl * (0.5 - (1 + 3 * tl1) * dl * dl / 24);\n    lam = dl * (1 - dsq * (tl1 / 3 + (1 + 3 * tl1) * tl1 * dsq / 15)) / Math.cos(phi1);\n\n  }\n\n  p.x = adjust_lon(lam + this.long0);\n  p.y = adjust_lat(phi);\n  return p;\n\n}\n\nexport var names = [\"Cassini\", \"Cassini_Soldner\", \"cass\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(eccent, sinphi) {\n  var con;\n  if (eccent > 1.0e-7) {\n    con = eccent * sinphi;\n    return ((1 - eccent * eccent) * (sinphi / (1 - con * con) - (0.5 / eccent) * Math.log((1 - con) / (1 + con))));\n  }\n  else {\n    return (2 * sinphi);\n  }\n}","\nimport {HALF_PI, EPSLN, FORTPI} from '../constants/values';\n\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\nexport var S_POLE = 1;\n\nexport var N_POLE = 2;\nexport var EQUIT = 3;\nexport var OBLIQ = 4;\n\n/* Initialize the Lambert Azimuthal Equal Area projection\n  ------------------------------------------------------*/\nexport function init() {\n  var t = Math.abs(this.lat0);\n  if (Math.abs(t - HALF_PI) < EPSLN) {\n    this.mode = this.lat0 < 0 ? this.S_POLE : this.N_POLE;\n  }\n  else if (Math.abs(t) < EPSLN) {\n    this.mode = this.EQUIT;\n  }\n  else {\n    this.mode = this.OBLIQ;\n  }\n  if (this.es > 0) {\n    var sinphi;\n\n    this.qp = qsfnz(this.e, 1);\n    this.mmf = 0.5 / (1 - this.es);\n    this.apa = authset(this.es);\n    switch (this.mode) {\n    case this.N_POLE:\n      this.dd = 1;\n      break;\n    case this.S_POLE:\n      this.dd = 1;\n      break;\n    case this.EQUIT:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      this.dd = 1 / this.rq;\n      this.xmf = 1;\n      this.ymf = 0.5 * this.qp;\n      break;\n    case this.OBLIQ:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      sinphi = Math.sin(this.lat0);\n      this.sinb1 = qsfnz(this.e, sinphi) / this.qp;\n      this.cosb1 = Math.sqrt(1 - this.sinb1 * this.sinb1);\n      this.dd = Math.cos(this.lat0) / (Math.sqrt(1 - this.es * sinphi * sinphi) * this.rq * this.cosb1);\n      this.ymf = (this.xmf = this.rq) / this.dd;\n      this.xmf *= this.dd;\n      break;\n    }\n  }\n  else {\n    if (this.mode === this.OBLIQ) {\n      this.sinph0 = Math.sin(this.lat0);\n      this.cosph0 = Math.cos(this.lat0);\n    }\n  }\n}\n\n/* Lambert Azimuthal Equal Area forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y, coslam, sinlam, sinphi, q, sinb, cosb, b, cosphi;\n  var lam = p.x;\n  var phi = p.y;\n\n  lam = adjust_lon(lam - this.long0);\n  if (this.sphere) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    coslam = Math.cos(lam);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      y = (this.mode === this.EQUIT) ? 1 + cosphi * coslam : 1 + this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      if (y <= EPSLN) {\n        return null;\n      }\n      y = Math.sqrt(2 / y);\n      x = y * cosphi * Math.sin(lam);\n      y *= (this.mode === this.EQUIT) ? sinphi : this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        coslam = -coslam;\n      }\n      if (Math.abs(phi + this.lat0) < EPSLN) {\n        return null;\n      }\n      y = FORTPI - phi * 0.5;\n      y = 2 * ((this.mode === this.S_POLE) ? Math.cos(y) : Math.sin(y));\n      x = y * Math.sin(lam);\n      y *= coslam;\n    }\n  }\n  else {\n    sinb = 0;\n    cosb = 0;\n    b = 0;\n    coslam = Math.cos(lam);\n    sinlam = Math.sin(lam);\n    sinphi = Math.sin(phi);\n    q = qsfnz(this.e, sinphi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinb = q / this.qp;\n      cosb = Math.sqrt(1 - sinb * sinb);\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n      b = 1 + this.sinb1 * sinb + this.cosb1 * cosb * coslam;\n      break;\n    case this.EQUIT:\n      b = 1 + cosb * coslam;\n      break;\n    case this.N_POLE:\n      b = HALF_PI + phi;\n      q = this.qp - q;\n      break;\n    case this.S_POLE:\n      b = phi - HALF_PI;\n      q = this.qp + q;\n      break;\n    }\n    if (Math.abs(b) < EPSLN) {\n      return null;\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n    case this.EQUIT:\n      b = Math.sqrt(2 / b);\n      if (this.mode === this.OBLIQ) {\n        y = this.ymf * b * (this.cosb1 * sinb - this.sinb1 * cosb * coslam);\n      }\n      else {\n        y = (b = Math.sqrt(2 / (1 + cosb * coslam))) * sinb * this.ymf;\n      }\n      x = this.xmf * b * cosb * sinlam;\n      break;\n    case this.N_POLE:\n    case this.S_POLE:\n      if (q >= 0) {\n        x = (b = Math.sqrt(q)) * sinlam;\n        y = coslam * ((this.mode === this.S_POLE) ? b : -b);\n      }\n      else {\n        x = y = 0;\n      }\n      break;\n    }\n  }\n\n  p.x = this.a * x + this.x0;\n  p.y = this.a * y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var lam, phi, cCe, sCe, q, rho, ab;\n  if (this.sphere) {\n    var cosz = 0,\n      rh, sinz = 0;\n\n    rh = Math.sqrt(x * x + y * y);\n    phi = rh * 0.5;\n    if (phi > 1) {\n      return null;\n    }\n    phi = 2 * Math.asin(phi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinz = Math.sin(phi);\n      cosz = Math.cos(phi);\n    }\n    switch (this.mode) {\n    case this.EQUIT:\n      phi = (Math.abs(rh) <= EPSLN) ? 0 : Math.asin(y * sinz / rh);\n      x *= sinz;\n      y = cosz * rh;\n      break;\n    case this.OBLIQ:\n      phi = (Math.abs(rh) <= EPSLN) ? this.lat0 : Math.asin(cosz * this.sinph0 + y * sinz * this.cosph0 / rh);\n      x *= sinz * this.cosph0;\n      y = (cosz - Math.sin(phi) * this.sinph0) * rh;\n      break;\n    case this.N_POLE:\n      y = -y;\n      phi = HALF_PI - phi;\n      break;\n    case this.S_POLE:\n      phi -= HALF_PI;\n      break;\n    }\n    lam = (y === 0 && (this.mode === this.EQUIT || this.mode === this.OBLIQ)) ? 0 : Math.atan2(x, y);\n  }\n  else {\n    ab = 0;\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      x /= this.dd;\n      y *= this.dd;\n      rho = Math.sqrt(x * x + y * y);\n      if (rho < EPSLN) {\n        p.x = this.long0;\n        p.y = this.lat0;\n        return p;\n      }\n      sCe = 2 * Math.asin(0.5 * rho / this.rq);\n      cCe = Math.cos(sCe);\n      x *= (sCe = Math.sin(sCe));\n      if (this.mode === this.OBLIQ) {\n        ab = cCe * this.sinb1 + y * sCe * this.cosb1 / rho;\n        q = this.qp * ab;\n        y = rho * this.cosb1 * cCe - y * this.sinb1 * sCe;\n      }\n      else {\n        ab = y * sCe / rho;\n        q = this.qp * ab;\n        y = rho * cCe;\n      }\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        y = -y;\n      }\n      q = (x * x + y * y);\n      if (!q) {\n        p.x = this.long0;\n        p.y = this.lat0;\n        return p;\n      }\n      ab = 1 - q / this.qp;\n      if (this.mode === this.S_POLE) {\n        ab = -ab;\n      }\n    }\n    lam = Math.atan2(x, y);\n    phi = authlat(Math.asin(ab), this.apa);\n  }\n\n  p.x = adjust_lon(this.long0 + lam);\n  p.y = phi;\n  return p;\n}\n\n/* determine latitude from authalic latitude */\nvar P00 = 0.33333333333333333333;\n\nvar P01 = 0.17222222222222222222;\nvar P02 = 0.10257936507936507936;\nvar P10 = 0.06388888888888888888;\nvar P11 = 0.06640211640211640211;\nvar P20 = 0.01641501294219154443;\n\nfunction authset(es) {\n  var t;\n  var APA = [];\n  APA[0] = es * P00;\n  t = es * es;\n  APA[0] += t * P01;\n  APA[1] = t * P10;\n  t *= es;\n  APA[0] += t * P02;\n  APA[1] += t * P11;\n  APA[2] = t * P20;\n  return APA;\n}\n\nfunction authlat(beta, APA) {\n  var t = beta + beta;\n  return (beta + APA[0] * Math.sin(t) + APA[1] * Math.sin(t + t) + APA[2] * Math.sin(t + t + t));\n}\n\nexport var names = [\"Lambert Azimuthal Equal Area\", \"Lambert_Azimuthal_Equal_Area\", \"laea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  S_POLE: S_POLE,\n  N_POLE: N_POLE,\n  EQUIT: EQUIT,\n  OBLIQ: OBLIQ\n};\n","export default function(x) {\n  if (Math.abs(x) > 1) {\n    x = (x > 1) ? 1 : -1;\n  }\n  return Math.asin(x);\n}","import msfnz from '../common/msfnz';\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e3 = Math.sqrt(this.es);\n\n  this.sin_po = Math.sin(this.lat1);\n  this.cos_po = Math.cos(this.lat1);\n  this.t1 = this.sin_po;\n  this.con = this.sin_po;\n  this.ms1 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs1 = qsfnz(this.e3, this.sin_po);\n\n  this.sin_po = Math.sin(this.lat2);\n  this.cos_po = Math.cos(this.lat2);\n  this.t2 = this.sin_po;\n  this.ms2 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs2 = qsfnz(this.e3, this.sin_po);\n\n  this.sin_po = Math.sin(this.lat0);\n  this.cos_po = Math.cos(this.lat0);\n  this.t3 = this.sin_po;\n  this.qs0 = qsfnz(this.e3, this.sin_po);\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns0 = (this.ms1 * this.ms1 - this.ms2 * this.ms2) / (this.qs2 - this.qs1);\n  }\n  else {\n    this.ns0 = this.con;\n  }\n  this.c = this.ms1 * this.ms1 + this.ns0 * this.qs1;\n  this.rh = this.a * Math.sqrt(this.c - this.ns0 * this.qs0) / this.ns0;\n}\n\n/* Albers Conical Equal Area forward equations--mapping lat,long to x,y\n  -------------------------------------------------------------------*/\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  this.sin_phi = Math.sin(lat);\n  this.cos_phi = Math.cos(lat);\n\n  var qs = qsfnz(this.e3, this.sin_phi);\n  var rh1 = this.a * Math.sqrt(this.c - this.ns0 * qs) / this.ns0;\n  var theta = this.ns0 * adjust_lon(lon - this.long0);\n  var x = rh1 * Math.sin(theta) + this.x0;\n  var y = this.rh - rh1 * Math.cos(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh1, qs, con, theta, lon, lat;\n\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  if (this.ns0 >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n  con = rh1 * this.ns0 / this.a;\n  if (this.sphere) {\n    lat = Math.asin((this.c - con * con) / (2 * this.ns0));\n  }\n  else {\n    qs = (this.c - con * con) / this.ns0;\n    lat = this.phi1z(this.e3, qs);\n  }\n\n  lon = adjust_lon(theta / this.ns0 + this.long0);\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\n/* Function to compute phi1, the latitude for the inverse of the\n   Albers Conical Equal-Area projection.\n-------------------------------------------*/\nexport function phi1z(eccent, qs) {\n  var sinphi, cosphi, con, com, dphi;\n  var phi = asinz(0.5 * qs);\n  if (eccent < EPSLN) {\n    return phi;\n  }\n\n  var eccnts = eccent * eccent;\n  for (var i = 1; i <= 25; i++) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    con = eccent * sinphi;\n    com = 1 - con * con;\n    dphi = 0.5 * com * com / cosphi * (qs / (1 - eccnts) - sinphi / com + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi = phi + dphi;\n    if (Math.abs(dphi) <= 1e-7) {\n      return phi;\n    }\n  }\n  return null;\n}\n\nexport var names = [\"Albers_Conic_Equal_Area\", \"Albers\", \"aea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  phi1z: phi1z\n};\n","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\n/*\n  reference:\n    Wolfram Mathworld \"Gnomonic Projection\"\n    http://mathworld.wolfram.com/GnomonicProjection.html\n    Accessed: 12th November 2009\n  */\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n  // Approximation for projecting points to the horizon (infinity)\n  this.infinity_dist = 1000 * this.a;\n  this.rc = 1;\n}\n\n/* Gnomonic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g;\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.x0 + this.a * ksp * cosphi * Math.sin(dlon) / g;\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon) / g;\n  }\n  else {\n\n    // Point is in the opposing hemisphere and is unprojectable\n    // We still need to return a reasonable point, so we project\n    // to infinity, on a bearing\n    // equivalent to the northern hemisphere equivalent\n    // This is a reasonable approximation for short shapes and lines that\n    // straddle the horizon.\n\n    x = this.x0 + this.infinity_dist * cosphi * Math.sin(dlon);\n    y = this.y0 + this.infinity_dist * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* Rho */\n  var sinc, cosc;\n  var c;\n  var lon, lat;\n\n  /* Inverse equations\n      -----------------*/\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n\n  if ((rh = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    c = Math.atan2(rh, this.rc);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n\n    lat = asinz(cosc * this.sin_p14 + (p.y * sinc * this.cos_p14) / rh);\n    lon = Math.atan2(p.x * sinc, rh * this.cos_p14 * cosc - p.y * this.sin_p14 * sinc);\n    lon = adjust_lon(this.long0 + lon);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gnom\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport qsfnz from '../common/qsfnz';\nimport msfnz from '../common/msfnz';\nimport iqsfnz from '../common/iqsfnz';\n\n/*\n  reference:\n    \"Cartographic Projection Procedures for the UNIX Environment-\n    A User's Manual\" by Gerald I. Evenden,\n    USGS Open File Report 90-284and Release 4 Interim Reports (2003)\n*/\nexport function init() {\n  //no-op\n  if (!this.sphere) {\n    this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n  }\n}\n\n/* Cylindrical Equal Area forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  if (this.sphere) {\n    x = this.x0 + this.a * dlon * Math.cos(this.lat_ts);\n    y = this.y0 + this.a * Math.sin(lat) / Math.cos(this.lat_ts);\n  }\n  else {\n    var qs = qsfnz(this.e, Math.sin(lat));\n    x = this.x0 + this.a * this.k0 * dlon;\n    y = this.y0 + this.a * qs * 0.5 / this.k0;\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Cylindrical Equal Area inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + (p.x / this.a) / Math.cos(this.lat_ts));\n    lat = Math.asin((p.y / this.a) * Math.cos(this.lat_ts));\n  }\n  else {\n    lat = iqsfnz(this.e, 2 * p.y * this.k0 / this.a);\n    lon = adjust_lon(this.long0 + p.x / (this.a * this.k0));\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"cea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, q) {\n  var temp = 1 - (1 - eccent * eccent) / (2 * eccent) * Math.log((1 - eccent) / (1 + eccent));\n  if (Math.abs(Math.abs(q) - temp) < 1.0E-6) {\n    if (q < 0) {\n      return (-1 * HALF_PI);\n    }\n    else {\n      return HALF_PI;\n    }\n  }\n  //var phi = 0.5* q/(1-eccent*eccent);\n  var phi = Math.asin(0.5 * q);\n  var dphi;\n  var sin_phi;\n  var cos_phi;\n  var con;\n  for (var i = 0; i < 30; i++) {\n    sin_phi = Math.sin(phi);\n    cos_phi = Math.cos(phi);\n    con = eccent * sin_phi;\n    dphi = Math.pow(1 - con * con, 2) / (2 * cos_phi) * (q / (1 - eccent * eccent) - sin_phi / (1 - con * con) + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //console.log(\"IQSFN-CONV:Latitude failed to converge after 30 iterations\");\n  return NaN;\n}\n","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Equidistant Cylindrical (Plate Carre)\";\n\n  this.rc = Math.cos(this.lat_ts);\n}\n\n// forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  var dlon = adjust_lon(lon - this.long0);\n  var dlat = adjust_lat(lat - this.lat0);\n  p.x = this.x0 + (this.a * dlon * this.rc);\n  p.y = this.y0 + (this.a * dlat);\n  return p;\n}\n\n// inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var x = p.x;\n  var y = p.y;\n\n  p.x = adjust_lon(this.long0 + ((x - this.x0) / (this.a * this.rc)));\n  p.y = adjust_lat(this.lat0 + ((y - this.y0) / (this.a)));\n  return p;\n}\n\nexport var names = [\"Equirectangular\", \"Equidistant_Cylindrical\", \"eqc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport mlfn from '../common/mlfn';\nimport {EPSLN} from '../constants/values';\n\nimport gN from '../common/gN';\nvar MAX_ITER = 20;\n\nexport function init() {\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2); // devait etre dans tmerc.js mais n y est pas donc je commente sinon retour de valeurs nulles\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n  this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0); //si que des zeros le calcul ne se fait pas\n}\n\n/* Polyconic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y, el;\n  var dlon = adjust_lon(lon - this.long0);\n  el = dlon * Math.sin(lat);\n  if (this.sphere) {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.a * this.lat0;\n    }\n    else {\n      x = this.a * Math.sin(el) / Math.tan(lat);\n      y = this.a * (adjust_lat(lat - this.lat0) + (1 - Math.cos(el)) / Math.tan(lat));\n    }\n  }\n  else {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.ml0;\n    }\n    else {\n      var nl = gN(this.a, this.e, Math.sin(lat)) / Math.tan(lat);\n      x = nl * Math.sin(el);\n      y = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, lat) - this.ml0 + nl * (1 - Math.cos(el));\n    }\n\n  }\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  var lon, lat, x, y, i;\n  var al, bl;\n  var phi, dphi;\n  x = p.x - this.x0;\n  y = p.y - this.y0;\n\n  if (this.sphere) {\n    if (Math.abs(y + this.a * this.lat0) <= EPSLN) {\n      lon = adjust_lon(x / this.a + this.long0);\n      lat = 0;\n    }\n    else {\n      al = this.lat0 + y / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var tanphi;\n      for (i = MAX_ITER; i; --i) {\n        tanphi = Math.tan(phi);\n        dphi = -1 * (al * (phi * tanphi + 1) - phi - 0.5 * (phi * phi + bl) * tanphi) / ((phi - al) / tanphi - 1);\n        phi += dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n      lon = adjust_lon(this.long0 + (Math.asin(x * Math.tan(phi) / this.a)) / Math.sin(lat));\n    }\n  }\n  else {\n    if (Math.abs(y + this.ml0) <= EPSLN) {\n      lat = 0;\n      lon = adjust_lon(this.long0 + x / this.a);\n    }\n    else {\n\n      al = (this.ml0 + y) / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var cl, mln, mlnp, ma;\n      var con;\n      for (i = MAX_ITER; i; --i) {\n        con = this.e * Math.sin(phi);\n        cl = Math.sqrt(1 - con * con) * Math.tan(phi);\n        mln = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n        mlnp = this.e0 - 2 * this.e1 * Math.cos(2 * phi) + 4 * this.e2 * Math.cos(4 * phi) - 6 * this.e3 * Math.cos(6 * phi);\n        ma = mln / this.a;\n        dphi = (al * (cl * ma + 1) - ma - 0.5 * cl * (ma * ma + bl)) / (this.es * Math.sin(2 * phi) * (ma * ma + bl - 2 * al * ma) / (4 * cl) + (al - ma) * (cl * mlnp - 2 / Math.sin(2 * phi)) - mlnp);\n        phi -= dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n\n      //lat=phi4z(this.e,this.e0,this.e1,this.e2,this.e3,al,bl,0,0);\n      cl = Math.sqrt(1 - this.es * Math.pow(Math.sin(lat), 2)) * Math.tan(lat);\n      lon = adjust_lon(this.long0 + Math.asin(x * cl / this.a) / Math.sin(lat));\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Polyconic\", \"poly\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {SEC_TO_RAD} from '../constants/values';\n\n/*\n  reference\n    Department of Land and Survey Technical Circular 1973/32\n      http://www.linz.govt.nz/docs/miscellaneous/nz-map-definition.pdf\n    OSG Technical Report 4.1\n      http://www.linz.govt.nz/docs/miscellaneous/nzmg.pdf\n  */\n\n/**\n * iterations: Number of iterations to refine inverse transform.\n *     0 -> km accuracy\n *     1 -> m accuracy -- suitable for most mapping applications\n *     2 -> mm accuracy\n */\nexport var iterations = 1;\n\nexport function init() {\n  this.A = [];\n  this.A[1] = 0.6399175073;\n  this.A[2] = -0.1358797613;\n  this.A[3] = 0.063294409;\n  this.A[4] = -0.02526853;\n  this.A[5] = 0.0117879;\n  this.A[6] = -0.0055161;\n  this.A[7] = 0.0026906;\n  this.A[8] = -0.001333;\n  this.A[9] = 0.00067;\n  this.A[10] = -0.00034;\n\n  this.B_re = [];\n  this.B_im = [];\n  this.B_re[1] = 0.7557853228;\n  this.B_im[1] = 0;\n  this.B_re[2] = 0.249204646;\n  this.B_im[2] = 0.003371507;\n  this.B_re[3] = -0.001541739;\n  this.B_im[3] = 0.041058560;\n  this.B_re[4] = -0.10162907;\n  this.B_im[4] = 0.01727609;\n  this.B_re[5] = -0.26623489;\n  this.B_im[5] = -0.36249218;\n  this.B_re[6] = -0.6870983;\n  this.B_im[6] = -1.1651967;\n\n  this.C_re = [];\n  this.C_im = [];\n  this.C_re[1] = 1.3231270439;\n  this.C_im[1] = 0;\n  this.C_re[2] = -0.577245789;\n  this.C_im[2] = -0.007809598;\n  this.C_re[3] = 0.508307513;\n  this.C_im[3] = -0.112208952;\n  this.C_re[4] = -0.15094762;\n  this.C_im[4] = 0.18200602;\n  this.C_re[5] = 1.01418179;\n  this.C_im[5] = 1.64497696;\n  this.C_re[6] = 1.9660549;\n  this.C_im[6] = 2.5127645;\n\n  this.D = [];\n  this.D[1] = 1.5627014243;\n  this.D[2] = 0.5185406398;\n  this.D[3] = -0.03333098;\n  this.D[4] = -0.1052906;\n  this.D[5] = -0.0368594;\n  this.D[6] = 0.007317;\n  this.D[7] = 0.01220;\n  this.D[8] = 0.00394;\n  this.D[9] = -0.0013;\n}\n\n/**\n    New Zealand Map Grid Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var n;\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lat = lat - this.lat0;\n  var delta_lon = lon - this.long0;\n\n  // 1. Calculate d_phi and d_psi    ...                          // and d_lambda\n  // For this algorithm, delta_latitude is in seconds of arc x 10-5, so we need to scale to those units. Longitude is radians.\n  var d_phi = delta_lat / SEC_TO_RAD * 1E-5;\n  var d_lambda = delta_lon;\n  var d_phi_n = 1; // d_phi^0\n\n  var d_psi = 0;\n  for (n = 1; n <= 10; n++) {\n    d_phi_n = d_phi_n * d_phi;\n    d_psi = d_psi + this.A[n] * d_phi_n;\n  }\n\n  // 2. Calculate theta\n  var th_re = d_psi;\n  var th_im = d_lambda;\n\n  // 3. Calculate z\n  var th_n_re = 1;\n  var th_n_im = 0; // theta^0\n  var th_n_re1;\n  var th_n_im1;\n\n  var z_re = 0;\n  var z_im = 0;\n  for (n = 1; n <= 6; n++) {\n    th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n    th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n    th_n_re = th_n_re1;\n    th_n_im = th_n_im1;\n    z_re = z_re + this.B_re[n] * th_n_re - this.B_im[n] * th_n_im;\n    z_im = z_im + this.B_im[n] * th_n_re + this.B_re[n] * th_n_im;\n  }\n\n  // 4. Calculate easting and northing\n  p.x = (z_im * this.a) + this.x0;\n  p.y = (z_re * this.a) + this.y0;\n\n  return p;\n}\n\n/**\n    New Zealand Map Grid Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var n;\n  var x = p.x;\n  var y = p.y;\n\n  var delta_x = x - this.x0;\n  var delta_y = y - this.y0;\n\n  // 1. Calculate z\n  var z_re = delta_y / this.a;\n  var z_im = delta_x / this.a;\n\n  // 2a. Calculate theta - first approximation gives km accuracy\n  var z_n_re = 1;\n  var z_n_im = 0; // z^0\n  var z_n_re1;\n  var z_n_im1;\n\n  var th_re = 0;\n  var th_im = 0;\n  for (n = 1; n <= 6; n++) {\n    z_n_re1 = z_n_re * z_re - z_n_im * z_im;\n    z_n_im1 = z_n_im * z_re + z_n_re * z_im;\n    z_n_re = z_n_re1;\n    z_n_im = z_n_im1;\n    th_re = th_re + this.C_re[n] * z_n_re - this.C_im[n] * z_n_im;\n    th_im = th_im + this.C_im[n] * z_n_re + this.C_re[n] * z_n_im;\n  }\n\n  // 2b. Iterate to refine the accuracy of the calculation\n  //        0 iterations gives km accuracy\n  //        1 iteration gives m accuracy -- good enough for most mapping applications\n  //        2 iterations bives mm accuracy\n  for (var i = 0; i < this.iterations; i++) {\n    var th_n_re = th_re;\n    var th_n_im = th_im;\n    var th_n_re1;\n    var th_n_im1;\n\n    var num_re = z_re;\n    var num_im = z_im;\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      num_re = num_re + (n - 1) * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      num_im = num_im + (n - 1) * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    th_n_re = 1;\n    th_n_im = 0;\n    var den_re = this.B_re[1];\n    var den_im = this.B_im[1];\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      den_re = den_re + n * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      den_im = den_im + n * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    // Complex division\n    var den2 = den_re * den_re + den_im * den_im;\n    th_re = (num_re * den_re + num_im * den_im) / den2;\n    th_im = (num_im * den_re - num_re * den_im) / den2;\n  }\n\n  // 3. Calculate d_phi              ...                                    // and d_lambda\n  var d_psi = th_re;\n  var d_lambda = th_im;\n  var d_psi_n = 1; // d_psi^0\n\n  var d_phi = 0;\n  for (n = 1; n <= 9; n++) {\n    d_psi_n = d_psi_n * d_psi;\n    d_phi = d_phi + this.D[n] * d_psi_n;\n  }\n\n  // 4. Calculate latitude and longitude\n  // d_phi is calcuated in second of arc * 10^-5, so we need to scale back to radians. d_lambda is in radians.\n  var lat = this.lat0 + (d_phi * SEC_TO_RAD * 1E5);\n  var lon = this.long0 + d_lambda;\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"New_Zealand_Map_Grid\", \"nzmg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\n\n/* Initialize the Miller Cylindrical projection\n  -------------------------------------------*/\nexport function init() {\n  //no-op\n}\n\n/* Miller Cylindrical forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x = this.x0 + this.a * dlon;\n  var y = this.y0 + this.a * Math.log(Math.tan((Math.PI / 4) + (lat / 2.5))) * 1.25;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Miller Cylindrical inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n\n  var lon = adjust_lon(this.long0 + p.x / this.a);\n  var lat = 2.5 * (Math.atan(Math.exp(0.8 * p.y / this.a)) - Math.PI / 4);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Miller_Cylindrical\", \"mill\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport pj_enfn from '../common/pj_enfn';\nvar MAX_ITER = 20;\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n\nexport function init() {\n  /* Place parameters in static storage for common use\n    -------------------------------------------------*/\n\n\n  if (!this.sphere) {\n    this.en = pj_enfn(this.es);\n  }\n  else {\n    this.n = 1;\n    this.m = 0;\n    this.es = 0;\n    this.C_y = Math.sqrt((this.m + 1) / this.n);\n    this.C_x = this.C_y / (this.m + 1);\n  }\n\n}\n\n/* Sinusoidal forward equations--mapping lat,long to x,y\n  -----------------------------------------------------*/\nexport function forward(p) {\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n    -----------------*/\n  lon = adjust_lon(lon - this.long0);\n\n  if (this.sphere) {\n    if (!this.m) {\n      lat = this.n !== 1 ? Math.asin(this.n * Math.sin(lat)) : lat;\n    }\n    else {\n      var k = this.n * Math.sin(lat);\n      for (var i = MAX_ITER; i; --i) {\n        var V = (this.m * lat + Math.sin(lat) - k) / (this.m + Math.cos(lat));\n        lat -= V;\n        if (Math.abs(V) < EPSLN) {\n          break;\n        }\n      }\n    }\n    x = this.a * this.C_x * lon * (this.m + Math.cos(lat));\n    y = this.a * this.C_y * lat;\n\n  }\n  else {\n\n    var s = Math.sin(lat);\n    var c = Math.cos(lat);\n    y = this.a * pj_mlfn(lat, s, c, this.en);\n    x = this.a * lon * c / Math.sqrt(1 - this.es * s * s);\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var lat, temp, lon, s;\n\n  p.x -= this.x0;\n  lon = p.x / this.a;\n  p.y -= this.y0;\n  lat = p.y / this.a;\n\n  if (this.sphere) {\n    lat /= this.C_y;\n    lon = lon / (this.C_x * (this.m + Math.cos(lat)));\n    if (this.m) {\n      lat = asinz((this.m * lat + Math.sin(lat)) / this.n);\n    }\n    else if (this.n !== 1) {\n      lat = asinz(Math.sin(lat) / this.n);\n    }\n    lon = adjust_lon(lon + this.long0);\n    lat = adjust_lat(lat);\n  }\n  else {\n    lat = pj_inv_mlfn(p.y / this.a, this.es, this.en);\n    s = Math.abs(lat);\n    if (s < HALF_PI) {\n      s = Math.sin(lat);\n      temp = this.long0 + p.x * Math.sqrt(1 - this.es * s * s) / (this.a * Math.cos(lat));\n      //temp = this.long0 + p.x / (this.a * Math.cos(lat));\n      lon = adjust_lon(temp);\n    }\n    else if ((s - EPSLN) < HALF_PI) {\n      lon = this.long0;\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Sinusoidal\", \"sinu\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nexport function init() {}\nimport {EPSLN} from '../constants/values';\n/* Mollweide forward equations--mapping lat,long to x,y\n    ----------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var theta = lat;\n  var con = Math.PI * Math.sin(lat);\n\n  /* Iterate using the Newton-Raphson method to find theta\n      -----------------------------------------------------*/\n  while (true) {\n    var delta_theta = -(theta + Math.sin(theta) - con) / (1 + Math.cos(theta));\n    theta += delta_theta;\n    if (Math.abs(delta_theta) < EPSLN) {\n      break;\n    }\n  }\n  theta /= 2;\n\n  /* If the latitude is 90 deg, force the x coordinate to be \"0 + false easting\"\n       this is done here because of precision problems with \"cos(theta)\"\n       --------------------------------------------------------------------------*/\n  if (Math.PI / 2 - Math.abs(lat) < EPSLN) {\n    delta_lon = 0;\n  }\n  var x = 0.900316316158 * this.a * delta_lon * Math.cos(theta) + this.x0;\n  var y = 1.4142135623731 * this.a * Math.sin(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var theta;\n  var arg;\n\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  arg = p.y / (1.4142135623731 * this.a);\n\n  /* Because of division by zero problems, 'arg' can not be 1.  Therefore\n       a number very close to one is used instead.\n       -------------------------------------------------------------------*/\n  if (Math.abs(arg) > 0.999999999999) {\n    arg = 0.999999999999;\n  }\n  theta = Math.asin(arg);\n  var lon = adjust_lon(this.long0 + (p.x / (0.900316316158 * this.a * Math.cos(theta))));\n  if (lon < (-Math.PI)) {\n    lon = -Math.PI;\n  }\n  if (lon > Math.PI) {\n    lon = Math.PI;\n  }\n  arg = (2 * theta + Math.sin(2 * theta)) / Math.PI;\n  if (Math.abs(arg) > 1) {\n    arg = 1;\n  }\n  var lat = Math.asin(arg);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mollweide\", \"moll\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport msfnz from '../common/msfnz';\nimport mlfn from '../common/mlfn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.lat2 = this.lat2 || this.lat1;\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n\n  this.sinphi = Math.sin(this.lat1);\n  this.cosphi = Math.cos(this.lat1);\n\n  this.ms1 = msfnz(this.e, this.sinphi, this.cosphi);\n  this.ml1 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat1);\n\n  if (Math.abs(this.lat1 - this.lat2) < EPSLN) {\n    this.ns = this.sinphi;\n  }\n  else {\n    this.sinphi = Math.sin(this.lat2);\n    this.cosphi = Math.cos(this.lat2);\n    this.ms2 = msfnz(this.e, this.sinphi, this.cosphi);\n    this.ml2 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat2);\n    this.ns = (this.ms1 - this.ms2) / (this.ml2 - this.ml1);\n  }\n  this.g = this.ml1 + this.ms1 / this.ns;\n  this.ml0 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  this.rh = this.a * (this.g - this.ml0);\n}\n\n/* Equidistant Conic forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var rh1;\n\n  /* Forward equations\n      -----------------*/\n  if (this.sphere) {\n    rh1 = this.a * (this.g - lat);\n  }\n  else {\n    var ml = mlfn(this.e0, this.e1, this.e2, this.e3, lat);\n    rh1 = this.a * (this.g - ml);\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  var x = this.x0 + rh1 * Math.sin(theta);\n  var y = this.y0 + this.rh - rh1 * Math.cos(theta);\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  var con, rh1, lat, lon;\n  if (this.ns >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    lat = adjust_lat(this.g - rh1 / this.a);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    var ml = this.g - rh1 / this.a;\n    lat = imlfn(ml, this.e0, this.e1, this.e2, this.e3);\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n\n}\n\nexport var names = [\"Equidistant_Conic\", \"eqdc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n/* Initialize the Van Der Grinten projection\n  ----------------------------------------*/\nexport function init() {\n  //this.R = 6370997; //Radius of earth\n  this.R = this.a;\n}\n\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  /* Forward equations\n    -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x, y;\n\n  if (Math.abs(lat) <= EPSLN) {\n    x = this.x0 + this.R * dlon;\n    y = this.y0;\n  }\n  var theta = asinz(2 * Math.abs(lat / Math.PI));\n  if ((Math.abs(dlon) <= EPSLN) || (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN)) {\n    x = this.x0;\n    if (lat >= 0) {\n      y = this.y0 + Math.PI * this.R * Math.tan(0.5 * theta);\n    }\n    else {\n      y = this.y0 + Math.PI * this.R * -Math.tan(0.5 * theta);\n    }\n    //  return(OK);\n  }\n  var al = 0.5 * Math.abs((Math.PI / dlon) - (dlon / Math.PI));\n  var asq = al * al;\n  var sinth = Math.sin(theta);\n  var costh = Math.cos(theta);\n\n  var g = costh / (sinth + costh - 1);\n  var gsq = g * g;\n  var m = g * (2 / sinth - 1);\n  var msq = m * m;\n  var con = Math.PI * this.R * (al * (g - msq) + Math.sqrt(asq * (g - msq) * (g - msq) - (msq + asq) * (gsq - msq))) / (msq + asq);\n  if (dlon < 0) {\n    con = -con;\n  }\n  x = this.x0 + con;\n  //con = Math.abs(con / (Math.PI * this.R));\n  var q = asq + g;\n  con = Math.PI * this.R * (m * q - al * Math.sqrt((msq + asq) * (asq + 1) - q * q)) / (msq + asq);\n  if (lat >= 0) {\n    //y = this.y0 + Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 + con;\n  }\n  else {\n    //y = this.y0 - Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 - con;\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Van Der Grinten inverse equations--mapping x,y to lat/long\n  ---------------------------------------------------------*/\nexport function inverse(p) {\n  var lon, lat;\n  var xx, yy, xys, c1, c2, c3;\n  var a1;\n  var m1;\n  var con;\n  var th1;\n  var d;\n\n  /* inverse equations\n    -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  con = Math.PI * this.R;\n  xx = p.x / con;\n  yy = p.y / con;\n  xys = xx * xx + yy * yy;\n  c1 = -Math.abs(yy) * (1 + xys);\n  c2 = c1 - 2 * yy * yy + xx * xx;\n  c3 = -2 * c1 + 1 + 2 * yy * yy + xys * xys;\n  d = yy * yy / c3 + (2 * c2 * c2 * c2 / c3 / c3 / c3 - 9 * c1 * c2 / c3 / c3) / 27;\n  a1 = (c1 - c2 * c2 / 3 / c3) / c3;\n  m1 = 2 * Math.sqrt(-a1 / 3);\n  con = ((3 * d) / a1) / m1;\n  if (Math.abs(con) > 1) {\n    if (con >= 0) {\n      con = 1;\n    }\n    else {\n      con = -1;\n    }\n  }\n  th1 = Math.acos(con) / 3;\n  if (p.y >= 0) {\n    lat = (-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n  else {\n    lat = -(-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n\n  if (Math.abs(xx) < EPSLN) {\n    lon = this.long0;\n  }\n  else {\n    lon = adjust_lon(this.long0 + Math.PI * (xys - 1 + Math.sqrt(1 + 2 * (xx * xx - yy * yy) + xys * xys)) / 2 / xx);\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Van_der_Grinten_I\", \"VanDerGrinten\", \"vandg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport asinz from '../common/asinz';\nimport imlfn from '../common/imlfn';\n\n\n\nexport function init() {\n  this.sin_p12 = Math.sin(this.lat0);\n  this.cos_p12 = Math.cos(this.lat0);\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var dlon = adjust_lon(lon - this.long0);\n  var e0, e1, e2, e3, Mlp, Ml, tanphi, Nl1, Nl, psi, Az, G, H, GH, Hs, c, kp, cos_c, s, s2, s3, s4, s5;\n  if (this.sphere) {\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      p.x = this.x0 + this.a * (HALF_PI - lat) * Math.sin(dlon);\n      p.y = this.y0 - this.a * (HALF_PI - lat) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      p.x = this.x0 + this.a * (HALF_PI + lat) * Math.sin(dlon);\n      p.y = this.y0 + this.a * (HALF_PI + lat) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //default case\n      cos_c = this.sin_p12 * sinphi + this.cos_p12 * cosphi * Math.cos(dlon);\n      c = Math.acos(cos_c);\n      kp = c ? c / Math.sin(c) : 1;\n      p.x = this.x0 + this.a * kp * cosphi * Math.sin(dlon);\n      p.y = this.y0 + this.a * kp * (this.cos_p12 * sinphi - this.sin_p12 * cosphi * Math.cos(dlon));\n      return p;\n    }\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp - Ml) * Math.sin(dlon);\n      p.y = this.y0 - (Mlp - Ml) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp + Ml) * Math.sin(dlon);\n      p.y = this.y0 + (Mlp + Ml) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //Default case\n      tanphi = sinphi / cosphi;\n      Nl1 = gN(this.a, this.e, this.sin_p12);\n      Nl = gN(this.a, this.e, sinphi);\n      psi = Math.atan((1 - this.es) * tanphi + this.es * Nl1 * this.sin_p12 / (Nl * cosphi));\n      Az = Math.atan2(Math.sin(dlon), this.cos_p12 * Math.tan(psi) - this.sin_p12 * Math.cos(dlon));\n      if (Az === 0) {\n        s = Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else if (Math.abs(Math.abs(Az) - Math.PI) <= EPSLN) {\n        s = -Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else {\n        s = Math.asin(Math.sin(dlon) * Math.cos(psi) / Math.sin(Az));\n      }\n      G = this.e * this.sin_p12 / Math.sqrt(1 - this.es);\n      H = this.e * this.cos_p12 * Math.cos(Az) / Math.sqrt(1 - this.es);\n      GH = G * H;\n      Hs = H * H;\n      s2 = s * s;\n      s3 = s2 * s;\n      s4 = s3 * s;\n      s5 = s4 * s;\n      c = Nl1 * s * (1 - s2 * Hs * (1 - Hs) / 6 + s3 / 8 * GH * (1 - 2 * Hs) + s4 / 120 * (Hs * (4 - 7 * Hs) - 3 * G * G * (1 - 7 * Hs)) - s5 / 48 * GH);\n      p.x = this.x0 + c * Math.sin(Az);\n      p.y = this.y0 + c * Math.cos(Az);\n      return p;\n    }\n  }\n\n\n}\n\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var rh, z, sinz, cosz, lon, lat, con, e0, e1, e2, e3, Mlp, M, N1, psi, Az, cosAz, tmp, A, B, D, Ee, F, sinpsi;\n  if (this.sphere) {\n    rh = Math.sqrt(p.x * p.x + p.y * p.y);\n    if (rh > (2 * HALF_PI * this.a)) {\n      return;\n    }\n    z = rh / this.a;\n\n    sinz = Math.sin(z);\n    cosz = Math.cos(z);\n\n    lon = this.long0;\n    if (Math.abs(rh) <= EPSLN) {\n      lat = this.lat0;\n    }\n    else {\n      lat = asinz(cosz * this.sin_p12 + (p.y * sinz * this.cos_p12) / rh);\n      con = Math.abs(this.lat0) - HALF_PI;\n      if (Math.abs(con) <= EPSLN) {\n        if (this.lat0 >= 0) {\n          lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n        }\n        else {\n          lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n        }\n      }\n      else {\n        /*con = cosz - this.sin_p12 * Math.sin(lat);\n        if ((Math.abs(con) < EPSLN) && (Math.abs(p.x) < EPSLN)) {\n          //no-op, just keep the lon value as is\n        } else {\n          var temp = Math.atan2((p.x * sinz * this.cos_p12), (con * rh));\n          lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz * this.cos_p12), (con * rh)));\n        }*/\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * sinz, rh * this.cos_p12 * cosz - p.y * this.sin_p12 * sinz));\n      }\n    }\n\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = Mlp - rh;\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = rh - Mlp;\n\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else {\n      //default case\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      Az = Math.atan2(p.x, p.y);\n      N1 = gN(this.a, this.e, this.sin_p12);\n      cosAz = Math.cos(Az);\n      tmp = this.e * this.cos_p12 * cosAz;\n      A = -tmp * tmp / (1 - this.es);\n      B = 3 * this.es * (1 - A) * this.sin_p12 * this.cos_p12 * cosAz / (1 - this.es);\n      D = rh / N1;\n      Ee = D - A * (1 + A) * Math.pow(D, 3) / 6 - B * (1 + 3 * A) * Math.pow(D, 4) / 24;\n      F = 1 - A * Ee * Ee / 2 - D * Ee * Ee * Ee / 6;\n      psi = Math.asin(this.sin_p12 * Math.cos(Ee) + this.cos_p12 * Math.sin(Ee) * cosAz);\n      lon = adjust_lon(this.long0 + Math.asin(Math.sin(Az) * Math.sin(Ee) / Math.cos(psi)));\n      sinpsi = Math.sin(psi);\n      lat = Math.atan2((sinpsi - this.es * F * this.sin_p12) * Math.tan(psi), sinpsi * (1 - this.es));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n  }\n\n}\n\nexport var names = [\"Azimuthal_Equidistant\", \"aeqd\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nexport function init() {\n  //double temp;      /* temporary variable    */\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n}\n\n/* Orthographic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g, x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.a * ksp * cosphi * Math.sin(dlon);\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* height above ellipsoid      */\n  var z; /* angle          */\n  var sinz, cosz; /* sin of z and cos of z      */\n  var con;\n  var lon, lat;\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  z = asinz(rh / this.a);\n\n  sinz = Math.sin(z);\n  cosz = Math.cos(z);\n\n  lon = this.long0;\n  if (Math.abs(rh) <= EPSLN) {\n    lat = this.lat0;\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lat = asinz(cosz * this.sin_p14 + (p.y * sinz * this.cos_p14) / rh);\n  con = Math.abs(this.lat0) - HALF_PI;\n  if (Math.abs(con) <= EPSLN) {\n    if (this.lat0 >= 0) {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n    }\n    else {\n      lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz), rh * this.cos_p14 * cosz - p.y * this.sin_p14 * sinz));\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"ortho\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","// QSC projection rewritten from the original PROJ4\n// https://github.com/OSGeo/proj.4/blob/master/src/PJ_qsc.c\n\nimport {EPSLN, TWO_PI, SPI, HALF_PI, FORTPI} from '../constants/values';\n\n/* constants */\nvar FACE_ENUM = {\n    FRONT: 1,\n    RIGHT: 2,\n    BACK: 3,\n    LEFT: 4,\n    TOP: 5,\n    BOTTOM: 6\n};\n\nvar AREA_ENUM = {\n    AREA_0: 1,\n    AREA_1: 2,\n    AREA_2: 3,\n    AREA_3: 4\n};\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Quadrilateralized Spherical Cube\";\n\n  /* Determine the cube face from the center of projection. */\n  if (this.lat0 >= HALF_PI - FORTPI / 2.0) {\n    this.face = FACE_ENUM.TOP;\n  } else if (this.lat0 <= -(HALF_PI - FORTPI / 2.0)) {\n    this.face = FACE_ENUM.BOTTOM;\n  } else if (Math.abs(this.long0) <= FORTPI) {\n    this.face = FACE_ENUM.FRONT;\n  } else if (Math.abs(this.long0) <= HALF_PI + FORTPI) {\n    this.face = this.long0 > 0.0 ? FACE_ENUM.RIGHT : FACE_ENUM.LEFT;\n  } else {\n    this.face = FACE_ENUM.BACK;\n  }\n\n  /* Fill in useful values for the ellipsoid <-> sphere shift\n   * described in [LK12]. */\n  if (this.es !== 0) {\n    this.one_minus_f = 1 - (this.a - this.b) / this.a;\n    this.one_minus_f_squared = this.one_minus_f * this.one_minus_f;\n  }\n}\n\n// QSC forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n  var xy = {x: 0, y: 0};\n  var lat, lon;\n  var theta, phi;\n  var t, mu;\n  /* nu; */\n  var area = {value: 0};\n\n  // move lon according to projection's lon\n  p.x -= this.long0;\n\n  /* Convert the geodetic latitude to a geocentric latitude.\n   * This corresponds to the shift from the ellipsoid to the sphere\n   * described in [LK12]. */\n  if (this.es !== 0) {//if (P->es != 0) {\n    lat = Math.atan(this.one_minus_f_squared * Math.tan(p.y));\n  } else {\n    lat = p.y;\n  }\n\n  /* Convert the input lat, lon into theta, phi as used by QSC.\n   * This depends on the cube face and the area on it.\n   * For the top and bottom face, we can compute theta and phi\n   * directly from phi, lam. For the other faces, we must use\n   * unit sphere cartesian coordinates as an intermediate step. */\n  lon = p.x; //lon = lp.lam;\n  if (this.face === FACE_ENUM.TOP) {\n    phi = HALF_PI - lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = lon - HALF_PI;\n    } else if (lon > HALF_PI + FORTPI || lon <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = (lon > 0.0 ? lon - SPI : lon + SPI);\n    } else if (lon > -(HALF_PI + FORTPI) && lon <= -FORTPI) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = lon + HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = lon;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = HALF_PI + lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = -lon + HALF_PI;\n    } else if (lon < FORTPI && lon >= -FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = -lon;\n    } else if (lon < -FORTPI && lon >= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = -lon - HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = (lon > 0.0 ? -lon + SPI : -lon - SPI);\n    }\n  } else {\n    var q, r, s;\n    var sinlat, coslat;\n    var sinlon, coslon;\n\n    if (this.face === FACE_ENUM.RIGHT) {\n      lon = qsc_shift_lon_origin(lon, +HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lon = qsc_shift_lon_origin(lon, +SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lon = qsc_shift_lon_origin(lon, -HALF_PI);\n    }\n    sinlat = Math.sin(lat);\n    coslat = Math.cos(lat);\n    sinlon = Math.sin(lon);\n    coslon = Math.cos(lon);\n    q = coslat * coslon;\n    r = coslat * sinlon;\n    s = sinlat;\n\n    if (this.face === FACE_ENUM.FRONT) {\n      phi = Math.acos(q);\n      theta = qsc_fwd_equat_face_theta(phi, s, r, area);\n    } else if (this.face === FACE_ENUM.RIGHT) {\n      phi = Math.acos(r);\n      theta = qsc_fwd_equat_face_theta(phi, s, -q, area);\n    } else if (this.face === FACE_ENUM.BACK) {\n      phi = Math.acos(-q);\n      theta = qsc_fwd_equat_face_theta(phi, s, -r, area);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      phi = Math.acos(-r);\n      theta = qsc_fwd_equat_face_theta(phi, s, q, area);\n    } else {\n      /* Impossible */\n      phi = theta = 0;\n      area.value = AREA_ENUM.AREA_0;\n    }\n  }\n\n  /* Compute mu and nu for the area of definition.\n   * For mu, see Eq. (3-21) in [OL76], but note the typos:\n   * compare with Eq. (3-14). For nu, see Eq. (3-38). */\n  mu = Math.atan((12 / SPI) * (theta + Math.acos(Math.sin(theta) * Math.cos(FORTPI)) - HALF_PI));\n  t = Math.sqrt((1 - Math.cos(phi)) / (Math.cos(mu) * Math.cos(mu)) / (1 - Math.cos(Math.atan(1 / Math.cos(theta)))));\n\n  /* Apply the result to the real area. */\n  if (area.value === AREA_ENUM.AREA_1) {\n    mu += HALF_PI;\n  } else if (area.value === AREA_ENUM.AREA_2) {\n    mu += SPI;\n  } else if (area.value === AREA_ENUM.AREA_3) {\n    mu += 1.5 * SPI;\n  }\n\n  /* Now compute x, y from mu and nu */\n  xy.x = t * Math.cos(mu);\n  xy.y = t * Math.sin(mu);\n  xy.x = xy.x * this.a + this.x0;\n  xy.y = xy.y * this.a + this.y0;\n\n  p.x = xy.x;\n  p.y = xy.y;\n  return p;\n}\n\n// QSC inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n  var lp = {lam: 0, phi: 0};\n  var mu, nu, cosmu, tannu;\n  var tantheta, theta, cosphi, phi;\n  var t;\n  var area = {value: 0};\n\n  /* de-offset */\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  /* Convert the input x, y to the mu and nu angles as used by QSC.\n   * This depends on the area of the cube face. */\n  nu = Math.atan(Math.sqrt(p.x * p.x + p.y * p.y));\n  mu = Math.atan2(p.y, p.x);\n  if (p.x >= 0.0 && p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_0;\n  } else if (p.y >= 0.0 && p.y >= Math.abs(p.x)) {\n    area.value = AREA_ENUM.AREA_1;\n    mu -= HALF_PI;\n  } else if (p.x < 0.0 && -p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_2;\n    mu = (mu < 0.0 ? mu + SPI : mu - SPI);\n  } else {\n    area.value = AREA_ENUM.AREA_3;\n    mu += HALF_PI;\n  }\n\n  /* Compute phi and theta for the area of definition.\n   * The inverse projection is not described in the original paper, but some\n   * good hints can be found here (as of 2011-12-14):\n   * http://fits.gsfc.nasa.gov/fitsbits/saf.93/saf.9302\n   * (search for \"Message-Id: <9302181759.AA25477 at fits.cv.nrao.edu>\") */\n  t = (SPI / 12) * Math.tan(mu);\n  tantheta = Math.sin(t) / (Math.cos(t) - (1 / Math.sqrt(2)));\n  theta = Math.atan(tantheta);\n  cosmu = Math.cos(mu);\n  tannu = Math.tan(nu);\n  cosphi = 1 - cosmu * cosmu * tannu * tannu * (1 - Math.cos(Math.atan(1 / Math.cos(theta))));\n  if (cosphi < -1) {\n    cosphi = -1;\n  } else if (cosphi > +1) {\n    cosphi = +1;\n  }\n\n  /* Apply the result to the real area on the cube face.\n   * For the top and bottom face, we can compute phi and lam directly.\n   * For the other faces, we must use unit sphere cartesian coordinates\n   * as an intermediate step. */\n  if (this.face === FACE_ENUM.TOP) {\n    phi = Math.acos(cosphi);\n    lp.phi = HALF_PI - phi;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = (theta < 0.0 ? theta + SPI : theta - SPI);\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = theta;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = Math.acos(cosphi);\n    lp.phi = phi - HALF_PI;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = -theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = -theta;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = -theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = (theta < 0.0 ? -theta - SPI : -theta + SPI);\n    }\n  } else {\n    /* Compute phi and lam via cartesian unit sphere coordinates. */\n    var q, r, s;\n    q = cosphi;\n    t = q * q;\n    if (t >= 1) {\n      s = 0;\n    } else {\n      s = Math.sqrt(1 - t) * Math.sin(theta);\n    }\n    t += s * s;\n    if (t >= 1) {\n      r = 0;\n    } else {\n      r = Math.sqrt(1 - t);\n    }\n    /* Rotate q,r,s into the correct area. */\n    if (area.value === AREA_ENUM.AREA_1) {\n      t = r;\n      r = -s;\n      s = t;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      r = -r;\n      s = -s;\n    } else if (area.value === AREA_ENUM.AREA_3) {\n      t = r;\n      r = s;\n      s = -t;\n    }\n    /* Rotate q,r,s into the correct cube face. */\n    if (this.face === FACE_ENUM.RIGHT) {\n      t = q;\n      q = -r;\n      r = t;\n    } else if (this.face === FACE_ENUM.BACK) {\n      q = -q;\n      r = -r;\n    } else if (this.face === FACE_ENUM.LEFT) {\n      t = q;\n      q = r;\n      r = -t;\n    }\n    /* Now compute phi and lam from the unit sphere coordinates. */\n    lp.phi = Math.acos(-s) - HALF_PI;\n    lp.lam = Math.atan2(r, q);\n    if (this.face === FACE_ENUM.RIGHT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, +HALF_PI);\n    }\n  }\n\n  /* Apply the shift from the sphere to the ellipsoid as described\n   * in [LK12]. */\n  if (this.es !== 0) {\n    var invert_sign;\n    var tanphi, xa;\n    invert_sign = (lp.phi < 0 ? 1 : 0);\n    tanphi = Math.tan(lp.phi);\n    xa = this.b / Math.sqrt(tanphi * tanphi + this.one_minus_f_squared);\n    lp.phi = Math.atan(Math.sqrt(this.a * this.a - xa * xa) / (this.one_minus_f * xa));\n    if (invert_sign) {\n      lp.phi = -lp.phi;\n    }\n  }\n\n  lp.lam += this.long0;\n  p.x = lp.lam;\n  p.y = lp.phi;\n  return p;\n}\n\n/* Helper function for forward projection: compute the theta angle\n * and determine the area number. */\nfunction qsc_fwd_equat_face_theta(phi, y, x, area) {\n  var theta;\n  if (phi < EPSLN) {\n    area.value = AREA_ENUM.AREA_0;\n    theta = 0.0;\n  } else {\n    theta = Math.atan2(y, x);\n    if (Math.abs(theta) <= FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n    } else if (theta > FORTPI && theta <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta -= HALF_PI;\n    } else if (theta > HALF_PI + FORTPI || theta <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = (theta >= 0.0 ? theta - SPI : theta + SPI);\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta += HALF_PI;\n    }\n  }\n  return theta;\n}\n\n/* Helper function: shift the longitude. */\nfunction qsc_shift_lon_origin(lon, offset) {\n  var slon = lon + offset;\n  if (slon < -SPI) {\n    slon += TWO_PI;\n  } else if (slon > +SPI) {\n    slon -= TWO_PI;\n  }\n  return slon;\n}\n\nexport var names = [\"Quadrilateralized Spherical Cube\", \"Quadrilateralized_Spherical_Cube\", \"qsc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n","// Robinson projection\n// Based on https://github.com/OSGeo/proj.4/blob/master/src/PJ_robin.c\n// Polynomial coeficients from http://article.gmane.org/gmane.comp.gis.proj-4.devel/6039\n\nimport {HALF_PI, D2R, R2D, EPSLN} from '../constants/values';\nimport adjust_lon from '../common/adjust_lon';\n\nvar COEFS_X = [\n    [1.0000, 2.2199e-17, -7.15515e-05, 3.1103e-06],\n    [0.9986, -0.000482243, -2.4897e-05, -1.3309e-06],\n    [0.9954, -0.00083103, -4.48605e-05, -9.86701e-07],\n    [0.9900, -0.00135364, -5.9661e-05, 3.6777e-06],\n    [0.9822, -0.00167442, -4.49547e-06, -5.72411e-06],\n    [0.9730, -0.00214868, -9.03571e-05, 1.8736e-08],\n    [0.9600, -0.00305085, -9.00761e-05, 1.64917e-06],\n    [0.9427, -0.00382792, -6.53386e-05, -2.6154e-06],\n    [0.9216, -0.00467746, -0.00010457, 4.81243e-06],\n    [0.8962, -0.00536223, -3.23831e-05, -5.43432e-06],\n    [0.8679, -0.00609363, -0.000113898, 3.32484e-06],\n    [0.8350, -0.00698325, -6.40253e-05, 9.34959e-07],\n    [0.7986, -0.00755338, -5.00009e-05, 9.35324e-07],\n    [0.7597, -0.00798324, -3.5971e-05, -2.27626e-06],\n    [0.7186, -0.00851367, -7.01149e-05, -8.6303e-06],\n    [0.6732, -0.00986209, -0.000199569, 1.91974e-05],\n    [0.6213, -0.010418, 8.83923e-05, 6.24051e-06],\n    [0.5722, -0.00906601, 0.000182, 6.24051e-06],\n    [0.5322, -0.00677797, 0.000275608, 6.24051e-06]\n];\n\nvar COEFS_Y = [\n    [-5.20417e-18, 0.0124, 1.21431e-18, -8.45284e-11],\n    [0.0620, 0.0124, -1.26793e-09, 4.22642e-10],\n    [0.1240, 0.0124, 5.07171e-09, -1.60604e-09],\n    [0.1860, 0.0123999, -1.90189e-08, 6.00152e-09],\n    [0.2480, 0.0124002, 7.10039e-08, -2.24e-08],\n    [0.3100, 0.0123992, -2.64997e-07, 8.35986e-08],\n    [0.3720, 0.0124029, 9.88983e-07, -3.11994e-07],\n    [0.4340, 0.0123893, -3.69093e-06, -4.35621e-07],\n    [0.4958, 0.0123198, -1.02252e-05, -3.45523e-07],\n    [0.5571, 0.0121916, -1.54081e-05, -5.82288e-07],\n    [0.6176, 0.0119938, -2.41424e-05, -5.25327e-07],\n    [0.6769, 0.011713, -3.20223e-05, -5.16405e-07],\n    [0.7346, 0.0113541, -3.97684e-05, -6.09052e-07],\n    [0.7903, 0.0109107, -4.89042e-05, -1.04739e-06],\n    [0.8435, 0.0103431, -6.4615e-05, -1.40374e-09],\n    [0.8936, 0.00969686, -6.4636e-05, -8.547e-06],\n    [0.9394, 0.00840947, -0.000192841, -4.2106e-06],\n    [0.9761, 0.00616527, -0.000256, -4.2106e-06],\n    [1.0000, 0.00328947, -0.000319159, -4.2106e-06]\n];\n\nvar FXC = 0.8487;\nvar FYC = 1.3523;\nvar C1 = R2D/5; // rad to 5-degree interval\nvar RC1 = 1/C1;\nvar NODES = 18;\n\nvar poly3_val = function(coefs, x) {\n    return coefs[0] + x * (coefs[1] + x * (coefs[2] + x * coefs[3]));\n};\n\nvar poly3_der = function(coefs, x) {\n    return coefs[1] + x * (2 * coefs[2] + x * 3 * coefs[3]);\n};\n\nfunction newton_rapshon(f_df, start, max_err, iters) {\n    var x = start;\n    for (; iters; --iters) {\n        var upd = f_df(x);\n        x -= upd;\n        if (Math.abs(upd) < max_err) {\n            break;\n        }\n    }\n    return x;\n}\n\nexport function init() {\n    this.x0 = this.x0 || 0;\n    this.y0 = this.y0 || 0;\n    this.long0 = this.long0 || 0;\n    this.es = 0;\n    this.title = this.title || \"Robinson\";\n}\n\nexport function forward(ll) {\n    var lon = adjust_lon(ll.x - this.long0);\n\n    var dphi = Math.abs(ll.y);\n    var i = Math.floor(dphi * C1);\n    if (i < 0) {\n        i = 0;\n    } else if (i >= NODES) {\n        i = NODES - 1;\n    }\n    dphi = R2D * (dphi - RC1 * i);\n    var xy = {\n        x: poly3_val(COEFS_X[i], dphi) * lon,\n        y: poly3_val(COEFS_Y[i], dphi)\n    };\n    if (ll.y < 0) {\n        xy.y = -xy.y;\n    }\n\n    xy.x = xy.x * this.a * FXC + this.x0;\n    xy.y = xy.y * this.a * FYC + this.y0;\n    return xy;\n}\n\nexport function inverse(xy) {\n    var ll = {\n        x: (xy.x - this.x0) / (this.a * FXC),\n        y: Math.abs(xy.y - this.y0) / (this.a * FYC)\n    };\n\n    if (ll.y >= 1) { // pathologic case\n        ll.x /= COEFS_X[NODES][0];\n        ll.y = xy.y < 0 ? -HALF_PI : HALF_PI;\n    } else {\n        // find table interval\n        var i = Math.floor(ll.y * NODES);\n        if (i < 0) {\n            i = 0;\n        } else if (i >= NODES) {\n            i = NODES - 1;\n        }\n        for (;;) {\n            if (COEFS_Y[i][0] > ll.y) {\n                --i;\n            } else if (COEFS_Y[i+1][0] <= ll.y) {\n                ++i;\n            } else {\n                break;\n            }\n        }\n        // linear interpolation in 5 degree interval\n        var coefs = COEFS_Y[i];\n        var t = 5 * (ll.y - coefs[0]) / (COEFS_Y[i+1][0] - coefs[0]);\n        // find t so that poly3_val(coefs, t) = ll.y\n        t = newton_rapshon(function(x) {\n            return (poly3_val(coefs, x) - ll.y) / poly3_der(coefs, x);\n        }, t, EPSLN, 100);\n\n        ll.x /= poly3_val(COEFS_X[i], t);\n        ll.y = (5 * i + t) * D2R;\n        if (xy.y < 0) {\n            ll.y = -ll.y;\n        }\n    }\n\n    ll.x = adjust_lon(ll.x + this.long0);\n    return ll;\n}\n\nexport var names = [\"Robinson\", \"robin\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {\n    geodeticToGeocentric,\n    geocentricToGeodetic\n} from '../datumUtils';\n\nexport function init() {\n    this.name = 'geocent';\n\n}\n\nexport function forward(p) {\n    var point = geodeticToGeocentric(p, this.es, this.a);\n    return point;\n}\n\nexport function inverse(p) {\n    var point = geocentricToGeodetic(p, this.es, this.a, this.b);\n    return point;\n}\n\nexport var names = [\"Geocentric\", 'geocentric', \"geocent\", \"Geocent\"];\nexport default {\n    init: init,\n    forward: forward,\n    inverse: inverse,\n    names: names\n};","\nvar mode = {\n  N_POLE: 0,\n  S_POLE: 1,\n  EQUIT: 2,\n  OBLIQ: 3\n};\n\nimport { D2R, HALF_PI, EPSLN } from \"../constants/values\";\nimport hypot from \"../common/hypot\";\n\nvar params = {\n  h:     { def: 100000, num: true },           // default is Karman line, no default in PROJ.7\n  azi:   { def: 0, num: true, degrees: true }, // default is North\n  tilt:  { def: 0, num: true, degrees: true }, // default is Nadir\n  long0: { def: 0, num: true },                // default is Greenwich, conversion to rad is automatic\n  lat0:  { def: 0, num: true }                 // default is Equator, conversion to rad is automatic\n};\n\nexport function init() {\n  Object.keys(params).forEach(function (p) {\n    if (typeof this[p] === \"undefined\") {\n      this[p] = params[p].def;\n    } else if (params[p].num && isNaN(this[p])) {\n      throw new Error(\"Invalid parameter value, must be numeric \" + p + \" = \" + this[p]);\n    } else if (params[p].num) {\n      this[p] = parseFloat(this[p]);\n    }\n    if (params[p].degrees) {\n      this[p] = this[p] * D2R;\n    }\n  }.bind(this));\n\n  if (Math.abs((Math.abs(this.lat0) - HALF_PI)) < EPSLN) {\n    this.mode = this.lat0 < 0 ? mode.S_POLE : mode.N_POLE;\n  } else if (Math.abs(this.lat0) < EPSLN) {\n    this.mode = mode.EQUIT;\n  } else {\n    this.mode = mode.OBLIQ;\n    this.sinph0 = Math.sin(this.lat0);\n    this.cosph0 = Math.cos(this.lat0);\n  }\n\n  this.pn1 = this.h / this.a;  // Normalize relative to the Earth's radius\n\n  if (this.pn1 <= 0 || this.pn1 > 1e10) {\n    throw new Error(\"Invalid height\");\n  }\n  \n  this.p = 1 + this.pn1;\n  this.rp = 1 / this.p;\n  this.h1 = 1 / this.pn1;\n  this.pfact = (this.p + 1) * this.h1;\n  this.es = 0;\n\n  var omega = this.tilt;\n  var gamma = this.azi;\n  this.cg = Math.cos(gamma);\n  this.sg = Math.sin(gamma);\n  this.cw = Math.cos(omega);\n  this.sw = Math.sin(omega);\n}\n\nexport function forward(p) {\n  p.x -= this.long0;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var coslam = Math.cos(p.x);\n  var x, y;\n  switch (this.mode) {\n    case mode.OBLIQ:\n      y = this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      break;\n    case mode.EQUIT:\n      y = cosphi * coslam;\n      break;\n    case mode.S_POLE:\n      y = -sinphi;\n      break;\n    case mode.N_POLE:\n      y = sinphi;\n      break;\n  }\n  y = this.pn1 / (this.p - y);\n  x = y * cosphi * Math.sin(p.x);\n\n  switch (this.mode) {\n    case mode.OBLIQ:\n      y *= this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n      break;\n    case mode.EQUIT:\n      y *= sinphi;\n      break;\n    case mode.N_POLE:\n      y *= -(cosphi * coslam);\n      break;\n    case mode.S_POLE:\n      y *= cosphi * coslam;\n      break;\n  }\n\n  // Tilt \n  var yt, ba;\n  yt = y * this.cg + x * this.sg;\n  ba = 1 / (yt * this.sw * this.h1 + this.cw);\n  x = (x * this.cg - y * this.sg) * this.cw * ba;\n  y = yt * ba;\n\n  p.x = x * this.a;\n  p.y = y * this.a;\n  return p;\n}\n\nexport function inverse(p) {\n  p.x /= this.a;\n  p.y /= this.a;\n  var r = { x: p.x, y: p.y };\n\n  // Un-Tilt\n  var bm, bq, yt;\n  yt = 1 / (this.pn1 - p.y * this.sw);\n  bm = this.pn1 * p.x * yt;\n  bq = this.pn1 * p.y * this.cw * yt;\n  p.x = bm * this.cg + bq * this.sg;\n  p.y = bq * this.cg - bm * this.sg;\n\n  var rh = hypot(p.x, p.y);\n  if (Math.abs(rh) < EPSLN) {\n    r.x = 0;\n    r.y = p.y;\n  } else {\n    var cosz, sinz;\n    sinz = 1 - rh * rh * this.pfact;\n    sinz = (this.p - Math.sqrt(sinz)) / (this.pn1 / rh + rh / this.pn1);\n    cosz = Math.sqrt(1 - sinz * sinz);\n    switch (this.mode) {\n      case mode.OBLIQ:\n        r.y = Math.asin(cosz * this.sinph0 + p.y * sinz * this.cosph0 / rh);\n        p.y = (cosz - this.sinph0 * Math.sin(r.y)) * rh;\n        p.x *= sinz * this.cosph0;\n        break;\n      case mode.EQUIT:\n        r.y = Math.asin(p.y * sinz / rh);\n        p.y = cosz * rh;\n        p.x *= sinz;\n        break;\n      case mode.N_POLE:\n        r.y = Math.asin(cosz);\n        p.y = -p.y;\n        break;\n      case mode.S_POLE:\n        r.y = -Math.asin(cosz);\n        break;\n    }\n    r.x = Math.atan2(p.x, p.y);\n  }\n\n  p.x = r.x + this.long0;\n  p.y = r.y;\n  return p;\n}\n\nexport var names = [\"Tilted_Perspective\", \"tpers\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import hypot from '../common/hypot';\n\nexport function init() {\n    this.flip_axis = (this.sweep === 'x' ? 1 : 0);\n    this.h = Number(this.h);\n    this.radius_g_1 = this.h / this.a;\n\n    if (this.radius_g_1 <= 0 || this.radius_g_1 > 1e10) {\n        throw new Error();\n    }\n\n    this.radius_g = 1.0 + this.radius_g_1;\n    this.C = this.radius_g * this.radius_g - 1.0;\n\n    if (this.es !== 0.0) {\n        var one_es = 1.0 - this.es;\n        var rone_es = 1 / one_es;\n\n        this.radius_p = Math.sqrt(one_es);\n        this.radius_p2 = one_es;\n        this.radius_p_inv2 = rone_es;\n\n        this.shape = 'ellipse'; // Use as a condition in the forward and inverse functions.\n    } else {\n        this.radius_p = 1.0;\n        this.radius_p2 = 1.0;\n        this.radius_p_inv2 = 1.0;\n\n        this.shape = 'sphere';  // Use as a condition in the forward and inverse functions.\n    }\n\n    if (!this.title) {\n        this.title = \"Geostationary Satellite View\";\n    }\n}\n\nfunction forward(p) {\n    var lon = p.x;\n    var lat = p.y;\n    var tmp, v_x, v_y, v_z;\n    lon = lon - this.long0;\n\n    if (this.shape === 'ellipse') {\n        lat = Math.atan(this.radius_p2 * Math.tan(lat));\n        var r = this.radius_p / hypot(this.radius_p * Math.cos(lat), Math.sin(lat));\n\n        v_x = r * Math.cos(lon) * Math.cos(lat);\n        v_y = r * Math.sin(lon) * Math.cos(lat);\n        v_z = r * Math.sin(lat);\n\n        if (((this.radius_g - v_x) * v_x - v_y * v_y - v_z * v_z * this.radius_p_inv2) < 0.0) {\n            p.x = Number.NaN;\n            p.y = Number.NaN;\n            return p;\n        }\n\n        tmp = this.radius_g - v_x;\n        if (this.flip_axis) {\n            p.x = this.radius_g_1 * Math.atan(v_y / hypot(v_z, tmp));\n            p.y = this.radius_g_1 * Math.atan(v_z / tmp);\n        } else {\n            p.x = this.radius_g_1 * Math.atan(v_y / tmp);\n            p.y = this.radius_g_1 * Math.atan(v_z / hypot(v_y, tmp));\n        }\n    } else if (this.shape === 'sphere') {\n        tmp = Math.cos(lat);\n        v_x = Math.cos(lon) * tmp;\n        v_y = Math.sin(lon) * tmp;\n        v_z = Math.sin(lat);\n        tmp = this.radius_g - v_x;\n\n        if (this.flip_axis) {\n            p.x = this.radius_g_1 * Math.atan(v_y / hypot(v_z, tmp));\n            p.y = this.radius_g_1 * Math.atan(v_z / tmp);\n        } else {\n            p.x = this.radius_g_1 * Math.atan(v_y / tmp);\n            p.y = this.radius_g_1 * Math.atan(v_z / hypot(v_y, tmp));\n        }\n    }\n    p.x = p.x * this.a;\n    p.y = p.y * this.a;\n    return p;\n}\n\nfunction inverse(p) {\n    var v_x = -1.0;\n    var v_y = 0.0;\n    var v_z = 0.0;\n    var a, b, det, k;\n\n    p.x = p.x / this.a;\n    p.y = p.y / this.a;\n\n    if (this.shape === 'ellipse') {\n        if (this.flip_axis) {\n            v_z = Math.tan(p.y / this.radius_g_1);\n            v_y = Math.tan(p.x / this.radius_g_1) * hypot(1.0, v_z);\n        } else {\n            v_y = Math.tan(p.x / this.radius_g_1);\n            v_z = Math.tan(p.y / this.radius_g_1) * hypot(1.0, v_y);\n        }\n\n        var v_zp = v_z / this.radius_p;\n        a = v_y * v_y + v_zp * v_zp + v_x * v_x;\n        b = 2 * this.radius_g * v_x;\n        det = (b * b) - 4 * a * this.C;\n\n        if (det < 0.0) {\n            p.x = Number.NaN;\n            p.y = Number.NaN;\n            return p;\n        }\n\n        k = (-b - Math.sqrt(det)) / (2.0 * a);\n        v_x = this.radius_g + k * v_x;\n        v_y *= k;\n        v_z *= k;\n\n        p.x = Math.atan2(v_y, v_x);\n        p.y = Math.atan(v_z * Math.cos(p.x) / v_x);\n        p.y = Math.atan(this.radius_p_inv2 * Math.tan(p.y));\n    } else if (this.shape === 'sphere') {\n        if (this.flip_axis) {\n            v_z = Math.tan(p.y / this.radius_g_1);\n            v_y = Math.tan(p.x / this.radius_g_1) * Math.sqrt(1.0 + v_z * v_z);\n        } else {\n            v_y = Math.tan(p.x / this.radius_g_1);\n            v_z = Math.tan(p.y / this.radius_g_1) * Math.sqrt(1.0 + v_y * v_y);\n        }\n\n        a = v_y * v_y + v_z * v_z + v_x * v_x;\n        b = 2 * this.radius_g * v_x;\n        det = (b * b) - 4 * a * this.C;\n        if (det < 0.0) {\n            p.x = Number.NaN;\n            p.y = Number.NaN;\n            return p;\n        }\n\n        k = (-b - Math.sqrt(det)) / (2.0 * a);\n        v_x = this.radius_g + k * v_x;\n        v_y *= k;\n        v_z *= k;\n\n        p.x = Math.atan2(v_y, v_x);\n        p.y = Math.atan(v_z * Math.cos(p.x) / v_x);\n    }\n    p.x = p.x + this.long0;\n    return p;\n}\n\nexport var names = [\"Geostationary Satellite View\", \"Geostationary_Satellite\", \"geos\"];\nexport default {\n    init: init,\n    forward: forward,\n    inverse: inverse,\n    names: names,\n};\n\n","import proj4 from './core';\nimport Proj from \"./Proj\";\nimport Point from \"./Point\";\nimport common from \"./common/toPoint\";\nimport defs from \"./defs\";\nimport nadgrid from \"./nadgrid\";\nimport transform from \"./transform\";\nimport mgrs from \"mgrs\";\nimport includedProjections from \"../projs\";\n\nproj4.defaultDatum = 'WGS84'; //default datum\nproj4.Proj = Proj;\nproj4.WGS84 = new proj4.Proj('WGS84');\nproj4.Point = Point;\nproj4.toPoint = common;\nproj4.defs = defs;\nproj4.nadgrid = nadgrid;\nproj4.transform = transform;\nproj4.mgrs = mgrs;\nproj4.version = '__VERSION__';\nincludedProjections(proj4);\nexport default proj4;\n","import tmerc from './lib/projections/tmerc';\nimport etmerc from './lib/projections/etmerc';\nimport utm from './lib/projections/utm';\nimport sterea from './lib/projections/sterea';\nimport stere from './lib/projections/stere';\nimport somerc from './lib/projections/somerc';\nimport omerc from './lib/projections/omerc';\nimport lcc from './lib/projections/lcc';\nimport krovak from './lib/projections/krovak';\nimport cass from './lib/projections/cass';\nimport laea from './lib/projections/laea';\nimport aea from './lib/projections/aea';\nimport gnom from './lib/projections/gnom';\nimport cea from './lib/projections/cea';\nimport eqc from './lib/projections/eqc';\nimport poly from './lib/projections/poly';\nimport nzmg from './lib/projections/nzmg';\nimport mill from './lib/projections/mill';\nimport sinu from './lib/projections/sinu';\nimport moll from './lib/projections/moll';\nimport eqdc from './lib/projections/eqdc';\nimport vandg from './lib/projections/vandg';\nimport aeqd from './lib/projections/aeqd';\nimport ortho from './lib/projections/ortho';\nimport qsc from './lib/projections/qsc';\nimport robin from './lib/projections/robin';\nimport geocent from './lib/projections/geocent';\nimport tpers from './lib/projections/tpers';\nimport geos from './lib/projections/geos';\nexport default function(proj4){\n  proj4.Proj.projections.add(tmerc);\n  proj4.Proj.projections.add(etmerc);\n  proj4.Proj.projections.add(utm);\n  proj4.Proj.projections.add(sterea);\n  proj4.Proj.projections.add(stere);\n  proj4.Proj.projections.add(somerc);\n  proj4.Proj.projections.add(omerc);\n  proj4.Proj.projections.add(lcc);\n  proj4.Proj.projections.add(krovak);\n  proj4.Proj.projections.add(cass);\n  proj4.Proj.projections.add(laea);\n  proj4.Proj.projections.add(aea);\n  proj4.Proj.projections.add(gnom);\n  proj4.Proj.projections.add(cea);\n  proj4.Proj.projections.add(eqc);\n  proj4.Proj.projections.add(poly);\n  proj4.Proj.projections.add(nzmg);\n  proj4.Proj.projections.add(mill);\n  proj4.Proj.projections.add(sinu);\n  proj4.Proj.projections.add(moll);\n  proj4.Proj.projections.add(eqdc);\n  proj4.Proj.projections.add(vandg);\n  proj4.Proj.projections.add(aeqd);\n  proj4.Proj.projections.add(ortho);\n  proj4.Proj.projections.add(qsc);\n  proj4.Proj.projections.add(robin);\n  proj4.Proj.projections.add(geocent);\n  proj4.Proj.projections.add(tpers);\n  proj4.Proj.projections.add(geos);\n}","/**\n * @module ol/format/IIIFInfo\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} PreferredOptions\n * @property {string} [format] Preferred image format. Will be used if the image information\n * indicates support for that format.\n * @property {string} [quality] IIIF image qualitiy.  Will be used if the image information\n * indicates support for that quality.\n */\n\n/**\n * @typedef {Object} SupportedFeatures\n * @property {Array<string>} [supports] Supported IIIF image size and region\n * calculation features.\n * @property {Array<string>} [formats] Supported image formats.\n * @property {Array<string>} [qualities] Supported IIIF image qualities.\n */\n\n/**\n * @typedef {Object} TileInfo\n * @property {Array<number>} scaleFactors Supported resolution scaling factors.\n * @property {number} width Tile width in pixels.\n * @property {number} [height] Tile height in pixels. Same as tile width if height is\n * not given.\n */\n\n/**\n * @typedef {Object} IiifProfile\n * @property {Array<string>} [formats] Supported image formats for the image service.\n * @property {Array<string>} [qualities] Supported IIIF image qualities.\n * @property {Array<string>} [supports] Supported features.\n * @property {number} [maxArea] Maximum area (pixels) available for this image service.\n * @property {number} [maxHeight] Maximum height.\n * @property {number} [maxWidth] Maximum width.\n */\n\n/**\n * @typedef {Object<string,string|number|Array<number|string|IiifProfile|Object<string, number>|TileInfo>>}\n *    ImageInformationResponse\n */\n\n/**\n * Enum representing the major IIIF Image API versions\n * @enum {string}\n */\nexport const Versions = {\n  VERSION1: 'version1',\n  VERSION2: 'version2',\n  VERSION3: 'version3',\n};\n\n/**\n * Supported image formats, qualities and supported region / size calculation features\n * for different image API versions and compliance levels\n * @const\n * @type {Object<string, Object<string, SupportedFeatures>>}\n */\nconst IIIF_PROFILE_VALUES = {};\nIIIF_PROFILE_VALUES[Versions.VERSION1] = {\n  'level0': {\n    supports: [],\n    formats: [],\n    qualities: ['native'],\n  },\n  'level1': {\n    supports: ['regionByPx', 'sizeByW', 'sizeByH', 'sizeByPct'],\n    formats: ['jpg'],\n    qualities: ['native'],\n  },\n  'level2': {\n    supports: [\n      'regionByPx',\n      'regionByPct',\n      'sizeByW',\n      'sizeByH',\n      'sizeByPct',\n      'sizeByConfinedWh',\n      'sizeByWh',\n    ],\n    formats: ['jpg', 'png'],\n    qualities: ['native', 'color', 'grey', 'bitonal'],\n  },\n};\nIIIF_PROFILE_VALUES[Versions.VERSION2] = {\n  'level0': {\n    supports: [],\n    formats: ['jpg'],\n    qualities: ['default'],\n  },\n  'level1': {\n    supports: ['regionByPx', 'sizeByW', 'sizeByH', 'sizeByPct'],\n    formats: ['jpg'],\n    qualities: ['default'],\n  },\n  'level2': {\n    supports: [\n      'regionByPx',\n      'regionByPct',\n      'sizeByW',\n      'sizeByH',\n      'sizeByPct',\n      'sizeByConfinedWh',\n      'sizeByDistortedWh',\n      'sizeByWh',\n    ],\n    formats: ['jpg', 'png'],\n    qualities: ['default', 'bitonal'],\n  },\n};\nIIIF_PROFILE_VALUES[Versions.VERSION3] = {\n  'level0': {\n    supports: [],\n    formats: ['jpg'],\n    qualities: ['default'],\n  },\n  'level1': {\n    supports: ['regionByPx', 'regionSquare', 'sizeByW', 'sizeByH', 'sizeByWh'],\n    formats: ['jpg'],\n    qualities: ['default'],\n  },\n  'level2': {\n    supports: [\n      'regionByPx',\n      'regionSquare',\n      'regionByPct',\n      'sizeByW',\n      'sizeByH',\n      'sizeByPct',\n      'sizeByConfinedWh',\n      'sizeByWh',\n    ],\n    formats: ['jpg', 'png'],\n    qualities: ['default'],\n  },\n};\nIIIF_PROFILE_VALUES['none'] = {\n  'none': {\n    supports: [],\n    formats: [],\n    qualities: [],\n  },\n};\n\nconst COMPLIANCE_VERSION1 =\n  /^https?:\\/\\/library\\.stanford\\.edu\\/iiif\\/image-api\\/(?:1\\.1\\/)?compliance\\.html#level[0-2]$/;\nconst COMPLIANCE_VERSION2 =\n  /^https?:\\/\\/iiif\\.io\\/api\\/image\\/2\\/level[0-2](?:\\.json)?$/;\nconst COMPLIANCE_VERSION3 =\n  /(^https?:\\/\\/iiif\\.io\\/api\\/image\\/3\\/level[0-2](?:\\.json)?$)|(^level[0-2]$)/;\n\nfunction generateVersion1Options(iiifInfo) {\n  let levelProfile = iiifInfo.getComplianceLevelSupportedFeatures();\n  // Version 1.0 and 1.1 do not require a profile.\n  if (levelProfile === undefined) {\n    levelProfile = IIIF_PROFILE_VALUES[Versions.VERSION1]['level0'];\n  }\n  return {\n    url:\n      iiifInfo.imageInfo['@id'] === undefined\n        ? undefined\n        : iiifInfo.imageInfo['@id'].replace(/\\/?(?:info\\.json)?$/g, ''),\n    supports: levelProfile.supports,\n    formats: [\n      ...levelProfile.formats,\n      iiifInfo.imageInfo.formats === undefined\n        ? []\n        : iiifInfo.imageInfo.formats,\n    ],\n    qualities: [\n      ...levelProfile.qualities,\n      iiifInfo.imageInfo.qualities === undefined\n        ? []\n        : iiifInfo.imageInfo.qualities,\n    ],\n    resolutions: iiifInfo.imageInfo.scale_factors,\n    tileSize:\n      iiifInfo.imageInfo.tile_width !== undefined\n        ? iiifInfo.imageInfo.tile_height !== undefined\n          ? [iiifInfo.imageInfo.tile_width, iiifInfo.imageInfo.tile_height]\n          : [iiifInfo.imageInfo.tile_width, iiifInfo.imageInfo.tile_width]\n        : iiifInfo.imageInfo.tile_height != undefined\n        ? [iiifInfo.imageInfo.tile_height, iiifInfo.imageInfo.tile_height]\n        : undefined,\n  };\n}\n\nfunction generateVersion2Options(iiifInfo) {\n  const levelProfile = iiifInfo.getComplianceLevelSupportedFeatures(),\n    additionalProfile =\n      Array.isArray(iiifInfo.imageInfo.profile) &&\n      iiifInfo.imageInfo.profile.length > 1,\n    profileSupports =\n      additionalProfile && iiifInfo.imageInfo.profile[1].supports\n        ? iiifInfo.imageInfo.profile[1].supports\n        : [],\n    profileFormats =\n      additionalProfile && iiifInfo.imageInfo.profile[1].formats\n        ? iiifInfo.imageInfo.profile[1].formats\n        : [],\n    profileQualities =\n      additionalProfile && iiifInfo.imageInfo.profile[1].qualities\n        ? iiifInfo.imageInfo.profile[1].qualities\n        : [];\n  return {\n    url: iiifInfo.imageInfo['@id'].replace(/\\/?(?:info\\.json)?$/g, ''),\n    sizes:\n      iiifInfo.imageInfo.sizes === undefined\n        ? undefined\n        : iiifInfo.imageInfo.sizes.map(function (size) {\n            return [size.width, size.height];\n          }),\n    tileSize:\n      iiifInfo.imageInfo.tiles === undefined\n        ? undefined\n        : [\n            iiifInfo.imageInfo.tiles.map(function (tile) {\n              return tile.width;\n            })[0],\n            iiifInfo.imageInfo.tiles.map(function (tile) {\n              return tile.height === undefined ? tile.width : tile.height;\n            })[0],\n          ],\n    resolutions:\n      iiifInfo.imageInfo.tiles === undefined\n        ? undefined\n        : iiifInfo.imageInfo.tiles.map(function (tile) {\n            return tile.scaleFactors;\n          })[0],\n    supports: [...levelProfile.supports, ...profileSupports],\n    formats: [...levelProfile.formats, ...profileFormats],\n    qualities: [...levelProfile.qualities, ...profileQualities],\n  };\n}\n\nfunction generateVersion3Options(iiifInfo) {\n  const levelProfile = iiifInfo.getComplianceLevelSupportedFeatures(),\n    formats =\n      iiifInfo.imageInfo.extraFormats === undefined\n        ? levelProfile.formats\n        : [...levelProfile.formats, ...iiifInfo.imageInfo.extraFormats],\n    preferredFormat =\n      iiifInfo.imageInfo.preferredFormats !== undefined &&\n      Array.isArray(iiifInfo.imageInfo.preferredFormats) &&\n      iiifInfo.imageInfo.preferredFormats.length > 0\n        ? iiifInfo.imageInfo.preferredFormats\n            .filter(function (format) {\n              return ['jpg', 'png', 'gif'].includes(format);\n            })\n            .reduce(function (acc, format) {\n              return acc === undefined && formats.includes(format)\n                ? format\n                : acc;\n            }, undefined)\n        : undefined;\n  return {\n    url: iiifInfo.imageInfo['id'],\n    sizes:\n      iiifInfo.imageInfo.sizes === undefined\n        ? undefined\n        : iiifInfo.imageInfo.sizes.map(function (size) {\n            return [size.width, size.height];\n          }),\n    tileSize:\n      iiifInfo.imageInfo.tiles === undefined\n        ? undefined\n        : [\n            iiifInfo.imageInfo.tiles.map(function (tile) {\n              return tile.width;\n            })[0],\n            iiifInfo.imageInfo.tiles.map(function (tile) {\n              return tile.height;\n            })[0],\n          ],\n    resolutions:\n      iiifInfo.imageInfo.tiles === undefined\n        ? undefined\n        : iiifInfo.imageInfo.tiles.map(function (tile) {\n            return tile.scaleFactors;\n          })[0],\n    supports:\n      iiifInfo.imageInfo.extraFeatures === undefined\n        ? levelProfile.supports\n        : [...levelProfile.supports, ...iiifInfo.imageInfo.extraFeatures],\n    formats: formats,\n    qualities:\n      iiifInfo.imageInfo.extraQualities === undefined\n        ? levelProfile.qualities\n        : [...levelProfile.qualities, ...iiifInfo.imageInfo.extraQualities],\n    preferredFormat: preferredFormat,\n  };\n}\n\nconst versionFunctions = {};\nversionFunctions[Versions.VERSION1] = generateVersion1Options;\nversionFunctions[Versions.VERSION2] = generateVersion2Options;\nversionFunctions[Versions.VERSION3] = generateVersion3Options;\n\n/**\n * @classdesc\n * Format for transforming IIIF Image API image information responses into\n * IIIF tile source ready options\n *\n * @api\n */\nclass IIIFInfo {\n  /**\n   * @param {string|ImageInformationResponse} imageInfo\n   * Deserialized image information JSON response object or JSON response as string\n   */\n  constructor(imageInfo) {\n    this.setImageInfo(imageInfo);\n  }\n\n  /**\n   * @param {string|ImageInformationResponse} imageInfo\n   * Deserialized image information JSON response object or JSON response as string\n   * @api\n   */\n  setImageInfo(imageInfo) {\n    if (typeof imageInfo == 'string') {\n      this.imageInfo = JSON.parse(imageInfo);\n    } else {\n      this.imageInfo = imageInfo;\n    }\n  }\n\n  /**\n   * @return {Versions|undefined} Major IIIF version.\n   * @api\n   */\n  getImageApiVersion() {\n    if (this.imageInfo === undefined) {\n      return undefined;\n    }\n    let context = this.imageInfo['@context'] || 'ol-no-context';\n    if (typeof context == 'string') {\n      context = [context];\n    }\n    for (let i = 0; i < context.length; i++) {\n      switch (context[i]) {\n        case 'http://library.stanford.edu/iiif/image-api/1.1/context.json':\n        case 'http://iiif.io/api/image/1/context.json':\n          return Versions.VERSION1;\n        case 'http://iiif.io/api/image/2/context.json':\n          return Versions.VERSION2;\n        case 'http://iiif.io/api/image/3/context.json':\n          return Versions.VERSION3;\n        case 'ol-no-context':\n          // Image API 1.0 has no '@context'\n          if (\n            this.getComplianceLevelEntryFromProfile(Versions.VERSION1) &&\n            this.imageInfo.identifier\n          ) {\n            return Versions.VERSION1;\n          }\n          break;\n        default:\n      }\n    }\n    assert(\n      false,\n      'Cannot determine IIIF Image API version from provided image information JSON'\n    );\n  }\n\n  /**\n   * @param {Versions} version Optional IIIF image API version\n   * @return {string|undefined} Compliance level as it appears in the IIIF image information\n   * response.\n   */\n  getComplianceLevelEntryFromProfile(version) {\n    if (this.imageInfo === undefined || this.imageInfo.profile === undefined) {\n      return undefined;\n    }\n    if (version === undefined) {\n      version = this.getImageApiVersion();\n    }\n    switch (version) {\n      case Versions.VERSION1:\n        if (COMPLIANCE_VERSION1.test(this.imageInfo.profile)) {\n          return this.imageInfo.profile;\n        }\n        break;\n      case Versions.VERSION3:\n        if (COMPLIANCE_VERSION3.test(this.imageInfo.profile)) {\n          return this.imageInfo.profile;\n        }\n        break;\n      case Versions.VERSION2:\n        if (\n          typeof this.imageInfo.profile === 'string' &&\n          COMPLIANCE_VERSION2.test(this.imageInfo.profile)\n        ) {\n          return this.imageInfo.profile;\n        }\n        if (\n          Array.isArray(this.imageInfo.profile) &&\n          this.imageInfo.profile.length > 0 &&\n          typeof this.imageInfo.profile[0] === 'string' &&\n          COMPLIANCE_VERSION2.test(this.imageInfo.profile[0])\n        ) {\n          return this.imageInfo.profile[0];\n        }\n        break;\n      default:\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Versions} version Optional IIIF image API version\n   * @return {string} Compliance level, on of 'level0', 'level1' or 'level2' or undefined\n   */\n  getComplianceLevelFromProfile(version) {\n    const complianceLevel = this.getComplianceLevelEntryFromProfile(version);\n    if (complianceLevel === undefined) {\n      return undefined;\n    }\n    const level = complianceLevel.match(/level[0-2](?:\\.json)?$/g);\n    return Array.isArray(level) ? level[0].replace('.json', '') : undefined;\n  }\n\n  /**\n   * @return {SupportedFeatures|undefined} Image formats, qualities and region / size calculation\n   * methods that are supported by the IIIF service.\n   */\n  getComplianceLevelSupportedFeatures() {\n    if (this.imageInfo === undefined) {\n      return undefined;\n    }\n    const version = this.getImageApiVersion();\n    const level = this.getComplianceLevelFromProfile(version);\n    if (level === undefined) {\n      return IIIF_PROFILE_VALUES['none']['none'];\n    }\n    return IIIF_PROFILE_VALUES[version][level];\n  }\n\n  /**\n   * @param {PreferredOptions} [preferredOptions] Optional options for preferred format and quality.\n   * @return {import(\"../source/IIIF.js\").Options|undefined} IIIF tile source ready constructor options.\n   * @api\n   */\n  getTileSourceOptions(preferredOptions) {\n    const options = preferredOptions || {},\n      version = this.getImageApiVersion();\n    if (version === undefined) {\n      return undefined;\n    }\n    const imageOptions =\n      version === undefined ? undefined : versionFunctions[version](this);\n    if (imageOptions === undefined) {\n      return undefined;\n    }\n    return {\n      url: imageOptions.url,\n      version: version,\n      size: [this.imageInfo.width, this.imageInfo.height],\n      sizes: imageOptions.sizes,\n      format:\n        options.format !== undefined &&\n        imageOptions.formats.includes(options.format)\n          ? options.format\n          : imageOptions.preferredFormat !== undefined\n          ? imageOptions.preferredFormat\n          : 'jpg',\n      supports: imageOptions.supports,\n      quality:\n        options.quality && imageOptions.qualities.includes(options.quality)\n          ? options.quality\n          : imageOptions.qualities.includes('native')\n          ? 'native'\n          : 'default',\n      resolutions: Array.isArray(imageOptions.resolutions)\n        ? imageOptions.resolutions.sort(function (a, b) {\n            return b - a;\n          })\n        : undefined,\n      tileSize: imageOptions.tileSize,\n    };\n  }\n}\n\nexport default IIIFInfo;\n","/**\n * @module ol/source/IIIF\n */\n\nimport TileGrid from '../tilegrid/TileGrid.js';\nimport TileImage from './TileImage.js';\nimport {CustomTile} from './Zoomify.js';\nimport {DEFAULT_TILE_SIZE} from '../tilegrid/common.js';\nimport {Versions} from '../format/IIIFInfo.js';\nimport {assert} from '../asserts.js';\nimport {getTopLeft} from '../extent.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Size of the cache.\n * @property {null|string} [crossOrigin] The value for the crossOrigin option of the request.\n * @property {import(\"../extent.js\").Extent} [extent=[0, -height, width, 0]] The extent.\n * @property {string} [format='jpg'] Requested image format.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {string} [quality] Requested IIIF image quality. Default is 'native'\n * for version 1, 'default' for versions 2 and 3.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {Array<number>} [resolutions] Supported resolutions as given in IIIF 'scaleFactors'\n * @property {import(\"../size.js\").Size} size Size of the image [width, height].\n * @property {Array<import(\"../size.js\").Size>} [sizes] Supported scaled image sizes.\n * Content of the IIIF info.json 'sizes' property, but as array of Size objects.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {Array<string>} [supports=[]] Supported IIIF region and size calculation\n * features.\n * @property {number} [tilePixelRatio] Tile pixel ratio.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Same tile size is used for all zoom levels. If tile size is a number,\n * a square tile is assumed. If the IIIF image service supports arbitrary\n * tiling (sizeByH, sizeByW, sizeByWh or sizeByPct as well as regionByPx or regionByPct\n * are supported), the default tilesize is 256.\n * @property {number} [transition] Transition.\n * @property {string} [url] Base URL of the IIIF Image service.\n * This should be the same as the IIIF Image ID.\n * @property {import(\"../format/IIIFInfo.js\").Versions} [version=Versions.VERSION2] Service's IIIF Image API version.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\nfunction formatPercentage(percentage) {\n  return percentage.toLocaleString('en', {maximumFractionDigits: 10});\n}\n\n/**\n * @classdesc\n * Layer source for IIIF Image API services.\n * @api\n */\nclass IIIF extends TileImage {\n  /**\n   * @param {Options} [options] Tile source options. Use {@link import(\"../format/IIIFInfo.js\").IIIFInfo}\n   * to parse Image API service information responses into constructor options.\n   * @api\n   */\n  constructor(options) {\n    /**\n     * @type {Partial<Options>}\n     */\n    const partialOptions = options || {};\n\n    let baseUrl = partialOptions.url || '';\n    baseUrl =\n      baseUrl +\n      (baseUrl.lastIndexOf('/') === baseUrl.length - 1 || baseUrl === ''\n        ? ''\n        : '/');\n    const version = partialOptions.version || Versions.VERSION2;\n    const sizes = partialOptions.sizes || [];\n    const size = partialOptions.size;\n    assert(\n      size != undefined &&\n        Array.isArray(size) &&\n        size.length == 2 &&\n        !isNaN(size[0]) &&\n        size[0] > 0 &&\n        !isNaN(size[1]) &&\n        size[1] > 0,\n      'Missing or invalid `size`'\n    );\n    const width = size[0];\n    const height = size[1];\n    const tileSize = partialOptions.tileSize;\n    const tilePixelRatio = partialOptions.tilePixelRatio || 1;\n    const format = partialOptions.format || 'jpg';\n    const quality =\n      partialOptions.quality ||\n      (partialOptions.version == Versions.VERSION1 ? 'native' : 'default');\n    let resolutions = partialOptions.resolutions || [];\n    const supports = partialOptions.supports || [];\n    const extent = partialOptions.extent || [0, -height, width, 0];\n\n    const supportsListedSizes =\n      sizes != undefined && Array.isArray(sizes) && sizes.length > 0;\n    const supportsListedTiles =\n      tileSize !== undefined &&\n      ((typeof tileSize === 'number' &&\n        Number.isInteger(tileSize) &&\n        tileSize > 0) ||\n        (Array.isArray(tileSize) && tileSize.length > 0));\n    const supportsArbitraryTiling =\n      supports != undefined &&\n      Array.isArray(supports) &&\n      (supports.includes('regionByPx') || supports.includes('regionByPct')) &&\n      (supports.includes('sizeByWh') ||\n        supports.includes('sizeByH') ||\n        supports.includes('sizeByW') ||\n        supports.includes('sizeByPct'));\n\n    let tileWidth, tileHeight, maxZoom;\n\n    resolutions.sort(function (a, b) {\n      return b - a;\n    });\n\n    if (supportsListedTiles || supportsArbitraryTiling) {\n      if (tileSize != undefined) {\n        if (\n          typeof tileSize === 'number' &&\n          Number.isInteger(tileSize) &&\n          tileSize > 0\n        ) {\n          tileWidth = tileSize;\n          tileHeight = tileSize;\n        } else if (Array.isArray(tileSize) && tileSize.length > 0) {\n          if (\n            tileSize.length == 1 ||\n            (tileSize[1] == undefined && Number.isInteger(tileSize[0]))\n          ) {\n            tileWidth = tileSize[0];\n            tileHeight = tileSize[0];\n          }\n          if (tileSize.length == 2) {\n            if (\n              Number.isInteger(tileSize[0]) &&\n              Number.isInteger(tileSize[1])\n            ) {\n              tileWidth = tileSize[0];\n              tileHeight = tileSize[1];\n            } else if (\n              tileSize[0] == undefined &&\n              Number.isInteger(tileSize[1])\n            ) {\n              tileWidth = tileSize[1];\n              tileHeight = tileSize[1];\n            }\n          }\n        }\n      }\n      if (tileWidth === undefined || tileHeight === undefined) {\n        tileWidth = DEFAULT_TILE_SIZE;\n        tileHeight = DEFAULT_TILE_SIZE;\n      }\n      if (resolutions.length == 0) {\n        maxZoom = Math.max(\n          Math.ceil(Math.log(width / tileWidth) / Math.LN2),\n          Math.ceil(Math.log(height / tileHeight) / Math.LN2)\n        );\n        for (let i = maxZoom; i >= 0; i--) {\n          resolutions.push(Math.pow(2, i));\n        }\n      } else {\n        const maxScaleFactor = Math.max(...resolutions);\n        // TODO maxScaleFactor might not be a power to 2\n        maxZoom = Math.round(Math.log(maxScaleFactor) / Math.LN2);\n      }\n    } else {\n      // No tile support.\n      tileWidth = width;\n      tileHeight = height;\n      resolutions = [];\n      if (supportsListedSizes) {\n        /*\n         * 'sizes' provided. Use full region in different resolutions. Every\n         * resolution has only one tile.\n         */\n        sizes.sort(function (a, b) {\n          return a[0] - b[0];\n        });\n        maxZoom = -1;\n        const ignoredSizesIndex = [];\n        for (let i = 0; i < sizes.length; i++) {\n          const resolution = width / sizes[i][0];\n          if (\n            resolutions.length > 0 &&\n            resolutions[resolutions.length - 1] == resolution\n          ) {\n            ignoredSizesIndex.push(i);\n            continue;\n          }\n          resolutions.push(resolution);\n          maxZoom++;\n        }\n        if (ignoredSizesIndex.length > 0) {\n          for (let i = 0; i < ignoredSizesIndex.length; i++) {\n            sizes.splice(ignoredSizesIndex[i] - i, 1);\n          }\n        }\n      } else {\n        // No useful image information at all. Try pseudo tile with full image.\n        resolutions.push(1);\n        sizes.push([width, height]);\n        maxZoom = 0;\n      }\n    }\n\n    const tileGrid = new TileGrid({\n      tileSize: [tileWidth, tileHeight],\n      extent: extent,\n      origin: getTopLeft(extent),\n      resolutions: resolutions,\n    });\n\n    const tileUrlFunction = function (tileCoord, pixelRatio, projection) {\n      let regionParam, sizeParam;\n      const zoom = tileCoord[0];\n      if (zoom > maxZoom) {\n        return;\n      }\n      const tileX = tileCoord[1],\n        tileY = tileCoord[2],\n        scale = resolutions[zoom];\n      if (\n        tileX === undefined ||\n        tileY === undefined ||\n        scale === undefined ||\n        tileX < 0 ||\n        Math.ceil(width / scale / tileWidth) <= tileX ||\n        tileY < 0 ||\n        Math.ceil(height / scale / tileHeight) <= tileY\n      ) {\n        return;\n      }\n      if (supportsArbitraryTiling || supportsListedTiles) {\n        const regionX = tileX * tileWidth * scale,\n          regionY = tileY * tileHeight * scale;\n        let regionW = tileWidth * scale,\n          regionH = tileHeight * scale,\n          sizeW = tileWidth,\n          sizeH = tileHeight;\n        if (regionX + regionW > width) {\n          regionW = width - regionX;\n        }\n        if (regionY + regionH > height) {\n          regionH = height - regionY;\n        }\n        if (regionX + tileWidth * scale > width) {\n          sizeW = Math.floor((width - regionX + scale - 1) / scale);\n        }\n        if (regionY + tileHeight * scale > height) {\n          sizeH = Math.floor((height - regionY + scale - 1) / scale);\n        }\n        if (\n          regionX == 0 &&\n          regionW == width &&\n          regionY == 0 &&\n          regionH == height\n        ) {\n          // canonical full image region parameter is 'full', not 'x,y,w,h'\n          regionParam = 'full';\n        } else if (\n          !supportsArbitraryTiling ||\n          supports.includes('regionByPx')\n        ) {\n          regionParam = regionX + ',' + regionY + ',' + regionW + ',' + regionH;\n        } else if (supports.includes('regionByPct')) {\n          const pctX = formatPercentage((regionX / width) * 100),\n            pctY = formatPercentage((regionY / height) * 100),\n            pctW = formatPercentage((regionW / width) * 100),\n            pctH = formatPercentage((regionH / height) * 100);\n          regionParam = 'pct:' + pctX + ',' + pctY + ',' + pctW + ',' + pctH;\n        }\n        if (\n          version == Versions.VERSION3 &&\n          (!supportsArbitraryTiling || supports.includes('sizeByWh'))\n        ) {\n          sizeParam = sizeW + ',' + sizeH;\n        } else if (!supportsArbitraryTiling || supports.includes('sizeByW')) {\n          sizeParam = sizeW + ',';\n        } else if (supports.includes('sizeByH')) {\n          sizeParam = ',' + sizeH;\n        } else if (supports.includes('sizeByWh')) {\n          sizeParam = sizeW + ',' + sizeH;\n        } else if (supports.includes('sizeByPct')) {\n          sizeParam = 'pct:' + formatPercentage(100 / scale);\n        }\n      } else {\n        regionParam = 'full';\n        if (supportsListedSizes) {\n          const regionWidth = sizes[zoom][0],\n            regionHeight = sizes[zoom][1];\n          if (version == Versions.VERSION3) {\n            if (regionWidth == width && regionHeight == height) {\n              sizeParam = 'max';\n            } else {\n              sizeParam = regionWidth + ',' + regionHeight;\n            }\n          } else {\n            if (regionWidth == width) {\n              sizeParam = 'full';\n            } else {\n              sizeParam = regionWidth + ',';\n            }\n          }\n        } else {\n          sizeParam = version == Versions.VERSION3 ? 'max' : 'full';\n        }\n      }\n      return (\n        baseUrl + regionParam + '/' + sizeParam + '/0/' + quality + '.' + format\n      );\n    };\n\n    const IiifTileClass = CustomTile.bind(\n      null,\n      toSize(tileSize || 256).map(function (size) {\n        return size * tilePixelRatio;\n      })\n    );\n\n    super({\n      attributions: partialOptions.attributions,\n      attributionsCollapsible: partialOptions.attributionsCollapsible,\n      cacheSize: partialOptions.cacheSize,\n      crossOrigin: partialOptions.crossOrigin,\n      interpolate: partialOptions.interpolate,\n      projection: partialOptions.projection,\n      reprojectionErrorThreshold: partialOptions.reprojectionErrorThreshold,\n      state: partialOptions.state,\n      tileClass: IiifTileClass,\n      tileGrid: tileGrid,\n      tilePixelRatio: partialOptions.tilePixelRatio,\n      tileUrlFunction: tileUrlFunction,\n      transition: partialOptions.transition,\n    });\n\n    /**\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = partialOptions.zDirection;\n  }\n}\n\nexport default IIIF;\n","/**\r\n * @module ol/maplat/source/Factory\r\n */\r\nimport { Options, default as Maplat } from './Maplat';\r\nimport Tin from '@maplat/tin/lib/index.js';\r\nimport proj4 from 'proj4';\r\n// eslint-disable-next-line @typescript-eslint/no-var-requires\r\nconst proj4List = require('proj4-list');\r\nimport {\r\n  Projection,\r\n  addCoordinateTransforms,\r\n  addProjection,\r\n  get as getProjection,\r\n  transform,\r\n} from 'ol/proj.js';\r\nimport {XYZ, IIIF, Source} from 'ol/source.js';\r\nimport IIIFInfo from 'ol/format/IIIFInfo.js';\r\nimport {polygon} from '@turf/helpers';\r\n// eslint-disable-next-line @typescript-eslint/no-var-requires\r\nconst manifesto = require('manifesto.js');\r\nimport { MaplatDefinition } from '../types/specFile';\r\nimport { GeoJSONPolygonFeature, MaplatSpecLegacy } from '../types/specLegacy';\r\nimport { Position } from '@turf/turf';\r\nimport { MaplatProjection } from '../proj/Maplat';\r\nimport { Coordinate2D } from '../types/basics';\r\n\r\nproj4.defs([\r\n  ['TOKYO', '+proj=longlat +ellps=bessel +towgs84=-146.336,506.832,680.254'],\r\n  ['JCP:NAD27', '+proj=longlat +ellps=clrk66 +datum=NAD27 +no_defs'],\r\n  [\r\n    'JCP:ZONEA:NAD27',\r\n    '+proj=poly +lat_0=40.5 +lon_0=143 +x_0=914398.5307444408 +y_0=1828797.0614888816 +ellps=clrk66 +to_meter=0.9143985307444408 +no_defs',\r\n  ],\r\n  [\r\n    'JCP:ZONEB:NAD27',\r\n    '+proj=poly +lat_0=40.5 +lon_0=135 +x_0=914398.5307444408 +y_0=1828797.0614888816 +ellps=clrk66 +to_meter=0.9143985307444408 +no_defs',\r\n  ],\r\n  [\r\n    'JCP:ZONEC:NAD27',\r\n    '+proj=poly +lat_0=40.5 +lon_0=127 +x_0=914398.5307444408 +y_0=1828797.0614888816 +ellps=clrk66 +to_meter=0.9143985307444408 +no_defs',\r\n  ],\r\n]);\r\n\r\n/**\r\n * @private\r\n * @type {Array<string>}\r\n */\r\nconst maplatProjectionStore: string[] = [];\r\n\r\nclass Factory {\r\n  /**\r\n   * @param {MaplatDefinition | MaplatSpecLegacy} settings Settings of Maplat\r\n   * @param {import('./Maplat.js').Options} options Options for ol/source/TileImage\r\n   * @return {Promise<import('./Maplat.js').default>} Maplat instance\r\n   */\r\n  static async factoryMaplatSource(settings: MaplatDefinition | MaplatSpecLegacy, options: Options = {} as Options) {\r\n    const mapID = settings.mapID;\r\n    options.mapID = mapID;\r\n    let SourceClass: any;\r\n\r\n    // IIIFの場合、IIIF用のoptionsを取得\r\n    const settingsNew = settings as MaplatDefinition;\r\n    if (settingsNew.sourceSpec && settingsNew.sourceSpec.tileSourceType === 'IIIF') { \r\n      SourceClass = IIIF;\r\n      delete options.url;\r\n      const manifest = await manifesto.loadManifest(settingsNew.sourceSpec.url!) as any;\r\n      if (manifest.sequences && manifest.sequences[0] && manifest.sequences[0].canvases) {\r\n        const infoUrl = `${manifest.sequences[0].canvases[settingsNew.sourceSpec.iiifNumber || 0].images[0].resource.service['@id']}/info.json`;\r\n        const infoObj = await (await fetch(infoUrl)).json();\r\n        const iiifOption = new IIIFInfo(infoObj).getTileSourceOptions();\r\n        if (iiifOption === undefined || iiifOption.version === undefined) throw new Error('Invalid Image setting in IIIF settings');\r\n        options = Object.assign(options, iiifOption);\r\n      } else {\r\n        throw new Error('Invalid IIIF settings');\r\n      }\r\n    } else if(!('url' in options)) {\r\n      options.url = settingsNew.sourceSpec\r\n        ? settingsNew.sourceSpec.url!\r\n        : (settings as MaplatSpecLegacy).url!;\r\n    }\r\n\r\n    // Set up Maplat projection\r\n    const createdProjection = createProjection(settings, options);\r\n    const maplatProjection = Array.isArray(createdProjection)\r\n      ? createdProjection[0]\r\n      : createdProjection;\r\n    options.projection = maplatProjection;\r\n    if (!SourceClass) SourceClass = maplatProjection.getUnits() === 'pixels' ? Maplat : XYZ;\r\n    const source = new SourceClass(options);\r\n    console.log(source);\r\n    source.set(\r\n      'title',\r\n      'metaData' in settings ? settings.metaData.title : settings.title\r\n    );\r\n    return source;\r\n  }\r\n\r\n  /**\r\n   * @param {string} mapID ID of Map\r\n   * @param {string} url URL of Map tile\r\n   * @param {import('./Maplat.js').Options} options Options for ol/source/TileImage\r\n   * @return {Promise<import('./Maplat.js').default>} Maplat instance\r\n   */\r\n  static async factoryMaplatSourceFromUrl(mapID: string, url: string, options: Options = {} as Options): Promise<Source> {\r\n    const settingsReq = await fetch(url);\r\n    const settings = await settingsReq.json();\r\n\r\n    if (!mapID) {\r\n      if (settings.mapID) {\r\n        mapID = settings.mapID;\r\n      } else {\r\n        const mapDivide = url.split(/[\\\\/\\\\.]/);\r\n        mapID = mapDivide[mapDivide.length - 2];\r\n      }\r\n    }\r\n    settings.mapID = mapID;\r\n\r\n    return this.factoryMaplatSource(settings, options);\r\n  }\r\n}\r\n\r\n// Maplat定義の投影系を作成\r\nfunction createProjection(settings: MaplatDefinition | MaplatSpecLegacy, options: Options, subNum = 0) {\r\n  const maplatProjection = decideProjection(settings, options, subNum);\r\n  if (\r\n    maplatProjection.getCode() !== 'EPSG:3857' &&\r\n    maplatProjectionStore.indexOf(maplatProjection.getCode()) < 0\r\n  ) {\r\n    // ピクセル座標と投影系座標間の変換関数を作成\r\n    const [fromSystemToMapTransform, toSystemFromMapTransform] =\r\n      createSystem2MapTransformation(settings);\r\n    // 投影座標内でのワーピング処理用の変換関数を作成\r\n    const [fromMapToWarpTransformation, toMapFromWarpTransformation] =\r\n      createMap2WarpTransformation(settings);\r\n    // 他のMaplat定義との変換処理用座標との変換関数を作成\r\n    const [fromWarpToOperationTransform, toWarpFromOperationTransform] =\r\n      createWarp2OperationTransformation(settings);\r\n\r\n    // ピクセル座標と他のMaplat定義との変換処理用座標との変換定義\r\n    const [toOperationCoord, fromOperationCoord] = [\r\n      (xy: Coordinate2D) => {\r\n        // ピクセル座標から、投影系座標に変換\r\n        const mapCoord = fromSystemToMapTransform(xy);\r\n        // 投影系座標上でのワーピング変換\r\n        const warpCoord = fromMapToWarpTransformation(mapCoord as Coordinate2D);\r\n        // 他のMaplat定義との変換処理用座標への変換\r\n        const operationCoord = fromWarpToOperationTransform(warpCoord as Coordinate2D);\r\n        return operationCoord;\r\n      },\r\n      (operationCoord: Coordinate2D) => {\r\n        // 他のMaplat定義との変換処理用座標からの変換\r\n        const warpCoord = toWarpFromOperationTransform(operationCoord);\r\n        // ワーピング結果からの投影系座標への変換\r\n        const mapCoord = toMapFromWarpTransformation(warpCoord);\r\n        // 投影系座標からピクセル座標への変換\r\n        const xy = toSystemFromMapTransform(mapCoord as Coordinate2D);\r\n        return xy;\r\n      },\r\n    ];\r\n\r\n    addProjection(maplatProjection);\r\n    addCoordinateTransforms(\r\n      maplatProjection,\r\n      'EPSG:3857',\r\n      toOperationCoord as any,\r\n      fromOperationCoord as any\r\n    );\r\n    addCoordinateTransforms(\r\n      maplatProjection,\r\n      'EPSG:4326',\r\n      xy =>\r\n        transform(\r\n          transform(xy, maplatProjection, 'EPSG:3857'),\r\n          'EPSG:3857',\r\n          'EPSG:4326'\r\n        ),\r\n      lnglat =>\r\n        transform(\r\n          transform(lnglat, 'EPSG:4326', 'EPSG:3857'),\r\n          'EPSG:3857',\r\n          maplatProjection\r\n        )\r\n    );\r\n    maplatProjectionStore.forEach(projectionCode => {\r\n      addCoordinateTransforms(\r\n        maplatProjection,\r\n        projectionCode,\r\n        xy =>\r\n          transform(\r\n            transform(xy, maplatProjection, 'EPSG:3857'),\r\n            'EPSG:3857',\r\n            projectionCode\r\n          ),\r\n        xy =>\r\n          transform(\r\n            transform(xy, projectionCode, 'EPSG:3857'),\r\n            'EPSG:3857',\r\n            maplatProjection\r\n          )\r\n      );\r\n    });\r\n    maplatProjectionStore.push(maplatProjection.getCode());\r\n  }\r\n\r\n  let returnProjs;\r\n  /*if (settings.sub_maps) {\r\n    returnProjs = settings.sub_maps.map((subMap, index) => {\r\n      const subSettings = Object.assign(\r\n        {\r\n          mapID: settings.mapID,\r\n        },\r\n        subMap\r\n      );\r\n      console.log(subSettings);\r\n      console.log(settings);\r\n      const retProj = createProjection(subSettings, options, index + 1);\r\n      //retProj.set('priority', subSettings.priority);\r\n      //retProj.set('importance', subSettings.importance);\r\n      return retProj;\r\n    });\r\n    returnProjs.unshift(maplatProjection);\r\n  }*/\r\n  if (maplatProjection.getUnits() !== 'pixels') {\r\n    if ('envelopLngLats' in settings) {\r\n      const lnglats = settings.envelopLngLats!.concat([settings.envelopLngLats![0]]);\r\n      const coords3857 = lnglats.map((lnglat: Coordinate2D) => transform(lnglat, 'EPSG:4326', 'EPSG:3857'));\r\n      maplatProjection.mercBoundary = polygon([coords3857]) as GeoJSONPolygonFeature;\r\n    }\r\n  } else {\r\n    if (\"boundsPolygon\" in settings) {\r\n      maplatProjection.pixelBoundary = settings.boundsPolygon!;\r\n    } else {\r\n      const xys = [\r\n        [0, 0],\r\n        [options.size![0], 0],\r\n        options.size,\r\n        [0, options.size![1]],\r\n        [0, 0],\r\n      ];\r\n      maplatProjection.pixelBoundary = polygon([xys as Position[]]) as GeoJSONPolygonFeature;\r\n    }\r\n    maplatProjection.mercBoundary = polygon([\r\n      maplatProjection.pixelBoundary.geometry.coordinates[0].map((xy: Coordinate2D) => transform(xy, maplatProjection, 'EPSG:3857')),\r\n    ]) as GeoJSONPolygonFeature;\r\n  }\r\n\r\n  return returnProjs ? returnProjs : maplatProjection;\r\n}\r\n\r\nfunction decideProjection(settings: MaplatDefinition | MaplatSpecLegacy, options: Options, subNum = 0): MaplatProjection {\r\n  const projName = `Maplat:${settings.mapID}${subNum ? `#${subNum}` : ''}`;\r\n  let projSelect = 'PIXEL';\r\n  if (settingsIsLegacy(settings)) { // レガシーの場合\r\n    if (settingsIs3857OnLegacy(settings)) {\r\n      options.maxZoom = (settings as MaplatSpecLegacy).maxZoom;\r\n      projSelect = settingsIsNoWarpOnLegacy3857(settings) ? '3857' : '3857+';\r\n    }\r\n  } else if (settingsIs3857(settings)) {\r\n    options.maxZoom = (settings as MaplatDefinition).sourceSpec.maxZoom;\r\n    projSelect = settingsIsNoWarp(settings) ? '3857' : '3857+';\r\n  }\r\n  let returnProj: Projection;\r\n  switch (projSelect) {\r\n    case '3857':\r\n      returnProj = getProjection('EPSG:3857')!;\r\n      break;\r\n    case '3857+':\r\n      returnProj = new Projection({\r\n        code: projName,\r\n        units: 'm',\r\n        extent: [\r\n          -20037508.342789244, -20037508.342789244, 20037508.342789244,\r\n          20037508.342789244,\r\n        ],\r\n        worldExtent: [-180, -85, 180, 85],\r\n      });\r\n      break;\r\n    default: {\r\n      if (!('size' in options)) {\r\n        options.size =\r\n          'projectionSpec' in settings\r\n            ? settings.projectionSpec.size\r\n            : 'width' in settings && 'height' in settings\r\n              ? [settings.width!, settings.height!]\r\n              : settings.compiled.wh;\r\n      }\r\n      options.maxZoom = Math.ceil(\r\n        Math.max(\r\n          Math.log2(options.size![0] / 256),\r\n          Math.log2(options.size![1] / 256)\r\n        )\r\n      );\r\n      const extent = [0, -options.size![1], options.size![0], 0];\r\n      const worldExtentSize = 256 * Math.pow(2, options.maxZoom);\r\n      const worldExtent = [0, -worldExtentSize, worldExtentSize, 0];\r\n      returnProj = new Projection({\r\n        code: projName,\r\n        units: 'pixels',\r\n        extent,\r\n        worldExtent,\r\n      });\r\n    }\r\n  }\r\n\r\n  return returnProj as MaplatProjection;\r\n}\r\n\r\n// ピクセル座標と投影系座標間の変換関数を作成\r\nfunction createSystem2MapTransformation(settings: MaplatDefinition | MaplatSpecLegacy) {\r\n  // レガシーの場合、そのまま流す\r\n  if (settingsIsLegacy(settings)) { \r\n    return [coord2Coord, coord2Coord];\r\n  }\r\n  // ワールドファイル設定がある場合、それを元にピクセル座標から投影系座標へ\r\n  if (settingsHasWorldParams(settings)) { \r\n    const worldParams = (settings as MaplatDefinition).projectionSpec.worldParams!;\r\n    const a = worldParams.xScale;\r\n    const b = worldParams.xRotation;\r\n    const c = worldParams.xOrigin;\r\n    const d = worldParams.yRotation;\r\n    const e = worldParams.yScale;\r\n    const f = worldParams.yOrigin;\r\n    return [\r\n      (xy: Coordinate2D) => [a * xy[0] - b * xy[1] + c, d * xy[0] - e * xy[1] + f],\r\n      (xy: Coordinate2D) => [\r\n        (xy[0] * e - xy[1] * b - c * e + f * b) / (a * e - b * d),\r\n        -(xy[1] * a - xy[0] * d - f * a + c * d) / (a * e - b * d),\r\n      ],\r\n    ];\r\n  }\r\n  return [coord2Coord, coord2Coord];\r\n}\r\n\r\n// 投影座標内でのワーピング処理用の変換関数を作成\r\nfunction createMap2WarpTransformation(settings: MaplatDefinition | MaplatSpecLegacy) {\r\n  // レガシーの場合、MaplatTinなどでの処理を行う\r\n  if (settingsIsLegacy(settings)) {\r\n    // レガシーかつ3857の場合、メルカトルシフトがある場合はそれを適用\r\n    if (settingsIs3857OnLegacy(settings)) {\r\n      if (settingsIsNoWarpOnLegacy3857(settings)) {\r\n        return [coord2Coord, coord2Coord];\r\n      }\r\n      const shiftX = (settings as MaplatSpecLegacy).mercatorXShift!;\r\n      const shiftY = (settings as MaplatSpecLegacy).mercatorYShift!;\r\n      return [\r\n        (xy: Coordinate2D) => [xy[0] + shiftX, xy[1] + shiftY] ,\r\n        (xy: Coordinate2D) => [xy[0] - shiftX, xy[1] - shiftY],\r\n      ];\r\n    }\r\n    // MaplatTinでの処理\r\n    const tin = new Tin();\r\n    tin.setCompiled((settings as MaplatSpecLegacy).compiled as any);\r\n    return [\r\n      (xy: Coordinate2D) => tin.transform([xy[0], -xy[1]], false) as Coordinate2D,\r\n      (merc: Coordinate2D) => {\r\n        const xy = tin.transform(merc, true) as Coordinate2D;\r\n        return [xy[0], -xy[1]];\r\n      },\r\n    ];\r\n  }\r\n  const projectionSpec = (settings as MaplatDefinition).projectionSpec;\r\n  switch (projectionSpec.warp) {\r\n    case 'TIN':\r\n      // TIN処理\r\n      return [coord2Coord, coord2Coord];\r\n    case 'SHIFT':\r\n      {\r\n        const coordShift = projectionSpec.coordShift!;\r\n        return [\r\n          (xy: Coordinate2D) => [xy[0] + coordShift[0], xy[1] + coordShift[1]] as Coordinate2D,\r\n          (xy: Coordinate2D) => [xy[0] - coordShift[0], xy[1] - coordShift[1]] as Coordinate2D,\r\n        ];\r\n      }\r\n    default:\r\n      return [coord2Coord, coord2Coord];\r\n  }\r\n}\r\n\r\n// 他のMaplat定義との変換処理用座標（3857）との変換関数を作成\r\nfunction createWarp2OperationTransformation(settings: MaplatDefinition | MaplatSpecLegacy) {\r\n  // レガシーの場合、3857ベースになっているので、そのまま流す\r\n  if (settingsIsLegacy(settings)) { \r\n    return [coord2Coord, coord2Coord];\r\n  }\r\n  const projectionSpec = (settings as MaplatDefinition).projectionSpec;\r\n  // ピクセル座標の場合、ワープの時点で3857になっているので、そのまま流す\r\n  if (projectionSpec.mapCoord === 'PIXEL') {\r\n    return [coord2Coord, coord2Coord];\r\n  }\r\n  // Japan City Planの場合、NAD27に変換してからその値をTokyoとみなし、3857に変換\r\n  if (projectionSpec.mapCoord.match(/^(JCP:ZONE[ABC])/)) {\r\n    const zone = RegExp.$1;\r\n    const map2nad = proj4(`${zone}:NAD27`, 'JCP:NAD27');\r\n    const tky2merc = proj4('TOKYO', 'EPSG:3857');\r\n    return [\r\n      (xy: Coordinate2D) => {\r\n        const tokyo = map2nad.forward(xy);\r\n        const merc = tky2merc.forward(tokyo);\r\n        return merc as Coordinate2D;\r\n      },\r\n      (merc: Coordinate2D) => {\r\n        const tokyo = tky2merc.inverse(merc);\r\n        const xy = map2nad.inverse(tokyo);\r\n        return xy as Coordinate2D;\r\n      },\r\n    ];\r\n  }\r\n  // その他の投影系の場合、3857に変換する\r\n  if (projectionSpec.mapCoord.match(/^EPSG:\\d+$/)) {\r\n    const epsg = projectionSpec.mapCoord;\r\n    if (!proj4.defs(epsg)) {\r\n      if (projectionSpec.mapCoordText) {\r\n        proj4.defs(epsg, projectionSpec.mapCoordText);\r\n      } else if (proj4List[epsg]) {\r\n        proj4.defs(epsg, proj4List[epsg][1]);\r\n      } else {\r\n        throw new Error(`Unsupported projection by proj4 and proj4-list: ${epsg}`);\r\n      }\r\n    }\r\n    const map2merc = proj4(epsg, 'EPSG:3857');\r\n    return [\r\n      (xy: Coordinate2D) => {\r\n        const merc = map2merc.forward(xy);\r\n        return merc as Coordinate2D;\r\n      },\r\n      (merc: Coordinate2D) => {\r\n        const xy = map2merc.inverse(merc);\r\n        return xy as Coordinate2D;\r\n      },\r\n    ];\r\n  }\r\n  throw new Error(`Cannot handle projection: ${projectionSpec.mapCoord}`);\r\n}\r\n\r\nfunction coord2Coord(xy: Coordinate2D) {\r\n  return xy;\r\n}\r\n\r\n// データのバージョンが設定のルートにない場合、レガシーとみなす\r\nfunction settingsIsLegacy(settings: MaplatDefinition | MaplatSpecLegacy) {\r\n  return !('version' in settings);\r\n}\r\n\r\nfunction settingsIs3857OnLegacy(settings: MaplatDefinition | MaplatSpecLegacy) {\r\n  return \"maptype\" in settings && (\r\n    settings.maptype === 'base' ||\r\n    settings.maptype === 'overlay' ||\r\n    settings.maptype === 'mapbox'\r\n  );\r\n}\r\n\r\nfunction settingsIsNoWarpOnLegacy3857(settings: MaplatDefinition | MaplatSpecLegacy) {\r\n  return !('mercatorXShift' in settings && 'mercatorYShift' in settings);\r\n}\r\n\r\nfunction settingsIs3857(settings: MaplatDefinition | MaplatSpecLegacy) {\r\n  return (\r\n    \"projectionSpec\" in settings &&\r\n    settings.projectionSpec.mapCoord === 'EPSG:3857' &&\r\n    (settings.sourceSpec.tileSourceType === 'WMTS' ||\r\n      settings.sourceSpec.tileSourceType === 'TMS')\r\n  );\r\n}\r\n\r\nfunction settingsIsNoWarp(settings: MaplatDefinition | MaplatSpecLegacy) {\r\n  return \"projectionSpec\" in settings && settings.projectionSpec.warp === 'NONE';\r\n}\r\n\r\nfunction settingsHasWorldParams(settings: MaplatDefinition | MaplatSpecLegacy): boolean {\r\n  return \"projectionSpec\" in settings && \"worldParams\" in settings.projectionSpec;\r\n}\r\n\r\nexport default Factory;\r\n","/**\n * @module ol/DataTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\n\n/**\n * @typedef {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement|ImageBitmap} ImageLike\n */\n\n/**\n * @typedef {Uint8Array|Uint8ClampedArray|Float32Array|DataView} ArrayLike\n */\n\n/**\n * Data that can be used with a DataTile.\n * @typedef {ArrayLike|ImageLike} Data\n */\n\n/**\n * @param {Data} data Tile data.\n * @return {ImageLike|null} The image-like data.\n */\nexport function asImageLike(data) {\n  return data instanceof Image ||\n    data instanceof HTMLCanvasElement ||\n    data instanceof HTMLVideoElement ||\n    data instanceof ImageBitmap\n    ? data\n    : null;\n}\n\n/**\n * @param {Data} data Tile data.\n * @return {ArrayLike|null} The array-like data.\n */\nexport function asArrayLike(data) {\n  return data instanceof Uint8Array ||\n    data instanceof Uint8ClampedArray ||\n    data instanceof Float32Array ||\n    data instanceof DataView\n    ? data\n    : null;\n}\n\n/**\n * @type {CanvasRenderingContext2D|null}\n */\nlet sharedContext = null;\n\n/**\n * @param {ImageLike} image The image.\n * @return {Uint8ClampedArray} The data.\n */\nexport function toArray(image) {\n  if (!sharedContext) {\n    sharedContext = createCanvasContext2D(\n      image.width,\n      image.height,\n      undefined,\n      {willReadFrequently: true}\n    );\n  }\n  const canvas = sharedContext.canvas;\n  const width = image.width;\n  if (canvas.width !== width) {\n    canvas.width = width;\n  }\n  const height = image.height;\n  if (canvas.height !== height) {\n    canvas.height = height;\n  }\n  sharedContext.clearRect(0, 0, width, height);\n  sharedContext.drawImage(image, 0, 0);\n  return sharedContext.getImageData(0, 0, width, height).data;\n}\n\n/**\n * @type {import('./size.js').Size}\n */\nconst defaultSize = [256, 256];\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @property {function(): Promise<Data>} loader Data loader.  For loaders that generate images,\n * the promise should not resolve until the image is loaded.\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @property {import('./size.js').Size} [size=[256, 256]] Tile size.\n * @api\n */\n\nclass DataTile extends Tile {\n  /**\n   * @param {Options} options Tile options.\n   */\n  constructor(options) {\n    const state = TileState.IDLE;\n\n    super(options.tileCoord, state, {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    });\n\n    /**\n     * @type {function(): Promise<Data>}\n     * @private\n     */\n    this.loader_ = options.loader;\n\n    /**\n     * @type {Data}\n     * @private\n     */\n    this.data_ = null;\n\n    /**\n     * @type {Error}\n     * @private\n     */\n    this.error_ = null;\n\n    /**\n     * @type {import('./size.js').Size|null}\n     * @private\n     */\n    this.size_ = options.size || null;\n  }\n\n  /**\n   * Get the tile size.\n   * @return {import('./size.js').Size} Tile size.\n   */\n  getSize() {\n    if (this.size_) {\n      return this.size_;\n    }\n    const imageData = asImageLike(this.data_);\n    if (imageData) {\n      return [imageData.width, imageData.height];\n    }\n    return defaultSize;\n  }\n\n  /**\n   * Get the data for the tile.\n   * @return {Data} Tile data.\n   * @api\n   */\n  getData() {\n    return this.data_;\n  }\n\n  /**\n   * Get any loading error.\n   * @return {Error} Loading error.\n   * @api\n   */\n  getError() {\n    return this.error_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @api\n   */\n  load() {\n    if (this.state !== TileState.IDLE && this.state !== TileState.ERROR) {\n      return;\n    }\n    this.state = TileState.LOADING;\n    this.changed();\n\n    const self = this;\n    this.loader_()\n      .then(function (data) {\n        self.data_ = data;\n        self.state = TileState.LOADED;\n        self.changed();\n      })\n      .catch(function (error) {\n        self.error_ = error;\n        self.state = TileState.ERROR;\n        self.changed();\n      });\n  }\n}\n\nexport default DataTile;\n","/**\n * @module ol/reproj/DataTile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport DataTile, {asArrayLike, asImageLike, toArray} from '../DataTile.js';\nimport EventType from '../events/EventType.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {createCanvasContext2D, releaseCanvas} from '../dom.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../DataTile.js\").default} TileGetter\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n * @property {import(\"../proj/Projection.js\").default} targetProj Target projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n * @property {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n * @property {import(\"../tilecoord.js\").TileCoord} [wrappedTileCoord] Coordinate of the tile wrapped in X.\n * @property {number} pixelRatio Pixel ratio.\n * @property {number} gutter Gutter of the source tiles.\n * @property {TileGetter} getTileFunction Function returning source tiles (z, x, y, pixelRatio).\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @property {number} [errorThreshold] Acceptable reprojection error (in px).\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected data tile.\n * See {@link module:ol/source/DataTile~DataTileSource}.\n *\n */\nclass ReprojDataTile extends DataTile {\n  /**\n   * @param {Options} options Tile options.\n   */\n  constructor(options) {\n    super({\n      tileCoord: options.tileCoord,\n      loader: () => Promise.resolve(new Uint8Array(4)),\n      interpolate: options.interpolate,\n      transition: options.transition,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = options.pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter;\n\n    /**\n     * @type {import(\"../DataTile.js\").Data}\n     * @private\n     */\n    this.reprojData_ = null;\n\n    /**\n     * @type {Error}\n     * @private\n     */\n    this.reprojError_ = null;\n\n    /**\n     * @type {import('../size.js').Size}\n     * @private\n     */\n    this.reprojSize_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = options.sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = options.targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = options.wrappedTileCoord || options.tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<DataTile>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProj = options.sourceProj;\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = this.targetTileGrid_.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const targetProj = options.targetProj;\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      options.errorThreshold !== undefined\n        ? options.errorThreshold\n        : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = this.sourceTileGrid_.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = this.sourceTileGrid_.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n      const getTile = options.getTileFunction;\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTile(this.sourceZ_, srcX, srcY, this.pixelRatio_);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the tile size.\n   * @return {import('../size.js').Size} Tile size.\n   */\n  getSize() {\n    return this.reprojSize_;\n  }\n\n  /**\n   * Get the data for the tile.\n   * @return {import(\"../DataTile.js\").Data} Tile data.\n   */\n  getData() {\n    return this.reprojData_;\n  }\n\n  /**\n   * Get any loading error.\n   * @return {Error} Loading error.\n   */\n  getError() {\n    return this.reprojError_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const dataSources = [];\n    this.sourceTiles_.forEach((tile) => {\n      if (!tile || tile.getState() !== TileState.LOADED) {\n        return;\n      }\n      const size = tile.getSize();\n      const gutter = this.gutter_;\n      /**\n       * @type {import(\"../DataTile.js\").ArrayLike}\n       */\n      let tileData;\n      const arrayData = asArrayLike(tile.getData());\n      if (arrayData) {\n        tileData = arrayData;\n      } else {\n        tileData = toArray(asImageLike(tile.getData()));\n      }\n      const pixelSize = [size[0] + 2 * gutter, size[1] + 2 * gutter];\n      const isFloat = tileData instanceof Float32Array;\n      const pixelCount = pixelSize[0] * pixelSize[1];\n      const DataType = isFloat ? Float32Array : Uint8Array;\n      const tileDataR = new DataType(tileData.buffer);\n      const bytesPerElement = DataType.BYTES_PER_ELEMENT;\n      const bytesPerPixel = (bytesPerElement * tileDataR.length) / pixelCount;\n      const bytesPerRow = tileDataR.byteLength / pixelSize[1];\n      const bandCount = Math.floor(\n        bytesPerRow / bytesPerElement / pixelSize[0]\n      );\n      const packedLength = pixelCount * bandCount;\n      let packedData = tileDataR;\n      if (tileDataR.length !== packedLength) {\n        packedData = new DataType(packedLength);\n        let dataIndex = 0;\n        let rowOffset = 0;\n        const colCount = pixelSize[0] * bandCount;\n        for (let rowIndex = 0; rowIndex < pixelSize[1]; ++rowIndex) {\n          for (let colIndex = 0; colIndex < colCount; ++colIndex) {\n            packedData[dataIndex++] = tileDataR[rowOffset + colIndex];\n          }\n          rowOffset += bytesPerRow / bytesPerElement;\n        }\n      }\n      dataSources.push({\n        extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n        data: new Uint8Array(packedData.buffer),\n        dataType: DataType,\n        bytesPerPixel: bytesPerPixel,\n        pixelSize: pixelSize,\n      });\n    });\n    this.sourceTiles_.length = 0;\n\n    if (dataSources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const targetWidth = typeof size === 'number' ? size : size[0];\n      const targetHeight = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n\n      let dataR, dataU;\n\n      const bytesPerPixel = dataSources[0].bytesPerPixel;\n\n      const reprojs = Math.ceil(bytesPerPixel / 3);\n      for (let reproj = reprojs - 1; reproj >= 0; --reproj) {\n        const sources = [];\n        for (let i = 0, len = dataSources.length; i < len; ++i) {\n          const dataSource = dataSources[i];\n          const buffer = dataSource.data;\n          const pixelSize = dataSource.pixelSize;\n          const width = pixelSize[0];\n          const height = pixelSize[1];\n          const context = createCanvasContext2D(width, height, canvasPool);\n          const imageData = context.createImageData(width, height);\n          const data = imageData.data;\n          let offset = reproj * 3;\n          for (let j = 0, len = data.length; j < len; j += 4) {\n            data[j] = buffer[offset];\n            data[j + 1] = buffer[offset + 1];\n            data[j + 2] = buffer[offset + 2];\n            data[j + 3] = 255;\n            offset += bytesPerPixel;\n          }\n          context.putImageData(imageData, 0, 0);\n          sources.push({\n            extent: dataSource.extent,\n            image: context.canvas,\n          });\n        }\n\n        const canvas = renderReprojected(\n          targetWidth,\n          targetHeight,\n          this.pixelRatio_,\n          sourceResolution,\n          this.sourceTileGrid_.getExtent(),\n          targetResolution,\n          targetExtent,\n          this.triangulation_,\n          sources,\n          this.gutter_,\n          false,\n          false\n        );\n\n        for (let i = 0, len = sources.length; i < len; ++i) {\n          const canvas = sources[i].image;\n          const context = canvas.getContext('2d');\n          releaseCanvas(context);\n          canvasPool.push(context.canvas);\n        }\n\n        const context = canvas.getContext('2d');\n        const imageData = context.getImageData(\n          0,\n          0,\n          canvas.width,\n          canvas.height\n        );\n\n        releaseCanvas(context);\n        canvasPool.push(canvas);\n\n        if (!dataR) {\n          dataU = new Uint8Array(\n            bytesPerPixel * imageData.width * imageData.height\n          );\n          dataR = new dataSources[0].dataType(dataU.buffer);\n        }\n\n        const data = imageData.data;\n        let offset = reproj * 3;\n        for (let i = 0, len = data.length; i < len; i += 4) {\n          if (data[i + 3] === 255) {\n            dataU[offset] = data[i];\n            dataU[offset + 1] = data[i + 1];\n            dataU[offset + 2] = data[i + 2];\n          } else {\n            dataU[offset] = 0;\n            dataU[offset + 1] = 0;\n            dataU[offset + 2] = 0;\n          }\n          offset += bytesPerPixel;\n        }\n      }\n\n      this.reprojData_ = dataR;\n      this.reprojSize_ = [\n        Math.round(targetWidth * this.pixelRatio_),\n        Math.round(targetHeight * this.pixelRatio_),\n      ];\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state !== TileState.IDLE && this.state !== TileState.ERROR) {\n      return;\n    }\n    this.state = TileState.LOADING;\n    this.changed();\n\n    let leftToLoad = 0;\n\n    this.sourcesListenerKeys_ = [];\n    this.sourceTiles_.forEach((tile) => {\n      const state = tile.getState();\n      if (state !== TileState.IDLE && state !== TileState.LOADING) {\n        return;\n      }\n      leftToLoad++;\n\n      const sourceListenKey = listen(\n        tile,\n        EventType.CHANGE,\n        function () {\n          const state = tile.getState();\n          if (\n            state == TileState.LOADED ||\n            state == TileState.ERROR ||\n            state == TileState.EMPTY\n          ) {\n            unlistenByKey(sourceListenKey);\n            leftToLoad--;\n            if (leftToLoad === 0) {\n              this.unlistenSources_();\n              this.reproject_();\n            }\n          }\n        },\n        this\n      );\n      this.sourcesListenerKeys_.push(sourceListenKey);\n    });\n\n    if (leftToLoad === 0) {\n      setTimeout(this.reproject_.bind(this), 0);\n    } else {\n      this.sourceTiles_.forEach(function (tile) {\n        const state = tile.getState();\n        if (state == TileState.IDLE) {\n          tile.load();\n        }\n      });\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n}\n\nexport default ReprojDataTile;\n","/**\n * @module ol/webgl/BaseTileRepresentation\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\n\n/**\n * @typedef {import(\"../Tile.js\").default} BaseTileType\n */\n\n/**\n * @template {BaseTileType} TileType\n * @typedef {Object} TileRepresentationOptions\n * @property {TileType} tile The tile.\n * @property {import(\"../tilegrid/TileGrid.js\").default} grid Tile grid.\n * @property {import(\"../webgl/Helper.js\").default} helper WebGL helper.\n * @property {number} [gutter=0] The size in pixels of the gutter around image tiles to ignore.\n */\n\n/**\n * @classdesc\n * Base class for representing a tile in a webgl context\n * @template {import(\"../Tile.js\").default} TileType\n * @abstract\n */\nclass BaseTileRepresentation extends EventTarget {\n  /**\n   * @param {TileRepresentationOptions<TileType>} options The tile representation options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @type {TileType}\n     */\n    this.tile;\n    this.handleTileChange_ = this.handleTileChange_.bind(this);\n\n    /**\n     * @type {number}\n     * @protected\n     */\n    this.gutter_ = options.gutter || 0;\n\n    /**\n     * @type {import(\"../webgl/Helper.js\").default}\n     * @protected\n     */\n    this.helper_ = options.helper;\n\n    this.loaded = false;\n    this.ready = false;\n  }\n\n  /**\n   * @param {TileType} tile Tile.\n   */\n  setTile(tile) {\n    if (tile !== this.tile) {\n      if (this.tile) {\n        this.tile.removeEventListener(EventType.CHANGE, this.handleTileChange_);\n      }\n      this.tile = tile;\n      this.loaded = tile.getState() === TileState.LOADED;\n      if (this.loaded) {\n        this.uploadTile();\n      } else {\n        if (tile instanceof ImageTile) {\n          const image = tile.getImage();\n          if (image instanceof Image && !image.crossOrigin) {\n            image.crossOrigin = 'anonymous';\n          }\n        }\n        tile.addEventListener(EventType.CHANGE, this.handleTileChange_);\n      }\n    }\n  }\n\n  /**\n   * @abstract\n   * @protected\n   */\n  uploadTile() {\n    abstract();\n  }\n\n  setReady() {\n    this.ready = true;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  handleTileChange_() {\n    if (this.tile.getState() === TileState.LOADED) {\n      this.loaded = true;\n      this.uploadTile();\n    }\n  }\n\n  disposeInternal() {\n    this.tile.removeEventListener(EventType.CHANGE, this.handleTileChange_);\n  }\n}\n\nexport default BaseTileRepresentation;\n","/**\n * @module ol/webgl\n */\n\nimport {SAFARI_BUG_237906} from './has.js';\n\n/**\n * Constants taken from goog.webgl\n */\n\n/**\n * Used by {@link module:ol/webgl/Helper~WebGLHelper} for buffers containing vertices data, such as\n * position, color, texture coordinate, etc. These vertices are then referenced by an index buffer\n * to be drawn on screen (see {@link module:ol/webgl.ELEMENT_ARRAY_BUFFER}).\n * @const\n * @type {number}\n * @api\n */\nexport const ARRAY_BUFFER = 0x8892;\n\n/**\n * Used by {@link module:ol/webgl/Helper~WebGLHelper} for buffers containing indices data.\n * Index buffers are essentially lists of references to vertices defined in a vertex buffer\n * (see {@link module:ol/webgl.ARRAY_BUFFER}), and define the primitives (triangles) to be drawn.\n * @const\n * @type {number}\n * @api\n */\nexport const ELEMENT_ARRAY_BUFFER = 0x8893;\n\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport const STREAM_DRAW = 0x88e0;\n\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport const STATIC_DRAW = 0x88e4;\n\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport const DYNAMIC_DRAW = 0x88e8;\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_BYTE = 0x1401;\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_SHORT = 0x1403;\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_INT = 0x1405;\n\n/**\n * @const\n * @type {number}\n */\nexport const FLOAT = 0x1406;\n\n/** end of goog.webgl constants\n */\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst CONTEXT_IDS = ['experimental-webgl', 'webgl', 'webkit-3d', 'moz-webgl'];\n\n/**\n * @param {HTMLCanvasElement} canvas Canvas.\n * @param {Object} [attributes] Attributes.\n * @return {WebGLRenderingContext|null} WebGL rendering context.\n */\nexport function getContext(canvas, attributes) {\n  attributes = Object.assign(\n    {\n      preserveDrawingBuffer: true,\n      antialias: SAFARI_BUG_237906 ? false : true, // https://bugs.webkit.org/show_bug.cgi?id=237906\n    },\n    attributes\n  );\n  const ii = CONTEXT_IDS.length;\n  for (let i = 0; i < ii; ++i) {\n    try {\n      const context = canvas.getContext(CONTEXT_IDS[i], attributes);\n      if (context) {\n        return /** @type {!WebGLRenderingContext} */ (context);\n      }\n    } catch (e) {\n      // pass\n    }\n  }\n  return null;\n}\n\n/**\n * @type {Array<string>|null}\n */\nlet supportedExtensions = null;\n\n/**\n * @return {Array<string>|null} List of supported WebGL extensions.\n */\nexport function getSupportedExtensions() {\n  if (!supportedExtensions) {\n    const canvas = document.createElement('canvas');\n    const gl = getContext(canvas);\n    if (gl) {\n      supportedExtensions = gl.getSupportedExtensions();\n    }\n  }\n  return supportedExtensions;\n}\n","/**\n * @module ol/webgl/Buffer\n */\nimport {\n  ARRAY_BUFFER,\n  DYNAMIC_DRAW,\n  ELEMENT_ARRAY_BUFFER,\n  STATIC_DRAW,\n  STREAM_DRAW,\n} from '../webgl.js';\nimport {assert} from '../asserts.js';\n\n/**\n * Used to describe the intended usage for the data: `STATIC_DRAW`, `STREAM_DRAW`\n * or `DYNAMIC_DRAW`.\n * @enum {number}\n */\nexport const BufferUsage = {\n  STATIC_DRAW: STATIC_DRAW,\n  STREAM_DRAW: STREAM_DRAW,\n  DYNAMIC_DRAW: DYNAMIC_DRAW,\n};\n\n/**\n * @classdesc\n * Object used to store an array of data as well as usage information for that data.\n * Stores typed arrays internally, either Float32Array or Uint16/32Array depending on\n * the buffer type (ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER) and available extensions.\n *\n * To populate the array, you can either use:\n * * A size using `#ofSize(buffer)`\n * * An `ArrayBuffer` object using `#fromArrayBuffer(buffer)`\n * * A plain array using `#fromArray(array)`\n *\n * Note:\n * See the documentation of [WebGLRenderingContext.bufferData](https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/bufferData)\n * for more info on buffer usage.\n */\nclass WebGLArrayBuffer {\n  /**\n   * @param {number} type Buffer type, either ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER.\n   * @param {number} [usage] Intended usage, either `STATIC_DRAW`, `STREAM_DRAW` or `DYNAMIC_DRAW`.\n   * Default is `DYNAMIC_DRAW`.\n   */\n  constructor(type, usage) {\n    /**\n     * @private\n     * @type {Float32Array|Uint32Array|null}\n     */\n    this.array_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.type_ = type;\n\n    assert(\n      type === ARRAY_BUFFER || type === ELEMENT_ARRAY_BUFFER,\n      'A `WebGLArrayBuffer` must either be of type `ELEMENT_ARRAY_BUFFER` or `ARRAY_BUFFER`'\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.usage_ = usage !== undefined ? usage : BufferUsage.STATIC_DRAW;\n  }\n\n  /**\n   * Populates the buffer with an array of the given size (all values will be zeroes).\n   * @param {number} size Array size\n   * @return {WebGLArrayBuffer} This\n   */\n  ofSize(size) {\n    this.array_ = new (getArrayClassForType(this.type_))(size);\n    return this;\n  }\n\n  /**\n   * Populates the buffer with an array of the given size.\n   * @param {Array<number>} array Numerical array\n   * @return {WebGLArrayBuffer} This\n   */\n  fromArray(array) {\n    this.array_ = getArrayClassForType(this.type_).from(array);\n    return this;\n  }\n\n  /**\n   * Populates the buffer with a raw binary array buffer.\n   * @param {ArrayBuffer} buffer Raw binary buffer to populate the array with. Note that this buffer must have been\n   * initialized for the same typed array class.\n   * @return {WebGLArrayBuffer} This\n   */\n  fromArrayBuffer(buffer) {\n    this.array_ = new (getArrayClassForType(this.type_))(buffer);\n    return this;\n  }\n\n  /**\n   * @return {number} Buffer type.\n   */\n  getType() {\n    return this.type_;\n  }\n\n  /**\n   * Will return null if the buffer was not initialized\n   * @return {Float32Array|Uint32Array|null} Array.\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * @return {number} Usage.\n   */\n  getUsage() {\n    return this.usage_;\n  }\n\n  /**\n   * Will return 0 if the buffer is not initialized\n   * @return {number} Array size\n   */\n  getSize() {\n    return this.array_ ? this.array_.length : 0;\n  }\n}\n\n/**\n * Returns a typed array constructor based on the given buffer type\n * @param {number} type Buffer type, either ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER.\n * @return {Float32ArrayConstructor|Uint32ArrayConstructor} The typed array class to use for this buffer.\n */\nexport function getArrayClassForType(type) {\n  switch (type) {\n    case ARRAY_BUFFER:\n      return Float32Array;\n    case ELEMENT_ARRAY_BUFFER:\n      return Uint32Array;\n    default:\n      return Float32Array;\n  }\n}\n\nexport default WebGLArrayBuffer;\n","/**\n * @module ol/webgl/TileTexture\n */\n\nimport BaseTileRepresentation from './BaseTileRepresentation.js';\nimport DataTile, {asArrayLike, asImageLike} from '../DataTile.js';\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport WebGLArrayBuffer from './Buffer.js';\nimport {ARRAY_BUFFER, STATIC_DRAW} from '../webgl.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {toSize} from '../size.js';\n\n/**\n * @param {WebGLRenderingContext} gl The WebGL context.\n * @param {WebGLTexture} texture The texture.\n * @param {boolean} interpolate Interpolate when resampling.\n */\nfunction bindAndConfigure(gl, texture, interpolate) {\n  const resampleFilter = interpolate ? gl.LINEAR : gl.NEAREST;\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, resampleFilter);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, resampleFilter);\n}\n\n/**\n * @param {WebGLRenderingContext} gl The WebGL context.\n * @param {WebGLTexture} texture The texture.\n * @param {import(\"../DataTile.js\").ImageLike} image The image.\n * @param {boolean} interpolate Interpolate when resampling.\n */\nfunction uploadImageTexture(gl, texture, image, interpolate) {\n  bindAndConfigure(gl, texture, interpolate);\n\n  gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n}\n\n/**\n * @param {import(\"./Helper.js\").default} helper The WebGL helper.\n * @param {WebGLTexture} texture The texture.\n * @param {import(\"../DataTile.js\").ArrayLike} data The pixel data.\n * @param {import(\"../size.js\").Size} size The pixel size.\n * @param {number} bandCount The band count.\n * @param {boolean} interpolate Interpolate when resampling.\n */\nfunction uploadDataTexture(\n  helper,\n  texture,\n  data,\n  size,\n  bandCount,\n  interpolate\n) {\n  const gl = helper.getGL();\n  let textureType;\n  let canInterpolate;\n  if (data instanceof Float32Array) {\n    textureType = gl.FLOAT;\n    helper.getExtension('OES_texture_float');\n    const extension = helper.getExtension('OES_texture_float_linear');\n    canInterpolate = extension !== null;\n  } else {\n    textureType = gl.UNSIGNED_BYTE;\n    canInterpolate = true;\n  }\n  bindAndConfigure(gl, texture, interpolate && canInterpolate);\n\n  const bytesPerRow = data.byteLength / size[1];\n  let unpackAlignment = 1;\n  if (bytesPerRow % 8 === 0) {\n    unpackAlignment = 8;\n  } else if (bytesPerRow % 4 === 0) {\n    unpackAlignment = 4;\n  } else if (bytesPerRow % 2 === 0) {\n    unpackAlignment = 2;\n  }\n\n  let format;\n  switch (bandCount) {\n    case 1: {\n      format = gl.LUMINANCE;\n      break;\n    }\n    case 2: {\n      format = gl.LUMINANCE_ALPHA;\n      break;\n    }\n    case 3: {\n      format = gl.RGB;\n      break;\n    }\n    case 4: {\n      format = gl.RGBA;\n      break;\n    }\n    default: {\n      throw new Error(`Unsupported number of bands: ${bandCount}`);\n    }\n  }\n\n  const oldUnpackAlignment = gl.getParameter(gl.UNPACK_ALIGNMENT);\n  gl.pixelStorei(gl.UNPACK_ALIGNMENT, unpackAlignment);\n  gl.texImage2D(\n    gl.TEXTURE_2D,\n    0,\n    format,\n    size[0],\n    size[1],\n    0,\n    format,\n    textureType,\n    data\n  );\n  gl.pixelStorei(gl.UNPACK_ALIGNMENT, oldUnpackAlignment);\n}\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @typedef {import(\"../DataTile.js\").default|ImageTile|ReprojTile} TileType\n */\n\n/**\n * @extends {BaseTileRepresentation<TileType>}\n */\nclass TileTexture extends BaseTileRepresentation {\n  /**\n   * @param {import(\"./BaseTileRepresentation.js\").TileRepresentationOptions<TileType>} options The tile texture options.\n   */\n  constructor(options) {\n    super(options);\n\n    /**\n     * @type {Array<WebGLTexture>}\n     */\n    this.textures = [];\n\n    /**\n     * @type {import(\"../size.js\").Size}\n     * @private\n     */\n    this.renderSize_ = toSize(\n      options.grid.getTileSize(options.tile.tileCoord[0])\n    );\n\n    /**\n     * @type {number}\n     */\n    this.bandCount = NaN;\n\n    const coords = new WebGLArrayBuffer(ARRAY_BUFFER, STATIC_DRAW);\n    coords.fromArray([\n      0, // P0\n      1,\n      1, // P1\n      1,\n      1, // P2\n      0,\n      0, // P3\n      0,\n    ]);\n    this.helper_.flushBufferData(coords);\n\n    /**\n     * @type {WebGLArrayBuffer}\n     */\n    this.coords = coords;\n\n    this.setTile(options.tile);\n  }\n\n  uploadTile() {\n    const helper = this.helper_;\n    const gl = helper.getGL();\n    const tile = this.tile;\n\n    this.textures.length = 0;\n\n    /**\n     * @type {import(\"../DataTile.js\").Data}\n     */\n    let data;\n\n    if (tile instanceof ImageTile || tile instanceof ReprojTile) {\n      data = tile.getImage();\n    } else {\n      data = tile.getData();\n    }\n\n    const image = asImageLike(data);\n    if (image) {\n      const texture = gl.createTexture();\n      this.textures.push(texture);\n      this.bandCount = 4;\n      uploadImageTexture(gl, texture, image, tile.interpolate);\n      this.setReady();\n      return;\n    }\n\n    data = asArrayLike(data);\n\n    const sourceTileSize = /** @type {DataTile} */ (tile).getSize();\n    const pixelSize = [\n      sourceTileSize[0] + 2 * this.gutter_,\n      sourceTileSize[1] + 2 * this.gutter_,\n    ];\n    const isFloat = data instanceof Float32Array;\n    const pixelCount = pixelSize[0] * pixelSize[1];\n    const DataType = isFloat ? Float32Array : Uint8Array;\n    const bytesPerElement = DataType.BYTES_PER_ELEMENT;\n    const bytesPerRow = data.byteLength / pixelSize[1];\n\n    this.bandCount = Math.floor(bytesPerRow / bytesPerElement / pixelSize[0]);\n    const textureCount = Math.ceil(this.bandCount / 4);\n\n    if (textureCount === 1) {\n      const texture = gl.createTexture();\n      this.textures.push(texture);\n      uploadDataTexture(\n        helper,\n        texture,\n        data,\n        pixelSize,\n        this.bandCount,\n        tile.interpolate\n      );\n      this.setReady();\n      return;\n    }\n\n    const textureDataArrays = new Array(textureCount);\n    for (let textureIndex = 0; textureIndex < textureCount; ++textureIndex) {\n      const texture = gl.createTexture();\n      this.textures.push(texture);\n\n      const bandCount =\n        textureIndex < textureCount - 1 ? 4 : ((this.bandCount - 1) % 4) + 1;\n      textureDataArrays[textureIndex] = new DataType(pixelCount * bandCount);\n    }\n\n    let dataIndex = 0;\n    let rowOffset = 0;\n    const colCount = pixelSize[0] * this.bandCount;\n    for (let rowIndex = 0; rowIndex < pixelSize[1]; ++rowIndex) {\n      for (let colIndex = 0; colIndex < colCount; ++colIndex) {\n        const dataValue = data[rowOffset + colIndex];\n\n        const pixelIndex = Math.floor(dataIndex / this.bandCount);\n        const bandIndex = colIndex % this.bandCount;\n        const textureIndex = Math.floor(bandIndex / 4);\n        const textureData = textureDataArrays[textureIndex];\n        const bandCount = textureData.length / pixelCount;\n        const textureBandIndex = bandIndex % 4;\n        textureData[pixelIndex * bandCount + textureBandIndex] = dataValue;\n\n        ++dataIndex;\n      }\n      rowOffset += bytesPerRow / bytesPerElement;\n    }\n\n    for (let textureIndex = 0; textureIndex < textureCount; ++textureIndex) {\n      const texture = this.textures[textureIndex];\n      const textureData = textureDataArrays[textureIndex];\n      const bandCount = textureData.length / pixelCount;\n      uploadDataTexture(\n        helper,\n        texture,\n        textureData,\n        pixelSize,\n        bandCount,\n        tile.interpolate\n      );\n    }\n\n    this.setReady();\n  }\n\n  disposeInternal() {\n    const gl = this.helper_.getGL();\n    this.helper_.deleteBuffer(this.coords);\n    for (let i = 0; i < this.textures.length; ++i) {\n      gl.deleteTexture(this.textures[i]);\n    }\n    this.tile.removeEventListener(EventType.CHANGE, this.handleTileChange_);\n  }\n\n  /**\n   * @param {import(\"../DataTile.js\").ImageLike} image The image.\n   * @param {number} renderCol The column index (in rendered tile space).\n   * @param {number} renderRow The row index (in rendered tile space).\n   * @return {Uint8ClampedArray|null} The data.\n   * @private\n   */\n  getImagePixelData_(image, renderCol, renderRow) {\n    const gutter = this.gutter_;\n    const renderWidth = this.renderSize_[0];\n    const renderHeight = this.renderSize_[1];\n\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    const sourceWidth = image.width;\n    const sourceHeight = image.height;\n\n    const sourceWidthWithoutGutter = sourceWidth - 2 * gutter;\n    const sourceHeightWithoutGutter = sourceHeight - 2 * gutter;\n\n    const sourceCol =\n      gutter + Math.floor(sourceWidthWithoutGutter * (renderCol / renderWidth));\n\n    const sourceRow =\n      gutter +\n      Math.floor(sourceHeightWithoutGutter * (renderRow / renderHeight));\n\n    let data;\n    try {\n      pixelContext.drawImage(image, sourceCol, sourceRow, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import(\"../DataTile.js\").ArrayLike} data The data.\n   * @param {import(\"../size.js\").Size} sourceSize The size.\n   * @param {number} renderCol The column index (in rendered tile space).\n   * @param {number} renderRow The row index (in rendered tile space).\n   * @return {import(\"../DataTile.js\").ArrayLike|null} The data.\n   * @private\n   */\n  getArrayPixelData_(data, sourceSize, renderCol, renderRow) {\n    const gutter = this.gutter_;\n    const renderWidth = this.renderSize_[0];\n    const renderHeight = this.renderSize_[1];\n\n    const sourceWidthWithoutGutter = sourceSize[0];\n    const sourceHeightWithoutGutter = sourceSize[1];\n    const sourceWidth = sourceWidthWithoutGutter + 2 * gutter;\n    const sourceHeight = sourceHeightWithoutGutter + 2 * gutter;\n\n    const sourceCol =\n      gutter + Math.floor(sourceWidthWithoutGutter * (renderCol / renderWidth));\n\n    const sourceRow =\n      gutter +\n      Math.floor(sourceHeightWithoutGutter * (renderRow / renderHeight));\n\n    if (data instanceof DataView) {\n      const bytesPerPixel = data.byteLength / (sourceWidth * sourceHeight);\n      const offset = bytesPerPixel * (sourceRow * sourceWidth + sourceCol);\n      const buffer = data.buffer.slice(offset, offset + bytesPerPixel);\n      return new DataView(buffer);\n    }\n\n    const offset = this.bandCount * (sourceRow * sourceWidth + sourceCol);\n    return data.slice(offset, offset + this.bandCount);\n  }\n\n  /**\n   * Get data for a pixel.  If the tile is not loaded, null is returned.\n   * @param {number} renderCol The column index (in rendered tile space).\n   * @param {number} renderRow The row index (in rendered tile space).\n   * @return {import(\"../DataTile.js\").ArrayLike|null} The data.\n   */\n  getPixelData(renderCol, renderRow) {\n    if (!this.loaded) {\n      return null;\n    }\n\n    if (this.tile instanceof DataTile) {\n      const data = this.tile.getData();\n      const arrayData = asArrayLike(data);\n      if (arrayData) {\n        const sourceSize = this.tile.getSize();\n        return this.getArrayPixelData_(\n          arrayData,\n          sourceSize,\n          renderCol,\n          renderRow\n        );\n      }\n      return this.getImagePixelData_(asImageLike(data), renderCol, renderRow);\n    }\n\n    return this.getImagePixelData_(this.tile.getImage(), renderCol, renderRow);\n  }\n}\n\nexport default TileTexture;\n","/**\n * @module ol/webgl/ContextEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LOST: 'webglcontextlost',\n  RESTORED: 'webglcontextrestored',\n};\n","/**\n * @module ol/webgl/PostProcessingPass\n */\n\nimport {getUid} from '../util.js';\n\nconst DEFAULT_VERTEX_SHADER = `\n  precision mediump float;\n  \n  attribute vec2 a_position;\n  varying vec2 v_texCoord;\n  varying vec2 v_screenCoord;\n  \n  uniform vec2 u_screenSize;\n   \n  void main() {\n    v_texCoord = a_position * 0.5 + 0.5;\n    v_screenCoord = v_texCoord * u_screenSize;\n    gl_Position = vec4(a_position, 0.0, 1.0);\n  }\n`;\n\nconst DEFAULT_FRAGMENT_SHADER = `\n  precision mediump float;\n   \n  uniform sampler2D u_image;\n  uniform float u_opacity;\n   \n  varying vec2 v_texCoord;\n   \n  void main() {\n    gl_FragColor = texture2D(u_image, v_texCoord) * u_opacity;\n  }\n`;\n\n/**\n * @typedef {Object} Options\n * @property {WebGLRenderingContext} webGlContext WebGL context; mandatory.\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas that will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object<string,import(\"./Helper\").UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n\n/**\n * @typedef {Object} UniformInternalDescription\n * @property {import(\"./Helper\").UniformValue} value Value\n * @property {WebGLUniformLocation} location Location\n * @property {WebGLTexture} [texture] Texture\n * @private\n */\n\n/**\n * @classdesc\n * This class is used to define Post Processing passes with custom shaders and uniforms.\n * This is used internally by {@link module:ol/webgl/Helper~WebGLHelper}.\n *\n * Please note that the final output on the DOM canvas is expected to have premultiplied alpha, which means that\n * a pixel which is 100% red with an opacity of 50% must have a color of (r=0.5, g=0, b=0, a=0.5).\n * Failing to provide pixel colors with premultiplied alpha will result in render anomalies.\n *\n * The default post-processing pass does *not* multiply color values with alpha value, it expects color values to be\n * premultiplied.\n *\n * Default shaders are shown hereafter:\n *\n * * Vertex shader:\n *\n *   ```\n *   precision mediump float;\n *\n *   attribute vec2 a_position;\n *   varying vec2 v_texCoord;\n *   varying vec2 v_screenCoord;\n *\n *   uniform vec2 u_screenSize;\n *\n *   void main() {\n *     v_texCoord = a_position * 0.5 + 0.5;\n *     v_screenCoord = v_texCoord * u_screenSize;\n *     gl_Position = vec4(a_position, 0.0, 1.0);\n *   }\n *   ```\n *\n * * Fragment shader:\n *\n *   ```\n *   precision mediump float;\n *\n *   uniform sampler2D u_image;\n *   uniform float u_opacity;\n *\n *   varying vec2 v_texCoord;\n *\n *   void main() {\n *     gl_FragColor = texture2D(u_image, v_texCoord) * u_opacity;\n *   }\n *   ```\n */\nclass WebGLPostProcessingPass {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    this.gl_ = options.webGlContext;\n    const gl = this.gl_;\n\n    this.scaleRatio_ = options.scaleRatio || 1;\n\n    this.renderTargetTexture_ = gl.createTexture();\n    this.renderTargetTextureSize_ = null;\n\n    this.frameBuffer_ = gl.createFramebuffer();\n    this.depthBuffer_ = gl.createRenderbuffer();\n\n    // compile the program for the frame buffer\n    // TODO: make compilation errors show up\n    const vertexShader = gl.createShader(gl.VERTEX_SHADER);\n    gl.shaderSource(\n      vertexShader,\n      options.vertexShader || DEFAULT_VERTEX_SHADER\n    );\n    gl.compileShader(vertexShader);\n    const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(\n      fragmentShader,\n      options.fragmentShader || DEFAULT_FRAGMENT_SHADER\n    );\n    gl.compileShader(fragmentShader);\n    this.renderTargetProgram_ = gl.createProgram();\n    gl.attachShader(this.renderTargetProgram_, vertexShader);\n    gl.attachShader(this.renderTargetProgram_, fragmentShader);\n    gl.linkProgram(this.renderTargetProgram_);\n\n    // bind the vertices buffer for the frame buffer\n    this.renderTargetVerticesBuffer_ = gl.createBuffer();\n    const verticesArray = [-1, -1, 1, -1, -1, 1, 1, -1, 1, 1, -1, 1];\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.renderTargetVerticesBuffer_);\n    gl.bufferData(\n      gl.ARRAY_BUFFER,\n      new Float32Array(verticesArray),\n      gl.STATIC_DRAW\n    );\n\n    this.renderTargetAttribLocation_ = gl.getAttribLocation(\n      this.renderTargetProgram_,\n      'a_position'\n    );\n    this.renderTargetUniformLocation_ = gl.getUniformLocation(\n      this.renderTargetProgram_,\n      'u_screenSize'\n    );\n    this.renderTargetOpacityLocation_ = gl.getUniformLocation(\n      this.renderTargetProgram_,\n      'u_opacity'\n    );\n    this.renderTargetTextureLocation_ = gl.getUniformLocation(\n      this.renderTargetProgram_,\n      'u_image'\n    );\n\n    /**\n     * Holds info about custom uniforms used in the post processing pass\n     * @type {Array<UniformInternalDescription>}\n     * @private\n     */\n    this.uniforms_ = [];\n    options.uniforms &&\n      Object.keys(options.uniforms).forEach((name) => {\n        this.uniforms_.push({\n          value: options.uniforms[name],\n          location: gl.getUniformLocation(this.renderTargetProgram_, name),\n        });\n      });\n  }\n\n  /**\n   * Get the WebGL rendering context\n   * @return {WebGLRenderingContext} The rendering context.\n   */\n  getGL() {\n    return this.gl_;\n  }\n\n  /**\n   * Initialize the render target texture of the post process, make sure it is at the\n   * right size and bind it as a render target for the next draw calls.\n   * The last step to be initialized will be the one where the primitives are rendered.\n   * @param {import(\"../Map.js\").FrameState} frameState current frame state\n   */\n  init(frameState) {\n    const gl = this.getGL();\n    const textureSize = [\n      gl.drawingBufferWidth * this.scaleRatio_,\n      gl.drawingBufferHeight * this.scaleRatio_,\n    ];\n\n    // rendering goes to my buffer\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.getFrameBuffer());\n    gl.bindRenderbuffer(gl.RENDERBUFFER, this.getDepthBuffer());\n    gl.viewport(0, 0, textureSize[0], textureSize[1]);\n\n    // if size has changed: adjust canvas & render target texture\n    if (\n      !this.renderTargetTextureSize_ ||\n      this.renderTargetTextureSize_[0] !== textureSize[0] ||\n      this.renderTargetTextureSize_[1] !== textureSize[1]\n    ) {\n      this.renderTargetTextureSize_ = textureSize;\n\n      // create a new texture\n      const level = 0;\n      const internalFormat = gl.RGBA;\n      const border = 0;\n      const format = gl.RGBA;\n      const type = gl.UNSIGNED_BYTE;\n      const data = null;\n      gl.bindTexture(gl.TEXTURE_2D, this.renderTargetTexture_);\n      gl.texImage2D(\n        gl.TEXTURE_2D,\n        level,\n        internalFormat,\n        textureSize[0],\n        textureSize[1],\n        border,\n        format,\n        type,\n        data\n      );\n\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n      // bind the texture to the framebuffer\n      gl.framebufferTexture2D(\n        gl.FRAMEBUFFER,\n        gl.COLOR_ATTACHMENT0,\n        gl.TEXTURE_2D,\n        this.renderTargetTexture_,\n        0\n      );\n\n      gl.renderbufferStorage(\n        gl.RENDERBUFFER,\n        gl.DEPTH_COMPONENT16,\n        textureSize[0],\n        textureSize[1]\n      );\n      gl.framebufferRenderbuffer(\n        gl.FRAMEBUFFER,\n        gl.DEPTH_ATTACHMENT,\n        gl.RENDERBUFFER,\n        this.depthBuffer_\n      );\n    }\n  }\n\n  /**\n   * Render to the next postprocessing pass (or to the canvas if final pass).\n   * @param {import(\"../Map.js\").FrameState} frameState current frame state\n   * @param {WebGLPostProcessingPass} [nextPass] Next pass, optional\n   * @param {function(WebGLRenderingContext, import(\"../Map.js\").FrameState):void} [preCompose] Called before composing.\n   * @param {function(WebGLRenderingContext, import(\"../Map.js\").FrameState):void} [postCompose] Called before composing.\n   */\n  apply(frameState, nextPass, preCompose, postCompose) {\n    const gl = this.getGL();\n    const size = frameState.size;\n\n    gl.bindFramebuffer(\n      gl.FRAMEBUFFER,\n      nextPass ? nextPass.getFrameBuffer() : null\n    );\n    gl.activeTexture(gl.TEXTURE0);\n    gl.bindTexture(gl.TEXTURE_2D, this.renderTargetTexture_);\n\n    if (!nextPass) {\n      // clear the canvas if we are the first to render to it\n      // and preserveDrawingBuffer is true\n      const canvasId = getUid(gl.canvas);\n      if (!frameState.renderTargets[canvasId]) {\n        const attributes = gl.getContextAttributes();\n        if (attributes && attributes.preserveDrawingBuffer) {\n          gl.clearColor(0.0, 0.0, 0.0, 0.0);\n          gl.clearDepth(1.0);\n          gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n        }\n\n        frameState.renderTargets[canvasId] = true;\n      }\n    }\n\n    gl.disable(gl.DEPTH_TEST);\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.renderTargetVerticesBuffer_);\n\n    gl.useProgram(this.renderTargetProgram_);\n    gl.enableVertexAttribArray(this.renderTargetAttribLocation_);\n    gl.vertexAttribPointer(\n      this.renderTargetAttribLocation_,\n      2,\n      gl.FLOAT,\n      false,\n      0,\n      0\n    );\n    gl.uniform2f(this.renderTargetUniformLocation_, size[0], size[1]);\n    gl.uniform1i(this.renderTargetTextureLocation_, 0);\n\n    const opacity = frameState.layerStatesArray[frameState.layerIndex].opacity;\n    gl.uniform1f(this.renderTargetOpacityLocation_, opacity);\n\n    this.applyUniforms(frameState);\n\n    if (preCompose) {\n      preCompose(gl, frameState);\n    }\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\n    if (postCompose) {\n      postCompose(gl, frameState);\n    }\n  }\n\n  /**\n   * @return {WebGLFramebuffer} Frame buffer\n   */\n  getFrameBuffer() {\n    return this.frameBuffer_;\n  }\n\n  /**\n   * @return {WebGLRenderbuffer} Depth buffer\n   */\n  getDepthBuffer() {\n    return this.depthBuffer_;\n  }\n\n  /**\n   * Sets the custom uniforms based on what was given in the constructor.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  applyUniforms(frameState) {\n    const gl = this.getGL();\n\n    let value;\n    let textureSlot = 1;\n    this.uniforms_.forEach(function (uniform) {\n      value =\n        typeof uniform.value === 'function'\n          ? uniform.value(frameState)\n          : uniform.value;\n\n      // apply value based on type\n      if (value instanceof HTMLCanvasElement || value instanceof ImageData) {\n        // create a texture & put data\n        if (!uniform.texture) {\n          uniform.texture = gl.createTexture();\n        }\n        gl.activeTexture(gl[`TEXTURE${textureSlot}`]);\n        gl.bindTexture(gl.TEXTURE_2D, uniform.texture);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n        if (value instanceof ImageData) {\n          gl.texImage2D(\n            gl.TEXTURE_2D,\n            0,\n            gl.RGBA,\n            gl.RGBA,\n            value.width,\n            value.height,\n            0,\n            gl.UNSIGNED_BYTE,\n            new Uint8Array(value.data)\n          );\n        } else {\n          gl.texImage2D(\n            gl.TEXTURE_2D,\n            0,\n            gl.RGBA,\n            gl.RGBA,\n            gl.UNSIGNED_BYTE,\n            value\n          );\n        }\n\n        // fill texture slots\n        gl.uniform1i(uniform.location, textureSlot++);\n      } else if (Array.isArray(value)) {\n        switch (value.length) {\n          case 2:\n            gl.uniform2f(uniform.location, value[0], value[1]);\n            return;\n          case 3:\n            gl.uniform3f(uniform.location, value[0], value[1], value[2]);\n            return;\n          case 4:\n            gl.uniform4f(\n              uniform.location,\n              value[0],\n              value[1],\n              value[2],\n              value[3]\n            );\n            return;\n          default:\n            return;\n        }\n      } else if (typeof value === 'number') {\n        gl.uniform1f(uniform.location, value);\n      }\n    });\n  }\n}\n\nexport default WebGLPostProcessingPass;\n","/**\n * @module ol/vec/mat4\n */\n\n/**\n * @return {Array<number>} \"4x4 matrix representing a 3D identity transform.\"\n */\nexport function create() {\n  return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n}\n\n/**\n * @param {Array<number>} mat4 Flattened 4x4 matrix receiving the result.\n * @param {import(\"../transform.js\").Transform} transform Transformation matrix.\n * @return {Array<number>} \"2D transformation matrix as flattened 4x4 matrix.\"\n */\nexport function fromTransform(mat4, transform) {\n  mat4[0] = transform[0];\n  mat4[1] = transform[1];\n  mat4[4] = transform[2];\n  mat4[5] = transform[3];\n  mat4[12] = transform[4];\n  mat4[13] = transform[5];\n  return mat4;\n}\n","/**\n * @module ol/webgl/Helper\n */\nimport ContextEventType from '../webgl/ContextEventType.js';\nimport Disposable from '../Disposable.js';\nimport WebGLPostProcessingPass from './PostProcessingPass.js';\nimport {\n  FLOAT,\n  UNSIGNED_BYTE,\n  UNSIGNED_INT,\n  UNSIGNED_SHORT,\n  getContext,\n} from '../webgl.js';\nimport {clear} from '../obj.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {create, fromTransform} from '../vec/mat4.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} BufferCacheEntry\n * @property {import(\"./Buffer.js\").default} buffer Buffer.\n * @property {WebGLBuffer} webGlBuffer WebGlBuffer.\n */\n\n/**\n * Shader types, either `FRAGMENT_SHADER` or `VERTEX_SHADER`.\n * @enum {number}\n */\nexport const ShaderType = {\n  FRAGMENT_SHADER: 0x8b30,\n  VERTEX_SHADER: 0x8b31,\n};\n\n/**\n * Names of uniforms made available to all shaders.\n * Please note: changing these *will* break custom shaders!\n * @enum {string}\n */\nexport const DefaultUniform = {\n  PROJECTION_MATRIX: 'u_projectionMatrix',\n  SCREEN_TO_WORLD_MATRIX: 'u_screenToWorldMatrix',\n  TIME: 'u_time',\n  ZOOM: 'u_zoom',\n  RESOLUTION: 'u_resolution',\n  ROTATION: 'u_rotation',\n  VIEWPORT_SIZE_PX: 'u_viewportSizePx',\n  PIXEL_RATIO: 'u_pixelRatio',\n  HIT_DETECTION: 'u_hitDetection',\n};\n\n/**\n * Attribute types, either `UNSIGNED_BYTE`, `UNSIGNED_SHORT`, `UNSIGNED_INT` or `FLOAT`\n * Note: an attribute stored in a `Float32Array` should be of type `FLOAT`.\n * @enum {number}\n */\nexport const AttributeType = {\n  UNSIGNED_BYTE: UNSIGNED_BYTE,\n  UNSIGNED_SHORT: UNSIGNED_SHORT,\n  UNSIGNED_INT: UNSIGNED_INT,\n  FLOAT: FLOAT,\n};\n\n/**\n * Description of an attribute in a buffer\n * @typedef {Object} AttributeDescription\n * @property {string} name Attribute name to use in shaders\n * @property {number} size Number of components per attributes\n * @property {AttributeType} [type] Attribute type, i.e. number of bytes used to store the value. This is\n * determined by the class of typed array which the buffer uses (eg. `Float32Array` for a `FLOAT` attribute).\n * Default is `FLOAT`.\n */\n\n/**\n * @typedef {number|Array<number>|HTMLCanvasElement|HTMLImageElement|ImageData|import(\"../transform\").Transform} UniformLiteralValue\n */\n\n/**\n * Uniform value can be a number, array of numbers (2 to 4), canvas element or a callback returning\n * one of the previous types.\n * @typedef {UniformLiteralValue|function(import(\"../Map.js\").FrameState):UniformLiteralValue} UniformValue\n */\n\n/**\n * @typedef {Object} PostProcessesOptions\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas which will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object<string,UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n\n/**\n * @typedef {Object} Options\n * @property {Object<string,UniformValue>} [uniforms] Uniform definitions; property names must match the uniform\n * names in the provided or default shaders.\n * @property {Array<PostProcessesOptions>} [postProcesses] Post-processes definitions\n * @property {string} [canvasCacheKey] The cache key for the canvas.\n */\n\n/**\n * @typedef {Object} UniformInternalDescription\n * @property {string} name Name\n * @property {UniformValue} [value] Value\n * @property {UniformValue} [prevValue] The previous value.\n * @property {WebGLTexture} [texture] Texture\n * @private\n */\n\n/**\n * @typedef {Object} CanvasCacheItem\n * @property {WebGLRenderingContext} context The context of this canvas.\n * @property {number} users The count of users of this canvas.\n */\n\n/**\n * @type {Object<string,CanvasCacheItem>}\n */\nconst canvasCache = {};\n\n/**\n * @param {string} key The cache key for the canvas.\n * @return {string} The shared cache key.\n */\nfunction getSharedCanvasCacheKey(key) {\n  return 'shared/' + key;\n}\n\nlet uniqueCanvasCacheKeyCount = 0;\n\n/**\n * @return {string} The unique cache key.\n */\nfunction getUniqueCanvasCacheKey() {\n  const key = 'unique/' + uniqueCanvasCacheKeyCount;\n  uniqueCanvasCacheKeyCount += 1;\n  return key;\n}\n\n/**\n * @param {string} key The cache key for the canvas.\n * @return {WebGLRenderingContext} The canvas.\n */\nfunction getOrCreateContext(key) {\n  let cacheItem = canvasCache[key];\n  if (!cacheItem) {\n    const canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = 1;\n    canvas.style.position = 'absolute';\n    canvas.style.left = '0';\n    const context = getContext(canvas);\n    cacheItem = {users: 0, context};\n    canvasCache[key] = cacheItem;\n  }\n\n  cacheItem.users += 1;\n  return cacheItem.context;\n}\n\n/**\n * @param {string} key The cache key for the canvas.\n */\nfunction releaseCanvas(key) {\n  const cacheItem = canvasCache[key];\n  if (!cacheItem) {\n    return;\n  }\n\n  cacheItem.users -= 1;\n  if (cacheItem.users > 0) {\n    return;\n  }\n\n  const gl = cacheItem.context;\n  const extension = gl.getExtension('WEBGL_lose_context');\n  if (extension) {\n    extension.loseContext();\n  }\n  const canvas = gl.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n\n  delete canvasCache[key];\n}\n\n/**\n * @classdesc\n * This class is intended to provide low-level functions related to WebGL rendering, so that accessing\n * directly the WebGL API should not be required anymore.\n *\n * Several operations are handled by the `WebGLHelper` class:\n *\n * ### Define custom shaders and uniforms\n *\n *   *Shaders* are low-level programs executed on the GPU and written in GLSL. There are two types of shaders:\n *\n *   Vertex shaders are used to manipulate the position and attribute of *vertices* of rendered primitives (ie. corners of a square).\n *   Outputs are:\n *\n *   * `gl_Position`: position of the vertex in screen space\n *\n *   * Varyings usually prefixed with `v_` are passed on to the fragment shader\n *\n *   Fragment shaders are used to control the actual color of the pixels drawn on screen. Their only output is `gl_FragColor`.\n *\n *   Both shaders can take *uniforms* or *attributes* as input. Attributes are explained later. Uniforms are common, read-only values that\n *   can be changed at every frame and can be of type float, arrays of float or images.\n *\n *   Shaders must be compiled and assembled into a program like so:\n *   ```js\n *   // here we simply create two shaders and assemble them in a program which is then used\n *   // for subsequent rendering calls; note how a frameState is required to set up a program,\n *   // as several default uniforms are computed from it (projection matrix, zoom level, etc.)\n *   const vertexShader = new WebGLVertex(VERTEX_SHADER);\n *   const fragmentShader = new WebGLFragment(FRAGMENT_SHADER);\n *   const program = this.context.getProgram(fragmentShader, vertexShader);\n *   helper.useProgram(this.program, frameState);\n *   ```\n *\n *   Uniforms are defined using the `uniforms` option and can either be explicit values or callbacks taking the frame state as argument.\n *   You can also change their value along the way like so:\n *   ```js\n *   helper.setUniformFloatValue('u_value', valueAsNumber);\n *   ```\n *\n * ### Defining post processing passes\n *\n *   *Post processing* describes the act of rendering primitives to a texture, and then rendering this texture to the final canvas\n *   while applying special effects in screen space.\n *   Typical uses are: blurring, color manipulation, depth of field, filtering...\n *\n *   The `WebGLHelper` class offers the possibility to define post processes at creation time using the `postProcesses` option.\n *   A post process step accepts the following options:\n *\n *   * `fragmentShader` and `vertexShader`: text literals in GLSL language that will be compiled and used in the post processing step.\n *   * `uniforms`: uniforms can be defined for the post processing steps just like for the main render.\n *   * `scaleRatio`: allows using an intermediate texture smaller or higher than the final canvas in the post processing step.\n *     This is typically used in blur steps to reduce the performance overhead by using an already downsampled texture as input.\n *\n *   The {@link module:ol/webgl/PostProcessingPass~WebGLPostProcessingPass} class is used internally, refer to its documentation for more info.\n *\n * ### Binding WebGL buffers and flushing data into them\n *\n *   Data that must be passed to the GPU has to be transferred using {@link module:ol/webgl/Buffer~WebGLArrayBuffer} objects.\n *   A buffer has to be created only once, but must be bound every time the buffer content will be used for rendering.\n *   This is done using {@link bindBuffer}.\n *   When the buffer's array content has changed, the new data has to be flushed to the GPU memory; this is done using\n *   {@link flushBufferData}. Note: this operation is expensive and should be done as infrequently as possible.\n *\n *   When binding an array buffer, a `target` parameter must be given: it should be either {@link module:ol/webgl.ARRAY_BUFFER}\n *   (if the buffer contains vertices data) or {@link module:ol/webgl.ELEMENT_ARRAY_BUFFER} (if the buffer contains indices data).\n *\n *   Examples below:\n *   ```js\n *   // at initialization phase\n *   const verticesBuffer = new WebGLArrayBuffer([], DYNAMIC_DRAW);\n *   const indicesBuffer = new WebGLArrayBuffer([], DYNAMIC_DRAW);\n *\n *   // when array values have changed\n *   helper.flushBufferData(ARRAY_BUFFER, this.verticesBuffer);\n *   helper.flushBufferData(ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n *\n *   // at rendering phase\n *   helper.bindBuffer(ARRAY_BUFFER, this.verticesBuffer);\n *   helper.bindBuffer(ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n *   ```\n *\n * ### Specifying attributes\n *\n *   The GPU only receives the data as arrays of numbers. These numbers must be handled differently depending on what it describes (position, texture coordinate...).\n *   Attributes are used to specify these uses. Specify the attribute names with\n *   {@link module:ol/webgl/Helper~WebGLHelper#enableAttributes} (see code snippet below).\n *\n *   Please note that you will have to specify the type and offset of the attributes in the data array. You can refer to the documentation of [WebGLRenderingContext.vertexAttribPointer](https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/vertexAttribPointer) for more explanation.\n *   ```js\n *   // here we indicate that the data array has the following structure:\n *   // [posX, posY, offsetX, offsetY, texCoordU, texCoordV, posX, posY, ...]\n *   helper.enableAttributes([\n *     {\n *        name: 'a_position',\n *        size: 2\n *     },\n *     {\n *       name: 'a_offset',\n *       size: 2\n *     },\n *     {\n *       name: 'a_texCoord',\n *       size: 2\n *     }\n *   ])\n *   ```\n *\n * ### Rendering primitives\n *\n *   Once all the steps above have been achieved, rendering primitives to the screen is done using {@link prepareDraw}, {@link drawElements} and {@link finalizeDraw}.\n *   ```js\n *   // frame preparation step\n *   helper.prepareDraw(frameState);\n *\n *   // call this for every data array that has to be rendered on screen\n *   helper.drawElements(0, this.indicesBuffer.getArray().length);\n *\n *   // finalize the rendering by applying post processes\n *   helper.finalizeDraw(frameState);\n *   ```\n *\n * For an example usage of this class, refer to {@link module:ol/renderer/webgl/PointsLayer~WebGLPointsLayerRenderer}.\n */\nclass WebGLHelper extends Disposable {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n    options = options || {};\n\n    /** @private */\n    this.boundHandleWebGLContextLost_ = this.handleWebGLContextLost.bind(this);\n\n    /** @private */\n    this.boundHandleWebGLContextRestored_ =\n      this.handleWebGLContextRestored.bind(this);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.canvasCacheKey_ = options.canvasCacheKey\n      ? getSharedCanvasCacheKey(options.canvasCacheKey)\n      : getUniqueCanvasCacheKey();\n\n    /**\n     * @private\n     * @type {WebGLRenderingContext}\n     */\n    this.gl_ = getOrCreateContext(this.canvasCacheKey_);\n\n    /**\n     * @private\n     * @type {!Object<string, BufferCacheEntry>}\n     */\n    this.bufferCache_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Object>}\n     */\n    this.extensionCache_ = {};\n\n    /**\n     * @private\n     * @type {WebGLProgram}\n     */\n    this.currentProgram_ = null;\n\n    /**\n     * @private\n     * @type boolean\n     */\n    this.needsToBeRecreated_ = false;\n\n    const canvas = this.gl_.canvas;\n\n    canvas.addEventListener(\n      ContextEventType.LOST,\n      this.boundHandleWebGLContextLost_\n    );\n    canvas.addEventListener(\n      ContextEventType.RESTORED,\n      this.boundHandleWebGLContextRestored_\n    );\n\n    /**\n     * @private\n     * @type {import(\"../transform.js\").Transform}\n     */\n    this.offsetRotateMatrix_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"../transform.js\").Transform}\n     */\n    this.offsetScaleMatrix_ = createTransform();\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.tmpMat4_ = create();\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, WebGLUniformLocation>>}\n     */\n    this.uniformLocationsByProgram_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.attribLocationsByProgram_ = {};\n\n    /**\n     * Holds info about custom uniforms used in the post processing pass.\n     * If the uniform is a texture, the WebGL Texture object will be stored here.\n     * @type {Array<UniformInternalDescription>}\n     * @private\n     */\n    this.uniforms_ = [];\n    if (options.uniforms) {\n      this.setUniforms(options.uniforms);\n    }\n\n    /**\n     * An array of PostProcessingPass objects is kept in this variable, built from the steps provided in the\n     * options. If no post process was given, a default one is used (so as not to have to make an exception to\n     * the frame buffer logic).\n     * @type {Array<WebGLPostProcessingPass>}\n     * @private\n     */\n    this.postProcessPasses_ = options.postProcesses\n      ? options.postProcesses.map(\n          (options) =>\n            new WebGLPostProcessingPass({\n              webGlContext: this.gl_,\n              scaleRatio: options.scaleRatio,\n              vertexShader: options.vertexShader,\n              fragmentShader: options.fragmentShader,\n              uniforms: options.uniforms,\n            })\n        )\n      : [new WebGLPostProcessingPass({webGlContext: this.gl_})];\n\n    /**\n     * @type {string|null}\n     * @private\n     */\n    this.shaderCompileErrors_ = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.startTime_ = Date.now();\n  }\n\n  /**\n   * @param {Object<string, UniformValue>} uniforms Uniform definitions.\n   */\n  setUniforms(uniforms) {\n    this.uniforms_ = [];\n    this.addUniforms(uniforms);\n  }\n\n  /**\n   * @param {Object<string, UniformValue>} uniforms Uniform definitions.\n   */\n  addUniforms(uniforms) {\n    for (const name in uniforms) {\n      this.uniforms_.push({\n        name: name,\n        value: uniforms[name],\n      });\n    }\n  }\n\n  /**\n   * @param {string} canvasCacheKey The canvas cache key.\n   * @return {boolean} The provided key matches the one this helper was constructed with.\n   */\n  canvasCacheKeyMatches(canvasCacheKey) {\n    return this.canvasCacheKey_ === getSharedCanvasCacheKey(canvasCacheKey);\n  }\n\n  /**\n   * Get a WebGL extension.  If the extension is not supported, null is returned.\n   * Extensions are cached after they are enabled for the first time.\n   * @param {string} name The extension name.\n   * @return {Object|null} The extension or null if not supported.\n   */\n  getExtension(name) {\n    if (name in this.extensionCache_) {\n      return this.extensionCache_[name];\n    }\n    const extension = this.gl_.getExtension(name);\n    this.extensionCache_[name] = extension;\n    return extension;\n  }\n\n  /**\n   * Just bind the buffer if it's in the cache. Otherwise create\n   * the WebGL buffer, bind it, populate it, and add an entry to\n   * the cache.\n   * @param {import(\"./Buffer\").default} buffer Buffer.\n   */\n  bindBuffer(buffer) {\n    const gl = this.gl_;\n    const bufferKey = getUid(buffer);\n    let bufferCache = this.bufferCache_[bufferKey];\n    if (!bufferCache) {\n      const webGlBuffer = gl.createBuffer();\n      bufferCache = {\n        buffer: buffer,\n        webGlBuffer: webGlBuffer,\n      };\n      this.bufferCache_[bufferKey] = bufferCache;\n    }\n    gl.bindBuffer(buffer.getType(), bufferCache.webGlBuffer);\n  }\n\n  /**\n   * Update the data contained in the buffer array; this is required for the\n   * new data to be rendered\n   * @param {import(\"./Buffer\").default} buffer Buffer.\n   */\n  flushBufferData(buffer) {\n    const gl = this.gl_;\n    this.bindBuffer(buffer);\n    gl.bufferData(buffer.getType(), buffer.getArray(), buffer.getUsage());\n  }\n\n  /**\n   * @param {import(\"./Buffer.js\").default} buf Buffer.\n   */\n  deleteBuffer(buf) {\n    const gl = this.gl_;\n    const bufferKey = getUid(buf);\n    const bufferCacheEntry = this.bufferCache_[bufferKey];\n    if (bufferCacheEntry && !gl.isContextLost()) {\n      gl.deleteBuffer(bufferCacheEntry.webGlBuffer);\n    }\n    delete this.bufferCache_[bufferKey];\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    const canvas = this.gl_.canvas;\n    canvas.removeEventListener(\n      ContextEventType.LOST,\n      this.boundHandleWebGLContextLost_\n    );\n    canvas.removeEventListener(\n      ContextEventType.RESTORED,\n      this.boundHandleWebGLContextRestored_\n    );\n\n    releaseCanvas(this.canvasCacheKey_);\n\n    delete this.gl_;\n  }\n\n  /**\n   * Clear the buffer & set the viewport to draw.\n   * Post process passes will be initialized here, the first one being bound as a render target for\n   * subsequent draw calls.\n   * @param {import(\"../Map.js\").FrameState} frameState current frame state\n   * @param {boolean} [disableAlphaBlend] If true, no alpha blending will happen.\n   * @param {boolean} [enableDepth] If true, enables depth testing.\n   */\n  prepareDraw(frameState, disableAlphaBlend, enableDepth) {\n    const gl = this.gl_;\n    const canvas = this.getCanvas();\n    const size = frameState.size;\n    const pixelRatio = frameState.pixelRatio;\n\n    if (\n      canvas.width !== size[0] * pixelRatio ||\n      canvas.height !== size[1] * pixelRatio\n    ) {\n      canvas.width = size[0] * pixelRatio;\n      canvas.height = size[1] * pixelRatio;\n      canvas.style.width = size[0] + 'px';\n      canvas.style.height = size[1] + 'px';\n    }\n\n    // loop backwards in post processes list\n    for (let i = this.postProcessPasses_.length - 1; i >= 0; i--) {\n      this.postProcessPasses_[i].init(frameState);\n    }\n\n    gl.bindTexture(gl.TEXTURE_2D, null);\n\n    gl.clearColor(0.0, 0.0, 0.0, 0.0);\n    gl.depthRange(0.0, 1.0);\n    gl.clearDepth(1.0);\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, disableAlphaBlend ? gl.ZERO : gl.ONE_MINUS_SRC_ALPHA);\n    if (enableDepth) {\n      gl.enable(gl.DEPTH_TEST);\n      gl.depthFunc(gl.LEQUAL);\n    } else {\n      gl.disable(gl.DEPTH_TEST);\n    }\n  }\n\n  /**\n   * Prepare a program to use a texture.\n   * @param {WebGLTexture} texture The texture.\n   * @param {number} slot The texture slot.\n   * @param {string} uniformName The corresponding uniform name.\n   */\n  bindTexture(texture, slot, uniformName) {\n    const gl = this.gl_;\n    gl.activeTexture(gl.TEXTURE0 + slot);\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.uniform1i(this.getUniformLocation(uniformName), slot);\n  }\n\n  /**\n   * Clear the render target & bind it for future draw operations.\n   * This is similar to `prepareDraw`, only post processes will not be applied.\n   * Note: the whole viewport will be drawn to the render target, regardless of its size.\n   * @param {import(\"../Map.js\").FrameState} frameState current frame state\n   * @param {import(\"./RenderTarget.js\").default} renderTarget Render target to draw to\n   * @param {boolean} [disableAlphaBlend] If true, no alpha blending will happen.\n   * @param {boolean} [enableDepth] If true, enables depth testing.\n   */\n  prepareDrawToRenderTarget(\n    frameState,\n    renderTarget,\n    disableAlphaBlend,\n    enableDepth\n  ) {\n    const gl = this.gl_;\n    const size = renderTarget.getSize();\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, renderTarget.getFramebuffer());\n    gl.bindRenderbuffer(gl.RENDERBUFFER, renderTarget.getDepthbuffer());\n    gl.viewport(0, 0, size[0], size[1]);\n    gl.bindTexture(gl.TEXTURE_2D, renderTarget.getTexture());\n    gl.clearColor(0.0, 0.0, 0.0, 0.0);\n    gl.depthRange(0.0, 1.0);\n    gl.clearDepth(1.0);\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, disableAlphaBlend ? gl.ZERO : gl.ONE_MINUS_SRC_ALPHA);\n    if (enableDepth) {\n      gl.enable(gl.DEPTH_TEST);\n      gl.depthFunc(gl.LEQUAL);\n    } else {\n      gl.disable(gl.DEPTH_TEST);\n    }\n  }\n\n  /**\n   * Execute a draw call based on the currently bound program, texture, buffers, attributes.\n   * @param {number} start Start index.\n   * @param {number} end End index.\n   */\n  drawElements(start, end) {\n    const gl = this.gl_;\n    this.getExtension('OES_element_index_uint');\n\n    const elementType = gl.UNSIGNED_INT;\n    const elementSize = 4;\n\n    const numItems = end - start;\n    const offsetInBytes = start * elementSize;\n    gl.drawElements(gl.TRIANGLES, numItems, elementType, offsetInBytes);\n  }\n\n  /**\n   * Apply the successive post process passes which will eventually render to the actual canvas.\n   * @param {import(\"../Map.js\").FrameState} frameState current frame state\n   * @param {function(WebGLRenderingContext, import(\"../Map.js\").FrameState):void} [preCompose] Called before composing.\n   * @param {function(WebGLRenderingContext, import(\"../Map.js\").FrameState):void} [postCompose] Called before composing.\n   */\n  finalizeDraw(frameState, preCompose, postCompose) {\n    // apply post processes using the next one as target\n    for (let i = 0, ii = this.postProcessPasses_.length; i < ii; i++) {\n      if (i === ii - 1) {\n        this.postProcessPasses_[i].apply(\n          frameState,\n          null,\n          preCompose,\n          postCompose\n        );\n      } else {\n        this.postProcessPasses_[i].apply(\n          frameState,\n          this.postProcessPasses_[i + 1]\n        );\n      }\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getCanvas() {\n    return /** @type {HTMLCanvasElement} */ (this.gl_.canvas);\n  }\n\n  /**\n   * Get the WebGL rendering context\n   * @return {WebGLRenderingContext} The rendering context.\n   */\n  getGL() {\n    return this.gl_;\n  }\n\n  /**\n   * Sets the default matrix uniforms for a given frame state. This is called internally in `prepareDraw`.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  applyFrameState(frameState) {\n    const size = frameState.size;\n    const rotation = frameState.viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    this.setUniformFloatValue(\n      DefaultUniform.TIME,\n      (Date.now() - this.startTime_) * 0.001\n    );\n    this.setUniformFloatValue(DefaultUniform.ZOOM, frameState.viewState.zoom);\n    this.setUniformFloatValue(\n      DefaultUniform.RESOLUTION,\n      frameState.viewState.resolution\n    );\n    this.setUniformFloatValue(DefaultUniform.PIXEL_RATIO, pixelRatio);\n    this.setUniformFloatVec2(DefaultUniform.VIEWPORT_SIZE_PX, [\n      size[0],\n      size[1],\n    ]);\n    this.setUniformFloatValue(DefaultUniform.ROTATION, rotation);\n  }\n\n  /**\n   * Sets the `u_hitDetection` uniform.\n   * @param {boolean} enabled Whether to enable the hit detection code path\n   */\n  applyHitDetectionUniform(enabled) {\n    const loc = this.getUniformLocation(DefaultUniform.HIT_DETECTION);\n    this.getGL().uniform1i(loc, enabled ? 1 : 0);\n\n    // hit detection uses a fixed pixel ratio\n    if (enabled) {\n      this.setUniformFloatValue(DefaultUniform.PIXEL_RATIO, 0.5);\n    }\n  }\n\n  /**\n   * Sets the custom uniforms based on what was given in the constructor. This is called internally in `prepareDraw`.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  applyUniforms(frameState) {\n    const gl = this.gl_;\n\n    let value;\n    let textureSlot = 0;\n    this.uniforms_.forEach((uniform) => {\n      value =\n        typeof uniform.value === 'function'\n          ? uniform.value(frameState)\n          : uniform.value;\n\n      // apply value based on type\n      if (\n        value instanceof HTMLCanvasElement ||\n        value instanceof HTMLImageElement ||\n        value instanceof ImageData\n      ) {\n        // create a texture & put data\n        if (!uniform.texture) {\n          uniform.prevValue = undefined;\n          uniform.texture = gl.createTexture();\n        }\n        this.bindTexture(uniform.texture, textureSlot, uniform.name);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n        const imageReady =\n          !(value instanceof HTMLImageElement) ||\n          /** @type {HTMLImageElement} */ (value).complete;\n        if (imageReady && uniform.prevValue !== value) {\n          uniform.prevValue = value;\n          gl.texImage2D(\n            gl.TEXTURE_2D,\n            0,\n            gl.RGBA,\n            gl.RGBA,\n            gl.UNSIGNED_BYTE,\n            value\n          );\n        }\n        textureSlot++;\n      } else if (Array.isArray(value) && value.length === 6) {\n        this.setUniformMatrixValue(\n          uniform.name,\n          fromTransform(this.tmpMat4_, value)\n        );\n      } else if (Array.isArray(value) && value.length <= 4) {\n        switch (value.length) {\n          case 2:\n            gl.uniform2f(\n              this.getUniformLocation(uniform.name),\n              value[0],\n              value[1]\n            );\n            return;\n          case 3:\n            gl.uniform3f(\n              this.getUniformLocation(uniform.name),\n              value[0],\n              value[1],\n              value[2]\n            );\n            return;\n          case 4:\n            gl.uniform4f(\n              this.getUniformLocation(uniform.name),\n              value[0],\n              value[1],\n              value[2],\n              value[3]\n            );\n            return;\n          default:\n            return;\n        }\n      } else if (typeof value === 'number') {\n        gl.uniform1f(this.getUniformLocation(uniform.name), value);\n      }\n    });\n  }\n\n  /**\n   * Set up a program for use. The program will be set as the current one. Then, the uniforms used\n   * in the program will be set based on the current frame state and the helper configuration.\n   * @param {WebGLProgram} program Program.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  useProgram(program, frameState) {\n    const gl = this.gl_;\n    gl.useProgram(program);\n    this.currentProgram_ = program;\n    this.applyFrameState(frameState);\n    this.applyUniforms(frameState);\n  }\n\n  /**\n   * Will attempt to compile a vertex or fragment shader based on source\n   * On error, the shader will be returned but\n   * `gl.getShaderParameter(shader, gl.COMPILE_STATUS)` will return `true`\n   * Use `gl.getShaderInfoLog(shader)` to have details\n   * @param {string} source Shader source\n   * @param {ShaderType} type VERTEX_SHADER or FRAGMENT_SHADER\n   * @return {WebGLShader} Shader object\n   */\n  compileShader(source, type) {\n    const gl = this.gl_;\n    const shader = gl.createShader(type);\n    gl.shaderSource(shader, source);\n    gl.compileShader(shader);\n    return shader;\n  }\n\n  /**\n   * Create a program for a vertex and fragment shader.  Throws if shader compilation fails.\n   * @param {string} fragmentShaderSource Fragment shader source.\n   * @param {string} vertexShaderSource Vertex shader source.\n   * @return {WebGLProgram} Program\n   */\n  getProgram(fragmentShaderSource, vertexShaderSource) {\n    const gl = this.gl_;\n\n    const fragmentShader = this.compileShader(\n      fragmentShaderSource,\n      gl.FRAGMENT_SHADER\n    );\n\n    const vertexShader = this.compileShader(\n      vertexShaderSource,\n      gl.VERTEX_SHADER\n    );\n\n    const program = gl.createProgram();\n    gl.attachShader(program, fragmentShader);\n    gl.attachShader(program, vertexShader);\n    gl.linkProgram(program);\n\n    if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n      const message = `Fragment shader compilation failed: ${gl.getShaderInfoLog(\n        fragmentShader\n      )}`;\n      throw new Error(message);\n    }\n    gl.deleteShader(fragmentShader);\n\n    if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\n      const message = `Vertex shader compilation failed: ${gl.getShaderInfoLog(\n        vertexShader\n      )}`;\n      throw new Error(message);\n    }\n    gl.deleteShader(vertexShader);\n\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n      const message = `GL program linking failed: ${gl.getProgramInfoLog(\n        program\n      )}`;\n      throw new Error(message);\n    }\n\n    return program;\n  }\n\n  /**\n   * Will get the location from the shader or the cache\n   * @param {string} name Uniform name\n   * @return {WebGLUniformLocation} uniformLocation\n   */\n  getUniformLocation(name) {\n    const programUid = getUid(this.currentProgram_);\n    if (this.uniformLocationsByProgram_[programUid] === undefined) {\n      this.uniformLocationsByProgram_[programUid] = {};\n    }\n    if (this.uniformLocationsByProgram_[programUid][name] === undefined) {\n      this.uniformLocationsByProgram_[programUid][name] =\n        this.gl_.getUniformLocation(this.currentProgram_, name);\n    }\n    return this.uniformLocationsByProgram_[programUid][name];\n  }\n\n  /**\n   * Will get the location from the shader or the cache\n   * @param {string} name Attribute name\n   * @return {number} attribLocation\n   */\n  getAttributeLocation(name) {\n    const programUid = getUid(this.currentProgram_);\n    if (this.attribLocationsByProgram_[programUid] === undefined) {\n      this.attribLocationsByProgram_[programUid] = {};\n    }\n    if (this.attribLocationsByProgram_[programUid][name] === undefined) {\n      this.attribLocationsByProgram_[programUid][name] =\n        this.gl_.getAttribLocation(this.currentProgram_, name);\n    }\n    return this.attribLocationsByProgram_[programUid][name];\n  }\n\n  /**\n   * Sets the given transform to apply the rotation/translation/scaling of the given frame state.\n   * The resulting transform can be used to convert world space coordinates to view coordinates in the [-1, 1] range.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../transform\").Transform} transform Transform to update.\n   * @return {import(\"../transform\").Transform} The updated transform object.\n   */\n  makeProjectionTransform(frameState, transform) {\n    const size = frameState.size;\n    const rotation = frameState.viewState.rotation;\n    const resolution = frameState.viewState.resolution;\n    const center = frameState.viewState.center;\n    composeTransform(\n      transform,\n      0,\n      0,\n      2 / (resolution * size[0]),\n      2 / (resolution * size[1]),\n      -rotation,\n      -center[0],\n      -center[1]\n    );\n    return transform;\n  }\n\n  /**\n   * Give a value for a standard float uniform\n   * @param {string} uniform Uniform name\n   * @param {number} value Value\n   */\n  setUniformFloatValue(uniform, value) {\n    this.gl_.uniform1f(this.getUniformLocation(uniform), value);\n  }\n\n  /**\n   * Give a value for a vec2 uniform\n   * @param {string} uniform Uniform name\n   * @param {Array<number>} value Array of length 4.\n   */\n  setUniformFloatVec2(uniform, value) {\n    this.gl_.uniform2fv(this.getUniformLocation(uniform), value);\n  }\n\n  /**\n   * Give a value for a vec4 uniform\n   * @param {string} uniform Uniform name\n   * @param {Array<number>} value Array of length 4.\n   */\n  setUniformFloatVec4(uniform, value) {\n    this.gl_.uniform4fv(this.getUniformLocation(uniform), value);\n  }\n\n  /**\n   * Give a value for a standard matrix4 uniform\n   * @param {string} uniform Uniform name\n   * @param {Array<number>} value Matrix value\n   */\n  setUniformMatrixValue(uniform, value) {\n    this.gl_.uniformMatrix4fv(this.getUniformLocation(uniform), false, value);\n  }\n\n  /**\n   * Will set the currently bound buffer to an attribute of the shader program. Used by `#enableAttributes`\n   * internally.\n   * @param {string} attribName Attribute name\n   * @param {number} size Number of components per attributes\n   * @param {number} type UNSIGNED_INT, UNSIGNED_BYTE, UNSIGNED_SHORT or FLOAT\n   * @param {number} stride Stride in bytes (0 means attribs are packed)\n   * @param {number} offset Offset in bytes\n   * @private\n   */\n  enableAttributeArray_(attribName, size, type, stride, offset) {\n    const location = this.getAttributeLocation(attribName);\n    // the attribute has not been found in the shaders or is not used; do not enable it\n    if (location < 0) {\n      return;\n    }\n    this.gl_.enableVertexAttribArray(location);\n    this.gl_.vertexAttribPointer(location, size, type, false, stride, offset);\n  }\n\n  /**\n   * Will enable the following attributes to be read from the currently bound buffer,\n   * i.e. tell the GPU where to read the different attributes in the buffer. An error in the\n   * size/type/order of attributes will most likely break the rendering and throw a WebGL exception.\n   * @param {Array<AttributeDescription>} attributes Ordered list of attributes to read from the buffer\n   */\n  enableAttributes(attributes) {\n    const stride = computeAttributesStride(attributes);\n    let offset = 0;\n    for (let i = 0; i < attributes.length; i++) {\n      const attr = attributes[i];\n      this.enableAttributeArray_(\n        attr.name,\n        attr.size,\n        attr.type || FLOAT,\n        stride,\n        offset\n      );\n      offset += attr.size * getByteSizeFromType(attr.type);\n    }\n  }\n\n  /**\n   * WebGL context was lost\n   * @param {WebGLContextEvent} event The context loss event.\n   * @private\n   */\n  handleWebGLContextLost(event) {\n    clear(this.bufferCache_);\n    this.currentProgram_ = null;\n\n    event.preventDefault();\n  }\n\n  /**\n   * WebGL context was restored\n   * @private\n   */\n  handleWebGLContextRestored() {\n    this.needsToBeRecreated_ = true;\n  }\n\n  /**\n   * Returns whether this helper needs to be recreated, as the context was lost and then restored.\n   * @return {boolean} Whether this helper needs to be recreated.\n   */\n  needsToBeRecreated() {\n    return this.needsToBeRecreated_;\n  }\n\n  /**\n   * Will create or reuse a given webgl texture and apply the given size. If no image data\n   * specified, the texture will be empty, otherwise image data will be used and the `size`\n   * parameter will be ignored.\n   * Note: wrap parameters are set to clamp to edge, min filter is set to linear.\n   * @param {Array<number>} size Expected size of the texture\n   * @param {ImageData|HTMLImageElement|HTMLCanvasElement} [data] Image data/object to bind to the texture\n   * @param {WebGLTexture} [texture] Existing texture to reuse\n   * @return {WebGLTexture} The generated texture\n   */\n  createTexture(size, data, texture) {\n    const gl = this.gl_;\n    texture = texture || gl.createTexture();\n\n    // set params & size\n    const level = 0;\n    const internalFormat = gl.RGBA;\n    const border = 0;\n    const format = gl.RGBA;\n    const type = gl.UNSIGNED_BYTE;\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    if (data) {\n      gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, format, type, data);\n    } else {\n      gl.texImage2D(\n        gl.TEXTURE_2D,\n        level,\n        internalFormat,\n        size[0],\n        size[1],\n        border,\n        format,\n        type,\n        null\n      );\n    }\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n    return texture;\n  }\n}\n\n/**\n * Compute a stride in bytes based on a list of attributes\n * @param {Array<AttributeDescription>} attributes Ordered list of attributes\n * @return {number} Stride, ie amount of values for each vertex in the vertex buffer\n */\nexport function computeAttributesStride(attributes) {\n  let stride = 0;\n  for (let i = 0; i < attributes.length; i++) {\n    const attr = attributes[i];\n    stride += attr.size * getByteSizeFromType(attr.type);\n  }\n  return stride;\n}\n\n/**\n * Computes the size in byte of an attribute type.\n * @param {AttributeType} type Attribute type\n * @return {number} The size in bytes\n */\nfunction getByteSizeFromType(type) {\n  switch (type) {\n    case AttributeType.UNSIGNED_BYTE:\n      return Uint8Array.BYTES_PER_ELEMENT;\n    case AttributeType.UNSIGNED_SHORT:\n      return Uint16Array.BYTES_PER_ELEMENT;\n    case AttributeType.UNSIGNED_INT:\n      return Uint32Array.BYTES_PER_ELEMENT;\n    case AttributeType.FLOAT:\n    default:\n      return Float32Array.BYTES_PER_ELEMENT;\n  }\n}\n\nexport default WebGLHelper;\n","/**\n * @module ol/renderer/webgl/Layer\n */\nimport LayerProperty from '../../layer/Property.js';\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport WebGLHelper from '../../webgl/Helper.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\n\n/**\n * @typedef {Object} PostProcessesOptions\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas that will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n\n/**\n * @typedef {Object} Options\n * @property {Object<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process steps\n * @property {Array<PostProcessesOptions>} [postProcesses] Post-processes definitions\n */\n\n/**\n * @classdesc\n * Base WebGL renderer class.\n * Holds all logic related to data manipulation & some common rendering logic\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass WebGLLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   * @param {Options} [options] Options.\n   */\n  constructor(layer, options) {\n    super(layer);\n\n    options = options || {};\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform is only\n     * set before dispatching rendering events.\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @private\n     */\n    this.postProcesses_ = options.postProcesses;\n\n    /**\n     * @private\n     */\n    this.uniforms_ = options.uniforms;\n\n    /**\n     * @type {WebGLHelper}\n     * @protected\n     */\n    this.helper;\n\n    layer.addChangeListener(LayerProperty.MAP, this.removeHelper.bind(this));\n\n    this.dispatchPreComposeEvent = this.dispatchPreComposeEvent.bind(this);\n    this.dispatchPostComposeEvent = this.dispatchPostComposeEvent.bind(this);\n  }\n\n  /**\n   * @param {WebGLRenderingContext} context The WebGL rendering context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  dispatchPreComposeEvent(context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(RenderEventType.PRECOMPOSE)) {\n      const event = new RenderEvent(\n        RenderEventType.PRECOMPOSE,\n        undefined,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {WebGLRenderingContext} context The WebGL rendering context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  dispatchPostComposeEvent(context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(RenderEventType.POSTCOMPOSE)) {\n      const event = new RenderEvent(\n        RenderEventType.POSTCOMPOSE,\n        undefined,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * Reset options (only handles uniforms).\n   * @param {Options} options Options.\n   */\n  reset(options) {\n    this.uniforms_ = options.uniforms;\n    if (this.helper) {\n      this.helper.setUniforms(this.uniforms_);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  removeHelper() {\n    if (this.helper) {\n      this.helper.dispose();\n      delete this.helper;\n    }\n  }\n\n  /**\n   * Determine whether renderFrame should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    if (this.getLayer().getRenderSource()) {\n      let incrementGroup = true;\n      let groupNumber = -1;\n      let className;\n      for (let i = 0, ii = frameState.layerStatesArray.length; i < ii; i++) {\n        const layer = frameState.layerStatesArray[i].layer;\n        const renderer = layer.getRenderer();\n        if (!(renderer instanceof WebGLLayerRenderer)) {\n          incrementGroup = true;\n          continue;\n        }\n        const layerClassName = layer.getClassName();\n        if (incrementGroup || layerClassName !== className) {\n          groupNumber += 1;\n          incrementGroup = false;\n        }\n        className = layerClassName;\n        if (renderer === this) {\n          break;\n        }\n      }\n\n      const canvasCacheKey =\n        'map/' + frameState.mapId + '/group/' + groupNumber;\n\n      if (\n        !this.helper ||\n        !this.helper.canvasCacheKeyMatches(canvasCacheKey) ||\n        this.helper.needsToBeRecreated()\n      ) {\n        this.removeHelper();\n\n        this.helper = new WebGLHelper({\n          postProcesses: this.postProcesses_,\n          uniforms: this.uniforms_,\n          canvasCacheKey: canvasCacheKey,\n        });\n\n        if (className) {\n          this.helper.getCanvas().className = className;\n        }\n\n        this.afterHelperCreated();\n      }\n    }\n\n    return this.prepareFrameInternal(frameState);\n  }\n\n  /**\n   * @protected\n   */\n  afterHelperCreated() {}\n\n  /**\n   * Determine whether renderFrame should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   * @protected\n   */\n  prepareFrameInternal(frameState) {\n    return true;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.removeHelper();\n    super.disposeInternal();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {WebGLRenderingContext} context The rendering context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      composeTransform(\n        this.inversePixelTransform_,\n        0,\n        0,\n        frameState.pixelRatio,\n        -frameState.pixelRatio,\n        0,\n        0,\n        -frameState.size[1]\n      );\n\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform_,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {WebGLRenderingContext} context The rendering context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {WebGLRenderingContext} context The rendering context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n}\n\nexport default WebGLLayerRenderer;\n","/**\n * @module ol/renderer/webgl/TileLayerBase\n */\nimport LRUCache from '../../structs/LRUCache.js';\nimport ReprojDataTile from '../../reproj/DataTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport WebGLLayerRenderer from './Layer.js';\nimport {abstract, getUid} from '../../util.js';\nimport {create as createMat4} from '../../vec/mat4.js';\nimport {\n  createOrUpdate as createTileCoord,\n  getKey as getTileCoordKey,\n} from '../../tilecoord.js';\nimport {\n  create as createTransform,\n  reset as resetTransform,\n  rotate as rotateTransform,\n  scale as scaleTransform,\n  translate as translateTransform,\n} from '../../transform.js';\nimport {descending} from '../../array.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getIntersection, isEmpty} from '../../extent.js';\nimport {toSize} from '../../size.js';\n\nexport const Uniforms = {\n  TILE_TRANSFORM: 'u_tileTransform',\n  TRANSITION_ALPHA: 'u_transitionAlpha',\n  DEPTH: 'u_depth',\n  RENDER_EXTENT: 'u_renderExtent', // intersection of layer, source, and view extent\n  PATTERN_ORIGIN: 'u_patternOrigin',\n  RESOLUTION: 'u_resolution',\n  ZOOM: 'u_zoom',\n  GLOBAL_ALPHA: 'u_globalAlpha',\n  PROJECTION_MATRIX: 'u_projectionMatrix',\n  SCREEN_TO_WORLD_MATRIX: 'u_screenToWorldMatrix',\n};\n\n/**\n * @type {Object<string, boolean>}\n */\nconst empty = {};\n\n/**\n * Transform a zoom level into a depth value; zoom level zero has a depth value of 0.5, and increasing values\n * have a depth trending towards 0\n * @param {number} z A zoom level.\n * @return {number} A depth value.\n */\nfunction depthForZ(z) {\n  return 1 / (z + 2);\n}\n\n/**\n * @typedef {import(\"../../webgl/BaseTileRepresentation.js\").default<import(\"../../Tile.js\").default>} AbstractTileRepresentation\n */\n/**\n * @typedef {Object} TileRepresentationLookup\n * @property {Set<string>} tileIds The set of tile ids in the lookup.\n * @property {Object<number, Set<AbstractTileRepresentation>>} representationsByZ Tile representations by zoom level.\n */\n\n/**\n * @return {TileRepresentationLookup} A new tile representation lookup.\n */\nexport function newTileRepresentationLookup() {\n  return {tileIds: new Set(), representationsByZ: {}};\n}\n\n/**\n * Check if a tile is already in the tile representation lookup.\n * @param {TileRepresentationLookup} tileRepresentationLookup Lookup of tile representations by zoom level.\n * @param {import(\"../../Tile.js\").default} tile A tile.\n * @return {boolean} The tile is already in the lookup.\n */\nfunction lookupHasTile(tileRepresentationLookup, tile) {\n  return tileRepresentationLookup.tileIds.has(getUid(tile));\n}\n\n/**\n * Add a tile representation to the lookup.\n * @param {TileRepresentationLookup} tileRepresentationLookup Lookup of tile representations by zoom level.\n * @param {AbstractTileRepresentation} tileRepresentation A tile representation.\n * @param {number} z The zoom level.\n */\nfunction addTileRepresentationToLookup(\n  tileRepresentationLookup,\n  tileRepresentation,\n  z\n) {\n  const representationsByZ = tileRepresentationLookup.representationsByZ;\n  if (!(z in representationsByZ)) {\n    representationsByZ[z] = new Set();\n  }\n  representationsByZ[z].add(tileRepresentation);\n  tileRepresentationLookup.tileIds.add(getUid(tileRepresentation.tile));\n}\n\n/**\n * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n * @param {import(\"../../extent.js\").Extent} extent The frame extent.\n * @return {import(\"../../extent.js\").Extent} Frame extent intersected with layer extents.\n */\nfunction getRenderExtent(frameState, extent) {\n  const layerState = frameState.layerStatesArray[frameState.layerIndex];\n  if (layerState.extent) {\n    extent = getIntersection(\n      extent,\n      fromUserExtent(layerState.extent, frameState.viewState.projection)\n    );\n  }\n  const source = /** @type {import(\"../../source/Tile.js\").default} */ (\n    layerState.layer.getRenderSource()\n  );\n  if (!source.getWrapX()) {\n    const gridExtent = source\n      .getTileGridForProjection(frameState.viewState.projection)\n      .getExtent();\n    if (gridExtent) {\n      extent = getIntersection(extent, gridExtent);\n    }\n  }\n  return extent;\n}\n\nexport function getCacheKey(source, tileCoord) {\n  return `${source.getKey()},${getTileCoordKey(tileCoord)}`;\n}\n\n/**\n * @typedef {Object} Options\n * @property {Object<string, import(\"../../webgl/Helper\").UniformValue>} [uniforms] Additional uniforms\n * made available to shaders.\n * @property {number} [cacheSize=512] The tile representation cache size.\n * @property {Array<import('./Layer.js').PostProcessesOptions>} [postProcesses] Post-processes definitions.\n */\n\n/**\n * @typedef {import(\"../../layer/BaseTile.js\").default} BaseLayerType\n */\n\n/**\n * @classdesc\n * Base WebGL renderer for tile layers.\n * @template {BaseLayerType} LayerType\n * @template {import(\"../../Tile.js\").default} TileType\n * @template {import(\"../../webgl/BaseTileRepresentation.js\").default<TileType>} TileRepresentation\n * @extends {WebGLLayerRenderer<LayerType>}\n */\nclass WebGLBaseTileLayerRenderer extends WebGLLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   * @param {Options} options Options.\n   */\n  constructor(tileLayer, options) {\n    super(tileLayer, {\n      uniforms: options.uniforms,\n      postProcesses: options.postProcesses,\n    });\n\n    /**\n     * The last call to `renderFrame` was completed with all tiles loaded\n     * @type {boolean}\n     */\n    this.renderComplete = false;\n\n    /**\n     * This transform converts representation coordinates to screen coordinates.\n     * @type {import(\"../../transform.js\").Transform}\n     * @private\n     */\n    this.tileTransform_ = createTransform();\n\n    /**\n     * @type {Array<number>}\n     * @protected\n     */\n    this.tempMat4 = createMat4();\n\n    /**\n     * @type {import(\"../../TileRange.js\").default}\n     * @private\n     */\n    this.tempTileRange_ = new TileRange(0, 0, 0, 0);\n\n    /**\n     * @type {import(\"../../tilecoord.js\").TileCoord}\n     * @private\n     */\n    this.tempTileCoord_ = createTileCoord(0, 0, 0);\n\n    /**\n     * @type {import(\"../../size.js\").Size}\n     * @private\n     */\n    this.tempSize_ = [0, 0];\n\n    const cacheSize = options.cacheSize !== undefined ? options.cacheSize : 512;\n    /**\n     * @type {import(\"../../structs/LRUCache.js\").default<TileRepresentation>}\n     * @protected\n     */\n    this.tileRepresentationCache = new LRUCache(cacheSize);\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.projection_ = undefined;\n  }\n\n  /**\n   * @param {Options} options Options.\n   */\n  reset(options) {\n    super.reset({\n      uniforms: options.uniforms,\n    });\n  }\n\n  /**\n   * @param {TileType} tile Tile.\n   * @return {boolean} Tile is drawable.\n   * @private\n   */\n  isDrawableTile_(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * Determine whether renderFrame should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrameInternal(frameState) {\n    if (!this.projection_) {\n      this.projection_ = frameState.viewState.projection;\n    } else if (frameState.viewState.projection !== this.projection_) {\n      this.clearCache();\n      this.projection_ = frameState.viewState.projection;\n    }\n\n    const layer = this.getLayer();\n    const source = layer.getRenderSource();\n    if (!source) {\n      return false;\n    }\n\n    if (isEmpty(getRenderExtent(frameState, frameState.extent))) {\n      return false;\n    }\n    return source.getState() === 'ready';\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../../webgl/BaseTileRepresentation.js\").TileRepresentationOptions<TileType>} options tile representation options\n   * @return {TileRepresentation} A new tile representation\n   * @protected\n   */\n  createTileRepresentation(options) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent The extent to be rendered.\n   * @param {number} initialZ The zoom level.\n   * @param {TileRepresentationLookup} tileRepresentationLookup The zoom level.\n   * @param {number} preload Number of additional levels to load.\n   */\n  enqueueTiles(\n    frameState,\n    extent,\n    initialZ,\n    tileRepresentationLookup,\n    preload\n  ) {\n    const viewState = frameState.viewState;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getRenderSource();\n    const tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n    const gutter = tileSource.getGutterForProjection(viewState.projection);\n\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileRepresentationCache = this.tileRepresentationCache;\n\n    const map = tileLayer.getMapInternal();\n    const minZ = Math.max(\n      initialZ - preload,\n      tileGrid.getMinZoom(),\n      tileGrid.getZForResolution(\n        Math.min(\n          tileLayer.getMaxResolution(),\n          map\n            ? map\n                .getView()\n                .getResolutionForZoom(Math.max(tileLayer.getMinZoom(), 0))\n            : tileGrid.getResolution(0)\n        ),\n        tileSource.zDirection\n      )\n    );\n    for (let z = initialZ; z >= minZ; --z) {\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        extent,\n        z,\n        this.tempTileRange_\n      );\n\n      const tileResolution = tileGrid.getResolution(z);\n\n      for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          const tileCoord = createTileCoord(z, x, y, this.tempTileCoord_);\n          const cacheKey = getCacheKey(tileSource, tileCoord);\n\n          /** @type {TileRepresentation} */\n          let tileRepresentation;\n\n          /** @type {TileType} */\n          let tile;\n\n          if (tileRepresentationCache.containsKey(cacheKey)) {\n            tileRepresentation = tileRepresentationCache.get(cacheKey);\n            tile = tileRepresentation.tile;\n          }\n          if (\n            !tileRepresentation ||\n            tileRepresentation.tile.key !== tileSource.getKey()\n          ) {\n            tile = tileSource.getTile(\n              z,\n              x,\n              y,\n              frameState.pixelRatio,\n              viewState.projection\n            );\n          }\n\n          if (lookupHasTile(tileRepresentationLookup, tile)) {\n            continue;\n          }\n\n          if (!tileRepresentation) {\n            tileRepresentation = this.createTileRepresentation({\n              tile: tile,\n              grid: tileGrid,\n              helper: this.helper,\n              gutter: gutter,\n            });\n            tileRepresentationCache.set(cacheKey, tileRepresentation);\n          } else {\n            if (this.isDrawableTile_(tile)) {\n              tileRepresentation.setTile(tile);\n            } else {\n              const interimTile = /** @type {TileType} */ (\n                tile.getInterimTile()\n              );\n              tileRepresentation.setTile(interimTile);\n            }\n          }\n\n          addTileRepresentationToLookup(\n            tileRepresentationLookup,\n            tileRepresentation,\n            z\n          );\n\n          const tileQueueKey = tile.getKey();\n          wantedTiles[tileQueueKey] = true;\n\n          if (tile.getState() === TileState.IDLE) {\n            if (!frameState.tileQueue.isKeyQueued(tileQueueKey)) {\n              frameState.tileQueue.enqueue([\n                tile,\n                tileSourceKey,\n                tileGrid.getTileCoordCenter(tileCoord),\n                tileResolution,\n              ]);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {boolean} tilesWithAlpha True if at least one of the rendered tiles has alpha\n   * @protected\n   */\n  beforeTilesRender(frameState, tilesWithAlpha) {\n    this.helper.prepareDraw(this.frameState, !tilesWithAlpha, true);\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} If returns false, tile mask rendering will be skipped\n   * @protected\n   */\n  beforeTilesMaskRender(frameState) {\n    return false;\n  }\n\n  /**\n   * @param {TileRepresentation} tileRepresentation Tile representation\n   * @param {import(\"../../transform.js\").Transform} tileTransform Tile transform\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state\n   * @param {import(\"../../extent.js\").Extent} renderExtent Render extent\n   * @param {number} tileResolution Tile resolution\n   * @param {import(\"../../size.js\").Size} tileSize Tile size\n   * @param {import(\"../../coordinate.js\").Coordinate} tileOrigin Tile origin\n   * @param {import(\"../../extent.js\").Extent} tileExtent tile Extent\n   * @param {number} depth Depth\n   * @param {number} gutter Gutter\n   * @param {number} alpha Alpha\n   * @protected\n   */\n  renderTile(\n    tileRepresentation,\n    tileTransform,\n    frameState,\n    renderExtent,\n    tileResolution,\n    tileSize,\n    tileOrigin,\n    tileExtent,\n    depth,\n    gutter,\n    alpha\n  ) {}\n\n  /**\n   * @param {TileRepresentation} tileRepresentation Tile representation\n   * @param {number} tileZ Tile Z\n   * @param {import(\"../../extent.js\").Extent} extent Render extent\n   * @param {number} depth Depth\n   * @protected\n   */\n  renderTileMask(tileRepresentation, tileZ, extent, depth) {}\n\n  drawTile_(\n    frameState,\n    tileRepresentation,\n    tileZ,\n    gutter,\n    extent,\n    alphaLookup,\n    tileGrid\n  ) {\n    if (!tileRepresentation.ready) {\n      return;\n    }\n    const tile = tileRepresentation.tile;\n    const tileCoord = tile.tileCoord;\n    const tileCoordKey = getTileCoordKey(tileCoord);\n    const alpha = tileCoordKey in alphaLookup ? alphaLookup[tileCoordKey] : 1;\n\n    const tileResolution = tileGrid.getResolution(tileZ);\n    const tileSize = toSize(tileGrid.getTileSize(tileZ), this.tempSize_);\n    const tileOrigin = tileGrid.getOrigin(tileZ);\n    const tileExtent = tileGrid.getTileCoordExtent(tileCoord);\n    // tiles with alpha are rendered last to allow blending\n    const depth = alpha < 1 ? -1 : depthForZ(tileZ);\n    if (alpha < 1) {\n      frameState.animate = true;\n    }\n\n    const viewState = frameState.viewState;\n    const centerX = viewState.center[0];\n    const centerY = viewState.center[1];\n\n    const tileWidthWithGutter = tileSize[0] + 2 * gutter;\n    const tileHeightWithGutter = tileSize[1] + 2 * gutter;\n\n    const aspectRatio = tileWidthWithGutter / tileHeightWithGutter;\n\n    const centerI = (centerX - tileOrigin[0]) / (tileSize[0] * tileResolution);\n    const centerJ = (tileOrigin[1] - centerY) / (tileSize[1] * tileResolution);\n\n    const tileScale = viewState.resolution / tileResolution;\n\n    const tileCenterI = tileCoord[1];\n    const tileCenterJ = tileCoord[2];\n\n    resetTransform(this.tileTransform_);\n    scaleTransform(\n      this.tileTransform_,\n      2 / ((frameState.size[0] * tileScale) / tileWidthWithGutter),\n      -2 / ((frameState.size[1] * tileScale) / tileWidthWithGutter)\n    );\n    rotateTransform(this.tileTransform_, viewState.rotation);\n    scaleTransform(this.tileTransform_, 1, 1 / aspectRatio);\n    translateTransform(\n      this.tileTransform_,\n      (tileSize[0] * (tileCenterI - centerI) - gutter) / tileWidthWithGutter,\n      (tileSize[1] * (tileCenterJ - centerJ) - gutter) / tileHeightWithGutter\n    );\n\n    this.renderTile(\n      /** @type {TileRepresentation} */ (tileRepresentation),\n      this.tileTransform_,\n      frameState,\n      extent,\n      tileResolution,\n      tileSize,\n      tileOrigin,\n      tileExtent,\n      depth,\n      gutter,\n      alpha\n    );\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState) {\n    this.frameState = frameState;\n    this.renderComplete = true;\n    const gl = this.helper.getGL();\n    this.preRender(gl, frameState);\n\n    const viewState = frameState.viewState;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getRenderSource();\n    const tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n    const gutter = tileSource.getGutterForProjection(viewState.projection);\n    const extent = getRenderExtent(frameState, frameState.extent);\n    const z = tileGrid.getZForResolution(\n      viewState.resolution,\n      tileSource.zDirection\n    );\n\n    /**\n     * @type {TileRepresentationLookup}\n     */\n    const tileRepresentationLookup = newTileRepresentationLookup();\n\n    const preload = tileLayer.getPreload();\n    if (frameState.nextExtent) {\n      const targetZ = tileGrid.getZForResolution(\n        viewState.nextResolution,\n        tileSource.zDirection\n      );\n      const nextExtent = getRenderExtent(frameState, frameState.nextExtent);\n      this.enqueueTiles(\n        frameState,\n        nextExtent,\n        targetZ,\n        tileRepresentationLookup,\n        preload\n      );\n    }\n\n    this.enqueueTiles(frameState, extent, z, tileRepresentationLookup, 0);\n    if (preload > 0) {\n      setTimeout(() => {\n        this.enqueueTiles(\n          frameState,\n          extent,\n          z - 1,\n          tileRepresentationLookup,\n          preload - 1\n        );\n      }, 0);\n    }\n\n    /**\n     * A lookup of alpha values for tiles at the target rendering resolution\n     * for tiles that are in transition.  If a tile coord key is absent from\n     * this lookup, the tile should be rendered at alpha 1.\n     * @type {Object<string, number>}\n     */\n    const alphaLookup = {};\n\n    const uid = getUid(this);\n    const time = frameState.time;\n    let blend = false;\n\n    // look for cached tiles to use if a target tile is not ready\n    for (const tileRepresentation of tileRepresentationLookup\n      .representationsByZ[z]) {\n      const tile = tileRepresentation.tile;\n      if (\n        (tile instanceof ReprojTile || tile instanceof ReprojDataTile) &&\n        tile.getState() === TileState.EMPTY\n      ) {\n        continue;\n      }\n      const tileCoord = tile.tileCoord;\n\n      if (tileRepresentation.ready) {\n        const alpha = tile.getAlpha(uid, time);\n        if (alpha === 1) {\n          // no need to look for alt tiles\n          tile.endTransition(uid);\n          continue;\n        }\n        blend = true;\n        const tileCoordKey = getTileCoordKey(tileCoord);\n        alphaLookup[tileCoordKey] = alpha;\n      }\n      this.renderComplete = false;\n\n      // first look for child tiles (at z + 1)\n      const coveredByChildren = this.findAltTiles_(\n        tileGrid,\n        tileCoord,\n        z + 1,\n        tileRepresentationLookup\n      );\n\n      if (coveredByChildren) {\n        continue;\n      }\n\n      // next look for parent tiles\n      const minZoom = tileGrid.getMinZoom();\n      for (let parentZ = z - 1; parentZ >= minZoom; --parentZ) {\n        const coveredByParent = this.findAltTiles_(\n          tileGrid,\n          tileCoord,\n          parentZ,\n          tileRepresentationLookup\n        );\n\n        if (coveredByParent) {\n          break;\n        }\n      }\n    }\n\n    const representationsByZ = tileRepresentationLookup.representationsByZ;\n    const zs = Object.keys(representationsByZ).map(Number).sort(descending);\n\n    const renderTileMask = this.beforeTilesMaskRender(frameState);\n\n    if (renderTileMask) {\n      for (let j = 0, jj = zs.length; j < jj; ++j) {\n        const tileZ = zs[j];\n        for (const tileRepresentation of representationsByZ[tileZ]) {\n          const tileCoord = tileRepresentation.tile.tileCoord;\n          const tileCoordKey = getTileCoordKey(tileCoord);\n          // do not render the tile mask if alpha < 1\n          if (tileCoordKey in alphaLookup) {\n            continue;\n          }\n          const tileExtent = tileGrid.getTileCoordExtent(tileCoord);\n          this.renderTileMask(\n            /** @type {TileRepresentation} */ (tileRepresentation),\n            tileZ,\n            tileExtent,\n            depthForZ(tileZ)\n          );\n        }\n      }\n    }\n\n    this.beforeTilesRender(frameState, blend);\n\n    for (let j = 0, jj = zs.length; j < jj; ++j) {\n      const tileZ = zs[j];\n      for (const tileRepresentation of representationsByZ[tileZ]) {\n        const tileCoord = tileRepresentation.tile.tileCoord;\n        const tileCoordKey = getTileCoordKey(tileCoord);\n        if (tileCoordKey in alphaLookup) {\n          continue;\n        }\n\n        this.drawTile_(\n          frameState,\n          tileRepresentation,\n          tileZ,\n          gutter,\n          extent,\n          alphaLookup,\n          tileGrid\n        );\n      }\n    }\n\n    for (const tileRepresentation of representationsByZ[z]) {\n      const tileCoord = tileRepresentation.tile.tileCoord;\n      const tileCoordKey = getTileCoordKey(tileCoord);\n      if (tileCoordKey in alphaLookup) {\n        this.drawTile_(\n          frameState,\n          tileRepresentation,\n          z,\n          gutter,\n          extent,\n          alphaLookup,\n          tileGrid\n        );\n      }\n    }\n\n    this.helper.finalizeDraw(\n      frameState,\n      this.dispatchPreComposeEvent,\n      this.dispatchPostComposeEvent\n    );\n\n    const canvas = this.helper.getCanvas();\n\n    const tileRepresentationCache = this.tileRepresentationCache;\n    while (tileRepresentationCache.canExpireCache()) {\n      const tileRepresentation = tileRepresentationCache.pop();\n      tileRepresentation.dispose();\n    }\n\n    // TODO: let the renderers manage their own cache instead of managing the source cache\n    /**\n     * Here we unconditionally expire the source cache since the renderer maintains\n     * its own cache.\n     * @param {import(\"../../Map.js\").default} map Map.\n     * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n     */\n    const postRenderFunction = function (map, frameState) {\n      tileSource.updateCacheSize(0.1, frameState.viewState.projection);\n      tileSource.expireCache(frameState.viewState.projection, empty);\n    };\n\n    frameState.postRenderFunctions.push(postRenderFunction);\n\n    this.postRender(gl, frameState);\n    return canvas;\n  }\n\n  /**\n   * Look for tiles covering the provided tile coordinate at an alternate\n   * zoom level.  Loaded tiles will be added to the provided tile representation lookup.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid The tile grid.\n   * @param {import(\"../../tilecoord.js\").TileCoord} tileCoord The target tile coordinate.\n   * @param {number} altZ The alternate zoom level.\n   * @param {TileRepresentationLookup} tileRepresentationLookup Lookup of\n   * tile representations by zoom level.\n   * @return {boolean} The tile coordinate is covered by loaded tiles at the alternate zoom level.\n   * @private\n   */\n  findAltTiles_(tileGrid, tileCoord, altZ, tileRepresentationLookup) {\n    const tileRange = tileGrid.getTileRangeForTileCoordAndZ(\n      tileCoord,\n      altZ,\n      this.tempTileRange_\n    );\n\n    if (!tileRange) {\n      return false;\n    }\n\n    let covered = true;\n    const tileRepresentationCache = this.tileRepresentationCache;\n    const source = this.getLayer().getRenderSource();\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        const cacheKey = getCacheKey(source, [altZ, x, y]);\n        let loaded = false;\n        if (tileRepresentationCache.containsKey(cacheKey)) {\n          const tileRepresentation = tileRepresentationCache.get(cacheKey);\n          if (\n            tileRepresentation.ready &&\n            !lookupHasTile(tileRepresentationLookup, tileRepresentation.tile)\n          ) {\n            addTileRepresentationToLookup(\n              tileRepresentationLookup,\n              tileRepresentation,\n              altZ\n            );\n            loaded = true;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  clearCache() {\n    const tileRepresentationCache = this.tileRepresentationCache;\n    tileRepresentationCache.forEach((tileRepresentation) =>\n      tileRepresentation.dispose()\n    );\n    tileRepresentationCache.clear();\n  }\n\n  removeHelper() {\n    if (this.helper) {\n      this.clearCache();\n    }\n\n    super.removeHelper();\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    super.disposeInternal();\n    delete this.frameState;\n  }\n}\n\nexport default WebGLBaseTileLayerRenderer;\n","/**\n * @module ol/renderer/webgl/TileLayer\n */\nimport ReprojDataTile from '../../reproj/DataTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileState from '../../TileState.js';\nimport TileTexture from '../../webgl/TileTexture.js';\nimport WebGLArrayBuffer from '../../webgl/Buffer.js';\nimport WebGLBaseTileLayerRenderer, {\n  Uniforms as BaseUniforms,\n  getCacheKey,\n} from './TileLayerBase.js';\nimport {AttributeType} from '../../webgl/Helper.js';\nimport {ELEMENT_ARRAY_BUFFER, STATIC_DRAW} from '../../webgl.js';\nimport {apply as applyTransform} from '../../transform.js';\nimport {\n  boundingExtent,\n  containsCoordinate,\n  getIntersection,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {fromTransform as mat4FromTransform} from '../../vec/mat4.js';\nimport {toSize} from '../../size.js';\n\nexport const Uniforms = {\n  ...BaseUniforms,\n  TILE_TEXTURE_ARRAY: 'u_tileTextures',\n  TEXTURE_PIXEL_WIDTH: 'u_texturePixelWidth',\n  TEXTURE_PIXEL_HEIGHT: 'u_texturePixelHeight',\n  TEXTURE_RESOLUTION: 'u_textureResolution', // map units per texture pixel\n  TEXTURE_ORIGIN_X: 'u_textureOriginX', // map x coordinate of left edge of texture\n  TEXTURE_ORIGIN_Y: 'u_textureOriginY', // map y coordinate of top edge of texture\n};\n\nexport const Attributes = {\n  TEXTURE_COORD: 'a_textureCoord',\n};\n\n/**\n * @type {Array<import('../../webgl/Helper.js').AttributeDescription>}\n */\nconst attributeDescriptions = [\n  {\n    name: Attributes.TEXTURE_COORD,\n    size: 2,\n    type: AttributeType.FLOAT,\n  },\n];\n\n/**\n * @typedef {Object} Options\n * @property {string} vertexShader Vertex shader source.\n * @property {string} fragmentShader Fragment shader source.\n * @property {Object<string, import(\"../../webgl/Helper\").UniformValue>} [uniforms] Additional uniforms\n * made available to shaders.\n * @property {Array<import(\"../../webgl/PaletteTexture.js\").default>} [paletteTextures] Palette textures.\n * @property {number} [cacheSize=512] The texture cache size.\n */\n\n/**\n * @typedef {import(\"../../layer/WebGLTile.js\").default} LayerType\n */\n/**\n * @typedef {import(\"../../webgl/TileTexture.js\").TileType} TileTextureType\n */\n/**\n * @typedef {import(\"../../webgl/TileTexture.js\").default} TileTextureRepresentation\n */\n\n/**\n * @classdesc\n * WebGL renderer for tile layers.\n * @extends {WebGLBaseTileLayerRenderer<LayerType, TileTextureType, TileTextureRepresentation>}\n * @api\n */\nclass WebGLTileLayerRenderer extends WebGLBaseTileLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   * @param {Options} options Options.\n   */\n  constructor(tileLayer, options) {\n    super(tileLayer, options);\n\n    /**\n     * @type {WebGLProgram}\n     * @private\n     */\n    this.program_;\n\n    /**\n     * @private\n     */\n    this.vertexShader_ = options.vertexShader;\n\n    /**\n     * @private\n     */\n    this.fragmentShader_ = options.fragmentShader;\n\n    /**\n     * Tiles are rendered as a quad with the following structure:\n     *\n     *  [P3]---------[P2]\n     *   |`           |\n     *   |  `     B   |\n     *   |    `       |\n     *   |      `     |\n     *   |   A    `   |\n     *   |          ` |\n     *  [P0]---------[P1]\n     *\n     * Triangle A: P0, P1, P3\n     * Triangle B: P1, P2, P3\n     *\n     * @private\n     */\n    this.indices_ = new WebGLArrayBuffer(ELEMENT_ARRAY_BUFFER, STATIC_DRAW);\n    this.indices_.fromArray([0, 1, 3, 1, 2, 3]);\n\n    /**\n     * @type {Array<import(\"../../webgl/PaletteTexture.js\").default>}\n     * @private\n     */\n    this.paletteTextures_ = options.paletteTextures || [];\n  }\n\n  /**\n   * @param {Options} options Options.\n   */\n  reset(options) {\n    super.reset(options);\n\n    this.vertexShader_ = options.vertexShader;\n    this.fragmentShader_ = options.fragmentShader;\n    this.paletteTextures_ = options.paletteTextures || [];\n    if (this.helper) {\n      this.program_ = this.helper.getProgram(\n        this.fragmentShader_,\n        this.vertexShader_\n      );\n    }\n  }\n\n  afterHelperCreated() {\n    this.program_ = this.helper.getProgram(\n      this.fragmentShader_,\n      this.vertexShader_\n    );\n    this.helper.flushBufferData(this.indices_);\n  }\n\n  createTileRepresentation(options) {\n    return new TileTexture(options);\n  }\n\n  beforeTilesRender(frameState, tilesWithAlpha) {\n    super.beforeTilesRender(frameState, tilesWithAlpha);\n    this.helper.useProgram(this.program_, frameState);\n  }\n\n  renderTile(\n    tileTexture,\n    tileTransform,\n    frameState,\n    renderExtent,\n    tileResolution,\n    tileSize,\n    tileOrigin,\n    tileExtent,\n    depth,\n    gutter,\n    alpha\n  ) {\n    const gl = this.helper.getGL();\n    this.helper.bindBuffer(tileTexture.coords);\n    this.helper.bindBuffer(this.indices_);\n    this.helper.enableAttributes(attributeDescriptions);\n\n    let textureSlot = 0;\n    while (textureSlot < tileTexture.textures.length) {\n      const uniformName = `${Uniforms.TILE_TEXTURE_ARRAY}[${textureSlot}]`;\n      this.helper.bindTexture(\n        tileTexture.textures[textureSlot],\n        textureSlot,\n        uniformName\n      );\n      ++textureSlot;\n    }\n\n    for (\n      let paletteIndex = 0;\n      paletteIndex < this.paletteTextures_.length;\n      ++paletteIndex\n    ) {\n      const paletteTexture = this.paletteTextures_[paletteIndex];\n      const texture = paletteTexture.getTexture(gl);\n      this.helper.bindTexture(texture, textureSlot, paletteTexture.name);\n      ++textureSlot;\n    }\n\n    const viewState = frameState.viewState;\n\n    const tileWidthWithGutter = tileSize[0] + 2 * gutter;\n    const tileHeightWithGutter = tileSize[1] + 2 * gutter;\n\n    const tile = tileTexture.tile;\n    const tileCoord = tile.tileCoord;\n\n    const tileCenterI = tileCoord[1];\n    const tileCenterJ = tileCoord[2];\n\n    this.helper.setUniformMatrixValue(\n      Uniforms.TILE_TRANSFORM,\n      mat4FromTransform(this.tempMat4, tileTransform)\n    );\n\n    this.helper.setUniformFloatValue(Uniforms.TRANSITION_ALPHA, alpha);\n    this.helper.setUniformFloatValue(Uniforms.DEPTH, depth);\n\n    let gutterExtent = renderExtent;\n    if (gutter > 0) {\n      gutterExtent = tileExtent;\n      getIntersection(gutterExtent, renderExtent, gutterExtent);\n    }\n    this.helper.setUniformFloatVec4(Uniforms.RENDER_EXTENT, gutterExtent);\n\n    this.helper.setUniformFloatValue(Uniforms.RESOLUTION, viewState.resolution);\n    this.helper.setUniformFloatValue(Uniforms.ZOOM, viewState.zoom);\n\n    this.helper.setUniformFloatValue(\n      Uniforms.TEXTURE_PIXEL_WIDTH,\n      tileWidthWithGutter\n    );\n    this.helper.setUniformFloatValue(\n      Uniforms.TEXTURE_PIXEL_HEIGHT,\n      tileHeightWithGutter\n    );\n    this.helper.setUniformFloatValue(\n      Uniforms.TEXTURE_RESOLUTION,\n      tileResolution\n    );\n    this.helper.setUniformFloatValue(\n      Uniforms.TEXTURE_ORIGIN_X,\n      tileOrigin[0] +\n        tileCenterI * tileSize[0] * tileResolution -\n        gutter * tileResolution\n    );\n    this.helper.setUniformFloatValue(\n      Uniforms.TEXTURE_ORIGIN_Y,\n      tileOrigin[1] -\n        tileCenterJ * tileSize[1] * tileResolution +\n        gutter * tileResolution\n    );\n\n    this.helper.drawElements(0, this.indices_.getSize());\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView} Data at the pixel location.\n   */\n  getData(pixel) {\n    const gl = this.helper.getGL();\n    if (!gl) {\n      return null;\n    }\n\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const viewState = frameState.viewState;\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (\n        !containsCoordinate(\n          fromUserExtent(layerExtent, viewState.projection),\n          coordinate\n        )\n      ) {\n        return null;\n      }\n    }\n\n    // determine last source suitable for rendering at coordinate\n    const sources = layer.getSources(\n      boundingExtent([coordinate]),\n      viewState.resolution\n    );\n    let i, source, tileGrid;\n    for (i = sources.length - 1; i >= 0; --i) {\n      source = sources[i];\n      if (source.getState() === 'ready') {\n        tileGrid = source.getTileGridForProjection(viewState.projection);\n        if (source.getWrapX()) {\n          break;\n        }\n        const gridExtent = tileGrid.getExtent();\n        if (!gridExtent || containsCoordinate(gridExtent, coordinate)) {\n          break;\n        }\n      }\n    }\n    if (i < 0) {\n      return null;\n    }\n\n    const tileTextureCache = this.tileRepresentationCache;\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const cacheKey = getCacheKey(source, tileCoord);\n      if (!tileTextureCache.containsKey(cacheKey)) {\n        continue;\n      }\n      const tileTexture = tileTextureCache.get(cacheKey);\n      const tile = tileTexture.tile;\n      if (\n        (tile instanceof ReprojTile || tile instanceof ReprojDataTile) &&\n        tile.getState() === TileState.EMPTY\n      ) {\n        return null;\n      }\n      if (!tileTexture.loaded) {\n        continue;\n      }\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      const col =\n        (coordinate[0] - tileOrigin[0]) / tileResolution -\n        tileCoord[1] * tileSize[0];\n\n      const row =\n        (tileOrigin[1] - coordinate[1]) / tileResolution -\n        tileCoord[2] * tileSize[1];\n\n      return tileTexture.getPixelData(col, row);\n    }\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    const helper = this.helper;\n    if (helper) {\n      const gl = helper.getGL();\n      gl.deleteProgram(this.program_);\n      delete this.program_;\n      helper.deleteBuffer(this.indices_);\n    }\n    super.disposeInternal();\n    delete this.indices_;\n  }\n}\n\nexport default WebGLTileLayerRenderer;\n","/**\n * @module ol/webgl/PaletteTexture\n */\n\nclass PaletteTexture {\n  /**\n   * @param {string} name The name of the texture.\n   * @param {Uint8Array} data The texture data.\n   */\n  constructor(name, data) {\n    this.name = name;\n    this.data = data;\n\n    /**\n     * @type {WebGLTexture|null}\n     * @private\n     */\n    this.texture_ = null;\n  }\n\n  /**\n   * @param {WebGLRenderingContext} gl Rendering context.\n   * @return {WebGLTexture} The texture.\n   */\n  getTexture(gl) {\n    if (!this.texture_) {\n      const texture = gl.createTexture();\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n      gl.texImage2D(\n        gl.TEXTURE_2D,\n        0,\n        gl.RGBA,\n        this.data.length / 4,\n        1,\n        0,\n        gl.RGBA,\n        gl.UNSIGNED_BYTE,\n        this.data\n      );\n      this.texture_ = texture;\n    }\n    return this.texture_;\n  }\n}\n\nexport default PaletteTexture;\n","/**\n * @module ol/expr/gpu\n */\nimport PaletteTexture from '../webgl/PaletteTexture.js';\nimport {\n  BooleanType,\n  CallExpression,\n  ColorType,\n  NoneType,\n  NumberArrayType,\n  NumberType,\n  Ops,\n  StringType,\n  isType,\n  overlapsType,\n  parse,\n  typeName,\n} from './expression.js';\nimport {Uniforms} from '../renderer/webgl/TileLayer.js';\nimport {asArray} from '../color.js';\n\n/**\n * @param {string} operator Operator\n * @param {CompilationContext} context Compilation context\n * @return {string} A function name based on the operator, unique in the given context\n */\nfunction computeOperatorFunctionName(operator, context) {\n  return `operator_${operator}_${Object.keys(context.functions).length}`;\n}\n\n/**\n * Will return the number as a float with a dot separator, which is required by GLSL.\n * @param {number} v Numerical value.\n * @return {string} The value as string.\n */\nexport function numberToGlsl(v) {\n  const s = v.toString();\n  return s.includes('.') ? s : s + '.0';\n}\n\n/**\n * Will return the number array as a float with a dot separator, concatenated with ', '.\n * @param {Array<number>} array Numerical values array.\n * @return {string} The array as a vector, e. g.: `vec3(1.0, 2.0, 3.0)`.\n */\nexport function arrayToGlsl(array) {\n  if (array.length < 2 || array.length > 4) {\n    throw new Error(\n      '`formatArray` can only output `vec2`, `vec3` or `vec4` arrays.'\n    );\n  }\n  return `vec${array.length}(${array.map(numberToGlsl).join(', ')})`;\n}\n\n/**\n * Will normalize and converts to string a `vec4` color array compatible with GLSL.\n * @param {string|import(\"../color.js\").Color} color Color either in string format or [r, g, b, a] array format,\n * with RGB components in the 0..255 range and the alpha component in the 0..1 range.\n * Note that the final array will always have 4 components.\n * @return {string} The color expressed in the `vec4(1.0, 1.0, 1.0, 1.0)` form.\n */\nexport function colorToGlsl(color) {\n  const array = asArray(color);\n  const alpha = array.length > 3 ? array[3] : 1;\n  // all components are premultiplied with alpha value\n  return arrayToGlsl([\n    (array[0] / 255) * alpha,\n    (array[1] / 255) * alpha,\n    (array[2] / 255) * alpha,\n    alpha,\n  ]);\n}\n\n/** @type {Object<string, number>} */\nconst stringToFloatMap = {};\nlet stringToFloatCounter = 0;\n\n/**\n * Returns a stable equivalent number for the string literal.\n * @param {string} string String literal value\n * @return {number} Number equivalent\n */\nexport function getStringNumberEquivalent(string) {\n  if (!(string in stringToFloatMap)) {\n    stringToFloatMap[string] = stringToFloatCounter++;\n  }\n  return stringToFloatMap[string];\n}\n\n/**\n * Returns a stable equivalent number for the string literal, for use in shaders. This number is then\n * converted to be a GLSL-compatible string.\n * Note: with a float precision of `mediump`, the amount of unique strings supported is 16,777,216\n * @param {string} string String literal value\n * @return {string} GLSL-compatible string containing a number\n */\nexport function stringToGlsl(string) {\n  return numberToGlsl(getStringNumberEquivalent(string));\n}\n\n/**\n * Get the uniform name given a variable name.\n * @param {string} variableName The variable name.\n * @return {string} The uniform name.\n */\nexport function uniformNameForVariable(variableName) {\n  return 'u_var_' + variableName;\n}\n\n/**\n * @typedef {import('./expression.js').ParsingContext} ParsingContext\n */\n/**\n *\n * @typedef {import(\"./expression.js\").Expression} Expression\n */\n/**\n *\n * @typedef {import(\"./expression.js\").LiteralExpression} LiteralExpression\n */\n\n/**\n * @typedef {Object} CompilationContextProperty\n * @property {string} name Name\n * @property {number} type Resolved property type\n * @property {function(import(\"../Feature.js\").FeatureLike): *} [evaluator] Function used for evaluating the value;\n */\n\n/**\n * @typedef {Object} CompilationContextVariable\n * @property {string} name Name\n * @property {number} type Resolved variable type\n * @property {function(Object): *} [evaluator] Function used for evaluating the value; argument is the style variables object\n */\n\n/**\n * @typedef {Object} CompilationContext\n * @property {boolean} [inFragmentShader] If false, means the expression output should be made for a vertex shader\n * @property {Object<string, CompilationContextProperty>} properties The values for properties used in 'get' expressions.\n * @property {Object<string, CompilationContextVariable>} variables The values for variables used in 'var' expressions.\n * @property {Object<string, string>} functions Lookup of functions used by the style.\n * @property {number} [bandCount] Number of bands per pixel.\n * @property {Array<PaletteTexture>} [paletteTextures] List of palettes used by the style.\n * @property {import(\"../style/webgl.js\").WebGLStyle} style Literal style.\n */\n\n/**\n * @return {CompilationContext} A new compilation context.\n */\nexport function newCompilationContext() {\n  return {\n    inFragmentShader: false,\n    variables: {},\n    properties: {},\n    functions: {},\n    bandCount: 0,\n    style: {},\n  };\n}\n\nconst GET_BAND_VALUE_FUNC = 'getBandValue';\n\nexport const PALETTE_TEXTURE_ARRAY = 'u_paletteTextures';\n\n/**\n * @typedef {string} CompiledExpression\n */\n\n/**\n * @typedef {function(CompilationContext, CallExpression, number): string} Compiler\n * Third argument is the expected value types\n */\n\n/**\n * @param {import('./expression.js').EncodedExpression} encoded The encoded expression.\n * @param {number} type The expected type.\n * @param {import('./expression.js').ParsingContext} parsingContext The parsing context.\n * @param {CompilationContext} compilationContext An existing compilation context\n * @return {CompiledExpression} The compiled expression.\n */\nexport function buildExpression(\n  encoded,\n  type,\n  parsingContext,\n  compilationContext\n) {\n  const expression = parse(encoded, parsingContext, type);\n  if (isType(expression.type, NoneType)) {\n    throw new Error(`No matching type was found`);\n  }\n  if (!overlapsType(type, expression.type)) {\n    const expected = typeName(type);\n    const actual = typeName(expression.type);\n    throw new Error(\n      `Expected expression to be of type ${expected}, got ${actual}`\n    );\n  }\n  return compile(expression, type, compilationContext);\n}\n\n/**\n * @param {function(Array<CompiledExpression>, CompilationContext): string} output Function that takes in parsed arguments and returns a string\n * @return {function(CompilationContext, import(\"./expression.js\").CallExpression, number): string} Compiler for the call expression\n */\nfunction createCompiler(output) {\n  return (context, expression, type) => {\n    const length = expression.args.length;\n    const args = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      args[i] = compile(expression.args[i], type, context);\n    }\n    return output(args, context);\n  };\n}\n\n/**\n * @type {Object<string, Compiler>}\n */\nconst compilers = {\n  [Ops.Get]: (context, expression) => {\n    const firstArg = /** @type {LiteralExpression} */ (expression.args[0]);\n    const propName = /** @type {string} */ (firstArg.value);\n    const isExisting = propName in context.properties;\n    if (!isExisting) {\n      context.properties[propName] = {\n        name: propName,\n        type: expression.type,\n      };\n    }\n    const prefix = context.inFragmentShader ? 'v_prop_' : 'a_prop_';\n    return prefix + propName;\n  },\n  [Ops.GeometryType]: (context, expression, type) => {\n    const propName = 'geometryType';\n    const computeType = (geometry) => {\n      const type = geometry.getType();\n      switch (type) {\n        case 'Point':\n        case 'LineString':\n        case 'Polygon':\n          return type;\n        case 'MultiPoint':\n        case 'MultiLineString':\n        case 'MultiPolygon':\n          return type.substring(5);\n        case 'Circle':\n          return 'Polygon';\n        case 'GeometryCollection':\n          return computeType(geometry.getGeometries()[0]);\n        default:\n      }\n    };\n    const isExisting = propName in context.properties;\n    if (!isExisting) {\n      context.properties[propName] = {\n        name: propName,\n        type: StringType,\n        evaluator: (feature) => {\n          return computeType(feature.getGeometry());\n        },\n      };\n    }\n    const prefix = context.inFragmentShader ? 'v_prop_' : 'a_prop_';\n    return prefix + propName;\n  },\n  [Ops.Var]: (context, expression) => {\n    const firstArg = /** @type {LiteralExpression} */ (expression.args[0]);\n    const varName = /** @type {string} */ (firstArg.value);\n    const isExisting = varName in context.variables;\n    if (!isExisting) {\n      context.variables[varName] = {\n        name: varName,\n        type: expression.type,\n      };\n    }\n    return uniformNameForVariable(varName);\n  },\n  [Ops.Resolution]: () => 'u_resolution',\n  [Ops.Zoom]: () => 'u_zoom',\n  [Ops.Time]: () => 'u_time',\n  [Ops.Any]: createCompiler((compiledArgs) => `(${compiledArgs.join(` || `)})`),\n  [Ops.All]: createCompiler((compiledArgs) => `(${compiledArgs.join(` && `)})`),\n  [Ops.Not]: createCompiler(([value]) => `(!${value})`),\n  [Ops.Equal]: createCompiler(\n    ([firstValue, secondValue]) => `(${firstValue} == ${secondValue})`\n  ),\n  [Ops.NotEqual]: createCompiler(\n    ([firstValue, secondValue]) => `(${firstValue} != ${secondValue})`\n  ),\n  [Ops.GreaterThan]: createCompiler(\n    ([firstValue, secondValue]) => `(${firstValue} > ${secondValue})`\n  ),\n  [Ops.GreaterThanOrEqualTo]: createCompiler(\n    ([firstValue, secondValue]) => `(${firstValue} >= ${secondValue})`\n  ),\n  [Ops.LessThan]: createCompiler(\n    ([firstValue, secondValue]) => `(${firstValue} < ${secondValue})`\n  ),\n  [Ops.LessThanOrEqualTo]: createCompiler(\n    ([firstValue, secondValue]) => `(${firstValue} <= ${secondValue})`\n  ),\n  [Ops.Multiply]: createCompiler(\n    (compiledArgs) => `(${compiledArgs.join(' * ')})`\n  ),\n  [Ops.Divide]: createCompiler(\n    ([firstValue, secondValue]) => `(${firstValue} / ${secondValue})`\n  ),\n  [Ops.Add]: createCompiler((compiledArgs) => `(${compiledArgs.join(' + ')})`),\n  [Ops.Subtract]: createCompiler(\n    ([firstValue, secondValue]) => `(${firstValue} - ${secondValue})`\n  ),\n  [Ops.Clamp]: createCompiler(\n    ([value, min, max]) => `clamp(${value}, ${min}, ${max})`\n  ),\n  [Ops.Mod]: createCompiler(([value, modulo]) => `mod(${value}, ${modulo})`),\n  [Ops.Pow]: createCompiler(([value, power]) => `pow(${value}, ${power})`),\n  [Ops.Abs]: createCompiler(([value]) => `abs(${value})`),\n  [Ops.Floor]: createCompiler(([value]) => `floor(${value})`),\n  [Ops.Ceil]: createCompiler(([value]) => `ceil(${value})`),\n  [Ops.Round]: createCompiler(([value]) => `floor(${value} + 0.5)`),\n  [Ops.Sin]: createCompiler(([value]) => `sin(${value})`),\n  [Ops.Cos]: createCompiler(([value]) => `cos(${value})`),\n  [Ops.Atan]: createCompiler(([firstValue, secondValue]) => {\n    return secondValue !== undefined\n      ? `atan(${firstValue}, ${secondValue})`\n      : `atan(${firstValue})`;\n  }),\n  [Ops.Sqrt]: createCompiler(([value]) => `sqrt(${value})`),\n  [Ops.Match]: createCompiler((compiledArgs) => {\n    const input = compiledArgs[0];\n    const fallback = compiledArgs[compiledArgs.length - 1];\n    let result = null;\n    for (let i = compiledArgs.length - 3; i >= 1; i -= 2) {\n      const match = compiledArgs[i];\n      const output = compiledArgs[i + 1];\n      result = `(${input} == ${match} ? ${output} : ${result || fallback})`;\n    }\n    return result;\n  }),\n  [Ops.Between]: createCompiler(\n    ([value, min, max]) => `(${value} >= ${min} && ${value} <= ${max})`\n  ),\n  [Ops.Interpolate]: createCompiler(([exponent, input, ...compiledArgs]) => {\n    let result = '';\n    for (let i = 0; i < compiledArgs.length - 2; i += 2) {\n      const stop1 = compiledArgs[i];\n      const output1 = result || compiledArgs[i + 1];\n      const stop2 = compiledArgs[i + 2];\n      const output2 = compiledArgs[i + 3];\n      let ratio;\n      if (exponent === numberToGlsl(1)) {\n        ratio = `(${input} - ${stop1}) / (${stop2} - ${stop1})`;\n      } else {\n        ratio = `(pow(${exponent}, (${input} - ${stop1})) - 1.0) / (pow(${exponent}, (${stop2} - ${stop1})) - 1.0)`;\n      }\n      result = `mix(${output1}, ${output2}, clamp(${ratio}, 0.0, 1.0))`;\n    }\n    return result;\n  }),\n  [Ops.Case]: createCompiler((compiledArgs) => {\n    const fallback = compiledArgs[compiledArgs.length - 1];\n    let result = null;\n    for (let i = compiledArgs.length - 3; i >= 0; i -= 2) {\n      const condition = compiledArgs[i];\n      const output = compiledArgs[i + 1];\n      result = `(${condition} ? ${output} : ${result || fallback})`;\n    }\n    return result;\n  }),\n  [Ops.In]: createCompiler(([needle, ...haystack], context) => {\n    const funcName = computeOperatorFunctionName('in', context);\n    const tests = [];\n    for (let i = 0; i < haystack.length; i += 1) {\n      tests.push(`  if (inputValue == ${haystack[i]}) { return true; }`);\n    }\n    context.functions[funcName] = `bool ${funcName}(float inputValue) {\n${tests.join('\\n')}\n  return false;\n}`;\n    return `${funcName}(${needle})`;\n  }),\n  [Ops.Array]: createCompiler(\n    (args) => `vec${args.length}(${args.join(', ')})`\n  ),\n  [Ops.Color]: createCompiler((compiledArgs) => {\n    const rgb = compiledArgs.slice(0, 3).map((color) => `${color} / 255.0`);\n    if (compiledArgs.length === 3) {\n      return `vec4(${rgb.join(', ')}, 1.0)`;\n    }\n    const alpha = compiledArgs[3];\n    return `(${alpha} * vec4(${rgb.join(', ')}, 1.0))`;\n  }),\n  [Ops.Band]: createCompiler(([band, xOffset, yOffset], context) => {\n    if (!(GET_BAND_VALUE_FUNC in context.functions)) {\n      let ifBlocks = '';\n      const bandCount = context.bandCount || 1;\n      for (let i = 0; i < bandCount; i++) {\n        const colorIndex = Math.floor(i / 4);\n        let bandIndex = i % 4;\n        if (i === bandCount - 1 && bandIndex === 1) {\n          // LUMINANCE_ALPHA - band 1 assigned to rgb and band 2 assigned to alpha\n          bandIndex = 3;\n        }\n        const textureName = `${Uniforms.TILE_TEXTURE_ARRAY}[${colorIndex}]`;\n        ifBlocks += `  if (band == ${i + 1}.0) {\n    return texture2D(${textureName}, v_textureCoord + vec2(dx, dy))[${bandIndex}];\n  }\n`;\n      }\n\n      context.functions[\n        GET_BAND_VALUE_FUNC\n      ] = `float getBandValue(float band, float xOffset, float yOffset) {\n  float dx = xOffset / ${Uniforms.TEXTURE_PIXEL_WIDTH};\n  float dy = yOffset / ${Uniforms.TEXTURE_PIXEL_HEIGHT};\n${ifBlocks}\n}`;\n    }\n\n    return `${GET_BAND_VALUE_FUNC}(${band}, ${xOffset ?? '0.0'}, ${\n      yOffset ?? '0.0'\n    })`;\n  }),\n  [Ops.Palette]: (context, expression) => {\n    const [index, ...colors] = expression.args;\n    const numColors = colors.length;\n    const palette = new Uint8Array(numColors * 4);\n    for (let i = 0; i < colors.length; i++) {\n      const parsedValue = /** @type {string | Array<number>} */ (\n        /** @type {LiteralExpression} */ (colors[i]).value\n      );\n      const color = asArray(parsedValue);\n      const offset = i * 4;\n      palette[offset] = color[0];\n      palette[offset + 1] = color[1];\n      palette[offset + 2] = color[2];\n      palette[offset + 3] = color[3] * 255;\n    }\n    if (!context.paletteTextures) {\n      context.paletteTextures = [];\n    }\n    const paletteName = `${PALETTE_TEXTURE_ARRAY}[${context.paletteTextures.length}]`;\n    const paletteTexture = new PaletteTexture(paletteName, palette);\n    context.paletteTextures.push(paletteTexture);\n    const compiledIndex = compile(index, NumberType, context);\n    return `texture2D(${paletteName}, vec2((${compiledIndex} + 0.5) / ${numColors}.0, 0.5))`;\n  },\n  // TODO: unimplemented\n  // Ops.Number\n  // Ops.String\n  // Ops.Concat\n};\n\n/**\n * @param {Expression} expression The expression.\n * @param {number} returnType The expected return type.\n * @param {CompilationContext} context The compilation context.\n * @return {CompiledExpression} The compiled expression\n */\nfunction compile(expression, returnType, context) {\n  // operator\n  if (expression instanceof CallExpression) {\n    const compiler = compilers[expression.operator];\n    if (compiler === undefined) {\n      throw new Error(\n        `No compiler defined for this operator: ${JSON.stringify(\n          expression.operator\n        )}`\n      );\n    }\n    return compiler(context, expression, returnType);\n  }\n\n  if ((expression.type & NumberType) > 0) {\n    return numberToGlsl(/** @type {number} */ (expression.value));\n  }\n\n  if ((expression.type & BooleanType) > 0) {\n    return expression.value.toString();\n  }\n\n  if ((expression.type & StringType) > 0) {\n    return stringToGlsl(expression.value.toString());\n  }\n\n  if ((expression.type & ColorType) > 0) {\n    return colorToGlsl(\n      /** @type {Array<number> | string} */ (expression.value)\n    );\n  }\n\n  if ((expression.type & NumberArrayType) > 0) {\n    return arrayToGlsl(/** @type {Array<number>} */ (expression.value));\n  }\n\n  throw new Error(\n    `Unexpected expression ${expression.value} (expected type ${typeName(\n      returnType\n    )})`\n  );\n}\n","/**\n * Utilities for parsing literal style objects\n * @module ol/webgl/styleparser\n */\nimport {\n  BooleanType,\n  ColorType,\n  NumberArrayType,\n  NumberType,\n  StringType,\n  newParsingContext,\n} from '../expr/expression.js';\nimport {ShaderBuilder} from './ShaderBuilder.js';\nimport {\n  arrayToGlsl,\n  buildExpression,\n  getStringNumberEquivalent,\n  stringToGlsl,\n  uniformNameForVariable,\n} from '../expr/gpu.js';\nimport {asArray} from '../color.js';\n\n/**\n * Recursively parses a style expression and outputs a GLSL-compatible string. Takes in a compilation context that\n * will be read and modified during the parsing operation.\n * @param {import(\"../expr/gpu.js\").CompilationContext} compilationContext Compilation context\n * @param {import(\"../expr/expression.js\").EncodedExpression} value Value\n * @param {number} [expectedType] Expected final type (can be several types combined)\n * @return {string} GLSL-compatible output\n */\nexport function expressionToGlsl(compilationContext, value, expectedType) {\n  const parsingContext = newParsingContext();\n  parsingContext.style = compilationContext.style;\n  return buildExpression(\n    value,\n    expectedType,\n    parsingContext,\n    compilationContext\n  );\n}\n\n/**\n * Packs all components of a color into a two-floats array\n * @param {import(\"../color.js\").Color|string} color Color as array of numbers or string\n * @return {Array<number>} Vec2 array containing the color in compressed form\n */\nexport function packColor(color) {\n  const array = asArray(color);\n  const r = array[0] * 256;\n  const g = array[1];\n  const b = array[2] * 256;\n  const a = Math.round(array[3] * 255);\n  return [r + g, b + a];\n}\n\nconst UNPACK_COLOR_FN = `vec4 unpackColor(vec2 packedColor) {\n  return fract(packedColor[1] / 256.0) * vec4(\n    fract(floor(packedColor[0] / 256.0) / 256.0),\n    fract(packedColor[0] / 256.0),\n    fract(floor(packedColor[1] / 256.0) / 256.0),\n    1.0\n  );\n}`;\n\n/**\n * @param {number} type Value type\n * @return {1|2|3|4} The amount of components for this value\n */\nfunction getGlslSizeFromType(type) {\n  if (type === ColorType) {\n    return 2;\n  }\n  if (type === NumberArrayType) {\n    return 4;\n  }\n  return 1;\n}\n\n/**\n * @param {number} type Value type\n * @return {'float'|'vec2'|'vec3'|'vec4'} The corresponding GLSL type for this value\n */\nfunction getGlslTypeFromType(type) {\n  const size = getGlslSizeFromType(type);\n  if (size > 1) {\n    return /** @type {'vec2'|'vec3'|'vec4'} */ (`vec${size}`);\n  }\n  return 'float';\n}\n\n/**\n * see https://stackoverflow.com/questions/7616461/generate-a-hash-from-string-in-javascript\n * @param {Object|string} input The hash input, either an object or string\n * @return {string} Hash (if the object cannot be serialized, it is based on `getUid`)\n */\nexport function computeHash(input) {\n  const hash = JSON.stringify(input)\n    .split('')\n    .reduce((prev, curr) => (prev << 5) - prev + curr.charCodeAt(0), 0);\n  return (hash >>> 0).toString();\n}\n\n/**\n * @param {import(\"../style/webgl.js\").WebGLStyle} style Style\n * @param {ShaderBuilder} builder Shader builder\n * @param {import(\"../expr/gpu.js\").CompilationContext} vertContext Vertex shader compilation context\n * @param {'shape-'|'circle-'|'icon-'} prefix Properties prefix\n */\nfunction parseCommonSymbolProperties(style, builder, vertContext, prefix) {\n  let radius;\n  if (`${prefix}radius` in style && prefix !== 'icon-') {\n    radius = expressionToGlsl(\n      vertContext,\n      style[`${prefix}radius`],\n      NumberType\n    );\n  } else if (`${prefix}radius1` in style && prefix === 'shape-') {\n    radius = expressionToGlsl(\n      vertContext,\n      style[`${prefix}radius1`],\n      NumberType\n    );\n  }\n  if (radius !== undefined) {\n    if (`${prefix}stroke-width` in style) {\n      radius = `(${radius} + ${expressionToGlsl(\n        vertContext,\n        style[`${prefix}stroke-width`],\n        NumberType\n      )} * 0.5)`;\n    }\n    builder.setSymbolSizeExpression(`vec2(${radius} * 2. + 0.5)`); // adding some padding for antialiasing\n  }\n  if (`${prefix}scale` in style) {\n    const scale = expressionToGlsl(\n      vertContext,\n      style[`${prefix}scale`],\n      NumberType | NumberArrayType\n    );\n    builder.setSymbolSizeExpression(\n      `${builder.getSymbolSizeExpression()} * ${scale}`\n    );\n  }\n  if (`${prefix}displacement` in style) {\n    builder.setSymbolOffsetExpression(\n      expressionToGlsl(\n        vertContext,\n        style[`${prefix}displacement`],\n        NumberArrayType\n      )\n    );\n  }\n  if (`${prefix}rotation` in style) {\n    builder.setSymbolRotationExpression(\n      expressionToGlsl(vertContext, style[`${prefix}rotation`], NumberType)\n    );\n  }\n  if (`${prefix}rotate-with-view` in style) {\n    builder.setSymbolRotateWithView(!!style[`${prefix}rotate-with-view`]);\n  }\n}\n\n/**\n * @param {string} distanceField The distance field expression\n * @param {string|null} fillColor The fill color expression; null if no fill\n * @param {string|null} strokeColor The stroke color expression; null if no stroke\n * @param {string|null} strokeWidth The stroke width expression; null if no stroke\n * @param {string|null} opacity The opacity expression; null if no stroke\n * @return {string} The final color expression, based on the distance field and given params\n */\nfunction getColorFromDistanceField(\n  distanceField,\n  fillColor,\n  strokeColor,\n  strokeWidth,\n  opacity\n) {\n  let color = 'vec4(0.)';\n  if (fillColor !== null) {\n    color = fillColor;\n  }\n  if (strokeColor !== null && strokeWidth !== null) {\n    const strokeFillRatio = `smoothstep(-${strokeWidth} + 0.63, -${strokeWidth} - 0.58, ${distanceField})`;\n    color = `mix(${strokeColor}, ${color}, ${strokeFillRatio})`;\n  }\n  const shapeOpacity = `(1.0 - smoothstep(-0.63, 0.58, ${distanceField}))`;\n  let result = `${color} * ${shapeOpacity}`;\n  if (opacity !== null) {\n    result = `${result} * ${opacity}`;\n  }\n  return result;\n}\n\n/**\n * This will parse an image property provided by `<prefix>-src`\n * The image size expression in GLSL will be returned\n * @param {import(\"../style/webgl.js\").WebGLStyle} style Style\n * @param {ShaderBuilder} builder Shader builder\n * @param {Object<string,import(\"../webgl/Helper\").UniformValue>} uniforms Uniforms\n * @param {'icon-'|'fill-pattern-'|'stroke-pattern-'} prefix Property prefix\n * @param {string} textureId A identifier that will be used in the generated uniforms: `sample2d u_texture<id>` and `vec2 u_texture<id>_size`\n * @return {string} The image size expression\n */\nfunction parseImageProperties(style, builder, uniforms, prefix, textureId) {\n  const image = new Image();\n  let size;\n  image.crossOrigin =\n    style[`${prefix}cross-origin`] === undefined\n      ? 'anonymous'\n      : style[`${prefix}cross-origin`];\n  image.src = style[`${prefix}src`];\n\n  if (image.complete && image.width && image.height) {\n    size = arrayToGlsl([image.width, image.height]);\n  } else {\n    // the size is provided asynchronously using a uniform\n    uniforms[`u_texture${textureId}_size`] = () => {\n      return image.complete ? [image.width, image.height] : [0, 0];\n    };\n    builder.addUniform(`vec2 u_texture${textureId}_size`);\n    size = `u_texture${textureId}_size`;\n  }\n  uniforms[`u_texture${textureId}`] = image;\n  builder.addUniform(`sampler2D u_texture${textureId}`);\n  return size;\n}\n\n/**\n * This will parse an image's offset properties provided by `<prefix>-offset`, `<prefix>-offset-origin` and `<prefix>-size`\n * @param {import(\"../style/webgl.js\").WebGLStyle} style Style\n * @param {'icon-'|'fill-pattern-'|'stroke-pattern-'} prefix Property prefix\n * @param {import(\"../expr/gpu.js\").CompilationContext} context Shader compilation context (vertex or fragment)\n * @param {string} imageSize Pixel size of the full image as a GLSL expression\n * @param {string} sampleSize Pixel size of the sample in the image as a GLSL expression\n * @return {string} The offset expression\n */\nfunction parseImageOffsetProperties(\n  style,\n  prefix,\n  context,\n  imageSize,\n  sampleSize\n) {\n  let offsetExpression = expressionToGlsl(\n    context,\n    style[`${prefix}offset`],\n    NumberArrayType\n  );\n  if (`${prefix}offset-origin` in style) {\n    switch (style[`${prefix}offset-origin`]) {\n      case 'top-right':\n        offsetExpression = `vec2(${imageSize}.x, 0.) + ${sampleSize} * vec2(-1., 0.) + ${offsetExpression} * vec2(-1., 1.)`;\n        break;\n      case 'bottom-left':\n        offsetExpression = `vec2(0., ${imageSize}.y) + ${sampleSize} * vec2(0., -1.) + ${offsetExpression} * vec2(1., -1.)`;\n        break;\n      case 'bottom-right':\n        offsetExpression = `${imageSize} - ${sampleSize} - ${offsetExpression}`;\n        break;\n      default: // pass\n    }\n  }\n  return offsetExpression;\n}\n\n/**\n * @param {import(\"../style/webgl.js\").WebGLStyle} style Style\n * @param {ShaderBuilder} builder Shader builder\n * @param {Object<string,import(\"../webgl/Helper\").UniformValue>} uniforms Uniforms\n * @param {import(\"../expr/gpu.js\").CompilationContext} vertContext Vertex shader compilation context\n * @param {import(\"../expr/gpu.js\").CompilationContext} fragContext Fragment shader compilation context\n */\nfunction parseCircleProperties(\n  style,\n  builder,\n  uniforms,\n  vertContext,\n  fragContext\n) {\n  // this function takes in screen coordinates in pixels and returns the signed distance field\n  // (0 on the boundary, negative inside the circle, positive outside, values in pixels)\n  fragContext.functions[\n    'circleDistanceField'\n  ] = `float circleDistanceField(vec2 point, float radius) {\n  return length(point) - radius;\n}`;\n\n  parseCommonSymbolProperties(style, builder, vertContext, 'circle-');\n\n  // OPACITY\n  let opacity = null;\n  if ('circle-opacity' in style) {\n    opacity = expressionToGlsl(\n      fragContext,\n      style['circle-opacity'],\n      NumberType\n    );\n  }\n\n  // SCALE\n  let currentPoint = 'coordsPx';\n  if ('circle-scale' in style) {\n    const scale = expressionToGlsl(\n      fragContext,\n      style['circle-scale'],\n      NumberType | NumberArrayType\n    );\n    currentPoint = `coordsPx / ${scale}`;\n  }\n\n  // FILL COLOR\n  let fillColor = null;\n  if ('circle-fill-color' in style) {\n    fillColor = expressionToGlsl(\n      fragContext,\n      style['circle-fill-color'],\n      ColorType\n    );\n  }\n\n  // STROKE COLOR\n  let strokeColor = null;\n  if ('circle-stroke-color' in style) {\n    strokeColor = expressionToGlsl(\n      fragContext,\n      style['circle-stroke-color'],\n      ColorType\n    );\n  }\n\n  // RADIUS\n  let radius = expressionToGlsl(\n    fragContext,\n    style['circle-radius'],\n    NumberType\n  );\n\n  // STROKE WIDTH\n  let strokeWidth = null;\n  if ('circle-stroke-width' in style) {\n    strokeWidth = expressionToGlsl(\n      fragContext,\n      style['circle-stroke-width'],\n      NumberType\n    );\n    radius = `(${radius} + ${strokeWidth} * 0.5)`;\n  }\n\n  // FINAL COLOR\n  const distanceField = `circleDistanceField(${currentPoint}, ${radius})`;\n  const colorExpression = getColorFromDistanceField(\n    distanceField,\n    fillColor,\n    strokeColor,\n    strokeWidth,\n    opacity\n  );\n  builder.setSymbolColorExpression(colorExpression);\n}\n\n/**\n * @param {import(\"../style/webgl.js\").WebGLStyle} style Style\n * @param {ShaderBuilder} builder Shader builder\n * @param {Object<string,import(\"../webgl/Helper\").UniformValue>} uniforms Uniforms\n * @param {import(\"../expr/gpu.js\").CompilationContext} vertContext Vertex shader compilation context\n * @param {import(\"../expr/gpu.js\").CompilationContext} fragContext Fragment shader compilation context\n */\nfunction parseShapeProperties(\n  style,\n  builder,\n  uniforms,\n  vertContext,\n  fragContext\n) {\n  fragContext.functions['round'] = `float round(float v) {\n  return sign(v) * floor(abs(v) + 0.5);\n}`;\n\n  // these functions take in screen coordinates in pixels and returns the signed distance field\n  // (0 on the boundary, negative inside the circle, positive outside, values in pixels)\n  // inspired by https://github.com/zranger1/PixelblazePatterns/blob/master/Toolkit/sdf2d.md#n-sided-regular-polygon\n  fragContext.functions[\n    'starDistanceField'\n  ] = `float starDistanceField(vec2 point, float numPoints, float radiusIn, float radiusOut, float angle) {\n  float startAngle = -PI * 0.5 + angle; // tip starts upwards and rotates clockwise with angle\n  float c = cos(startAngle);\n  float s = sin(startAngle);\n  vec2 pointRotated = vec2(c * point.x - s * point.y, s * point.x + c * point.y); \n  float alpha = TWO_PI / numPoints; // the angle of one sector\n  float beta = atan(pointRotated.y, pointRotated.x);\n  float gamma = round(beta / alpha) * alpha; // angle in sector\n  c = cos(-gamma);\n  s = sin(-gamma);\n  vec2 inSector = vec2(c * pointRotated.x - s * pointRotated.y, abs(s * pointRotated.x + c * pointRotated.y));\n  vec2 tipToPoint = inSector + vec2(-radiusOut, 0.);\n  vec2 edgeNormal = vec2(radiusIn * sin(alpha * 0.5), -radiusIn * cos(alpha * 0.5) + radiusOut);\n  return dot(normalize(edgeNormal), tipToPoint);\n}`;\n  fragContext.functions[\n    'regularDistanceField'\n  ] = `float regularDistanceField(vec2 point, float numPoints, float radius, float angle) {\n  float startAngle = -PI * 0.5 + angle; // tip starts upwards and rotates clockwise with angle\n  float c = cos(startAngle);\n  float s = sin(startAngle);\n  vec2 pointRotated = vec2(c * point.x - s * point.y, s * point.x + c * point.y); \n  float alpha = TWO_PI / numPoints; // the angle of one sector\n  float radiusIn = radius * cos(PI / numPoints);\n  float beta = atan(pointRotated.y, pointRotated.x);\n  float gamma = round((beta - alpha * 0.5) / alpha) * alpha + alpha * 0.5; // angle in sector from mid\n  c = cos(-gamma);\n  s = sin(-gamma);\n  vec2 inSector = vec2(c * pointRotated.x - s * pointRotated.y, abs(s * pointRotated.x + c * pointRotated.y));\n  return inSector.x - radiusIn;\n}`;\n\n  parseCommonSymbolProperties(style, builder, vertContext, 'shape-');\n\n  // OPACITY\n  let opacity = null;\n  if ('shape-opacity' in style) {\n    opacity = expressionToGlsl(fragContext, style['shape-opacity'], NumberType);\n  }\n\n  // SCALE\n  let currentPoint = 'coordsPx';\n  if ('shape-scale' in style) {\n    const scale = expressionToGlsl(\n      fragContext,\n      style['shape-scale'],\n      NumberType | NumberArrayType\n    );\n    currentPoint = `coordsPx / ${scale}`;\n  }\n\n  // FILL COLOR\n  let fillColor = null;\n  if ('shape-fill-color' in style) {\n    fillColor = expressionToGlsl(\n      fragContext,\n      style['shape-fill-color'],\n      ColorType\n    );\n  }\n\n  // STROKE COLOR\n  let strokeColor = null;\n  if ('shape-stroke-color' in style) {\n    strokeColor = expressionToGlsl(\n      fragContext,\n      style['shape-stroke-color'],\n      ColorType\n    );\n  }\n\n  // STROKE WIDTH\n  let strokeWidth = null;\n  if ('shape-stroke-width' in style) {\n    strokeWidth = expressionToGlsl(\n      fragContext,\n      style['shape-stroke-width'],\n      NumberType\n    );\n  }\n\n  // SHAPE TYPE\n  const numPoints = expressionToGlsl(\n    fragContext,\n    style['shape-points'],\n    NumberType\n  );\n  let angle = '0.';\n  if ('shape-angle' in style) {\n    angle = expressionToGlsl(fragContext, style['shape-angle'], NumberType);\n  }\n  let shapeField;\n  if ('shape-radius' in style) {\n    let radius = expressionToGlsl(\n      fragContext,\n      style['shape-radius'],\n      NumberType\n    );\n    if (strokeWidth !== null) {\n      radius = `${radius} + ${strokeWidth} * 0.5`;\n    }\n    shapeField = `regularDistanceField(${currentPoint}, ${numPoints}, ${radius}, ${angle})`;\n  } else {\n    let radiusOuter = expressionToGlsl(\n      fragContext,\n      style['shape-radius1'],\n      NumberType\n    );\n    let radiusInner = expressionToGlsl(\n      fragContext,\n      style['shape-radius2'],\n      NumberType\n    );\n    if (strokeWidth !== null) {\n      radiusOuter = `${radiusOuter} + ${strokeWidth} * 0.5`;\n      radiusInner = `${radiusInner} + ${strokeWidth} * 0.5`;\n    }\n    shapeField = `starDistanceField(${currentPoint}, ${numPoints}, ${radiusInner}, ${radiusOuter}, ${angle})`;\n  }\n\n  // FINAL COLOR\n  const colorExpression = getColorFromDistanceField(\n    shapeField,\n    fillColor,\n    strokeColor,\n    strokeWidth,\n    opacity\n  );\n  builder.setSymbolColorExpression(colorExpression);\n}\n\n/**\n * @param {import(\"../style/webgl.js\").WebGLStyle} style Style\n * @param {ShaderBuilder} builder Shader builder\n * @param {Object<string,import(\"../webgl/Helper\").UniformValue>} uniforms Uniforms\n * @param {import(\"../expr/gpu.js\").CompilationContext} vertContext Vertex shader compilation context\n * @param {import(\"../expr/gpu.js\").CompilationContext} fragContext Fragment shader compilation context\n */\nfunction parseIconProperties(\n  style,\n  builder,\n  uniforms,\n  vertContext,\n  fragContext\n) {\n  // COLOR\n  let color = 'vec4(1.0)';\n  if ('icon-color' in style) {\n    color = expressionToGlsl(fragContext, style['icon-color'], ColorType);\n  }\n\n  // OPACITY\n  if ('icon-opacity' in style) {\n    color = `${color} * ${expressionToGlsl(\n      fragContext,\n      style['icon-opacity'],\n      NumberType\n    )}`;\n  }\n\n  // IMAGE & SIZE\n  const textureId = computeHash(style['icon-src']);\n  const sizeExpression = parseImageProperties(\n    style,\n    builder,\n    uniforms,\n    'icon-',\n    textureId\n  );\n  builder\n    .setSymbolColorExpression(\n      `${color} * samplePremultiplied(u_texture${textureId}, v_texCoord)`\n    )\n    .setSymbolSizeExpression(sizeExpression);\n\n  // override size if width/height were specified\n  if ('icon-width' in style && 'icon-height' in style) {\n    builder.setSymbolSizeExpression(\n      `vec2(${expressionToGlsl(\n        vertContext,\n        style['icon-width'],\n        NumberType\n      )}, ${expressionToGlsl(vertContext, style['icon-height'], NumberType)})`\n    );\n  }\n\n  // tex coord\n  if ('icon-offset' in style && 'icon-size' in style) {\n    const sampleSize = expressionToGlsl(\n      vertContext,\n      style['icon-size'],\n      NumberArrayType\n    );\n    const fullsize = builder.getSymbolSizeExpression();\n    builder.setSymbolSizeExpression(sampleSize);\n    const offset = parseImageOffsetProperties(\n      style,\n      'icon-',\n      vertContext,\n      'v_quadSizePx',\n      sampleSize\n    );\n    builder.setTextureCoordinateExpression(\n      `(vec4((${offset}).xyxy) + vec4(0., 0., ${sampleSize})) / (${fullsize}).xyxy`\n    );\n  }\n\n  parseCommonSymbolProperties(style, builder, vertContext, 'icon-');\n\n  if ('icon-anchor' in style) {\n    const anchor = expressionToGlsl(\n      vertContext,\n      style['icon-anchor'],\n      NumberArrayType\n    );\n    let scale = `1.0`;\n    if (`icon-scale` in style) {\n      scale = expressionToGlsl(\n        vertContext,\n        style[`icon-scale`],\n        NumberType | NumberArrayType\n      );\n    }\n    let shiftPx;\n    if (\n      style['icon-anchor-x-units'] === 'pixels' &&\n      style['icon-anchor-y-units'] === 'pixels'\n    ) {\n      shiftPx = `${anchor} * ${scale}`;\n    } else if (style['icon-anchor-x-units'] === 'pixels') {\n      shiftPx = `${anchor} * vec2(vec2(${scale}).x, v_quadSizePx.y)`;\n    } else if (style['icon-anchor-y-units'] === 'pixels') {\n      shiftPx = `${anchor} * vec2(v_quadSizePx.x, vec2(${scale}).x)`;\n    } else {\n      shiftPx = `${anchor} * v_quadSizePx`;\n    }\n    // default origin is top-left\n    let offsetPx = `v_quadSizePx * vec2(0.5, -0.5) + ${shiftPx} * vec2(-1., 1.)`;\n    if ('icon-anchor-origin' in style) {\n      switch (style['icon-anchor-origin']) {\n        case 'top-right':\n          offsetPx = `v_quadSizePx * -0.5 + ${shiftPx}`;\n          break;\n        case 'bottom-left':\n          offsetPx = `v_quadSizePx * 0.5 - ${shiftPx}`;\n          break;\n        case 'bottom-right':\n          offsetPx = `v_quadSizePx * vec2(-0.5, 0.5) + ${shiftPx} * vec2(1., -1.)`;\n          break;\n        default: // pass\n      }\n    }\n    builder.setSymbolOffsetExpression(\n      `${builder.getSymbolOffsetExpression()} + ${offsetPx}`\n    );\n  }\n}\n\n/**\n * @param {import(\"../style/webgl.js\").WebGLStyle} style Style\n * @param {ShaderBuilder} builder Shader Builder\n * @param {Object<string,import(\"../webgl/Helper\").UniformValue>} uniforms Uniforms\n * @param {import(\"../expr/gpu.js\").CompilationContext} vertContext Vertex shader compilation context\n * @param {import(\"../expr/gpu.js\").CompilationContext} fragContext Fragment shader compilation context\n */\nfunction parseStrokeProperties(\n  style,\n  builder,\n  uniforms,\n  vertContext,\n  fragContext\n) {\n  if ('stroke-color' in style) {\n    builder.setStrokeColorExpression(\n      expressionToGlsl(fragContext, style['stroke-color'], ColorType)\n    );\n  }\n  if ('stroke-pattern-src' in style) {\n    const textureId = computeHash(style['stroke-pattern-src']);\n    const sizeExpression = parseImageProperties(\n      style,\n      builder,\n      uniforms,\n      'stroke-pattern-',\n      textureId\n    );\n    let sampleSizeExpression = sizeExpression;\n    let offsetExpression = 'vec2(0.)';\n    if ('stroke-pattern-offset' in style && 'stroke-pattern-size' in style) {\n      sampleSizeExpression = expressionToGlsl(\n        fragContext,\n        style[`stroke-pattern-size`],\n        NumberArrayType\n      );\n      offsetExpression = parseImageOffsetProperties(\n        style,\n        'stroke-pattern-',\n        fragContext,\n        sizeExpression,\n        sampleSizeExpression\n      );\n    }\n    let spacingExpression = '0.';\n    if ('stroke-pattern-spacing' in style) {\n      spacingExpression = expressionToGlsl(\n        fragContext,\n        style['stroke-pattern-spacing'],\n        NumberType\n      );\n    }\n    fragContext.functions[\n      'sampleStrokePattern'\n    ] = `vec4 sampleStrokePattern(sampler2D texture, vec2 textureSize, vec2 textureOffset, vec2 sampleSize, float spacingPx, float currentLengthPx, float currentRadiusRatio) {\n      float currentLengthScaled = currentLengthPx * sampleSize.y / v_width;\n      float spacingScaled = spacingPx * sampleSize.y / v_width;\n      float uCoordPx = mod(currentLengthScaled, (sampleSize.x + spacingScaled));\n      float vCoordPx = (currentRadiusRatio * 0.5 + 0.5) * sampleSize.y;\n      vec2 texCoord = (vec2(uCoordPx, vCoordPx) + textureOffset) / textureSize;\n      return uCoordPx > sampleSize.x ? vec4(0.) : samplePremultiplied(texture, texCoord);\n    }`;\n    const textureName = `u_texture${textureId}`;\n    let tintExpression = '1.';\n    if ('stroke-color' in style) {\n      tintExpression = builder.getStrokeColorExpression();\n    }\n    builder.setStrokeColorExpression(\n      `${tintExpression} * sampleStrokePattern(${textureName}, ${sizeExpression}, ${offsetExpression}, ${sampleSizeExpression}, ${spacingExpression}, currentLengthPx, currentRadiusRatio)`\n    );\n  }\n\n  if ('stroke-width' in style) {\n    builder.setStrokeWidthExpression(\n      expressionToGlsl(vertContext, style['stroke-width'], NumberType)\n    );\n  }\n\n  if ('stroke-offset' in style) {\n    builder.setStrokeOffsetExpression(\n      expressionToGlsl(vertContext, style['stroke-offset'], NumberType)\n    );\n  }\n\n  if ('stroke-line-cap' in style) {\n    builder.setStrokeCapExpression(\n      expressionToGlsl(vertContext, style['stroke-line-cap'], StringType)\n    );\n  }\n\n  if ('stroke-line-join' in style) {\n    builder.setStrokeJoinExpression(\n      expressionToGlsl(vertContext, style['stroke-line-join'], StringType)\n    );\n  }\n\n  if ('stroke-miter-limit' in style) {\n    builder.setStrokeMiterLimitExpression(\n      expressionToGlsl(vertContext, style['stroke-miter-limit'], NumberType)\n    );\n  }\n\n  if ('stroke-line-dash' in style) {\n    fragContext.functions[\n      'getSingleDashDistance'\n    ] = `float getSingleDashDistance(float distance, float radius, float dashOffset, float dashLength, float dashLengthTotal, float capType) {\n  float localDistance = mod(distance, dashLengthTotal);\n  float distanceSegment = abs(localDistance - dashOffset - dashLength * 0.5) - dashLength * 0.5;\n  distanceSegment = min(distanceSegment, dashLengthTotal - localDistance);\n  if (capType == ${stringToGlsl('square')}) {\n    distanceSegment -= v_width * 0.5;\n  } else if (capType == ${stringToGlsl('round')}) {\n    distanceSegment = min(distanceSegment, sqrt(distanceSegment * distanceSegment + radius * radius) - v_width * 0.5);\n  }\n  return distanceSegment;\n}`;\n\n    let dashPattern = style['stroke-line-dash'].map((v) =>\n      expressionToGlsl(fragContext, v, NumberType)\n    );\n    // if pattern has odd length, concatenate it with itself to be even\n    if (dashPattern.length % 2 === 1) {\n      dashPattern = [...dashPattern, ...dashPattern];\n    }\n\n    let offsetExpression = '0.';\n    if ('stroke-line-dash-offset' in style) {\n      offsetExpression = expressionToGlsl(\n        vertContext,\n        style['stroke-line-dash-offset'],\n        NumberType\n      );\n    }\n\n    // define a function for this dash specifically\n    const uniqueDashKey = computeHash(style['stroke-line-dash']);\n    const dashFunctionName = `dashDistanceField_${uniqueDashKey}`;\n\n    const dashLengthsDef = dashPattern.map(\n      (v, i) => `float dashLength${i} = ${v};`\n    );\n    const totalLengthDef = dashPattern\n      .map((v, i) => `dashLength${i}`)\n      .join(' + ');\n    let currentDashOffset = '0.';\n    let distanceExpression = `getSingleDashDistance(distance, radius, ${currentDashOffset}, dashLength0, totalDashLength, capType)`;\n    for (let i = 2; i < dashPattern.length; i += 2) {\n      currentDashOffset = `${currentDashOffset} + dashLength${\n        i - 2\n      } + dashLength${i - 1}`;\n      distanceExpression = `min(${distanceExpression}, getSingleDashDistance(distance, radius, ${currentDashOffset}, dashLength${i}, totalDashLength, capType))`;\n    }\n\n    fragContext.functions[\n      dashFunctionName\n    ] = `float ${dashFunctionName}(float distance, float radius, float capType) {\n  ${dashLengthsDef.join('\\n  ')}\n  float totalDashLength = ${totalLengthDef};\n  return ${distanceExpression};\n}`;\n    builder.setStrokeDistanceFieldExpression(\n      `${dashFunctionName}(currentLengthPx + ${offsetExpression}, currentRadiusPx, capType)`\n    );\n  }\n}\n\n/**\n * @param {import(\"../style/webgl.js\").WebGLStyle} style Style\n * @param {ShaderBuilder} builder Shader Builder\n * @param {Object<string,import(\"../webgl/Helper\").UniformValue>} uniforms Uniforms\n * @param {import(\"../expr/gpu.js\").CompilationContext} vertContext Vertex shader compilation context\n * @param {import(\"../expr/gpu.js\").CompilationContext} fragContext Fragment shader compilation context\n */\nfunction parseFillProperties(\n  style,\n  builder,\n  uniforms,\n  vertContext,\n  fragContext\n) {\n  if ('fill-color' in style) {\n    builder.setFillColorExpression(\n      expressionToGlsl(fragContext, style['fill-color'], ColorType)\n    );\n  }\n  if ('fill-pattern-src' in style) {\n    const textureId = computeHash(style['fill-pattern-src']);\n    const sizeExpression = parseImageProperties(\n      style,\n      builder,\n      uniforms,\n      'fill-pattern-',\n      textureId\n    );\n    let sampleSizeExpression = sizeExpression;\n    let offsetExpression = 'vec2(0.)';\n    if ('fill-pattern-offset' in style && 'fill-pattern-size' in style) {\n      sampleSizeExpression = expressionToGlsl(\n        fragContext,\n        style[`fill-pattern-size`],\n        NumberArrayType\n      );\n      offsetExpression = parseImageOffsetProperties(\n        style,\n        'fill-pattern-',\n        fragContext,\n        sizeExpression,\n        sampleSizeExpression\n      );\n    }\n    fragContext.functions[\n      'sampleFillPattern'\n    ] = `vec4 sampleFillPattern(sampler2D texture, vec2 textureSize, vec2 textureOffset, vec2 sampleSize, vec2 pxOrigin, vec2 pxPosition) {\n  float scaleRatio = pow(2., mod(u_zoom + 0.5, 1.) - 0.5);\n  vec2 samplePos = mod((pxPosition - pxOrigin) / scaleRatio, sampleSize);\n  samplePos.y = sampleSize.y - samplePos.y; // invert y axis so that images appear upright\n  return samplePremultiplied(texture, (samplePos + textureOffset) / textureSize);\n}`;\n    const textureName = `u_texture${textureId}`;\n    let tintExpression = '1.';\n    if ('fill-color' in style) {\n      tintExpression = builder.getFillColorExpression();\n    }\n    builder.setFillColorExpression(\n      `${tintExpression} * sampleFillPattern(${textureName}, ${sizeExpression}, ${offsetExpression}, ${sampleSizeExpression}, pxOrigin, pxPos)`\n    );\n  }\n}\n\n/**\n * @typedef {Object} StyleParseResult\n * @property {ShaderBuilder} builder Shader builder pre-configured according to a given style\n * @property {import(\"../render/webgl/VectorStyleRenderer.js\").UniformDefinitions} uniforms Uniform definitions\n * @property {import(\"../render/webgl/VectorStyleRenderer.js\").AttributeDefinitions} attributes Attribute definitions\n */\n\n/**\n * Parses a {@link import(\"../style/webgl.js\").WebGLStyle} object and returns a {@link ShaderBuilder}\n * object that has been configured according to the given style, as well as `attributes` and `uniforms`\n * arrays to be fed to the `WebGLPointsRenderer` class.\n *\n * Also returns `uniforms` and `attributes` properties as expected by the\n * {@link module:ol/renderer/webgl/PointsLayer~WebGLPointsLayerRenderer}.\n *\n * @param {import(\"../style/webgl.js\").WebGLStyle} style Literal style.\n * @return {StyleParseResult} Result containing shader params, attributes and uniforms.\n */\nexport function parseLiteralStyle(style) {\n  /**\n   * @type {import(\"../expr/gpu.js\").CompilationContext}\n   */\n  const vertContext = {\n    inFragmentShader: false,\n    properties: {},\n    variables: {},\n    functions: {},\n    style,\n  };\n\n  /**\n   * @type {import(\"../expr/gpu.js\").CompilationContext}\n   */\n  const fragContext = {\n    inFragmentShader: true,\n    variables: vertContext.variables,\n    properties: {},\n    functions: {},\n    style,\n  };\n\n  const builder = new ShaderBuilder();\n\n  /** @type {Object<string,import(\"../webgl/Helper\").UniformValue>} */\n  const uniforms = {};\n\n  if ('icon-src' in style) {\n    parseIconProperties(style, builder, uniforms, vertContext, fragContext);\n  } else if ('shape-points' in style) {\n    parseShapeProperties(style, builder, uniforms, vertContext, fragContext);\n  } else if ('circle-radius' in style) {\n    parseCircleProperties(style, builder, uniforms, vertContext, fragContext);\n  }\n  parseStrokeProperties(style, builder, uniforms, vertContext, fragContext);\n  parseFillProperties(style, builder, uniforms, vertContext, fragContext);\n\n  if (style.filter) {\n    const parsedFilter = expressionToGlsl(\n      fragContext,\n      style.filter,\n      BooleanType\n    );\n    builder.setFragmentDiscardExpression(`!${parsedFilter}`);\n  }\n\n  // define one uniform per variable\n  Object.keys(fragContext.variables).forEach(function (varName) {\n    const variable = fragContext.variables[varName];\n    const uniformName = uniformNameForVariable(variable.name);\n    builder.addUniform(`${getGlslTypeFromType(variable.type)} ${uniformName}`);\n\n    let callback;\n    if (variable.type === StringType) {\n      callback = () =>\n        getStringNumberEquivalent(\n          /** @type {string} */ (style.variables[variable.name])\n        );\n    } else if (variable.type === ColorType) {\n      callback = () =>\n        packColor([\n          ...asArray(\n            /** @type {string|Array<number>} */ (\n              style.variables[variable.name]\n            ) || '#eee'\n          ),\n        ]);\n    } else if (variable.type === BooleanType) {\n      callback = () =>\n        /** @type {boolean} */ (style.variables[variable.name]) ? 1.0 : 0.0;\n    } else {\n      callback = () => /** @type {number} */ (style.variables[variable.name]);\n    }\n    uniforms[uniformName] = callback;\n  });\n\n  // for each feature attribute used in the fragment shader, define a varying that will be used to pass data\n  // from the vertex to the fragment shader, as well as an attribute in the vertex shader (if not already present)\n  Object.keys(fragContext.properties).forEach(function (propName) {\n    const property = fragContext.properties[propName];\n    if (!vertContext.properties[propName]) {\n      vertContext.properties[propName] = property;\n    }\n    let type = getGlslTypeFromType(property.type);\n    let expression = `a_prop_${property.name}`;\n    if (property.type === ColorType) {\n      type = 'vec4';\n      expression = `unpackColor(${expression})`;\n      builder.addVertexShaderFunction(UNPACK_COLOR_FN);\n    }\n    builder.addVarying(`v_prop_${property.name}`, type, expression);\n  });\n\n  // for each feature attribute used in the vertex shader, define an attribute in the vertex shader.\n  Object.keys(vertContext.properties).forEach(function (propName) {\n    const property = vertContext.properties[propName];\n    builder.addAttribute(\n      `${getGlslTypeFromType(property.type)} a_prop_${property.name}`\n    );\n  });\n\n  const attributes = Object.keys(vertContext.properties).map(function (\n    propName\n  ) {\n    const property = vertContext.properties[propName];\n    let callback;\n    if (property.evaluator) {\n      callback = property.evaluator;\n    } else if (property.type === StringType) {\n      callback = (feature) =>\n        getStringNumberEquivalent(feature.get(property.name));\n    } else if (property.type === ColorType) {\n      callback = (feature) =>\n        packColor([...asArray(feature.get(property.name) || '#eee')]);\n    } else if (property.type === BooleanType) {\n      callback = (feature) => (feature.get(property.name) ? 1.0 : 0.0);\n    } else {\n      callback = (feature) => feature.get(property.name);\n    }\n\n    return {\n      name: property.name,\n      size: getGlslSizeFromType(property.type),\n      callback,\n    };\n  });\n\n  // add functions that were collected in the compilation contexts\n  for (const functionName in vertContext.functions) {\n    builder.addVertexShaderFunction(vertContext.functions[functionName]);\n  }\n  for (const functionName in fragContext.functions) {\n    builder.addFragmentShaderFunction(fragContext.functions[functionName]);\n  }\n\n  return {\n    builder: builder,\n    attributes: attributes.reduce(\n      (prev, curr) => ({\n        ...prev,\n        [curr.name]: {callback: curr.callback, size: curr.size},\n      }),\n      {}\n    ),\n    uniforms: uniforms,\n  };\n}\n","/**\n * @module ol/layer/WebGLTile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport LayerProperty from '../layer/Property.js';\nimport WebGLTileLayerRenderer, {\n  Attributes,\n  Uniforms,\n} from '../renderer/webgl/TileLayer.js';\nimport {ColorType, NumberType} from '../expr/expression.js';\nimport {\n  PALETTE_TEXTURE_ARRAY,\n  getStringNumberEquivalent,\n  newCompilationContext,\n  uniformNameForVariable,\n} from '../expr/gpu.js';\nimport {expressionToGlsl} from '../webgl/styleparser.js';\n\n/**\n * @typedef {import(\"../source/DataTile.js\").default|import(\"../source/TileImage.js\").default} SourceType\n */\n\n/**\n * @typedef {Object} Style\n * Translates tile data to rendered pixels.\n *\n * @property {Object<string, (string|number)>} [variables] Style variables.  Each variable must hold a number or string.  These\n * variables can be used in the `color`, `brightness`, `contrast`, `exposure`, `saturation` and `gamma`\n * {@link import(\"../expr/expression.js\").ExpressionValue expressions}, using the `['var', 'varName']` operator.\n * To update style variables, use the {@link import(\"./WebGLTile.js\").default#updateStyleVariables} method.\n * @property {import(\"../expr/expression.js\").ExpressionValue} [color] An expression applied to color values.\n * @property {import(\"../expr/expression.js\").ExpressionValue} [brightness=0] Value used to decrease or increase\n * the layer brightness.  Values range from -1 to 1.\n * @property {import(\"../expr/expression.js\").ExpressionValue} [contrast=0] Value used to decrease or increase\n * the layer contrast.  Values range from -1 to 1.\n * @property {import(\"../expr/expression.js\").ExpressionValue} [exposure=0] Value used to decrease or increase\n * the layer exposure.  Values range from -1 to 1.\n * @property {import(\"../expr/expression.js\").ExpressionValue} [saturation=0] Value used to decrease or increase\n * the layer saturation.  Values range from -1 to 1.\n * @property {import(\"../expr/expression.js\").ExpressionValue} [gamma=1] Apply a gamma correction to the layer.\n * Values range from 0 to infinity.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Style} [style] Style to apply to the layer.\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {SourceType} [source] Source for this layer.\n * @property {Array<SourceType>|function(import(\"../extent.js\").Extent, number):Array<SourceType>} [sources] Array\n * of sources for this layer. Takes precedence over `source`. Can either be an array of sources, or a function that\n * expects an extent and a resolution (in view projection units per pixel) and returns an array of sources. See\n * {@link module:ol/source.sourcesFromTileGrid} for a helper function to generate sources that are organized in a\n * pyramid following the same pattern as a tile grid. **Note:** All sources must have the same band count and content.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map~Map#addLayer}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {number} [cacheSize=512] The internal texture cache size.  This needs to be large enough to render\n * two zoom levels worth of tiles.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} ParsedStyle\n * @property {string} vertexShader The vertex shader.\n * @property {string} fragmentShader The fragment shader.\n * @property {Object<string,import(\"../webgl/Helper.js\").UniformValue>} uniforms Uniform definitions.\n * @property {Array<import(\"../webgl/PaletteTexture.js\").default>} paletteTextures Palette textures.\n */\n\n/**\n * @param {Style} style The layer style.\n * @param {number} [bandCount] The number of bands.\n * @return {ParsedStyle} Shaders and uniforms generated from the style.\n */\nfunction parseStyle(style, bandCount) {\n  const vertexShader = `\n    attribute vec2 ${Attributes.TEXTURE_COORD};\n    uniform mat4 ${Uniforms.TILE_TRANSFORM};\n    uniform float ${Uniforms.TEXTURE_PIXEL_WIDTH};\n    uniform float ${Uniforms.TEXTURE_PIXEL_HEIGHT};\n    uniform float ${Uniforms.TEXTURE_RESOLUTION};\n    uniform float ${Uniforms.TEXTURE_ORIGIN_X};\n    uniform float ${Uniforms.TEXTURE_ORIGIN_Y};\n    uniform float ${Uniforms.DEPTH};\n\n    varying vec2 v_textureCoord;\n    varying vec2 v_mapCoord;\n\n    void main() {\n      v_textureCoord = ${Attributes.TEXTURE_COORD};\n      v_mapCoord = vec2(\n        ${Uniforms.TEXTURE_ORIGIN_X} + ${Uniforms.TEXTURE_RESOLUTION} * ${Uniforms.TEXTURE_PIXEL_WIDTH} * v_textureCoord[0],\n        ${Uniforms.TEXTURE_ORIGIN_Y} - ${Uniforms.TEXTURE_RESOLUTION} * ${Uniforms.TEXTURE_PIXEL_HEIGHT} * v_textureCoord[1]\n      );\n      gl_Position = ${Uniforms.TILE_TRANSFORM} * vec4(${Attributes.TEXTURE_COORD}, ${Uniforms.DEPTH}, 1.0);\n    }\n  `;\n\n  /**\n   * @type {import(\"../expr/gpu.js\").CompilationContext}\n   */\n  const context = {\n    ...newCompilationContext(),\n    inFragmentShader: true,\n    bandCount: bandCount,\n    style: style,\n  };\n\n  const pipeline = [];\n\n  if (style.color !== undefined) {\n    const color = expressionToGlsl(context, style.color, ColorType);\n    pipeline.push(`color = ${color};`);\n  }\n\n  if (style.contrast !== undefined) {\n    const contrast = expressionToGlsl(context, style.contrast, NumberType);\n    pipeline.push(\n      `color.rgb = clamp((${contrast} + 1.0) * color.rgb - (${contrast} / 2.0), vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0));`\n    );\n  }\n\n  if (style.exposure !== undefined) {\n    const exposure = expressionToGlsl(context, style.exposure, NumberType);\n    pipeline.push(\n      `color.rgb = clamp((${exposure} + 1.0) * color.rgb, vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0));`\n    );\n  }\n\n  if (style.saturation !== undefined) {\n    const saturation = expressionToGlsl(context, style.saturation, NumberType);\n    pipeline.push(`\n      float saturation = ${saturation} + 1.0;\n      float sr = (1.0 - saturation) * 0.2126;\n      float sg = (1.0 - saturation) * 0.7152;\n      float sb = (1.0 - saturation) * 0.0722;\n      mat3 saturationMatrix = mat3(\n        sr + saturation, sr, sr,\n        sg, sg + saturation, sg,\n        sb, sb, sb + saturation\n      );\n      color.rgb = clamp(saturationMatrix * color.rgb, vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0));\n    `);\n  }\n\n  if (style.gamma !== undefined) {\n    const gamma = expressionToGlsl(context, style.gamma, NumberType);\n    pipeline.push(`color.rgb = pow(color.rgb, vec3(1.0 / ${gamma}));`);\n  }\n\n  if (style.brightness !== undefined) {\n    const brightness = expressionToGlsl(context, style.brightness, NumberType);\n    pipeline.push(\n      `color.rgb = clamp(color.rgb + ${brightness}, vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0));`\n    );\n  }\n\n  /** @type {Object<string,import(\"../webgl/Helper\").UniformValue>} */\n  const uniforms = {};\n\n  const numVariables = Object.keys(context.variables).length;\n  if (numVariables > 1 && !style.variables) {\n    throw new Error(\n      `Missing variables in style (expected ${context.variables})`\n    );\n  }\n\n  for (let i = 0; i < numVariables; ++i) {\n    const variable = context.variables[Object.keys(context.variables)[i]];\n    if (!(variable.name in style.variables)) {\n      throw new Error(`Missing '${variable.name}' in style variables`);\n    }\n    const uniformName = uniformNameForVariable(variable.name);\n    uniforms[uniformName] = function () {\n      let value = style.variables[variable.name];\n      if (typeof value === 'string') {\n        value = getStringNumberEquivalent(value);\n      }\n      return value !== undefined ? value : -9999999; // to avoid matching with the first string literal\n    };\n  }\n\n  const uniformDeclarations = Object.keys(uniforms).map(function (name) {\n    return `uniform float ${name};`;\n  });\n\n  const textureCount = Math.ceil(bandCount / 4);\n  uniformDeclarations.push(\n    `uniform sampler2D ${Uniforms.TILE_TEXTURE_ARRAY}[${textureCount}];`\n  );\n\n  if (context.paletteTextures) {\n    uniformDeclarations.push(\n      `uniform sampler2D ${PALETTE_TEXTURE_ARRAY}[${context.paletteTextures.length}];`\n    );\n  }\n\n  const functionDefintions = Object.keys(context.functions).map(function (\n    name\n  ) {\n    return context.functions[name];\n  });\n\n  const fragmentShader = `\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    #else\n    precision mediump float;\n    #endif\n\n    varying vec2 v_textureCoord;\n    varying vec2 v_mapCoord;\n    uniform vec4 ${Uniforms.RENDER_EXTENT};\n    uniform float ${Uniforms.TRANSITION_ALPHA};\n    uniform float ${Uniforms.TEXTURE_PIXEL_WIDTH};\n    uniform float ${Uniforms.TEXTURE_PIXEL_HEIGHT};\n    uniform float ${Uniforms.RESOLUTION};\n    uniform float ${Uniforms.ZOOM};\n\n    ${uniformDeclarations.join('\\n')}\n\n    ${functionDefintions.join('\\n')}\n\n    void main() {\n      if (\n        v_mapCoord[0] < ${Uniforms.RENDER_EXTENT}[0] ||\n        v_mapCoord[1] < ${Uniforms.RENDER_EXTENT}[1] ||\n        v_mapCoord[0] > ${Uniforms.RENDER_EXTENT}[2] ||\n        v_mapCoord[1] > ${Uniforms.RENDER_EXTENT}[3]\n      ) {\n        discard;\n      }\n\n      vec4 color = texture2D(${\n        Uniforms.TILE_TEXTURE_ARRAY\n      }[0],  v_textureCoord);\n\n      ${pipeline.join('\\n')}\n\n      gl_FragColor = color;\n      gl_FragColor.rgb *= gl_FragColor.a;\n      gl_FragColor *= ${Uniforms.TRANSITION_ALPHA};\n    }`;\n\n  return {\n    vertexShader: vertexShader,\n    fragmentShader: fragmentShader,\n    uniforms: uniforms,\n    paletteTextures: context.paletteTextures,\n  };\n}\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @extends BaseTileLayer<SourceType, WebGLTileLayerRenderer>\n * @fires import(\"../render/Event.js\").RenderEvent\n * @api\n */\nclass WebGLTileLayer extends BaseTileLayer {\n  /**\n   * @param {Options} options Tile layer options.\n   */\n  constructor(options) {\n    options = options ? Object.assign({}, options) : {};\n\n    const style = options.style || {};\n    delete options.style;\n\n    const cacheSize = options.cacheSize;\n    delete options.cacheSize;\n\n    super(options);\n\n    /**\n     * @type {Array<SourceType>|function(import(\"../extent.js\").Extent, number):Array<SourceType>}\n     * @private\n     */\n    this.sources_ = options.sources;\n\n    /**\n     * @type {SourceType|null}\n     * @private\n     */\n    this.renderedSource_ = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @type {Style}\n     * @private\n     */\n    this.style_ = style;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = cacheSize;\n\n    /**\n     * @type {Object<string, (string|number)>}\n     * @private\n     */\n    this.styleVariables_ = this.style_.variables || {};\n\n    this.addChangeListener(LayerProperty.SOURCE, this.handleSourceUpdate_);\n  }\n\n  /**\n   * Gets the sources for this layer, for a given extent and resolution.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @return {Array<SourceType>} Sources.\n   */\n  getSources(extent, resolution) {\n    const source = this.getSource();\n    return this.sources_\n      ? typeof this.sources_ === 'function'\n        ? this.sources_(extent, resolution)\n        : this.sources_\n      : source\n      ? [source]\n      : [];\n  }\n\n  /**\n   * @return {SourceType} The source being rendered.\n   */\n  getRenderSource() {\n    return this.renderedSource_ || this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    const source = this.getRenderSource();\n    return source ? source.getState() : 'undefined';\n  }\n\n  /**\n   * @private\n   */\n  handleSourceUpdate_() {\n    if (this.hasRenderer()) {\n      this.getRenderer().clearCache();\n    }\n    if (this.getSource()) {\n      this.setStyle(this.style_);\n    }\n  }\n\n  /**\n   * @private\n   * @return {number} The number of source bands.\n   */\n  getSourceBandCount_() {\n    const max = Number.MAX_SAFE_INTEGER;\n    const sources = this.getSources([-max, -max, max, max], max);\n    return sources && sources.length && 'bandCount' in sources[0]\n      ? sources[0].bandCount\n      : 4;\n  }\n\n  createRenderer() {\n    const parsedStyle = parseStyle(this.style_, this.getSourceBandCount_());\n\n    return new WebGLTileLayerRenderer(this, {\n      vertexShader: parsedStyle.vertexShader,\n      fragmentShader: parsedStyle.fragmentShader,\n      uniforms: parsedStyle.uniforms,\n      cacheSize: this.cacheSize_,\n      paletteTextures: parsedStyle.paletteTextures,\n    });\n  }\n\n  /**\n   * @param {import(\"../Map\").FrameState} frameState Frame state.\n   * @param {Array<SourceType>} sources Sources.\n   * @return {HTMLElement} Canvas.\n   */\n  renderSources(frameState, sources) {\n    const layerRenderer = this.getRenderer();\n    let canvas;\n    for (let i = 0, ii = sources.length; i < ii; ++i) {\n      this.renderedSource_ = sources[i];\n      if (layerRenderer.prepareFrame(frameState)) {\n        canvas = layerRenderer.renderFrame(frameState);\n      }\n    }\n    return canvas;\n  }\n\n  /**\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement} The rendered element.\n   */\n  render(frameState, target) {\n    this.rendered = true;\n    const viewState = frameState.viewState;\n    const sources = this.getSources(frameState.extent, viewState.resolution);\n    let ready = true;\n    for (let i = 0, ii = sources.length; i < ii; ++i) {\n      const source = sources[i];\n      const sourceState = source.getState();\n      if (sourceState == 'loading') {\n        const onChange = () => {\n          if (source.getState() == 'ready') {\n            source.removeEventListener('change', onChange);\n            this.changed();\n          }\n        };\n        source.addEventListener('change', onChange);\n      }\n      ready = ready && sourceState == 'ready';\n    }\n    const canvas = this.renderSources(frameState, sources);\n    if (this.getRenderer().renderComplete && ready) {\n      // Fully rendered, done.\n      this.renderedResolution_ = viewState.resolution;\n      return canvas;\n    }\n    // Render sources from previously fully rendered frames\n    if (this.renderedResolution_ > 0.5 * viewState.resolution) {\n      const altSources = this.getSources(\n        frameState.extent,\n        this.renderedResolution_\n      ).filter((source) => !sources.includes(source));\n      if (altSources.length > 0) {\n        return this.renderSources(frameState, altSources);\n      }\n    }\n    return canvas;\n  }\n\n  /**\n   * Update the layer style.  The `updateStyleVariables` function is a more efficient\n   * way to update layer rendering.  In cases where the whole style needs to be updated,\n   * this method may be called instead.  Note that calling this method will also replace\n   * any previously set variables, so the new style also needs to include new variables,\n   * if needed.\n   * @param {Style} style The new style.\n   */\n  setStyle(style) {\n    this.styleVariables_ = style.variables || {};\n    this.style_ = style;\n    const parsedStyle = parseStyle(this.style_, this.getSourceBandCount_());\n    const renderer = this.getRenderer();\n    renderer.reset({\n      vertexShader: parsedStyle.vertexShader,\n      fragmentShader: parsedStyle.fragmentShader,\n      uniforms: parsedStyle.uniforms,\n      paletteTextures: parsedStyle.paletteTextures,\n    });\n    this.changed();\n  }\n\n  /**\n   * Update any variables used by the layer style and trigger a re-render.\n   * @param {Object<string, number>} variables Variables to update.\n   * @api\n   */\n  updateStyleVariables(variables) {\n    Object.assign(this.styleVariables_, variables);\n    this.changed();\n  }\n}\n\n/**\n * Clean up underlying WebGL resources.\n * @function\n * @api\n */\nWebGLTileLayer.prototype.dispose;\n\nexport default WebGLTileLayer;\n","/**\n * Computes the convex hull of a binary image using Andrew's Monotone Chain Algorithm\n * http://www.algorithmist.com/index.php/Monotone_Chain_Convex_Hull\n *\n * @param points - An array of points.\n * @param options - MCCH Algorithm options.\n * @return Coordinates of the convex hull in clockwise order\n */\nexport default function monotoneChainConvexHull(points, options = {}) {\n    const { sorted } = options;\n    if (!sorted) {\n        points = points.slice().sort(byXThenY);\n    }\n    const n = points.length;\n    const result = new Array(n * 2);\n    let k = 0;\n    for (let i = 0; i < n; i++) {\n        const point = points[i];\n        while (k >= 2 && cw(result[k - 2], result[k - 1], point) <= 0) {\n            k--;\n        }\n        result[k++] = point;\n    }\n    const t = k + 1;\n    for (let i = n - 2; i >= 0; i--) {\n        const point = points[i];\n        while (k >= t && cw(result[k - 2], result[k - 1], point) <= 0) {\n            k--;\n        }\n        result[k++] = point;\n    }\n    return result.slice(0, k - 1);\n}\nfunction cw(p1, p2, p3) {\n    return (p2[1] - p1[1]) * (p3[0] - p1[0]) - (p2[0] - p1[0]) * (p3[1] - p1[1]);\n}\nfunction byXThenY(point1, point2) {\n    if (point1[0] === point2[0]) {\n        return point1[1] - point2[1];\n    }\n    return point1[0] - point2[0];\n}\n//# sourceMappingURL=index.js.map","/**\n * @module ol/source/Cluster\n */\n\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport Point from '../geom/Point.js';\nimport VectorSource from './Vector.js';\nimport {add as addCoordinate, scale as scaleCoordinate} from '../coordinate.js';\nimport {assert} from '../asserts.js';\nimport {\n  buffer,\n  createEmpty,\n  createOrUpdateFromCoordinate,\n  getCenter,\n} from '../extent.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [distance=20] Distance in pixels within which features will\n * be clustered together.\n * @property {number} [minDistance=0] Minimum distance in pixels between clusters.\n * Will be capped at the configured distance.\n * By default no minimum distance is guaranteed. This config can be used to avoid\n * overlapping icons. As a tradoff, the cluster feature's position will no longer be\n * the center of all its features.\n * @property {function(Feature):Point} [geometryFunction]\n * Function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Point~Point} as cluster calculation point for the feature. When a\n * feature should not be considered for clustering, the function should return\n * `null`. The default, which works when the underlying source contains point\n * features only, is\n * ```js\n * function(feature) {\n *   return feature.getGeometry();\n * }\n * ```\n * See {@link module:ol/geom/Polygon~Polygon#getInteriorPoint} for a way to get a cluster\n * calculation point for polygons.\n * @property {function(Point, Array<Feature>):Feature} [createCluster]\n * Function that takes the cluster's center {@link module:ol/geom/Point~Point} and an array\n * of {@link module:ol/Feature~Feature} included in this cluster. Must return a\n * {@link module:ol/Feature~Feature} that will be used to render. Default implementation is:\n * ```js\n * function(point, features) {\n *   return new Feature({\n *     geometry: point,\n *     features: features\n *   });\n * }\n * ```\n * @property {VectorSource} [source=null] Source.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n/**\n * @classdesc\n * Layer source to cluster vector data. Works out of the box with point\n * geometries. For other geometry types, or if not all geometries should be\n * considered for clustering, a custom `geometryFunction` can be defined.\n *\n * If the instance is disposed without also disposing the underlying\n * source `setSource(null)` has to be called to remove the listener reference\n * from the wrapped source.\n * @api\n */\nclass Cluster extends VectorSource {\n  /**\n   * @param {Options} options Cluster options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      wrapX: options.wrapX,\n    });\n\n    /**\n     * @type {number|undefined}\n     * @protected\n     */\n    this.resolution = undefined;\n\n    /**\n     * @type {number}\n     * @protected\n     */\n    this.distance = options.distance !== undefined ? options.distance : 20;\n\n    /**\n     * @type {number}\n     * @protected\n     */\n    this.minDistance = options.minDistance || 0;\n\n    /**\n     * @type {number}\n     * @protected\n     */\n    this.interpolationRatio = 0;\n\n    /**\n     * @type {Array<Feature>}\n     * @protected\n     */\n    this.features = [];\n\n    /**\n     * @param {Feature} feature Feature.\n     * @return {Point} Cluster calculation point.\n     * @protected\n     */\n    this.geometryFunction =\n      options.geometryFunction ||\n      function (feature) {\n        const geometry = /** @type {Point} */ (feature.getGeometry());\n        assert(\n          !geometry || geometry.getType() === 'Point',\n          'The default `geometryFunction` can only handle `Point` or null geometries'\n        );\n        return geometry;\n      };\n\n    /**\n     * @type {function(Point, Array<Feature>):Feature}\n     * @private\n     */\n    this.createCustomCluster_ = options.createCluster;\n\n    /**\n     * @type {VectorSource|null}\n     * @protected\n     */\n    this.source = null;\n\n    /**\n     * @private\n     */\n    this.boundRefresh_ = this.refresh.bind(this);\n\n    this.updateDistance(this.distance, this.minDistance);\n    this.setSource(options.source || null);\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/VectorEventType~VectorEventType#removefeature} events.\n   * @api\n   */\n  clear(fast) {\n    this.features.length = 0;\n    super.clear(fast);\n  }\n\n  /**\n   * Get the distance in pixels between clusters.\n   * @return {number} Distance.\n   * @api\n   */\n  getDistance() {\n    return this.distance;\n  }\n\n  /**\n   * Get a reference to the wrapped source.\n   * @return {VectorSource|null} Source.\n   * @api\n   */\n  getSource() {\n    return this.source;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    this.source.loadFeatures(extent, resolution, projection);\n    if (resolution !== this.resolution) {\n      this.resolution = resolution;\n      this.refresh();\n    }\n  }\n\n  /**\n   * Set the distance within which features will be clusterd together.\n   * @param {number} distance The distance in pixels.\n   * @api\n   */\n  setDistance(distance) {\n    this.updateDistance(distance, this.minDistance);\n  }\n\n  /**\n   * Set the minimum distance between clusters. Will be capped at the\n   * configured distance.\n   * @param {number} minDistance The minimum distance in pixels.\n   * @api\n   */\n  setMinDistance(minDistance) {\n    this.updateDistance(this.distance, minDistance);\n  }\n\n  /**\n   * The configured minimum distance between clusters.\n   * @return {number} The minimum distance in pixels.\n   * @api\n   */\n  getMinDistance() {\n    return this.minDistance;\n  }\n\n  /**\n   * Replace the wrapped source.\n   * @param {VectorSource|null} source The new source for this instance.\n   * @api\n   */\n  setSource(source) {\n    if (this.source) {\n      this.source.removeEventListener(EventType.CHANGE, this.boundRefresh_);\n    }\n    this.source = source;\n    if (source) {\n      source.addEventListener(EventType.CHANGE, this.boundRefresh_);\n    }\n    this.refresh();\n  }\n\n  /**\n   * Handle the source changing.\n   */\n  refresh() {\n    this.clear();\n    this.cluster();\n    this.addFeatures(this.features);\n  }\n\n  /**\n   * Update the distances and refresh the source if necessary.\n   * @param {number} distance The new distance.\n   * @param {number} minDistance The new minimum distance.\n   */\n  updateDistance(distance, minDistance) {\n    const ratio =\n      distance === 0 ? 0 : Math.min(minDistance, distance) / distance;\n    const changed =\n      distance !== this.distance || this.interpolationRatio !== ratio;\n    this.distance = distance;\n    this.minDistance = minDistance;\n    this.interpolationRatio = ratio;\n    if (changed) {\n      this.refresh();\n    }\n  }\n\n  /**\n   * @protected\n   */\n  cluster() {\n    if (this.resolution === undefined || !this.source) {\n      return;\n    }\n    const extent = createEmpty();\n    const mapDistance = this.distance * this.resolution;\n    const features = this.source.getFeatures();\n\n    /** @type {Object<string, true>} */\n    const clustered = {};\n\n    for (let i = 0, ii = features.length; i < ii; i++) {\n      const feature = features[i];\n      if (!(getUid(feature) in clustered)) {\n        const geometry = this.geometryFunction(feature);\n        if (geometry) {\n          const coordinates = geometry.getCoordinates();\n          createOrUpdateFromCoordinate(coordinates, extent);\n          buffer(extent, mapDistance, extent);\n\n          const neighbors = this.source\n            .getFeaturesInExtent(extent)\n            .filter(function (neighbor) {\n              const uid = getUid(neighbor);\n              if (uid in clustered) {\n                return false;\n              }\n              clustered[uid] = true;\n              return true;\n            });\n          this.features.push(this.createCluster(neighbors, extent));\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<Feature>} features Features\n   * @param {import(\"../extent.js\").Extent} extent The searched extent for these features.\n   * @return {Feature} The cluster feature.\n   * @protected\n   */\n  createCluster(features, extent) {\n    const centroid = [0, 0];\n    for (let i = features.length - 1; i >= 0; --i) {\n      const geometry = this.geometryFunction(features[i]);\n      if (geometry) {\n        addCoordinate(centroid, geometry.getCoordinates());\n      } else {\n        features.splice(i, 1);\n      }\n    }\n    scaleCoordinate(centroid, 1 / features.length);\n    const searchCenter = getCenter(extent);\n    const ratio = this.interpolationRatio;\n    const geometry = new Point([\n      centroid[0] * (1 - ratio) + searchCenter[0] * ratio,\n      centroid[1] * (1 - ratio) + searchCenter[1] * ratio,\n    ]);\n    if (this.createCustomCluster_) {\n      return this.createCustomCluster_(geometry, features);\n    }\n    return new Feature({\n      geometry,\n      features,\n    });\n  }\n}\n\nexport default Cluster;\n","/* eslint-disable @typescript-eslint/ban-ts-comment */\r\n/**\r\n * @module ol/maplat/clusterRegister\r\n */\r\nimport Feature from 'ol/Feature.js';\r\nimport LayerGroup from 'ol/layer/Group.js';\r\n// @ts-ignore\r\nimport monotoneChainConvexHull from 'monotone-chain-convex-hull';\r\nimport {Circle as CircleStyle, Fill, Stroke, Style, Text} from 'ol/style.js';\r\nimport {Cluster} from 'ol/source.js';\r\nimport {Geometry, LineString, Point, Polygon} from 'ol/geom.js';\r\nimport {Vector as VectorLayer} from 'ol/layer.js';\r\nimport {createEmpty, extend, getHeight, getWidth} from 'ol/extent.js';\r\nimport { StyleLike } from 'ol/style/Style';\r\nimport { Map } from 'ol';\r\nimport VectorSource from 'ol/source/Vector';\r\n\r\nclass clusterRegister extends LayerGroup {\r\n  pointermove__: any;\r\n  pointerclick__: any;\r\n  map__: Map | undefined;\r\n\r\n  removeMap() {\r\n    this.map__!.un('pointermove', this.pointermove__);\r\n    this.map__!.un('click', this.pointerclick__);\r\n  }\r\n\r\n  registerMap(source: VectorSource<Feature<Geometry>>, map: Map, callback: (feature: Feature<Geometry>) => StyleLike) {\r\n    const circleDistanceMultiplier = 1;\r\n    const circleFootSeparation = 28;\r\n    const circleStartAngle = Math.PI / 2;\r\n    this.map__ = map;\r\n\r\n    const convexHullFill = new Fill({\r\n      color: 'rgba(255, 153, 0, 0.4)',\r\n    });\r\n    const convexHullStroke = new Stroke({\r\n      color: 'rgba(204, 85, 0, 1)',\r\n      width: 1.5,\r\n    });\r\n    const outerCircleFill = new Fill({\r\n      color: 'rgba(255, 153, 102, 0.3)',\r\n    });\r\n    const innerCircleFill = new Fill({\r\n      color: 'rgba(255, 165, 0, 0.7)',\r\n    });\r\n    const textFill = new Fill({\r\n      color: '#fff',\r\n    });\r\n    const textStroke = new Stroke({\r\n      color: 'rgba(0, 0, 0, 0.6)',\r\n      width: 3,\r\n    });\r\n    const innerCircle = new CircleStyle({\r\n      radius: 14,\r\n      fill: innerCircleFill,\r\n    });\r\n    const outerCircle = new CircleStyle({\r\n      radius: 20,\r\n      fill: outerCircleFill,\r\n    });\r\n\r\n    let clickFeature: Feature, clickResolution: number;\r\n    /**\r\n     * Style for clusters with features that are too close to each other, activated on click.\r\n     * @param {Feature} cluster A cluster with overlapping members.\r\n     * @param {number} resolution The current view resolution.\r\n     * @return {Array<Style>|null} A style to render an expanded view of the cluster members.\r\n     */\r\n    function clusterCircleStyle(cluster: Feature, resolution: number) {\r\n      if (cluster !== clickFeature || resolution !== clickResolution) {\r\n        return null;\r\n      }\r\n      const clusterMembers = cluster.get('features');\r\n      // @ts-ignore\r\n      return generatePointsCircle(\r\n        clusterMembers.length,\r\n        // @ts-ignore\r\n        cluster.getGeometry().getCoordinates(),\r\n        resolution\r\n      ).reduce((styles, coordinates, i) => {\r\n        const footPoint = clusterMembers[i].getGeometry().getCoordinates();\r\n        const point = new Point(coordinates);\r\n        const line = new LineString([footPoint, coordinates]);\r\n        styles.unshift(\r\n          // @ts-ignore\r\n          new Style({\r\n            geometry: line,\r\n            stroke: convexHullStroke,\r\n          })\r\n        );\r\n        styles.push(\r\n          callback(\r\n            new Feature({\r\n              ...clusterMembers[i].getProperties(),\r\n              geometry: point,\r\n            }) as any\r\n          )\r\n        );\r\n        return styles;\r\n      }, [] as any[]);\r\n    }\r\n\r\n    /**\r\n     * From\r\n     * https://github.com/Leaflet/Leaflet.markercluster/blob/31360f2/src/MarkerCluster.Spiderfier.js#L55-L72\r\n     * Arranges points in a circle around the cluster center, with a line pointing from the center to\r\n     * each point.\r\n     * @param {number} count Number of cluster members.\r\n     * @param {Array<number>} clusterCenter Center coordinate of the cluster.\r\n     * @param {number} resolution Current view resolution.\r\n     * @return {Array<Array<number>>} An array of coordinates representing the cluster members.\r\n     */\r\n    function generatePointsCircle(count: number, clusterCenter: number[], resolution: number) {\r\n      const circumference =\r\n        circleDistanceMultiplier * circleFootSeparation * (2 + count);\r\n      let legLength = circumference / (Math.PI * 2); //radius from circumference\r\n      const angleStep = (Math.PI * 2) / count;\r\n      const res = [] as number[][];\r\n      let angle;\r\n\r\n      legLength = Math.max(legLength, 35) * resolution; // Minimum distance to get outside the cluster icon.\r\n\r\n      for (let i = 0; i < count; ++i) {\r\n        // Clockwise, like spiral.\r\n        angle = circleStartAngle + i * angleStep;\r\n        res.push([\r\n          clusterCenter[0] + legLength * Math.cos(angle),\r\n          clusterCenter[1] + legLength * Math.sin(angle),\r\n        ]);\r\n      }\r\n\r\n      return res;\r\n    }\r\n\r\n    let hoverFeature: Feature;\r\n    /**\r\n     * Style for convex hulls of clusters, activated on hover.\r\n     * @param {Feature} cluster The cluster feature.\r\n     * @return {Style|null} Polygon style for the convex hull of the cluster.\r\n     */\r\n    function clusterHullStyle(cluster: Feature) {\r\n      if (cluster !== hoverFeature) {\r\n        return null;\r\n      }\r\n      const originalFeatures = cluster.get('features');\r\n      const points = originalFeatures.map((feature: Feature<Point>) => feature.getGeometry()!.getCoordinates());\r\n      return new Style({\r\n        geometry: new Polygon([monotoneChainConvexHull(points)]),\r\n        fill: convexHullFill,\r\n        stroke: convexHullStroke,\r\n      });\r\n    }\r\n\r\n    function clusterStyle(feature: Feature<Geometry>): StyleLike {\r\n      const size = feature.get('features').length;\r\n      if (size > 1) {\r\n        return [\r\n          new Style({\r\n            image: outerCircle,\r\n          }),\r\n          new Style({\r\n            image: innerCircle,\r\n            text: new Text({\r\n              text: size.toString(),\r\n              fill: textFill,\r\n              stroke: textStroke,\r\n            }),\r\n          }),\r\n        ];\r\n      }\r\n      const originalFeature = feature.get('features')[0];\r\n      return callback(originalFeature);\r\n    }\r\n\r\n    const clusterSource = new Cluster({\r\n      attributions:\r\n        'Data: <a href=\"https://www.data.gv.at/auftritte/?organisation=stadt-wien\">Stadt Wien</a>',\r\n      distance: 35,\r\n      source,\r\n    });\r\n\r\n    // Layer displaying the convex hull of the hovered cluster.\r\n    const clusterHulls = new VectorLayer({\r\n      source: clusterSource,\r\n      style: clusterHullStyle as StyleLike,\r\n    });\r\n\r\n    // Layer displaying the clusters and individual features.\r\n    const clusters = new VectorLayer({\r\n      source: clusterSource,\r\n      style: clusterStyle as StyleLike,\r\n    });\r\n\r\n    // Layer displaying the expanded view of overlapping cluster members.\r\n    const clusterCircles = new VectorLayer({\r\n      source: clusterSource,\r\n      style: clusterCircleStyle as StyleLike,\r\n    });\r\n\r\n    this.getLayers().push(clusterHulls);\r\n    this.getLayers().push(clusters);\r\n    this.getLayers().push(clusterCircles);\r\n\r\n    this.pointermove__ = (event: any) => {\r\n      clusters.getFeatures(event.pixel).then(features => {\r\n        if (features[0] !== hoverFeature) {\r\n          // Display the convex hull on hover.\r\n          hoverFeature = features[0] as Feature<Geometry>;\r\n          clusterHulls.setStyle(clusterHullStyle as StyleLike);\r\n          // Change the cursor style to indicate that the cluster is clickable.\r\n          map.getTargetElement().style.cursor =\r\n            hoverFeature && hoverFeature.get('features').length > 1\r\n              ? 'pointer'\r\n              : '';\r\n        }\r\n      });\r\n    };\r\n    map.on('pointermove', this.pointermove__);\r\n\r\n    this.pointerclick__ = async (event: any) => {\r\n      let features = await clusterCircles.getFeatures(event.pixel);\r\n      if (features.length > 0) {\r\n        // eslint-disable-next-line no-console\r\n        console.log(features[0].get('features')[0].getProperties());\r\n      } else {\r\n        features = await clusters.getFeatures(event.pixel);\r\n        if (features.length > 0) {\r\n          const clusterMembers = features[0].get('features');\r\n          if (clusterMembers.length > 1) {\r\n            // Calculate the extent of the cluster members.\r\n            const extent = createEmpty();\r\n            clusterMembers.forEach((feature: Feature) =>\r\n              extend(extent, feature.getGeometry()!.getExtent())\r\n            );\r\n            const view = map.getView();\r\n            const resolution = map.getView().getResolution()!;\r\n            if (\r\n              view.getZoom() === view.getMaxZoom() ||\r\n              (getWidth(extent) < resolution && getHeight(extent) < resolution)\r\n            ) {\r\n              // Show an expanded view of the cluster members.\r\n              clickFeature = features[0] as Feature<Geometry>;\r\n              clickResolution = resolution;\r\n              clusterCircles.setStyle(clusterCircleStyle as StyleLike);\r\n            } else {\r\n              // Zoom to the extent of the cluster members.\r\n              view.fit(extent, {duration: 500, padding: [50, 50, 50, 50]});\r\n            }\r\n          } else {\r\n            // eslint-disable-next-line no-console\r\n            console.log(clusterMembers[0].getProperties());\r\n          }\r\n        }\r\n      }\r\n    };\r\n    map.on('click', this.pointerclick__);\r\n  }\r\n}\r\n\r\nexport default clusterRegister;\r\n","/**\r\n * @module ol/maplat/locale/selector\r\n */\r\n\r\nimport { LocaleFragment } from \"../types/basics\";\r\n\r\nexport default function selectord(resource: LocaleFragment, locale: string) {\r\n  if (typeof resource === 'string') {\r\n    return resource;\r\n  }\r\n  if (locale === 'ja') {\r\n    return resource.ja;\r\n  }\r\n  return resource.en;\r\n}\r\n","/**\r\n * @module ol/maplat/vector/filter\r\n */\r\nimport VectorSource from 'ol/source/Vector';\r\nimport { Extent } from 'ol/extent';\r\nimport { ProjectionLike } from 'ol/proj';\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"ol/extent\").Extent} [extent] Extent to be filterd. If `projectTo` is specfied, extent is based on `projectTo` projection.\r\n * @property {import(\"ol/proj\").ProjectionLike} [projectTo] Projection to reproject.\r\n */\r\n\r\ntype Options = {\r\n  extent?: Extent;\r\n  projectTo?: ProjectionLike;\r\n};\r\n\r\n/**\r\n * Get a reprojected / filtered vector source.\r\n * @param {VectorSource} source A vector source to be reprojected / filtered.\r\n * @param {Options} options Options of vectorFilter\r\n * @return {VectorSource} The reprojected / filtered vector source.\r\n */\r\nfunction filter(source: VectorSource, options: Options = {}): VectorSource {\r\n  const extent = options.extent;\r\n  const projectTo = options.projectTo;\r\n  const retSource = new VectorSource();\r\n  source.forEachFeature((f) => {\r\n    const retF = f.clone();\r\n    if (projectTo) {\r\n      retF.setGeometry(retF.getGeometry()!.transform('EPSG:4326', projectTo));\r\n    }\r\n    if (!extent || retF.getGeometry()!.intersectsExtent(extent)) {\r\n      retSource.addFeature(retF);\r\n    }\r\n  });\r\n  return retSource;\r\n}\r\n\r\nexport default filter;\r\n","/**\r\n * @module ol/maplat/viewport/switcher\r\n */\r\nimport { Coordinate } from 'ol/coordinate';\r\nimport {transform} from 'ol/proj.js';\r\n\r\nconst thetas = [0, 0.25, 0.5, 0.75, 1.0, 1.25, 1.5, 1.75].map((pow: number) => pow * Math.PI);\r\n\r\nfunction center2Vicinities(center: number[], radius: number): number[][] {\r\n  const vicinities = thetas.map((theta: number) => [\r\n    center[0] + Math.sin(theta) * radius,\r\n    center[1] + Math.cos(theta) * radius,\r\n  ]);\r\n  vicinities.unshift(center);\r\n  return vicinities;\r\n}\r\n\r\nfunction normalizeAngle(theta: number): number {\r\n  while (theta > Math.PI || theta <= -Math.PI) {\r\n    theta = theta > Math.PI ? theta - 2 * Math.PI : theta + 2 * Math.PI;\r\n  }\r\n  return theta;\r\n}\r\n\r\nfunction switcher(\r\n  fromCenter: number[],\r\n  fromRotation: number,\r\n  fromResolution: number,\r\n  baseRadius: number,\r\n  fromProj: string,\r\n  toProj: string,\r\n  baseProj = 'EPSG:3857'\r\n) {\r\n  let midCenter = fromCenter,\r\n    midRotation = fromRotation,\r\n    midResolution = fromResolution;\r\n  if (fromProj != baseProj) {\r\n    [midCenter, midRotation, midResolution] = maplat2Base(\r\n      fromCenter,\r\n      fromRotation,\r\n      fromResolution,\r\n      baseRadius,\r\n      fromProj,\r\n      baseProj\r\n    );\r\n  }\r\n  if (toProj != baseProj) {\r\n    return base2Maplat(\r\n      midCenter,\r\n      midRotation,\r\n      midResolution,\r\n      baseRadius,\r\n      toProj,\r\n      baseProj\r\n    );\r\n  }\r\n  return [midCenter, midRotation, midResolution];\r\n}\r\n\r\nfunction maplat2Base(\r\n  maplatCenter: number[],\r\n  maplatRotation: number,\r\n  maplatResolution: number,\r\n  baseRadius: number,\r\n  maplatProj: string,\r\n  baseProj = 'EPSG:3857'\r\n): [number[], number, number] {\r\n  const baseCenter = transform(maplatCenter, maplatProj, baseProj);\r\n  const maplatParams = base2MaplatParams(\r\n    baseCenter,\r\n    baseRadius,\r\n    maplatProj,\r\n    baseProj\r\n  );\r\n  const baseResolution = (maplatResolution * baseRadius) / maplatParams[2];\r\n  const baseRotation = normalizeAngle(maplatRotation + maplatParams[1]);\r\n  return [baseCenter, baseRotation, baseResolution];\r\n}\r\n\r\nfunction base2Maplat(\r\n  baseCenter: number[],\r\n  baseRotation: number,\r\n  baseResolution: number,\r\n  baseRadius: number,\r\n  maplatProj: string,\r\n  baseProj = 'EPSG:3857'\r\n) {\r\n  const maplatParams = base2MaplatParams(\r\n    baseCenter,\r\n    baseRadius,\r\n    maplatProj,\r\n    baseProj\r\n  );\r\n  const maplatCenter = maplatParams[0];\r\n  const maplatResolution = (baseResolution * maplatParams[2]) / baseRadius;\r\n  const maplatRotation = normalizeAngle(baseRotation - maplatParams[1]);\r\n  return [maplatCenter, maplatRotation, maplatResolution];\r\n}\r\n\r\nfunction base2MaplatParams(center: number[], radius: number, maplatProj: string, baseProj: string): [number[], number, number] {\r\n  const maplatVicinities = center2Vicinities(center, radius).map(\r\n    (baseCoord: number[]) => transform(baseCoord, baseProj, maplatProj));\r\n  const maplatCenter = maplatVicinities.shift()!;\r\n  const maplatParams = maplatVicinities\r\n    .map((maplatCoord, index) => {\r\n      const vacinity = [\r\n        maplatCoord[0] - maplatCenter[0],\r\n        maplatCoord[1] - maplatCenter[1],\r\n      ];\r\n      const theta = Math.atan2(vacinity[0], vacinity[1]);\r\n      const distance = Math.sqrt(\r\n        Math.pow(vacinity[0], 2) + Math.pow(vacinity[1], 2)\r\n      );\r\n      return [normalizeAngle(theta - thetas[index]), distance];\r\n    })\r\n    .reduce((prev: (Coordinate | number)[] | null, curr: number[], index: number) => {\r\n      const thetax = Math.cos(curr[0]);\r\n      const thetay = Math.sin(curr[0]);\r\n      const dist = curr[1];\r\n      if (!prev) {\r\n        return [thetax, thetay, dist];\r\n      }\r\n      prev[0] = prev[0] as number + thetax;\r\n      prev[1] = prev[1] as number + thetay;\r\n      prev[2] = prev[2] as number + dist;\r\n      if (index == 7) {\r\n        return [maplatCenter, Math.atan2(prev[1], prev[0]), prev[2] / 8];\r\n      }\r\n      return prev;\r\n    }, null) as [number[], number, number];\r\n  return maplatParams;\r\n}\r\n\r\nexport default switcher;\r\n","import FormatGeoJSON from 'ol/format/GeoJSON.js';\r\nimport FormatKML from 'ol/format/KML.js';\r\nimport Map from 'ol/Map.js';\r\nimport MaplatFactory from '../src/ol/maplat/source/Factory.ts';\r\nimport VectorLayer from 'ol/layer/Vector.js';\r\nimport VectorSource from 'ol/source/Vector.js';\r\nimport View from 'ol/View.js';\r\nimport WebGLTileLayer from 'ol/layer/WebGLTile.js';\r\nimport clusterRegister from '../src/ol/maplat/clusterRegister.ts';\r\nimport localeSelector from '../src/ol/maplat/locale/selector.ts';\r\nimport vectorFilter from '../src/ol/maplat/vector/filter.ts';\r\nimport viewportSwitcher from '../src/ol/maplat/viewport/switcher.ts';\r\nimport {DragRotate} from 'ol/interaction.js';\r\nimport {Icon, Style} from 'ol/style.js';\r\nimport {altKeyOnly} from 'ol/events/condition.js';\r\nimport {defaults} from 'ol/interaction/defaults.js';\r\nimport {transform} from 'ol/proj.js';\r\n\r\n(async () => {\r\n  const centerLngLat = [139.53671, 36.24668];\r\n  let area = 0, mapid = 0, zoom;\r\n  const areaSelect = document.getElementById('area_select');\r\n  const layerSelect = document.getElementById('layer_select');\r\n\r\n  const hashes = window.location.href\r\n    .slice(window.location.href.indexOf(\"?\") + 1)\r\n    .split(\"&\");\r\n  for (let i = 0; i < hashes.length; i++) {\r\n    const hash = hashes[i].split(\"=\");\r\n    switch (hash[0]) { \r\n      case \"lat\":\r\n        centerLngLat[1] = parseFloat(hash[1]);\r\n        break;\r\n      case \"lng\":\r\n        centerLngLat[0] = parseFloat(hash[1]);\r\n        break;\r\n      case \"area\":\r\n        area = parseInt(hash[1]);\r\n        break;\r\n      case \"mapid\":\r\n        mapid = parseInt(hash[1]);\r\n        break;\r\n      case \"zoom\":\r\n        zoom = parseInt(hash[1]);\r\n        break;\r\n      default:\r\n    }\r\n  }\r\n  \r\n  const createPoiSource = async url => {\r\n    const vectorReq = await fetch(url);\r\n    const vectorJSON = await vectorReq.json();\r\n    const vectorSource = new VectorSource({\r\n      features: new FormatGeoJSON().readFeatures(vectorJSON, {\r\n        featureProjection: 'EPSG:4326',\r\n        dataProjection: 'EPSG:4326',\r\n      }),\r\n    });\r\n    return vectorSource;\r\n  };\r\n\r\n  const createKmlSource = async url => {\r\n    const contourReq = await fetch(url);\r\n    const contourText = await contourReq.text();\r\n    const contourSource = new VectorSource({\r\n      features: new FormatKML().readFeatures(contourText, {\r\n        featureProjection: 'EPSG:4326',\r\n        dataProjection: 'EPSG:4326',\r\n      }),\r\n    });\r\n    return contourSource;\r\n  };\r\n\r\n  const stockIconHash = {};\r\n  const stockIconStyle = clusterMember => {\r\n    // eslint-disable-next-line no-undef\r\n    const key = iconSelector(clusterMember);\r\n    if (!stockIconHash[key]) {\r\n      stockIconHash[key] = new Icon({\r\n        src: key,\r\n        anchor: [0.5, 1.0],\r\n      });\r\n    }\r\n    return new Style({\r\n      geometry: clusterMember.getGeometry(),\r\n      image: stockIconHash[key],\r\n    });\r\n  };\r\n\r\n  const dataSources = [\r\n    {\r\n      area: '館林(TMS、レガシー、ベクトルデータサンプル)',\r\n      raster: [\r\n        'https://s.maplat.jp/r/tatebayashimap/maps/tatebayashi_ojozu.json',\r\n        'https://s.maplat.jp/r/tatebayashimap/maps/tatebayashi_castle_akimoto.json',\r\n        'https://s.maplat.jp/r/tatebayashimap/maps/tatebayashi_satonuma_village_1.json',\r\n        'data/maplat/kanto_rapid-900913.json',\r\n        'data/maplat/osm.json',\r\n      ],\r\n      vector: [\r\n        {\r\n          url: 'data/maplat/yagoe_contour.kml',\r\n          type: 'kml',\r\n        },\r\n        {\r\n          url: 'https://raw.githubusercontent.com/code4history/TatebayashiStones/master/tatebayashi_stones.geojson',\r\n          type: 'geojson',\r\n          style: stockIconStyle,\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      area: '奈良(レガシーMaplatサンプル)',\r\n      raster: [\r\n        'https://s.maplat.jp/r/naramap/maps/nara_saiken_ndl.json',\r\n        'https://s.maplat.jp/r/naramap/maps/nara_ezuya.json',\r\n        'data/maplat/osm.json',\r\n      ],\r\n      vector: [\r\n        {\r\n          url: 'https://raw.githubusercontent.com/code4history/JizoProject/master/jizo_project.geojson',\r\n          type: 'geojson',\r\n          style: stockIconStyle,\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      area: '姫路(Japan City Plansサンプル)',\r\n      raster: [\r\n        'https://s.maplat.jp/r/himejimap/maps/Jissoku_Himeji_Shigai.json',\r\n        'data/maplat/txu-oclc-6565467.json',\r\n        'data/maplat/osm.json',\r\n      ],\r\n    },\r\n    {\r\n      area: '延岡(複数地図面サンプル予定)',\r\n      raster: [\r\n        'data/maplat/1932_nobeoka.json',\r\n        'data/maplat/osm.json',\r\n      ],\r\n    },\r\n    {\r\n      area: '種子島(IFFFサンプル)',\r\n      raster: [\r\n        'data/maplat/iiif_test.json',\r\n        'data/maplat/osm.json'\r\n      ],\r\n    },\r\n  ];\r\n  await Promise.all(\r\n    dataSources.map(async dataSource => {\r\n      if (dataSource.raster) {\r\n        dataSource.raster = await Promise.all(\r\n          dataSource.raster.map(url =>\r\n            MaplatFactory.factoryMaplatSourceFromUrl(null, url)\r\n          )\r\n        );\r\n      }\r\n      if (dataSource.vector) {\r\n        dataSource.vector = await Promise.all(\r\n          dataSource.vector.map(async vector => {\r\n            const source =\r\n              vector.type == 'geojson'\r\n                ? await createPoiSource(vector.url)\r\n                : await createKmlSource(vector.url);\r\n            return {\r\n              source,\r\n              style: vector.style,\r\n            };\r\n          })\r\n        );\r\n      }\r\n    })\r\n  );\r\n\r\n  let map;\r\n\r\n  areaSelect.onchange = function () {\r\n    const area = areaSelect.value;\r\n    // eslint-disable-next-line no-console\r\n    areaSelectFunc(area * 1);\r\n  };\r\n  layerSelect.onchange = function () {\r\n    const layer = layerSelect.value;\r\n    // eslint-disable-next-line no-console\r\n    layerSelectFunc(layer * 1);\r\n  };\r\n  let areaOptions = '';\r\n  dataSources.forEach((data, index) => {\r\n    areaOptions = `${areaOptions}<option value=\"${index}\">${data.area}</option>`;\r\n  });\r\n  areaSelect.innerHTML = areaOptions;\r\n  areaSelect.value = area;\r\n  areaSelectFunc(area);\r\n  area = undefined;\r\n\r\n  function areaSelectFunc(area_id) {\r\n    const areaData = dataSources[area_id];\r\n    let layerOptions = '';\r\n    areaData.raster.forEach((raster, index) => {\r\n      layerOptions = `${layerOptions}<option value=\"${index}\">${localeSelector(\r\n        raster.get('title'),\r\n        'ja'\r\n      )}</option>`;\r\n    });\r\n    layerSelect.innerHTML = layerOptions;\r\n    if (mapid) {\r\n      layerSelectFunc(mapid, true);\r\n      mapid = 0;\r\n    } else {\r\n      layerSelectFunc(0, true);\r\n    }\r\n  }\r\n\r\n  function layerSelectFunc(layer_id, clearMap) {\r\n    const area_id = areaSelect.value * 1;\r\n    const areaData = dataSources[area_id];\r\n\r\n    const fromSource =\r\n      clearMap || !map ? null : map.getLayers().getArray()[0].getSource();\r\n    const toSource = areaData.raster[layer_id];\r\n    console.log(toSource.getProjection());\r\n\r\n    let toCenter, toResolution, toRotation, toParam;\r\n    if (!fromSource) {\r\n      toParam = {\r\n        center: transform(centerLngLat, 'EPSG:4326', toSource.getProjection()),\r\n        rotation: 0,\r\n        zoom: zoom || 0,\r\n      };\r\n    } else {\r\n      const fromView = map.getView();\r\n      const fromCenter = fromView.getCenter();\r\n      const fromRotation = fromView.getRotation();\r\n      const fromResolution = fromView.getResolution();\r\n      [toCenter, toRotation, toResolution] = viewportSwitcher(\r\n        fromCenter,\r\n        fromRotation,\r\n        fromResolution,\r\n        500,\r\n        fromSource.getProjection(),\r\n        toSource.getProjection()\r\n      );\r\n      toParam = {\r\n        center: toCenter,\r\n        rotation: toRotation,\r\n        resolution: toResolution,\r\n      };\r\n    }\r\n    toParam = Object.assign(toParam, {\r\n      projection: toSource.getProjection(),\r\n      constrainRotation: false,\r\n    });\r\n    const view = new View(toParam);\r\n\r\n    let addMapToCluster;\r\n    const layers = areaData.vector\r\n      ? areaData.vector.map(vector => {\r\n          const source = vector.source;\r\n          const filteredSource = vectorFilter(source, {\r\n            projectTo: toSource.getProjection(),\r\n            extent: toSource.getProjection().getExtent(),\r\n          });\r\n          if (vector.style) {\r\n            const clusterLayer = new clusterRegister({});\r\n            addMapToCluster = () => {\r\n              clusterLayer.registerMap(filteredSource, map, vector.style);\r\n            };\r\n            return clusterLayer;\r\n          }\r\n          return new VectorLayer({\r\n            source: filteredSource,\r\n          });\r\n        })\r\n      : [];\r\n\r\n    layers.unshift(\r\n      new WebGLTileLayer({\r\n        title: localeSelector(toSource.get('title'), 'ja'),\r\n        source: toSource,\r\n      })\r\n    );\r\n\r\n    const frontDiv = document.querySelector('#map');\r\n    if (!map) {\r\n      map = new Map({\r\n        target: frontDiv,\r\n        layers,\r\n        view,\r\n        interactions: defaults({altShiftDragRotate: false}).extend([\r\n          new DragRotate({condition: altKeyOnly}),\r\n        ]),\r\n      });\r\n    } else {\r\n      map.getLayers().forEach(layer => {\r\n        if (layer.removeMap) {\r\n          layer.removeMap();\r\n        }\r\n      });\r\n      map.setLayers(layers);\r\n      map.setView(view);\r\n    }\r\n    if (addMapToCluster) {\r\n      addMapToCluster();\r\n    }\r\n    if (!fromSource && !zoom) {\r\n      view.fit(toSource.getProjection().getExtent(), {padding: [50, 50, 50, 50]});\r\n    }\r\n    zoom = undefined;\r\n  }\r\n})();"],"names":["self","module","exports","e","t","r","n","i","l","call","m","c","d","o","Object","defineProperty","enumerable","get","Symbol","toStringTag","value","__esModule","create","bind","default","prototype","hasOwnProperty","p","s","BOOKMARKING","CLASSIFYING","COMMENTING","DESCRIBING","EDITING","HIGHLIGHTING","IDENTIFYING","LINKING","MODERATING","PAINTING","QUESTIONING","REPLYING","TAGGING","TRANSCRIBING","AnnotationMotivation","AUTO_ADVANCE","CONTINUOUS","FACING_PAGES","HIDDEN","INDIVIDUALS","MULTI_PART","NO_NAV","NON_PAGED","PAGED","REPEAT","SEQUENCE","THUMBNAIL_NAV","TOGETHER","UNORDERED","Behavior","CANVAS","CHOICE","OA_CHOICE","CONTENT_AS_TEXT","DATASET","DOCUMENT","IMAGE","MODEL","MOVING_IMAGE","PDF","PHYSICAL_OBJECT","SOUND","TEXT","TEXTUALBODY","VIDEO","ExternalResourceType","ANNOTATION","COLLECTION","MANIFEST","RANGE","IIIFResourceType","AUDIO_MP4","CORTO","DICOM","DRACO","EPUB","GIRDER","GLB","GLTF","IIIF_PRESENTATION_2","IIIF_PRESENTATION_3","JPG","M3U8","MP3","MPEG_DASH","OBJ","OPF","PLY","THREEJS","USDZ","VIDEO_MP4","WAV","WEBM","MediaType","DOC","DOCX","RenderingFormat","IMAGE_0_COMPLIANCE_LEVEL_0","IMAGE_0_COMPLIANCE_LEVEL_1","IMAGE_0_COMPLIANCE_LEVEL_2","IMAGE_0_CONFORMANCE_LEVEL_0","IMAGE_0_CONFORMANCE_LEVEL_1","IMAGE_0_CONFORMANCE_LEVEL_2","IMAGE_1_COMPLIANCE_LEVEL_0","IMAGE_1_COMPLIANCE_LEVEL_1","IMAGE_1_COMPLIANCE_LEVEL_2","IMAGE_1_CONFORMANCE_LEVEL_0","IMAGE_1_CONFORMANCE_LEVEL_1","IMAGE_1_CONFORMANCE_LEVEL_2","IMAGE_1_LEVEL_0","IMAGE_1_PROFILE_LEVEL_0","IMAGE_1_LEVEL_1","IMAGE_1_PROFILE_LEVEL_1","IMAGE_1_LEVEL_2","IMAGE_1_PROFILE_LEVEL_2","IMAGE_2_LEVEL_0","IMAGE_2_PROFILE_LEVEL_0","IMAGE_2_LEVEL_1","IMAGE_2_PROFILE_LEVEL_1","IMAGE_2_LEVEL_2","IMAGE_2_PROFILE_LEVEL_2","AUTH_0_CLICK_THROUGH","AUTH_0_LOGIN","AUTH_0_LOGOUT","AUTH_0_RESTRICTED","AUTH_0_TOKEN","AUTH_1_CLICK_THROUGH","AUTH_1_EXTERNAL","AUTH_1_KIOSK","AUTH_1_LOGIN","AUTH_1_LOGOUT","AUTH_1_PROBE","AUTH_1_TOKEN","SEARCH_0","SEARCH_0_AUTO_COMPLETE","SEARCH_1","SEARCH_1_AUTO_COMPLETE","TRACKING_EXTENSIONS","UI_EXTENSIONS","PRINT_EXTENSIONS","SHARE_EXTENSIONS","DOWNLOAD_EXTENSIONS","OTHER_MANIFESTATIONS","IXIF","ServiceProfile","IMAGE_SERVICE_2","IMAGE_SERVICE_3","ServiceType","BOTTOM_TO_TOP","LEFT_TO_RIGHT","RIGHT_TO_LEFT","TOP_TO_BOTTOM","ViewingDirection","TOP","ViewingHint","this","__awaiter","Promise","a","u","next","throw","done","then","apply","__generator","label","sent","trys","ops","return","iterator","TypeError","pop","length","push","getMediaType","toLowerCase","split","trim","getImageQuality","getInexactLocale","indexOf","substr","getLocalisedValue","Array","isArray","generateTreeNodeIds","parentNode","id","nodes","normaliseType","normaliseUrl","normalisedUrlsMatch","isImageProfile","isImageServiceType","isLevel0ImageProfile","isLevel1ImageProfile","isLevel2ImageProfile","parseManifest","Deserialiser","parse","checkStatus","ok","Error","statusText","response","reject","loadManifest","fetch","json","catch","loadExternalResourcesAuth1","map","loadExternalResourceAuth1","all","getData","status","OK","doAuthChain","MOVED_TEMPORARILY","createAuthorizationFailedError","UNAUTHORIZED","f","h","_","g","v","isAccessControlled","externalService","options","kioskService","clickThroughService","loginService","isResponseHandled","attemptResourceWithToken","getService","accessToken","loadExternalResourcesAuth09","loadExternalResourceAuth09","pessimisticAccessControl","createInternalServerError","authorize","createError","message","name","String","StatusCode","AUTHORIZATION_FAILED","createRestrictedError","RESTRICTED","INTERNAL_SERVER_ERROR","showAuthInteraction","getServices","getProfile","getResourceById","traverseAndFind","__jsonld","keys","onlyService","onlyServices","skipParentResources","resource","service","services","Service","getTemporalComponent","exec","Utils","XMLHttpRequest","url","responseURL","text","resolve","responseText","JSON","blob","Blob","clone","headers","entries","has","open","method","onload","getAllResponseHeaders","replace","onerror","withCredentials","credentials","setRequestHeader","send","body","context","getProperty","JSONLDResource","__extends","setPrototypeOf","__proto__","constructor","getIIIFResourceType","getLabel","PropertyValue","locale","getDefaultLabel","getValue","getMetadata","LabelValuePair","getRendering","getRenderings","getFormat","rendering","Rendering","getRequiredStatement","getThumbnail","Thumbnail","isAnnotation","isCanvas","isCollection","isManifest","isRange","isSequence","ManifestResource","getResources","resources","Annotation","getType","getWidth","getHeight","getMaxWidth","getMaxHeight","Resource","index","isLoaded","defaultLabel","assign","getAttribution","getDescription","getHomepage","getLogo","logo","getLicense","getNavDate","Date","getRelated","getSeeAlso","getTrackingLabel","getDefaultTree","defaultTree","TreeNode","data","load","navDate","parentLabel","IIIFResource","getBody","items","AnnotationBody","getMotivation","getOn","getTarget","getResource","AnnotationList","getItems","AnnotationPage","__importDefault","getCanonicalImageUri","externalResource","width","getImages","find","getContent","endsWith","join","getMaxDimensions","profile","filter","maxWidth","Size","maxHeight","content","getDuration","images","getIndex","getOtherContent","getViewingHint","configurable","resourceAnnotation","resourceAnnotations","some","onFragment","match","parseInt","imageResources","iiifImageResources","Canvas","isConcatSpreadable","Function","window","propertyIsEnumerable","arguments","toString","_collections","_manifests","__collection","getCollections","getManifests","getCollectionByIndex","getManifestByIndex","getTotalCollections","getTotalManifests","getTotalItems","getViewingDirection","getBehavior","type","TreeNodeType","_parseManifests","_parseCollections","addNode","Collection","start","end","getLength","Duration","defaultLocale","setLabel","setValue","getValues","LanguageMap","__spreadArrays","_value","_locale","_defaultLocale","parseV2Value","addValue","concat","LocalizedValue","reduce","values","getSuitableLocale","CONTINUE","SWITCHING_PROTOCOLS","PROCESSING","CREATED","ACCEPTED","NON_AUTHORITATIVE_INFORMATION","NO_CONTENT","RESET_CONTENT","PARTIAL_CONTENT","MULTI_STATUS","MULTIPLE_CHOICES","MOVED_PERMANENTLY","SEE_OTHER","NOT_MODIFIED","USE_PROXY","TEMPORARY_REDIRECT","BAD_REQUEST","PAYMENT_REQUIRED","FORBIDDEN","NOT_FOUND","METHOD_NOT_ALLOWED","NOT_ACCEPTABLE","PROXY_AUTHENTICATION_REQUIRED","REQUEST_TIME_OUT","CONFLICT","GONE","LENGTH_REQUIRED","PRECONDITION_FAILED","REQUEST_ENTITY_TOO_LARGE","REQUEST_URI_TOO_LARGE","UNSUPPORTED_MEDIA_TYPE","REQUESTED_RANGE_NOT_SATISFIABLE","EXPECTATION_FAILED","IM_A_TEAPOT","UNPROCESSABLE_ENTITY","LOCKED","FAILED_DEPENDENCY","UNORDERED_COLLECTION","UPGRADE_REQUIRED","PRECONDITION_REQUIRED","TOO_MANY_REQUESTS","REQUEST_HEADER_FIELDS_TOO_LARGE","NOT_IMPLEMENTED","BAD_GATEWAY","SERVICE_UNAVAILABLE","GATEWAY_TIME_OUT","HTTP_VERSION_NOT_SUPPORTED","VARIANT_ALSO_NEGOTIATES","INSUFFICIENT_STORAGE","BANDWIDTH_LIMIT_EXCEEDED","NOT_EXTENDED","NETWORK_AUTHENTICATION_REQUIRED","_allRanges","_topRanges","structures","_getTopRanges","_parseRanges","getPosterCanvas","getAccompanyingCanvas","getTopRanges","getTree","viewingHint","ranges","_getRangeById","Range","parentRange","path","members","canvases","console","warn","getAllRanges","add","getRanges","from","Set","getRangeById","getRangeByPath","getSequences","mediaSequences","sequences","Sequence","getSequenceByIndex","getTotalSequences","getManifestType","ManifestType","EMPTY","isMultiSequence","isPagingEnabled","Manifest","MANUSCRIPT","MONOGRAPH","_ranges","getCanvasIds","parseFloat","Math","min","max","Number","treeNode","_parseTreeNode","spansTime","_thumbnails","getCanvases","elements","getCanvasById","getTotalCanvases","getCanvasByIndex","getCanvasIndexById","getCanvasIndexByLabel","isNaN","RegExp","test","getLastCanvasLabel","getLastPageIndex","getNextPageIndex","getPagedIndices","isFirstCanvas","isLastCanvas","reverse","getPrevPageIndex","getStartCanvasIndex","getStartCanvas","getThumbs","Thumb","getThumbnails","isCanvasIndexOutOfRange","isMultiCanvas","isTotalCanvasesEven","parseJson","getTime","parseCollection","parentCollection","parseCollections","parseManifests","parseItems","collections","manifests","parseItem","getConfirmLabel","getFailureDescription","getFailureHeader","getHeader","getServiceLabel","getInfoUri","height","floor","uri","MultiPoint","SimpleGeometry","coordinates","layout","super","setFlatCoordinates","setCoordinates","appendPoint","point","flatCoordinates","getFlatCoordinates","changed","multiPoint","slice","applyProperties","closestPointXY","x","y","closestPoint","minSquaredDistance","getExtent","stride","ii","squaredDistance","j","getCoordinates","inflate","getPoint","Point","getPoints","points","intersectsExtent","extent","setLayout","deflate","MultiLineString","ends","ends_","maxDelta_","maxDeltaRevision_","undefined","lineStrings","lineString","getLayout","appendLineString","multiLineString","getRevision","sqrt","getCoordinateAtM","extrapolate","interpolate","getEnds","getLineString","LineString","getLineStrings","offset","getFlatMidpoints","midpoints","midpoint","getSimplifiedGeometryInternal","squaredTolerance","simplifiedFlatCoordinates","simplifiedEnds","MultiPolygon","endss","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","orientedRevision_","orientedFlatCoordinates_","polygons","thisEndss","polygon","jj","appendPolygon","len","newEndss","multiPolygon","getOrientedFlatCoordinates","containsXY","getArea","right","orient","getEndss","getFlatInteriorPoints","flatCenters","getInteriorPoints","simplifiedEndss","getPolygon","prevEnds","Polygon","getPolygons","lastEnds","GeometryCollection","Geometry","geometries","geometries_","changeEventsKeys_","listenGeometriesChange_","unlistenGeometriesChange_","forEach","EventType","geometryCollection","setGeometries","computeExtent","getGeometries","cloneGeometries","getGeometriesArray","getGeometriesArrayRecursive","geometriesArray","getSimplifiedGeometry","simplifiedGeometryRevision","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometries","simplified","geometry","simplifiedGeometry","simplifiedGeometryCollection","setGeometriesArray","isEmpty","rotate","angle","anchor","scale","sx","sy","applyTransform","transformFn","translate","deltaX","deltaY","disposeInternal","clonedGeometries","dataProjection","defaultFeatureProjection","featureClass","Feature","supportedMediaTypes","getReadOptions","source","readProjection","getUnits","setWorldExtent","featureProjection","adaptOptions","readFeature","readFeatures","readGeometry","writeFeature","feature","writeFeatures","features","writeGeometry","transformGeometryWithOptions","write","transformed","fromProjection","toProjection","transform","decimals","power","pow","round","GeometryConstructor","createRenderFeature","object","flat","geometryType","orientFlatCoordinates","properties","enableSimplifyTransformed","createGeometry","getObject","readFeatureFromObject","readFeaturesFromObject","readGeometryFromObject","readProjectionFromObject","stringify","writeFeatureObject","writeFeaturesObject","writeGeometryObject","readGeometryInternal","readPointGeometry","readLineStringGeometry","readPolygonGeometry","readMultiPointGeometry","readMultiLineStringGeometry","readMultiPolygonGeometry","readGeometryCollectionGeometry","geoJSON","writePointGeometry","writeLineStringGeometry","rightHanded","writePolygonGeometry","writeMultiPointGeometry","writeMultiLineStringGeometry","writeMultiPolygonGeometry","writeGeometryCollectionGeometry","geometryName_","geometryName","extractGeometryName_","extractGeometryName","geoJSONFeature","setGeometryName","setGeometry","setId","setProperties","geoJSONFeatures","featureObject","geometryObject","crs","projection","getId","hasProperties","getProperties","getGeometry","getGeometryName","objects","XML_SCHEMA_INSTANCE_URI","createElementNS","namespaceURI","qualifiedName","node","normalizeWhitespace","getAllTextContent_","accumulator","nodeType","Node","CDATA_SECTION_NODE","TEXT_NODE","nodeValue","firstChild","nextSibling","isDocument","xml","DOMParser","parseFromString","makeArrayExtender","valueReader","thisArg","objectStack","array","makeArrayPusher","makeReplacer","makeObjectPropertySetter","property","localName","makeChildAppender","nodeWriter","appendChild","makeSimpleNodeFactory","fixedNodeName","fixedNamespaceURI","newNodeName","nodeName","OBJECT_PROPERTY_NODE_FACTORY","makeSequence","orderedKeys","sequence","makeStructureNS","namespaceURIs","structure","structureNS","parseNode","parsersNS","firstElementChild","nextElementSibling","parsers","parser","pushParseAndPop","serialize","serializersNS","nodeFactory","pushSerializeAndPop","xmlSerializer_","document_","document","implementation","createDocument","XMLSerializer","doc","readFeatureFromDocument","readFeatureFromNode","readFeaturesFromDocument","readFeaturesFromNode","ELEMENT_NODE","readGeometryFromDocument","readGeometryFromNode","readProjectionFromDocument","readProjectionFromNode","writeFeatureNode","serializeToString","writeFeaturesNode","writeGeometryNode","readBoolean","string","readBooleanString","readDecimal","readDecimalString","readString","writeBooleanTextNode","bool","writeStringTextNode","writeDecimalTextNode","decimal","toPrecision","createTextNode","GX_NAMESPACE_URIS","NAMESPACE_URIS","ICON_ANCHOR_UNITS_MAP","PLACEMARK_PARSERS","extendedDataParser","regionParser","readMultiGeometry","readLineString","readLinearRing","readPoint","readPolygon","readStyle","styleMapValue","readStyleMapValue","placemarkObject","readStyleURL","GX_MULTITRACK_GEOMETRY_PARSERS","readGxTrack","NETWORK_LINK_PARSERS","LINK_PARSERS","readURI","CAMERA_PARSERS","Altitude","Longitude","Latitude","Tilt","AltitudeMode","Heading","Roll","REGION_PARSERS","LAT_LON_ALT_BOX_PARSERS","regionObject","LOD_PARSERS","lodObject","KML_SEQUENCE","KML_SERIALIZERS","DOCUMENT_SERIALIZERS","DOCUMENT_NODE_FACTORY","writePlacemark","DEFAULT_COLOR","DEFAULT_IMAGE_STYLE_ANCHOR","DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS","DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS","DEFAULT_IMAGE_STYLE_SIZE","DEFAULT_IMAGE_STYLE_SRC","DEFAULT_FILL_STYLE","DEFAULT_NO_IMAGE_STYLE","DEFAULT_IMAGE_STYLE","DEFAULT_TEXT_STROKE_STYLE","DEFAULT_STROKE_STYLE","DEFAULT_TEXT_STYLE","DEFAULT_STYLE","TEXTAREA","DEFAULT_STYLE_ARRAY","scaleForSize","size","defaultIconUrlFunction","href","findStyle","styleValue","defaultStyle","sharedStyles","readColor","hexColor","readFlatCoordinates","re","z","baseURI","location","URL","readScale","STYLE_MAP_PARSERS","pairObject","PAIR_PARSERS","key","styleUrl","style","ICON_STYLE_PARSERS","iconObject","ICON_PARSERS","xunits","getAttribute","yunits","origin","LABEL_STYLE_PARSERS","LINE_STYLE_PARSERS","POLY_STYLE_PARSERS","FLAT_LINEAR_RING_PARSERS","readFlatLinearRing","GX_TRACK_PARSERS","whens","when","gxTrackObject","GEOMETRY_FLAT_COORDINATES_PARSERS","readFlatCoordinatesFromNode","EXTRUDE_AND_ALTITUDE_MODE_PARSERS","MULTI_GEOMETRY_PARSERS","multiGeometry","homogeneous","setCommonGeometryProperties","FLAT_LINEAR_RINGS_PARSERS","innerBoundaryFlatLinearRings","INNER_BOUNDARY_IS_PARSERS","flatLinearRing","OUTER_BOUNDARY_IS_PARSERS","flatLinearRings","STYLE_PARSERS","styleObject","IconObject","drawIcon","src","anchorXUnits","anchorYUnits","anchorOrigin","hotSpot","includes","w","rotation","heading","color","imageStyle","Icon","crossOrigin","crossOrigin_","offsetOrigin","iconUrlFunction_","imageScale","getScaleArray","imageSize","getSize","imageState","getImageState","ImageState","listener","resizeScale","setScale","unlistenImageChange","listenImageChange","textStyle","Text","fill","Fill","strokeStyle","Stroke","fillStyle","outline","Style","image","stroke","zIndex","extrudes","tessellates","altitudeModes","hasExtrude","hasTessellate","hasAltitudeMode","set","DATA_PARSERS","EXTENDED_DATA_PARSERS","displayName","SCHEMA_DATA_PARSERS","writeColorTextNode","rgba","abgr","hex","EXTENDEDDATA_NODE_SERIALIZERS","pair","setAttribute","createCDATASection","writeCDATASection","DATA_NODE_FACTORY","ICON_SEQUENCE","ICON_SERIALIZERS","GX_NODE_FACTORY","ICON_STYLE_SEQUENCE","ICON_STYLE_SERIALIZERS","icon","vec2","writeScaleTextNode","LABEL_STYLE_SEQUENCE","LABEL_STYLE_SERIALIZERS","LINE_STYLE_SEQUENCE","LINE_STYLE_SERIALIZERS","GEOMETRY_TYPE_TO_NODENAME","GEOMETRY_NODE_FACTORY","POINT_NODE_FACTORY","LINE_STRING_NODE_FACTORY","LINEAR_RING_NODE_FACTORY","POLYGON_NODE_FACTORY","MULTI_GEOMETRY_SERIALIZERS","writePrimitiveGeometry","writePolygon","writeMultiGeometry","factory","BOUNDARY_IS_SERIALIZERS","writeBoundaryIs","linearRing","PLACEMARK_SERIALIZERS","namesAndValues","names","styles","pointStyles","getText","getImage","lineStyles","getStroke","polyStyles","STYLE_SEQUENCE","STYLE_SERIALIZERS","PLACEMARK_SEQUENCE","EXTENDEDDATA_NODE_FACTORY","sort","styleFunction","getStyleFunction","styleArray","getGeometryFunction","writeStyles_","PRIMITIVE_GEOMETRY_SEQUENCE","PRIMITIVE_GEOMETRY_SERIALIZERS","dimension","getStride","POLY_STYLE_SEQUENCE","POLYGON_SERIALIZERS","INNER_BOUNDARY_NODE_FACTORY","OUTER_BOUNDARY_NODE_FACTORY","linearRings","getLinearRings","outerRing","shift","POLY_STYLE_SERIALIZERS","getSrc","iconImageSize","getImageSize","iconProperties","getAnchor","getOrigin","getRotation","getColor","getFill","getScale","font","defaultStyle_","extractStyles_","extractStyles","writeStyles","sharedStyles_","showPointNames_","showPointNames","iconUrlFunction","readDocumentOrFolder_","readPlacemark_","readSharedStyle_","readSharedStyleMap_","resolution","drawName","multiGeometryPoints","createElement","innerHTML","featureStyle","nameStyle","foundStyle","textOffset","textAlign","setFont","getFont","setFill","setStroke","setText","setOffsetX","setOffsetY","setTextAlign","createNameStyleFunction","createFeatureStyleFunction","setStyle","styleUri","fs","readName","readNameFromDocument","readNameFromNode","readNetworkLinks","networkLinks","readNetworkLinksFromDocument","readNetworkLinksFromNode","obj","readRegion","regions","readRegionFromDocument","readRegionFromNode","readCamera","cameras","readCameraFromDocument","readCameraFromNode","kml","xmlnsUri","setAttributeNS","CustomTile","ImageTile","tileSize","tileCoord","state","tileLoadFunction","zoomifyImage_","tileSize_","TileState","drawImage","canvas","Maplat","tilePixelRatio","imageWidth","imageHeight","tierSizeInTiles","tileSizeForTierSizeCalculation","ceil","resolutions","tileCountUpToTier","tileGrid","ZoomifyTileClass","attributions","cacheSize","reprojectionErrorThreshold","tileClass","tileUrlFunction","transition","zDirection","PJD_3PARAM","PJD_7PARAM","PJD_GRIDSHIFT","PJD_NODATUM","SRS_WGS84_SEMIMAJOR","SRS_WGS84_SEMIMINOR","SRS_WGS84_ESQUARED","SEC_TO_RAD","HALF_PI","PI","SIXTH","RA4","RA6","EPSLN","D2R","R2D","FORTPI","TWO_PI","SPI","ft","to_meter","ignoredChar","testkey","lkey","defData","paramName","paramVal","paramOutname","paramObj","params","proj","datum","rf","lat_0","lat0","lat_1","lat1","lat_2","lat2","lat_ts","lon_0","long0","lon_1","long1","lon_2","long2","alpha","gamma","rectified_grid_angle","lonc","longc","x_0","x0","y_0","y0","k_0","k0","k","b","r_a","R_A","zone","south","utmSouth","towgs84","datum_params","units","unit","from_greenwich","pm","nadgrids","datumCode","axis","legalAxis","approx","txt","Parser","output","NEUTRAL","whitespace","latin","keyword","endThings","digets","level","place","root","stack","currentObject","mapit","unshift","thing","out","newObj","item","sExpr","convert","readCharicter","char","neutral","quoted","afterquote","number","word","afterItem","newObjects","d2r","input","wkt","lisp","projName","local","PROJECTION","AXIS","axisOrder","UNIT","DATUM","SPHEROID","geogcs","GEOGCS","toMeter","sphere","ellps","TOWGS84","isFinite","outName","inName","rename","cleanWKT","defs","that","def","charAt","EPSG","ESRI","IAU2000","log","WGS84","GOOGLE","global","codeWords","codes","code","testObj","testDef","testWKT","auth","checkMercator","maybeProjStr","ext","checkProjStr","testProj","destination","eccent","sinphi","cosphi","con","abs","sign","phi","com","tan","ts","dphi","eccnth","atan","sin","identity","pt","projs","init","es","cos","msfnz","forward","lon","lat","adjust_lon","tsfnz","inverse","exp","phi2z","projStore","ellipseName","wgs84","ellipse","datumName","ch1903","ggrs87","nad83","nad27","potsdam","carthage","hermannskogel","osni52","ire65","rassadiran","nzgd49","osgb36","s_jtsk","beduaram","gunung_segara","rnb72","ep2","datum_type","grids","loadedNadgrids","parseNadgridString","optional","mandatory","grid","isNull","secondsToRadians","seconds","decodeString","view","fromCharCode","Uint8Array","buffer","mapNodes","longitudeShift","latitudeShift","readGridHeader","isLittleEndian","parent","lowerLatitude","getFloat64","upperLatitude","lowerLongitude","upperLongitude","latitudeInterval","longitudeInterval","gridNodeCount","getInt32","readGridNodes","gridHeader","nodesOffset","gridShiftRecords","record","getFloat32","latitudeAccuracy","longitudeAccuracy","Projection","srsCode","callback","error","parseCode","ourProj","projections","datumDef","a2","b2","sphere_","ecc","getNadgrids","datumObj","extend","geodeticToGeocentric","Rn","Sin_Lat","Sin2_Lat","Cos_Lat","Height","Infinity","geocentricToGeodetic","P","RR","CT","ST","RX","RK","RN","CPHI0","SPHI0","CPHI","SPHI","SDPHI","iter","genau","X","Y","Z","atan2","checkParams","dest","compareDatums","source_a","source_es","applyGridShift","dest_a","dest_b","dest_es","Dx_BF","Dy_BF","Dz_BF","Rx_BF","Ry_BF","Rz_BF","M_BF","geocentricToWgs84","x_tmp","y_tmp","z_tmp","geocentricFromWgs84","NaN","attemptedGrids","subgrid","subgrids","epsilon","del","minX","ll","minY","maxX","lim","maxY","applySubgridShift","pin","ct","val","tb","nadInterpolate","dif","inx","indx","frct","f00","cvs","f10","f11","f01","m11","m10","m00","m01","denorm","xin","yin","zin","checkCoord","num","enforceAxis","hasZ","toPoint","checkSanity","checkNotWGS","adjust_axis","datum_transform","transformer","to","coords","transformedArray","splice","checkProj","oProj","fromProj","toProj","coord","single","NUM_100K_SETS","SET_ORIGIN_COLUMN_LETTERS","SET_ORIGIN_ROW_LETTERS","A","I","O","V","mgrs","bbox","UTMtoLL","decode","toUpperCase","left","bottom","top","accuracy","utm","seasting","easting","snorthing","northing","zoneNumber","zoneLetter","setParm","get100kSetForZone","setColumn","setRow","column","row","parm","colOrigin","charCodeAt","rowOrigin","colInt","rowInt","rollover","encode","eccPrimeSquared","N","T","C","M","LongOriginRad","ZoneNumber","Lat","Long","eccSquared","LatRad","degToRad","LongRad","UTMEasting","UTMNorthing","getLetterDesignator","LLtoUTM","deg","radToDeg","rad","N1","T1","C1","R1","D","LongOrigin","mu","phi1Rad","e1","result","topRight","LetterDesignator","mgrsString","testChar","hunK","sb","substring","east100k","curCol","eastingValue","rewindMarker","getEastingFromChar","north100k","curRow","northingValue","getNorthingFromChar","getMinNorthing","remainder","accuracyBonus","sepEastingString","sepNorthingString","sep","sepEasting","sepNorthing","fromMGRS","mgrsStr","toMGRS","C00","C02","C04","C06","C08","C22","C44","C46","C48","C66","C68","C88","en","sphi","cphi","MAX_ITER","arg","pj_mlfn","pj_enfn","ml0","delta_lon","sin_phi","cos_phi","al","als","cs","tq","ml","acos","pj_inv_mlfn","tan_phi","ds","temp","asin","log1py","hypot","pp","B","cos_2B","h1","h2","arg_r","arg_i","hr2","hi2","sin_arg_r","cos_arg_r","sinh_arg_i","sinh","cosh_arg_i","cosh","hr","hi1","hr1","hi","tmerc","cgb","cbg","utg","gtu","np","Qn","gatg","Zb","clens","Ce","Cn","sin_Cn","cos_Cn","sin_Ce","cos_Ce","asinhy","tmp","clens_cmplx","adjust_zone","etmerc","dependsOn","esinp","rc","phic0","ratexp","K","srat","gauss","sinc0","cosc0","R2","title","sinc","cosc","cosl","rho","coslat0","sinlat0","cons","ms1","X0","ssfn_","cosX0","sinX0","sinX","cosX","rh","sinlat","coslat","dlon","ce","Chi","phit","eccen","phy0","lambda0","sinPhy0","semiMajorAxis","flattening","e2","R","b0","k1","k2","k3","Sa1","Sa2","S","rotI","rotB","lambda","phy","prevPhy","iteration","TOL","cosph0","F","H","L","sinph0","J","gamma0","projectionName","lamc","lam1","lam2","phi1","phi2","alpha_c","no_off","no_rot","alp","gam","one_es","E","lam0","pi","singam","cosgam","sinrot","cosrot","rB","ArB","BrA","u_0","v_pole_n","v_pole_s","U","W","Qp","Sp","Tp","Vp","Up","sin1","cos1","ts1","sin2","cos2","ms2","ts2","ts0","ns","f0","rh1","theta","s45","s90","fi0","alfa","uq","u0","n0","s0","ro0","ad","gfi","deltav","eps","ro","czech","fi1","e0","e3","e0fn","e1fn","e2fn","e3fn","mlfn","lam","nl","gN","tl","asq","cl","dd","imlfn","nl1","rl1","tl1","dl","dsq","adjust_lat","P00","P01","P02","P10","P11","P20","mode","S_POLE","N_POLE","EQUIT","OBLIQ","qp","qsfnz","mmf","apa","APA","authset","rq","xmf","ymf","sinb1","cosb1","coslam","sinlam","q","sinb","cosb","cCe","sCe","ab","beta","cosz","sinz","sin_po","cos_po","t1","qs1","t2","qs2","t3","qs0","ns0","qs","phi1z","asinz","eccnts","sin_p14","cos_p14","infinity_dist","coslon","iqsfnz","dlat","el","bl","tanphi","mln","mlnp","ma","B_re","B_im","C_re","C_im","delta_lat","d_phi","d_lambda","d_phi_n","d_psi","th_n_im1","th_re","th_im","th_n_re","th_n_im","z_re","z_im","z_n_im1","delta_x","z_n_re","z_n_im","iterations","num_re","num_im","den_re","den_im","den2","d_psi_n","C_y","C_x","delta_theta","ml1","ml2","sinth","costh","gsq","msq","xx","yy","xys","c1","c2","c3","a1","m1","th1","sin_p12","cos_p12","Mlp","Ml","Nl1","Nl","psi","Az","G","GH","Hs","kp","cos_c","s2","s3","s4","cosAz","Ee","sinpsi","FACE_ENUM","AREA_ENUM","AREA_0","AREA_1","AREA_2","AREA_3","qsc_fwd_equat_face_theta","area","qsc_shift_lon_origin","slon","face","one_minus_f","one_minus_f_squared","xy","sinlon","nu","cosmu","tannu","tantheta","invert_sign","xa","lp","COEFS_X","COEFS_Y","FXC","FYC","RC1","NODES","poly3_val","coefs","f_df","max_err","iters","upd","newton_rapshon","poly3_der","azi","degrees","tilt","pn1","rp","pfact","omega","cg","sg","cw","sw","yt","ba","bm","bq","flip_axis","sweep","radius_g_1","radius_g","rone_es","radius_p","radius_p2","radius_p_inv2","shape","v_x","v_y","v_z","det","v_zp","Proj","DataView","nFields","detectLittleEndian","header","nSubgridFields","nSubgrids","shiftType","fromSemiMajorAxis","fromSemiMinorAxis","toSemiMajorAxis","toSemiMinorAxis","readHeader","gridOffset","subHeader","lngColumnCount","latColumnCount","count","readSubgrids","nadgrid","proj4","sterea","stere","somerc","omerc","lcc","krovak","cass","laea","aea","gnom","cea","eqc","poly","nzmg","mill","sinu","moll","eqdc","vandg","aeqd","ortho","qsc","robin","geocent","tpers","geos","Versions","VERSION1","VERSION2","VERSION3","IIIF_PROFILE_VALUES","supports","formats","qualities","COMPLIANCE_VERSION1","COMPLIANCE_VERSION2","COMPLIANCE_VERSION3","versionFunctions","iiifInfo","levelProfile","getComplianceLevelSupportedFeatures","imageInfo","scale_factors","tile_width","tile_height","additionalProfile","profileSupports","profileFormats","profileQualities","sizes","tiles","tile","scaleFactors","extraFormats","preferredFormat","preferredFormats","format","acc","extraFeatures","extraQualities","setImageInfo","getImageApiVersion","getComplianceLevelEntryFromProfile","identifier","version","getComplianceLevelFromProfile","complianceLevel","getTileSourceOptions","preferredOptions","imageOptions","quality","formatPercentage","percentage","toLocaleString","maximumFractionDigits","IIIF","partialOptions","baseUrl","lastIndexOf","supportsListedSizes","supportsListedTiles","isInteger","supportsArbitraryTiling","tileWidth","tileHeight","maxZoom","LN2","maxScaleFactor","ignoredSizesIndex","IiifTileClass","attributionsCollapsible","pixelRatio","regionParam","sizeParam","zoom","tileX","tileY","regionX","regionY","regionW","regionH","sizeW","sizeH","regionWidth","regionHeight","proj4List","manifesto","maplatProjectionStore","coord2Coord","settingsIsLegacy","settings","settingsIs3857OnLegacy","maptype","settingsIsNoWarpOnLegacy3857","static","mapID","SourceClass","settingsNew","sourceSpec","tileSourceType","manifest","infoUrl","iiifNumber","infoObj","iiifOption","createdProjection","subNum","maplatProjection","returnProj","projSelect","projectionSpec","mapCoord","settingsIs3857","warp","settingsIsNoWarp","worldExtent","compiled","wh","log2","worldExtentSize","decideProjection","getCode","fromSystemToMapTransform","toSystemFromMapTransform","settingsHasWorldParams","worldParams","xScale","xRotation","xOrigin","yRotation","yScale","yOrigin","createSystem2MapTransformation","fromMapToWarpTransformation","toMapFromWarpTransformation","shiftX","mercatorXShift","shiftY","mercatorYShift","tin","setCompiled","merc","coordShift","createMap2WarpTransformation","fromWarpToOperationTransform","toWarpFromOperationTransform","$1","map2nad","tky2merc","tokyo","epsg","mapCoordText","map2merc","createWarp2OperationTransformation","toOperationCoord","fromOperationCoord","warpCoord","operationCoord","lnglat","projectionCode","returnProjs","coords3857","envelopLngLats","mercBoundary","pixelBoundary","boundsPolygon","createProjection","XYZ","metaData","settingsReq","mapDivide","factoryMaplatSource","asImageLike","Image","HTMLCanvasElement","HTMLVideoElement","ImageBitmap","asArrayLike","Uint8ClampedArray","Float32Array","sharedContext","defaultSize","DataTile","Tile","loader_","loader","data_","error_","size_","imageData","getError","pixelRatio_","gutter_","gutter","reprojData_","reprojError_","reprojSize_","sourceTileGrid_","sourceTileGrid","targetTileGrid_","targetTileGrid","wrappedTileCoord_","wrappedTileCoord","sourceTiles_","sourcesListenerKeys_","sourceZ_","targetExtent","getTileCoordExtent","maxTargetExtent","maxSourceExtent","limitedTargetExtent","sourceProj","sourceProjExtent","targetResolution","getResolution","targetProj","sourceResolution","errorThresholdInPixels","errorThreshold","triangulation_","Triangulation","getTriangles","getZForResolution","sourceExtent","calculateSourceExtent","canWrapX","sourceRange","getTileRangeForExtentAndZ","getTile","getTileFunction","srcX","srcY","reproject_","dataSources","getState","tileData","arrayData","willReadFrequently","clearRect","getImageData","toArray","pixelSize","isFloat","pixelCount","DataType","tileDataR","bytesPerElement","BYTES_PER_ELEMENT","bytesPerPixel","bytesPerRow","byteLength","bandCount","packedLength","packedData","dataIndex","rowOffset","colCount","rowIndex","colIndex","dataType","getTileSize","targetWidth","targetHeight","dataR","dataU","reproj","sources","dataSource","createImageData","putImageData","getContext","leftToLoad","sourceListenKey","unlistenSources_","setTimeout","BaseTileRepresentation","handleTileChange_","helper_","helper","loaded","ready","setTile","removeEventListener","uploadTile","addEventListener","setReady","dispatchEvent","ARRAY_BUFFER","ELEMENT_ARRAY_BUFFER","STATIC_DRAW","CONTEXT_IDS","attributes","preserveDrawingBuffer","antialias","BufferUsage","getArrayClassForType","Uint32Array","usage","array_","type_","usage_","ofSize","fromArray","fromArrayBuffer","getArray","getUsage","bindAndConfigure","gl","texture","resampleFilter","LINEAR","NEAREST","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","TEXTURE_MAG_FILTER","uploadDataTexture","getGL","textureType","canInterpolate","FLOAT","getExtension","UNSIGNED_BYTE","unpackAlignment","LUMINANCE","LUMINANCE_ALPHA","RGB","RGBA","oldUnpackAlignment","getParameter","UNPACK_ALIGNMENT","pixelStorei","texImage2D","pixelContext","textures","renderSize_","flushBufferData","createTexture","uploadImageTexture","sourceTileSize","textureCount","textureDataArrays","textureIndex","dataValue","pixelIndex","bandIndex","textureData","deleteBuffer","deleteTexture","getImagePixelData_","renderCol","renderRow","renderWidth","renderHeight","sourceWidthWithoutGutter","sourceHeightWithoutGutter","sourceCol","sourceRow","err","getArrayPixelData_","sourceSize","sourceWidth","sourceHeight","getPixelData","gl_","webGlContext","scaleRatio_","scaleRatio","renderTargetTexture_","renderTargetTextureSize_","frameBuffer_","createFramebuffer","depthBuffer_","createRenderbuffer","vertexShader","createShader","VERTEX_SHADER","shaderSource","compileShader","fragmentShader","FRAGMENT_SHADER","renderTargetProgram_","createProgram","attachShader","linkProgram","renderTargetVerticesBuffer_","createBuffer","bindBuffer","bufferData","renderTargetAttribLocation_","getAttribLocation","renderTargetUniformLocation_","getUniformLocation","renderTargetOpacityLocation_","renderTargetTextureLocation_","uniforms_","uniforms","frameState","textureSize","drawingBufferWidth","drawingBufferHeight","bindFramebuffer","FRAMEBUFFER","getFrameBuffer","bindRenderbuffer","RENDERBUFFER","getDepthBuffer","viewport","internalFormat","border","framebufferTexture2D","COLOR_ATTACHMENT0","renderbufferStorage","DEPTH_COMPONENT16","framebufferRenderbuffer","DEPTH_ATTACHMENT","nextPass","preCompose","postCompose","activeTexture","TEXTURE0","canvasId","renderTargets","getContextAttributes","clearColor","clearDepth","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","disable","DEPTH_TEST","enable","BLEND","blendFunc","ONE","ONE_MINUS_SRC_ALPHA","useProgram","enableVertexAttribArray","vertexAttribPointer","uniform2f","uniform1i","opacity","layerStatesArray","layerIndex","uniform1f","applyUniforms","drawArrays","TRIANGLES","textureSlot","uniform","ImageData","uniform3f","uniform4f","fromTransform","mat4","DefaultUniform","AttributeType","UNSIGNED_SHORT","UNSIGNED_INT","canvasCache","getSharedCanvasCacheKey","uniqueCanvasCacheKeyCount","WebGLHelper","Disposable","boundHandleWebGLContextLost_","handleWebGLContextLost","boundHandleWebGLContextRestored_","handleWebGLContextRestored","canvasCacheKey_","canvasCacheKey","getUniqueCanvasCacheKey","cacheItem","position","users","getOrCreateContext","bufferCache_","extensionCache_","currentProgram_","needsToBeRecreated_","ContextEventType","offsetRotateMatrix_","offsetScaleMatrix_","tmpMat4_","uniformLocationsByProgram_","attribLocationsByProgram_","setUniforms","postProcessPasses_","postProcesses","shaderCompileErrors_","startTime_","now","addUniforms","canvasCacheKeyMatches","extension","bufferKey","bufferCache","webGlBuffer","buf","bufferCacheEntry","isContextLost","loseContext","releaseCanvas","prepareDraw","disableAlphaBlend","enableDepth","getCanvas","depthRange","ZERO","depthFunc","LEQUAL","slot","uniformName","prepareDrawToRenderTarget","renderTarget","getFramebuffer","getDepthbuffer","getTexture","drawElements","elementType","numItems","offsetInBytes","finalizeDraw","applyFrameState","viewState","setUniformFloatValue","setUniformFloatVec2","applyHitDetectionUniform","enabled","loc","HTMLImageElement","prevValue","complete","setUniformMatrixValue","program","shader","getProgram","fragmentShaderSource","vertexShaderSource","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","deleteShader","getProgramParameter","LINK_STATUS","getProgramInfoLog","programUid","getAttributeLocation","makeProjectionTransform","center","uniform2fv","setUniformFloatVec4","uniform4fv","uniformMatrix4fv","enableAttributeArray_","attribName","enableAttributes","attr","getByteSizeFromType","computeAttributesStride","event","preventDefault","needsToBeRecreated","Uint16Array","WebGLLayerRenderer","Layer","layer","inversePixelTransform_","pixelContext_","postProcesses_","addChangeListener","removeHelper","dispatchPreComposeEvent","dispatchPostComposeEvent","getLayer","hasListener","reset","dispose","prepareFrame","getRenderSource","className","incrementGroup","groupNumber","renderer","getRenderer","layerClassName","getClassName","mapId","afterHelperCreated","prepareFrameInternal","dispatchRenderEvent_","preRender","postRender","empty","depthForZ","lookupHasTile","tileRepresentationLookup","tileIds","addTileRepresentationToLookup","tileRepresentation","representationsByZ","getRenderExtent","layerState","getWrapX","gridExtent","getTileGridForProjection","getCacheKey","getKey","tileLayer","renderComplete","tileTransform_","tempMat4","tempTileRange_","TileRange","tempTileCoord_","tempSize_","tileRepresentationCache","LRUCache","projection_","isDrawableTile_","tileState","useInterimTilesOnError","getUseInterimTilesOnError","clearCache","createTileRepresentation","enqueueTiles","initialZ","preload","tileSource","getGutterForProjection","tileSourceKey","wantedTiles","getMapInternal","minZ","getMinZoom","getMaxResolution","getView","getResolutionForZoom","tileRange","tileResolution","cacheKey","containsKey","interimTile","getInterimTile","tileQueueKey","tileQueue","isKeyQueued","enqueue","getTileCoordCenter","beforeTilesRender","tilesWithAlpha","beforeTilesMaskRender","renderTile","tileTransform","renderExtent","tileOrigin","tileExtent","depth","renderTileMask","tileZ","drawTile_","alphaLookup","tileCoordKey","animate","centerX","centerY","tileWidthWithGutter","tileHeightWithGutter","aspectRatio","centerI","centerJ","tileScale","tileCenterI","tileCenterJ","renderFrame","getPreload","nextExtent","targetZ","nextResolution","uid","time","blend","getAlpha","endTransition","findAltTiles_","minZoom","parentZ","zs","canExpireCache","postRenderFunctions","updateCacheSize","expireCache","altZ","getTileRangeForTileCoordAndZ","covered","TILE_TRANSFORM","TRANSITION_ALPHA","DEPTH","RENDER_EXTENT","PATTERN_ORIGIN","RESOLUTION","ZOOM","GLOBAL_ALPHA","PROJECTION_MATRIX","SCREEN_TO_WORLD_MATRIX","TILE_TEXTURE_ARRAY","TEXTURE_PIXEL_WIDTH","TEXTURE_PIXEL_HEIGHT","TEXTURE_RESOLUTION","TEXTURE_ORIGIN_X","TEXTURE_ORIGIN_Y","Attributes","attributeDescriptions","program_","vertexShader_","fragmentShader_","indices_","paletteTextures_","paletteTextures","tileTexture","paletteIndex","paletteTexture","gutterExtent","pixel","coordinate","pixelToCoordinateTransform","layerExtent","getSources","tileTextureCache","getTileCoordForCoordAndZ","col","deleteProgram","texture_","numberToGlsl","stringToFloatMap","stringToFloatCounter","variableName","GET_BAND_VALUE_FUNC","PALETTE_TEXTURE_ARRAY","createCompiler","expression","args","compile","compilers","propName","inFragmentShader","computeType","evaluator","varName","variables","compiledArgs","firstValue","secondValue","modulo","fallback","exponent","stop1","output1","stop2","output2","ratio","needle","haystack","funcName","operator","functions","computeOperatorFunctionName","tests","rgb","band","xOffset","yOffset","ifBlocks","colorIndex","colors","numColors","palette","parsedValue","paletteName","returnType","compiler","colorToGlsl","expressionToGlsl","compilationContext","expectedType","parsingContext","encoded","expected","actual","buildExpression","parseStyle","pipeline","contrast","exposure","saturation","brightness","numVariables","variable","uniformDeclarations","functionDefintions","WebGLTileLayer","BaseTile","sources_","renderedSource_","renderedResolution_","style_","cacheSize_","styleVariables_","handleSourceUpdate_","getSource","getSourceState","hasRenderer","getSourceBandCount_","MAX_SAFE_INTEGER","createRenderer","parsedStyle","renderSources","layerRenderer","render","target","rendered","sourceState","onChange","altSources","updateStyleVariables","monotoneChainConvexHull","sorted","byXThenY","p1","p2","p3","point1","point2","Cluster","wrapX","distance","minDistance","interpolationRatio","geometryFunction","createCustomCluster_","createCluster","boundRefresh_","refresh","updateDistance","setSource","fast","getDistance","loadFeatures","setDistance","setMinDistance","getMinDistance","cluster","addFeatures","mapDistance","getFeatures","clustered","neighbors","getFeaturesInExtent","neighbor","centroid","searchCenter","clusterRegister","removeMap","map__","un","pointermove__","pointerclick__","registerMap","circleStartAngle","convexHullFill","convexHullStroke","outerCircleFill","innerCircleFill","textFill","textStroke","innerCircle","Circle","radius","outerCircle","clickFeature","clickResolution","hoverFeature","clusterCircleStyle","clusterMembers","clusterCenter","legLength","circleDistanceMultiplier","angleStep","res","generatePointsCircle","footPoint","line","clusterHullStyle","clusterSource","clusterHulls","Vector","clusters","originalFeature","clusterCircles","getLayers","getTargetElement","cursor","on","async","getZoom","getMaxZoom","fit","duration","padding","selectord","ja","projectTo","retSource","forEachFeature","retF","addFeature","thetas","normalizeAngle","base2MaplatParams","maplatProj","baseProj","maplatVicinities","vicinities","center2Vicinities","baseCoord","maplatCenter","maplatCoord","vacinity","prev","curr","thetax","thetay","dist","fromCenter","fromRotation","fromResolution","baseRadius","midCenter","midRotation","midResolution","maplatRotation","maplatResolution","baseCenter","maplatParams","baseResolution","baseRotation","maplat2Base","base2Maplat","centerLngLat","mapid","areaSelect","getElementById","layerSelect","hashes","hash","stockIconHash","stockIconStyle","clusterMember","iconSelector","raster","vector","vectorReq","vectorJSON","createPoiSource","contourReq","contourText","createKmlSource","onchange","areaSelectFunc","layerSelectFunc","areaOptions","area_id","areaData","layerOptions","layer_id","clearMap","fromSource","toSource","toCenter","toResolution","toRotation","toParam","getProjection","fromView","getCenter","constrainRotation","View","addMapToCluster","layers","filteredSource","clusterLayer","WebGLTile","frontDiv","querySelector","setLayers","setView","Map","interactions","defaults","altShiftDragRotate","DragRotate","condition"],"sourceRoot":""}