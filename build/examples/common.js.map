{"version":3,"file":"common.js","mappings":"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","sources":["webpack:///webpack/runtime/chunk loaded","webpack:///../node_modules/@maplat/tin/lib/booleanPointInPolygon.js","webpack:///../node_modules/@turf/convex/node_modules/@turf/helpers/dist/es/index.js","webpack:///../node_modules/@turf/convex/node_modules/@turf/meta/dist/es/index.js","webpack:///../node_modules/@turf/convex/dist/es/index.js","webpack:///../node_modules/@turf/difference/node_modules/@turf/helpers/dist/es/index.js","webpack:///../node_modules/@turf/difference/dist/es/index.js","webpack:///../node_modules/@turf/intersect/node_modules/@turf/helpers/dist/es/index.js","webpack:///../node_modules/@turf/union/node_modules/@turf/helpers/dist/es/index.js","webpack:///../node_modules/@turf/union/dist/es/index.js","webpack:///../node_modules/@maplat/tin/lib/kinks.js","webpack:///../node_modules/delaunator/node_modules/robust-predicates/esm/util.js","webpack:///../node_modules/delaunator/node_modules/robust-predicates/esm/orient2d.js","webpack:///../node_modules/delaunator/node_modules/robust-predicates/esm/orient3d.js","webpack:///../node_modules/delaunator/node_modules/robust-predicates/esm/incircle.js","webpack:///../node_modules/delaunator/node_modules/robust-predicates/esm/insphere.js","webpack:///../node_modules/delaunator/index.js","webpack:///../node_modules/@kninnug/constrainautor/node_modules/robust-predicates/esm/util.js","webpack:///../node_modules/@kninnug/constrainautor/node_modules/robust-predicates/esm/orient2d.js","webpack:///../node_modules/@kninnug/constrainautor/node_modules/robust-predicates/esm/orient3d.js","webpack:///../node_modules/@kninnug/constrainautor/node_modules/robust-predicates/esm/incircle.js","webpack:///../node_modules/@kninnug/constrainautor/node_modules/robust-predicates/esm/insphere.js","webpack:///../node_modules/@kninnug/constrainautor/lib/Constrainautor.mjs","webpack:///../node_modules/@maplat/tin/lib/constrained-tin.js","webpack:///../node_modules/@maplat/tin/lib/index.js","webpack:///../node_modules/@turf/intersect/dist/es/index.js","webpack:///../node_modules/@turf/meta/main.es.js","webpack:///../node_modules/@turf/bbox/main.es.js","webpack:///../node_modules/@turf/helpers/main.es.js","webpack:///../node_modules/color-name/index.js","webpack:///../node_modules/concaveman/index.js","webpack:///../node_modules/geojson-rbush/index.js","webpack:///../node_modules/geojson-rbush/node_modules/@turf/helpers/dist/js/index.js","webpack:///../node_modules/geojson-rbush/node_modules/@turf/meta/dist/js/index.js","webpack:///../node_modules/geojson-rbush/node_modules/quickselect/quickselect.js","webpack:///../node_modules/geojson-rbush/node_modules/rbush/index.js","webpack:///../node_modules/point-in-polygon/flat.js","webpack:///../node_modules/point-in-polygon/index.js","webpack:///../node_modules/point-in-polygon/nested.js","webpack:///../node_modules/polygon-clipping/dist/polygon-clipping.umd.js","webpack:///../node_modules/rbush/rbush.min.js","webpack:///../node_modules/robust-predicates/umd/orient2d.min.js","webpack:///../node_modules/tinyqueue/index.js","webpack:///../node_modules/@turf/centroid/node_modules/@turf/helpers/dist/es/index.js","webpack:///../node_modules/@turf/centroid/node_modules/@turf/meta/dist/es/index.js","webpack:///../node_modules/@turf/centroid/dist/es/index.js","webpack:///../node_modules/@turf/invariant/dist/es/index.js","webpack:///../node_modules/@turf/line-intersect/node_modules/@turf/helpers/dist/es/index.js","webpack:///../node_modules/@turf/line-segment/node_modules/@turf/helpers/dist/es/index.js","webpack:///../node_modules/@turf/line-segment/node_modules/@turf/meta/dist/es/index.js","webpack:///../node_modules/@turf/line-segment/dist/es/index.js","webpack:///../node_modules/@turf/line-intersect/node_modules/@turf/meta/dist/es/index.js","webpack:///../node_modules/@turf/line-intersect/dist/es/index.js","webpack:///../node_modules/ol/Collection.js","webpack:///../node_modules/ol/CollectionEventType.js","webpack:///../node_modules/ol/Disposable.js","webpack:///../node_modules/ol/Feature.js","webpack:///../node_modules/ol/Image.js","webpack:///../node_modules/ol/ImageState.js","webpack:///../node_modules/ol/ImageTile.js","webpack:///../node_modules/ol/renderer/Map.js","webpack:///../node_modules/ol/renderer/Composite.js","webpack:///../node_modules/ol/MapBrowserEvent.js","webpack:///../node_modules/ol/pointer/EventType.js","webpack:///../node_modules/ol/MapBrowserEventHandler.js","webpack:///../node_modules/ol/MapEventType.js","webpack:///../node_modules/ol/MapProperty.js","webpack:///../node_modules/ol/structs/PriorityQueue.js","webpack:///../node_modules/ol/TileQueue.js","webpack:///../node_modules/ol/control/Control.js","webpack:///../node_modules/ol/control/Attribution.js","webpack:///../node_modules/ol/control/Rotate.js","webpack:///../node_modules/ol/control/Zoom.js","webpack:///../node_modules/ol/Map.js","webpack:///../node_modules/ol/control/defaults.js","webpack:///../node_modules/ol/MapBrowserEventType.js","webpack:///../node_modules/ol/MapEvent.js","webpack:///../node_modules/ol/Object.js","webpack:///../node_modules/ol/ObjectEventType.js","webpack:///../node_modules/ol/Observable.js","webpack:///../node_modules/ol/Tile.js","webpack:///../node_modules/ol/TileRange.js","webpack:///../node_modules/ol/TileState.js","webpack:///../node_modules/ol/ViewProperty.js","webpack:///../node_modules/ol/centerconstraint.js","webpack:///../node_modules/ol/resolutionconstraint.js","webpack:///../node_modules/ol/View.js","webpack:///../node_modules/ol/ViewHint.js","webpack:///../node_modules/ol/array.js","webpack:///../node_modules/ol/asserts.js","webpack:///../node_modules/color-space/rgb.js","webpack:///../node_modules/color-space/xyz.js","webpack:///../node_modules/color-space/luv.js","webpack:///../node_modules/color-space/lchuv.js","webpack:///../node_modules/color-parse/index.js","webpack:///../node_modules/color-space/hsl.js","webpack:///../node_modules/ol/color.js","webpack:///../node_modules/color-rgba/index.js","webpack:///../node_modules/ol/colorlike.js","webpack:///../node_modules/ol/console.js","webpack:///../node_modules/ol/coordinate.js","webpack:///../node_modules/ol/css.js","webpack:///../node_modules/ol/dom.js","webpack:///../node_modules/ol/easing.js","webpack:///../node_modules/ol/events.js","webpack:///../node_modules/ol/events/Event.js","webpack:///../node_modules/ol/events/EventType.js","webpack:///../node_modules/ol/events/Target.js","webpack:///../node_modules/ol/events/condition.js","webpack:///../node_modules/ol/expr/expression.js","webpack:///../node_modules/ol/extent.js","webpack:///../node_modules/ol/extent/Relationship.js","webpack:///../node_modules/ol/functions.js","webpack:///../node_modules/ol/geom/Geometry.js","webpack:///../node_modules/ol/geom/LineString.js","webpack:///../node_modules/ol/geom/Point.js","webpack:///../node_modules/ol/geom/LinearRing.js","webpack:///../node_modules/ol/geom/Polygon.js","webpack:///../node_modules/ol/geom/SimpleGeometry.js","webpack:///../node_modules/ol/geom/flat/area.js","webpack:///../node_modules/ol/geom/flat/center.js","webpack:///../node_modules/ol/geom/flat/closest.js","webpack:///../node_modules/ol/geom/flat/contains.js","webpack:///../node_modules/ol/geom/flat/deflate.js","webpack:///../node_modules/ol/geom/flat/inflate.js","webpack:///../node_modules/ol/geom/flat/interiorpoint.js","webpack:///../node_modules/ol/geom/flat/interpolate.js","webpack:///../node_modules/ol/geom/flat/intersectsextent.js","webpack:///../node_modules/ol/geom/flat/length.js","webpack:///../node_modules/ol/geom/flat/reverse.js","webpack:///../node_modules/ol/geom/flat/orient.js","webpack:///../node_modules/ol/geom/flat/segments.js","webpack:///../node_modules/ol/geom/flat/simplify.js","webpack:///../node_modules/ol/geom/flat/transform.js","webpack:///../node_modules/ol/has.js","webpack:///../node_modules/ol/interaction/DragRotate.js","webpack:///../node_modules/ol/interaction/Property.js","webpack:///../node_modules/ol/interaction/Interaction.js","webpack:///../node_modules/ol/interaction/Pointer.js","webpack:///../node_modules/ol/interaction/DoubleClickZoom.js","webpack:///../node_modules/ol/interaction/DragPan.js","webpack:///../node_modules/ol/render/Box.js","webpack:///../node_modules/ol/interaction/DragBox.js","webpack:///../node_modules/ol/interaction/DragZoom.js","webpack:///../node_modules/ol/events/Key.js","webpack:///../node_modules/ol/interaction/KeyboardPan.js","webpack:///../node_modules/ol/interaction/KeyboardZoom.js","webpack:///../node_modules/ol/Kinetic.js","webpack:///../node_modules/ol/interaction/MouseWheelZoom.js","webpack:///../node_modules/ol/interaction/PinchRotate.js","webpack:///../node_modules/ol/interaction/PinchZoom.js","webpack:///../node_modules/ol/interaction/defaults.js","webpack:///../node_modules/ol/layer/Base.js","webpack:///../node_modules/ol/layer/TileProperty.js","webpack:///../node_modules/ol/layer/BaseTile.js","webpack:///../node_modules/ol/layer/Group.js","webpack:///../node_modules/ol/layer/Layer.js","webpack:///../node_modules/ol/layer/Property.js","webpack:///../node_modules/ol/expr/cpu.js","webpack:///../node_modules/ol/render/canvas/style.js","webpack:///../node_modules/ol/layer/BaseVector.js","webpack:///../node_modules/ol/render/canvas/Instruction.js","webpack:///../node_modules/ol/render/VectorContext.js","webpack:///../node_modules/ol/render/canvas/Builder.js","webpack:///../node_modules/ol/render/canvas/ImageBuilder.js","webpack:///../node_modules/ol/render/canvas/LineStringBuilder.js","webpack:///../node_modules/ol/render/canvas/PolygonBuilder.js","webpack:///../node_modules/ol/geom/flat/linechunk.js","webpack:///../node_modules/ol/geom/flat/straightchunk.js","webpack:///../node_modules/ol/render/canvas/TextBuilder.js","webpack:///../node_modules/ol/render/canvas/BuilderGroup.js","webpack:///../node_modules/ol/geom/flat/textpath.js","webpack:///../node_modules/ol/render/canvas/Executor.js","webpack:///../node_modules/ol/render/canvas/ExecutorGroup.js","webpack:///../node_modules/ol/render/canvas/Immediate.js","webpack:///../node_modules/ol/render/canvas/hitdetect.js","webpack:///../node_modules/ol/renderer/vector.js","webpack:///../node_modules/ol/renderer/canvas/VectorLayer.js","webpack:///../node_modules/ol/layer/Vector.js","webpack:///../node_modules/ol/math.js","webpack:///../node_modules/ol/obj.js","webpack:///../node_modules/ol/proj/epsg3857.js","webpack:///../node_modules/ol/proj/epsg4326.js","webpack:///../node_modules/ol/proj/projections.js","webpack:///../node_modules/ol/proj/transforms.js","webpack:///../node_modules/ol/proj.js","webpack:///../node_modules/ol/proj/Projection.js","webpack:///../node_modules/ol/proj/Units.js","webpack:///../node_modules/ol/render/Event.js","webpack:///../node_modules/ol/render/EventType.js","webpack:///../node_modules/ol/render/Feature.js","webpack:///../node_modules/ol/render/canvas.js","webpack:///../node_modules/ol/renderer/Layer.js","webpack:///../node_modules/ol/renderer/canvas/Layer.js","webpack:///../node_modules/ol/reproj.js","webpack:///../node_modules/ol/reproj/Tile.js","webpack:///../node_modules/ol/reproj/Triangulation.js","webpack:///../node_modules/ol/reproj/common.js","webpack:///../node_modules/ol/rotationconstraint.js","webpack:///../node_modules/ol/size.js","webpack:///../node_modules/ol/source/Source.js","webpack:///../node_modules/ol/TileCache.js","webpack:///../node_modules/ol/source/TileEventType.js","webpack:///../node_modules/ol/source/Tile.js","webpack:///../node_modules/ol/source/UrlTile.js","webpack:///../node_modules/ol/source/TileImage.js","webpack:///../node_modules/ol/structs/RBush.js","webpack:///../node_modules/ol/source/VectorEventType.js","webpack:///../node_modules/ol/loadingstrategy.js","webpack:///../node_modules/ol/featureloader.js","webpack:///../node_modules/ol/source/Vector.js","webpack:///../node_modules/ol/source/XYZ.js","webpack:///../node_modules/ol/sphere.js","webpack:///../node_modules/ol/structs/LRUCache.js","webpack:///../node_modules/ol/style/Circle.js","webpack:///../node_modules/ol/style/Fill.js","webpack:///../node_modules/ol/style/IconImage.js","webpack:///../node_modules/ol/style/Icon.js","webpack:///../node_modules/ol/style/IconImageCache.js","webpack:///../node_modules/ol/style/Image.js","webpack:///../node_modules/ol/style/RegularShape.js","webpack:///../node_modules/ol/style/Stroke.js","webpack:///../node_modules/ol/style/Style.js","webpack:///../node_modules/ol/style/Text.js","webpack:///../node_modules/ol/tilecoord.js","webpack:///../node_modules/ol/tilegrid.js","webpack:///../node_modules/ol/tilegrid/TileGrid.js","webpack:///../node_modules/ol/tilegrid/common.js","webpack:///../node_modules/ol/tileurlfunction.js","webpack:///../node_modules/ol/transform.js","webpack:///../node_modules/ol/util.js","webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/global","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///webpack/runtime/node module decorator","webpack:///webpack/runtime/jsonp chunk loading"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","import { getCoord, getGeom } from \"@turf/invariant\";\nexport default function booleanPointInPolygon(point, polygon, options = {}) {\n    if (!point) {\n        throw new Error(\"point is required\");\n    }\n    if (!polygon) {\n        throw new Error(\"polygon is required\");\n    }\n    const pt = getCoord(point);\n    const geom = getGeom(polygon);\n    const type = geom.type;\n    const bbox = polygon.bbox;\n    let polys = geom.coordinates;\n    if (bbox && !inBBox(pt, bbox)) {\n        return false;\n    }\n    if (type === \"Polygon\") {\n        polys = [polys];\n    }\n    let insidePoly = false;\n    for (let i = 0; i < polys.length && !insidePoly; i++) {\n        const res = pointInPolygon(pt, polys[i]);\n        if ((res === 0 && !options.ignoreBoundary) || res)\n            insidePoly = true;\n    }\n    return insidePoly;\n}\nfunction inBBox(pt, bbox) {\n    return (bbox[0] <= pt[0] && bbox[1] <= pt[1] && bbox[2] >= pt[0] && bbox[3] >= pt[1]);\n}\nfunction pointInPolygon(p, polygon) {\n    let i = 0;\n    let ii = 0;\n    let k = 0;\n    let f = 0;\n    let u1 = 0;\n    let v1 = 0;\n    let u2 = 0;\n    let v2 = 0;\n    let currentP = null;\n    let nextP = null;\n    const x = p[0];\n    const y = p[1];\n    const numContours = polygon.length;\n    for (i; i < numContours; i++) {\n        ii = 0;\n        const contourLen = polygon[i].length - 1;\n        const contour = polygon[i];\n        currentP = contour[0];\n        u1 = currentP[0] - x;\n        v1 = currentP[1] - y;\n        for (ii; ii < contourLen; ii++) {\n            nextP = contour[ii + 1];\n            v2 = nextP[1] - y;\n            if ((v1 < 0 && v2 < 0) || (v1 > 0 && v2 > 0)) {\n                currentP = nextP;\n                v1 = v2;\n                u1 = currentP[0] - x;\n                continue;\n            }\n            u2 = nextP[0] - p[0];\n            if (v2 > 0 && v1 <= 0) {\n                f = u1 * v2 - u2 * v1;\n                if (f > 0)\n                    k = k + 1;\n                else if (f === 0)\n                    return 0;\n            }\n            else if (v1 > 0 && v2 <= 0) {\n                f = u1 * v2 - u2 * v1;\n                if (f < 0)\n                    k = k + 1;\n                else if (f === 0)\n                    return 0;\n            }\n            else if (v2 === 0 && v1 < 0) {\n                f = u1 * v2 - u2 * v1;\n                if (f === 0)\n                    return 0;\n            }\n            else if (v1 === 0 && v2 < 0) {\n                f = u1 * v2 - u2 * v1;\n                if (f === 0)\n                    return 0;\n            }\n            else if (v1 === 0 && v2 === 0) {\n                if (u2 <= 0 && u1 >= 0) {\n                    return 0;\n                }\n                else if (u1 <= 0 && u2 >= 0) {\n                    return 0;\n                }\n            }\n            currentP = nextP;\n            v1 = v2;\n            u1 = u2;\n        }\n    }\n    if (k % 2 === 0)\n        return false;\n    return true;\n}\n//# sourceMappingURL=booleanPointInPolygon.js.map","/**\n * @module helpers\n */\n/**\n * Earth Radius used with the Harvesine formula and approximates using a spherical (non-ellipsoid) Earth.\n *\n * @memberof helpers\n * @type {number}\n */\nexport var earthRadius = 6371008.8;\n/**\n * Unit of measurement factors using a spherical (non-ellipsoid) earth radius.\n *\n * @memberof helpers\n * @type {Object}\n */\nexport var factors = {\n    centimeters: earthRadius * 100,\n    centimetres: earthRadius * 100,\n    degrees: earthRadius / 111325,\n    feet: earthRadius * 3.28084,\n    inches: earthRadius * 39.37,\n    kilometers: earthRadius / 1000,\n    kilometres: earthRadius / 1000,\n    meters: earthRadius,\n    metres: earthRadius,\n    miles: earthRadius / 1609.344,\n    millimeters: earthRadius * 1000,\n    millimetres: earthRadius * 1000,\n    nauticalmiles: earthRadius / 1852,\n    radians: 1,\n    yards: earthRadius * 1.0936,\n};\n/**\n * Units of measurement factors based on 1 meter.\n *\n * @memberof helpers\n * @type {Object}\n */\nexport var unitsFactors = {\n    centimeters: 100,\n    centimetres: 100,\n    degrees: 1 / 111325,\n    feet: 3.28084,\n    inches: 39.37,\n    kilometers: 1 / 1000,\n    kilometres: 1 / 1000,\n    meters: 1,\n    metres: 1,\n    miles: 1 / 1609.344,\n    millimeters: 1000,\n    millimetres: 1000,\n    nauticalmiles: 1 / 1852,\n    radians: 1 / earthRadius,\n    yards: 1.0936133,\n};\n/**\n * Area of measurement factors based on 1 square meter.\n *\n * @memberof helpers\n * @type {Object}\n */\nexport var areaFactors = {\n    acres: 0.000247105,\n    centimeters: 10000,\n    centimetres: 10000,\n    feet: 10.763910417,\n    hectares: 0.0001,\n    inches: 1550.003100006,\n    kilometers: 0.000001,\n    kilometres: 0.000001,\n    meters: 1,\n    metres: 1,\n    miles: 3.86e-7,\n    millimeters: 1000000,\n    millimetres: 1000000,\n    yards: 1.195990046,\n};\n/**\n * Wraps a GeoJSON {@link Geometry} in a GeoJSON {@link Feature}.\n *\n * @name feature\n * @param {Geometry} geometry input geometry\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature} a GeoJSON Feature\n * @example\n * var geometry = {\n *   \"type\": \"Point\",\n *   \"coordinates\": [110, 50]\n * };\n *\n * var feature = turf.feature(geometry);\n *\n * //=feature\n */\nexport function feature(geom, properties, options) {\n    if (options === void 0) { options = {}; }\n    var feat = { type: \"Feature\" };\n    if (options.id === 0 || options.id) {\n        feat.id = options.id;\n    }\n    if (options.bbox) {\n        feat.bbox = options.bbox;\n    }\n    feat.properties = properties || {};\n    feat.geometry = geom;\n    return feat;\n}\n/**\n * Creates a GeoJSON {@link Geometry} from a Geometry string type & coordinates.\n * For GeometryCollection type use `helpers.geometryCollection`\n *\n * @name geometry\n * @param {string} type Geometry Type\n * @param {Array<any>} coordinates Coordinates\n * @param {Object} [options={}] Optional Parameters\n * @returns {Geometry} a GeoJSON Geometry\n * @example\n * var type = \"Point\";\n * var coordinates = [110, 50];\n * var geometry = turf.geometry(type, coordinates);\n * // => geometry\n */\nexport function geometry(type, coordinates, _options) {\n    if (_options === void 0) { _options = {}; }\n    switch (type) {\n        case \"Point\":\n            return point(coordinates).geometry;\n        case \"LineString\":\n            return lineString(coordinates).geometry;\n        case \"Polygon\":\n            return polygon(coordinates).geometry;\n        case \"MultiPoint\":\n            return multiPoint(coordinates).geometry;\n        case \"MultiLineString\":\n            return multiLineString(coordinates).geometry;\n        case \"MultiPolygon\":\n            return multiPolygon(coordinates).geometry;\n        default:\n            throw new Error(type + \" is invalid\");\n    }\n}\n/**\n * Creates a {@link Point} {@link Feature} from a Position.\n *\n * @name point\n * @param {Array<number>} coordinates longitude, latitude position (each in decimal degrees)\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Point>} a Point feature\n * @example\n * var point = turf.point([-75.343, 39.984]);\n *\n * //=point\n */\nexport function point(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    if (!coordinates) {\n        throw new Error(\"coordinates is required\");\n    }\n    if (!Array.isArray(coordinates)) {\n        throw new Error(\"coordinates must be an Array\");\n    }\n    if (coordinates.length < 2) {\n        throw new Error(\"coordinates must be at least 2 numbers long\");\n    }\n    if (!isNumber(coordinates[0]) || !isNumber(coordinates[1])) {\n        throw new Error(\"coordinates must contain numbers\");\n    }\n    var geom = {\n        type: \"Point\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link Point} {@link FeatureCollection} from an Array of Point coordinates.\n *\n * @name points\n * @param {Array<Array<number>>} coordinates an array of Points\n * @param {Object} [properties={}] Translate these properties to each Feature\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north]\n * associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Point>} Point Feature\n * @example\n * var points = turf.points([\n *   [-75, 39],\n *   [-80, 45],\n *   [-78, 50]\n * ]);\n *\n * //=points\n */\nexport function points(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return point(coords, properties);\n    }), options);\n}\n/**\n * Creates a {@link Polygon} {@link Feature} from an Array of LinearRings.\n *\n * @name polygon\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Polygon>} Polygon Feature\n * @example\n * var polygon = turf.polygon([[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]], { name: 'poly1' });\n *\n * //=polygon\n */\nexport function polygon(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    for (var _i = 0, coordinates_1 = coordinates; _i < coordinates_1.length; _i++) {\n        var ring = coordinates_1[_i];\n        if (ring.length < 4) {\n            throw new Error(\"Each LinearRing of a Polygon must have 4 or more Positions.\");\n        }\n        for (var j = 0; j < ring[ring.length - 1].length; j++) {\n            // Check if first point of Polygon contains two numbers\n            if (ring[ring.length - 1][j] !== ring[0][j]) {\n                throw new Error(\"First and last Position are not equivalent.\");\n            }\n        }\n    }\n    var geom = {\n        type: \"Polygon\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link Polygon} {@link FeatureCollection} from an Array of Polygon coordinates.\n *\n * @name polygons\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygon coordinates\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Polygon>} Polygon FeatureCollection\n * @example\n * var polygons = turf.polygons([\n *   [[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]],\n *   [[[-15, 42], [-14, 46], [-12, 41], [-17, 44], [-15, 42]]],\n * ]);\n *\n * //=polygons\n */\nexport function polygons(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return polygon(coords, properties);\n    }), options);\n}\n/**\n * Creates a {@link LineString} {@link Feature} from an Array of Positions.\n *\n * @name lineString\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<LineString>} LineString Feature\n * @example\n * var linestring1 = turf.lineString([[-24, 63], [-23, 60], [-25, 65], [-20, 69]], {name: 'line 1'});\n * var linestring2 = turf.lineString([[-14, 43], [-13, 40], [-15, 45], [-10, 49]], {name: 'line 2'});\n *\n * //=linestring1\n * //=linestring2\n */\nexport function lineString(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    if (coordinates.length < 2) {\n        throw new Error(\"coordinates must be an array of two or more positions\");\n    }\n    var geom = {\n        type: \"LineString\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link LineString} {@link FeatureCollection} from an Array of LineString coordinates.\n *\n * @name lineStrings\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north]\n * associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<LineString>} LineString FeatureCollection\n * @example\n * var linestrings = turf.lineStrings([\n *   [[-24, 63], [-23, 60], [-25, 65], [-20, 69]],\n *   [[-14, 43], [-13, 40], [-15, 45], [-10, 49]]\n * ]);\n *\n * //=linestrings\n */\nexport function lineStrings(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return lineString(coords, properties);\n    }), options);\n}\n/**\n * Takes one or more {@link Feature|Features} and creates a {@link FeatureCollection}.\n *\n * @name featureCollection\n * @param {Feature[]} features input features\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {FeatureCollection} FeatureCollection of Features\n * @example\n * var locationA = turf.point([-75.343, 39.984], {name: 'Location A'});\n * var locationB = turf.point([-75.833, 39.284], {name: 'Location B'});\n * var locationC = turf.point([-75.534, 39.123], {name: 'Location C'});\n *\n * var collection = turf.featureCollection([\n *   locationA,\n *   locationB,\n *   locationC\n * ]);\n *\n * //=collection\n */\nexport function featureCollection(features, options) {\n    if (options === void 0) { options = {}; }\n    var fc = { type: \"FeatureCollection\" };\n    if (options.id) {\n        fc.id = options.id;\n    }\n    if (options.bbox) {\n        fc.bbox = options.bbox;\n    }\n    fc.features = features;\n    return fc;\n}\n/**\n * Creates a {@link Feature<MultiLineString>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiLineString\n * @param {Array<Array<Array<number>>>} coordinates an array of LineStrings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiLineString>} a MultiLineString feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiLine = turf.multiLineString([[[0,0],[10,10]]]);\n *\n * //=multiLine\n */\nexport function multiLineString(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiLineString\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link Feature<MultiPoint>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPoint\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPoint>} a MultiPoint feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPt = turf.multiPoint([[0,0],[10,10]]);\n *\n * //=multiPt\n */\nexport function multiPoint(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiPoint\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link Feature<MultiPolygon>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPolygon\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygons\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPolygon>} a multipolygon feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPoly = turf.multiPolygon([[[[0,0],[0,10],[10,10],[10,0],[0,0]]]]);\n *\n * //=multiPoly\n *\n */\nexport function multiPolygon(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiPolygon\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link Feature<GeometryCollection>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name geometryCollection\n * @param {Array<Geometry>} geometries an array of GeoJSON Geometries\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<GeometryCollection>} a GeoJSON GeometryCollection Feature\n * @example\n * var pt = turf.geometry(\"Point\", [100, 0]);\n * var line = turf.geometry(\"LineString\", [[101, 0], [102, 1]]);\n * var collection = turf.geometryCollection([pt, line]);\n *\n * // => collection\n */\nexport function geometryCollection(geometries, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"GeometryCollection\",\n        geometries: geometries,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Round number to precision\n *\n * @param {number} num Number\n * @param {number} [precision=0] Precision\n * @returns {number} rounded number\n * @example\n * turf.round(120.4321)\n * //=120\n *\n * turf.round(120.4321, 2)\n * //=120.43\n */\nexport function round(num, precision) {\n    if (precision === void 0) { precision = 0; }\n    if (precision && !(precision >= 0)) {\n        throw new Error(\"precision must be a positive number\");\n    }\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.round(num * multiplier) / multiplier;\n}\n/**\n * Convert a distance measurement (assuming a spherical Earth) from radians to a more friendly unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name radiansToLength\n * @param {number} radians in radians across the sphere\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} distance\n */\nexport function radiansToLength(radians, units) {\n    if (units === void 0) { units = \"kilometers\"; }\n    var factor = factors[units];\n    if (!factor) {\n        throw new Error(units + \" units is invalid\");\n    }\n    return radians * factor;\n}\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into radians\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name lengthToRadians\n * @param {number} distance in real units\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} radians\n */\nexport function lengthToRadians(distance, units) {\n    if (units === void 0) { units = \"kilometers\"; }\n    var factor = factors[units];\n    if (!factor) {\n        throw new Error(units + \" units is invalid\");\n    }\n    return distance / factor;\n}\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into degrees\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, centimeters, kilometres, feet\n *\n * @name lengthToDegrees\n * @param {number} distance in real units\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} degrees\n */\nexport function lengthToDegrees(distance, units) {\n    return radiansToDegrees(lengthToRadians(distance, units));\n}\n/**\n * Converts any bearing angle from the north line direction (positive clockwise)\n * and returns an angle between 0-360 degrees (positive clockwise), 0 being the north line\n *\n * @name bearingToAzimuth\n * @param {number} bearing angle, between -180 and +180 degrees\n * @returns {number} angle between 0 and 360 degrees\n */\nexport function bearingToAzimuth(bearing) {\n    var angle = bearing % 360;\n    if (angle < 0) {\n        angle += 360;\n    }\n    return angle;\n}\n/**\n * Converts an angle in radians to degrees\n *\n * @name radiansToDegrees\n * @param {number} radians angle in radians\n * @returns {number} degrees between 0 and 360 degrees\n */\nexport function radiansToDegrees(radians) {\n    var degrees = radians % (2 * Math.PI);\n    return (degrees * 180) / Math.PI;\n}\n/**\n * Converts an angle in degrees to radians\n *\n * @name degreesToRadians\n * @param {number} degrees angle between 0 and 360 degrees\n * @returns {number} angle in radians\n */\nexport function degreesToRadians(degrees) {\n    var radians = degrees % 360;\n    return (radians * Math.PI) / 180;\n}\n/**\n * Converts a length to the requested unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @param {number} length to be converted\n * @param {Units} [originalUnit=\"kilometers\"] of the length\n * @param {Units} [finalUnit=\"kilometers\"] returned unit\n * @returns {number} the converted length\n */\nexport function convertLength(length, originalUnit, finalUnit) {\n    if (originalUnit === void 0) { originalUnit = \"kilometers\"; }\n    if (finalUnit === void 0) { finalUnit = \"kilometers\"; }\n    if (!(length >= 0)) {\n        throw new Error(\"length must be a positive number\");\n    }\n    return radiansToLength(lengthToRadians(length, originalUnit), finalUnit);\n}\n/**\n * Converts a area to the requested unit.\n * Valid units: kilometers, kilometres, meters, metres, centimetres, millimeters, acres, miles, yards, feet, inches, hectares\n * @param {number} area to be converted\n * @param {Units} [originalUnit=\"meters\"] of the distance\n * @param {Units} [finalUnit=\"kilometers\"] returned unit\n * @returns {number} the converted area\n */\nexport function convertArea(area, originalUnit, finalUnit) {\n    if (originalUnit === void 0) { originalUnit = \"meters\"; }\n    if (finalUnit === void 0) { finalUnit = \"kilometers\"; }\n    if (!(area >= 0)) {\n        throw new Error(\"area must be a positive number\");\n    }\n    var startFactor = areaFactors[originalUnit];\n    if (!startFactor) {\n        throw new Error(\"invalid original units\");\n    }\n    var finalFactor = areaFactors[finalUnit];\n    if (!finalFactor) {\n        throw new Error(\"invalid final units\");\n    }\n    return (area / startFactor) * finalFactor;\n}\n/**\n * isNumber\n *\n * @param {*} num Number to validate\n * @returns {boolean} true/false\n * @example\n * turf.isNumber(123)\n * //=true\n * turf.isNumber('foo')\n * //=false\n */\nexport function isNumber(num) {\n    return !isNaN(num) && num !== null && !Array.isArray(num);\n}\n/**\n * isObject\n *\n * @param {*} input variable to validate\n * @returns {boolean} true/false\n * @example\n * turf.isObject({elevation: 10})\n * //=true\n * turf.isObject('foo')\n * //=false\n */\nexport function isObject(input) {\n    return !!input && input.constructor === Object;\n}\n/**\n * Validate BBox\n *\n * @private\n * @param {Array<number>} bbox BBox to validate\n * @returns {void}\n * @throws Error if BBox is not valid\n * @example\n * validateBBox([-180, -40, 110, 50])\n * //=OK\n * validateBBox([-180, -40])\n * //=Error\n * validateBBox('Foo')\n * //=Error\n * validateBBox(5)\n * //=Error\n * validateBBox(null)\n * //=Error\n * validateBBox(undefined)\n * //=Error\n */\nexport function validateBBox(bbox) {\n    if (!bbox) {\n        throw new Error(\"bbox is required\");\n    }\n    if (!Array.isArray(bbox)) {\n        throw new Error(\"bbox must be an Array\");\n    }\n    if (bbox.length !== 4 && bbox.length !== 6) {\n        throw new Error(\"bbox must be an Array of 4 or 6 numbers\");\n    }\n    bbox.forEach(function (num) {\n        if (!isNumber(num)) {\n            throw new Error(\"bbox must only contain numbers\");\n        }\n    });\n}\n/**\n * Validate Id\n *\n * @private\n * @param {string|number} id Id to validate\n * @returns {void}\n * @throws Error if Id is not valid\n * @example\n * validateId([-180, -40, 110, 50])\n * //=Error\n * validateId([-180, -40])\n * //=Error\n * validateId('Foo')\n * //=OK\n * validateId(5)\n * //=OK\n * validateId(null)\n * //=Error\n * validateId(undefined)\n * //=Error\n */\nexport function validateId(id) {\n    if (!id) {\n        throw new Error(\"id is required\");\n    }\n    if ([\"string\", \"number\"].indexOf(typeof id) === -1) {\n        throw new Error(\"id must be a number or a string\");\n    }\n}\n","import { feature, lineString, isObject, point } from '@turf/helpers';\n\n/**\n * Callback for coordEach\n *\n * @callback coordEachCallback\n * @param {Array<number>} currentCoord The current coordinate being processed.\n * @param {number} coordIndex The current index of the coordinate being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n */\n\n/**\n * Iterate over coordinates in any GeoJSON object, similar to Array.forEach()\n *\n * @name coordEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentCoord, coordIndex, featureIndex, multiFeatureIndex)\n * @param {boolean} [excludeWrapCoord=false] whether or not to include the final coordinate of LinearRings that wraps the ring in its iteration.\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.coordEach(features, function (currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=currentCoord\n *   //=coordIndex\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n * });\n */\nfunction coordEach(geojson, callback, excludeWrapCoord) {\n  // Handles null Geometry -- Skips this GeoJSON\n  if (geojson === null) return;\n  var j,\n    k,\n    l,\n    geometry,\n    stopG,\n    coords,\n    geometryMaybeCollection,\n    wrapShrink = 0,\n    coordIndex = 0,\n    isGeometryCollection,\n    type = geojson.type,\n    isFeatureCollection = type === \"FeatureCollection\",\n    isFeature = type === \"Feature\",\n    stop = isFeatureCollection ? geojson.features.length : 1;\n\n  // This logic may look a little weird. The reason why it is that way\n  // is because it's trying to be fast. GeoJSON supports multiple kinds\n  // of objects at its root: FeatureCollection, Features, Geometries.\n  // This function has the responsibility of handling all of them, and that\n  // means that some of the `for` loops you see below actually just don't apply\n  // to certain inputs. For instance, if you give this just a\n  // Point geometry, then both loops are short-circuited and all we do\n  // is gradually rename the input until it's called 'geometry'.\n  //\n  // This also aims to allocate as few resources as possible: just a\n  // few numbers and booleans, rather than any temporary arrays as would\n  // be required with the normalization approach.\n  for (var featureIndex = 0; featureIndex < stop; featureIndex++) {\n    geometryMaybeCollection = isFeatureCollection\n      ? geojson.features[featureIndex].geometry\n      : isFeature\n      ? geojson.geometry\n      : geojson;\n    isGeometryCollection = geometryMaybeCollection\n      ? geometryMaybeCollection.type === \"GeometryCollection\"\n      : false;\n    stopG = isGeometryCollection\n      ? geometryMaybeCollection.geometries.length\n      : 1;\n\n    for (var geomIndex = 0; geomIndex < stopG; geomIndex++) {\n      var multiFeatureIndex = 0;\n      var geometryIndex = 0;\n      geometry = isGeometryCollection\n        ? geometryMaybeCollection.geometries[geomIndex]\n        : geometryMaybeCollection;\n\n      // Handles null Geometry -- Skips this geometry\n      if (geometry === null) continue;\n      coords = geometry.coordinates;\n      var geomType = geometry.type;\n\n      wrapShrink =\n        excludeWrapCoord &&\n        (geomType === \"Polygon\" || geomType === \"MultiPolygon\")\n          ? 1\n          : 0;\n\n      switch (geomType) {\n        case null:\n          break;\n        case \"Point\":\n          if (\n            callback(\n              coords,\n              coordIndex,\n              featureIndex,\n              multiFeatureIndex,\n              geometryIndex\n            ) === false\n          )\n            return false;\n          coordIndex++;\n          multiFeatureIndex++;\n          break;\n        case \"LineString\":\n        case \"MultiPoint\":\n          for (j = 0; j < coords.length; j++) {\n            if (\n              callback(\n                coords[j],\n                coordIndex,\n                featureIndex,\n                multiFeatureIndex,\n                geometryIndex\n              ) === false\n            )\n              return false;\n            coordIndex++;\n            if (geomType === \"MultiPoint\") multiFeatureIndex++;\n          }\n          if (geomType === \"LineString\") multiFeatureIndex++;\n          break;\n        case \"Polygon\":\n        case \"MultiLineString\":\n          for (j = 0; j < coords.length; j++) {\n            for (k = 0; k < coords[j].length - wrapShrink; k++) {\n              if (\n                callback(\n                  coords[j][k],\n                  coordIndex,\n                  featureIndex,\n                  multiFeatureIndex,\n                  geometryIndex\n                ) === false\n              )\n                return false;\n              coordIndex++;\n            }\n            if (geomType === \"MultiLineString\") multiFeatureIndex++;\n            if (geomType === \"Polygon\") geometryIndex++;\n          }\n          if (geomType === \"Polygon\") multiFeatureIndex++;\n          break;\n        case \"MultiPolygon\":\n          for (j = 0; j < coords.length; j++) {\n            geometryIndex = 0;\n            for (k = 0; k < coords[j].length; k++) {\n              for (l = 0; l < coords[j][k].length - wrapShrink; l++) {\n                if (\n                  callback(\n                    coords[j][k][l],\n                    coordIndex,\n                    featureIndex,\n                    multiFeatureIndex,\n                    geometryIndex\n                  ) === false\n                )\n                  return false;\n                coordIndex++;\n              }\n              geometryIndex++;\n            }\n            multiFeatureIndex++;\n          }\n          break;\n        case \"GeometryCollection\":\n          for (j = 0; j < geometry.geometries.length; j++)\n            if (\n              coordEach(geometry.geometries[j], callback, excludeWrapCoord) ===\n              false\n            )\n              return false;\n          break;\n        default:\n          throw new Error(\"Unknown Geometry Type\");\n      }\n    }\n  }\n}\n\n/**\n * Callback for coordReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback coordReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Array<number>} currentCoord The current coordinate being processed.\n * @param {number} coordIndex The current index of the coordinate being processed.\n * Starts at index 0, if an initialValue is provided, and at index 1 otherwise.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n */\n\n/**\n * Reduce coordinates in any GeoJSON object, similar to Array.reduce()\n *\n * @name coordReduce\n * @param {FeatureCollection|Geometry|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentCoord, coordIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @param {boolean} [excludeWrapCoord=false] whether or not to include the final coordinate of LinearRings that wraps the ring in its iteration.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.coordReduce(features, function (previousValue, currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=previousValue\n *   //=currentCoord\n *   //=coordIndex\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   return currentCoord;\n * });\n */\nfunction coordReduce(geojson, callback, initialValue, excludeWrapCoord) {\n  var previousValue = initialValue;\n  coordEach(\n    geojson,\n    function (\n      currentCoord,\n      coordIndex,\n      featureIndex,\n      multiFeatureIndex,\n      geometryIndex\n    ) {\n      if (coordIndex === 0 && initialValue === undefined)\n        previousValue = currentCoord;\n      else\n        previousValue = callback(\n          previousValue,\n          currentCoord,\n          coordIndex,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex\n        );\n    },\n    excludeWrapCoord\n  );\n  return previousValue;\n}\n\n/**\n * Callback for propEach\n *\n * @callback propEachCallback\n * @param {Object} currentProperties The current Properties being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Iterate over properties in any GeoJSON object, similar to Array.forEach()\n *\n * @name propEach\n * @param {FeatureCollection|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentProperties, featureIndex)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.propEach(features, function (currentProperties, featureIndex) {\n *   //=currentProperties\n *   //=featureIndex\n * });\n */\nfunction propEach(geojson, callback) {\n  var i;\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      for (i = 0; i < geojson.features.length; i++) {\n        if (callback(geojson.features[i].properties, i) === false) break;\n      }\n      break;\n    case \"Feature\":\n      callback(geojson.properties, 0);\n      break;\n  }\n}\n\n/**\n * Callback for propReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback propReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {*} currentProperties The current Properties being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Reduce properties in any GeoJSON object into a single value,\n * similar to how Array.reduce works. However, in this case we lazily run\n * the reduction, so an array of all properties is unnecessary.\n *\n * @name propReduce\n * @param {FeatureCollection|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentProperties, featureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.propReduce(features, function (previousValue, currentProperties, featureIndex) {\n *   //=previousValue\n *   //=currentProperties\n *   //=featureIndex\n *   return currentProperties\n * });\n */\nfunction propReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  propEach(geojson, function (currentProperties, featureIndex) {\n    if (featureIndex === 0 && initialValue === undefined)\n      previousValue = currentProperties;\n    else\n      previousValue = callback(previousValue, currentProperties, featureIndex);\n  });\n  return previousValue;\n}\n\n/**\n * Callback for featureEach\n *\n * @callback featureEachCallback\n * @param {Feature<any>} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Iterate over features in any GeoJSON object, similar to\n * Array.forEach.\n *\n * @name featureEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentFeature, featureIndex)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {foo: 'bar'}),\n *   turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.featureEach(features, function (currentFeature, featureIndex) {\n *   //=currentFeature\n *   //=featureIndex\n * });\n */\nfunction featureEach(geojson, callback) {\n  if (geojson.type === \"Feature\") {\n    callback(geojson, 0);\n  } else if (geojson.type === \"FeatureCollection\") {\n    for (var i = 0; i < geojson.features.length; i++) {\n      if (callback(geojson.features[i], i) === false) break;\n    }\n  }\n}\n\n/**\n * Callback for featureReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback featureReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Reduce features in any GeoJSON object, similar to Array.reduce().\n *\n * @name featureReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentFeature, featureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.featureReduce(features, function (previousValue, currentFeature, featureIndex) {\n *   //=previousValue\n *   //=currentFeature\n *   //=featureIndex\n *   return currentFeature\n * });\n */\nfunction featureReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  featureEach(geojson, function (currentFeature, featureIndex) {\n    if (featureIndex === 0 && initialValue === undefined)\n      previousValue = currentFeature;\n    else previousValue = callback(previousValue, currentFeature, featureIndex);\n  });\n  return previousValue;\n}\n\n/**\n * Get all coordinates from any GeoJSON object.\n *\n * @name coordAll\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @returns {Array<Array<number>>} coordinate position array\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {foo: 'bar'}),\n *   turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * var coords = turf.coordAll(features);\n * //= [[26, 37], [36, 53]]\n */\nfunction coordAll(geojson) {\n  var coords = [];\n  coordEach(geojson, function (coord) {\n    coords.push(coord);\n  });\n  return coords;\n}\n\n/**\n * Callback for geomEach\n *\n * @callback geomEachCallback\n * @param {Geometry} currentGeometry The current Geometry being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {Object} featureProperties The current Feature Properties being processed.\n * @param {Array<number>} featureBBox The current Feature BBox being processed.\n * @param {number|string} featureId The current Feature Id being processed.\n */\n\n/**\n * Iterate over each geometry in any GeoJSON object, similar to Array.forEach()\n *\n * @name geomEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentGeometry, featureIndex, featureProperties, featureBBox, featureId)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.geomEach(features, function (currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n *   //=currentGeometry\n *   //=featureIndex\n *   //=featureProperties\n *   //=featureBBox\n *   //=featureId\n * });\n */\nfunction geomEach(geojson, callback) {\n  var i,\n    j,\n    g,\n    geometry,\n    stopG,\n    geometryMaybeCollection,\n    isGeometryCollection,\n    featureProperties,\n    featureBBox,\n    featureId,\n    featureIndex = 0,\n    isFeatureCollection = geojson.type === \"FeatureCollection\",\n    isFeature = geojson.type === \"Feature\",\n    stop = isFeatureCollection ? geojson.features.length : 1;\n\n  // This logic may look a little weird. The reason why it is that way\n  // is because it's trying to be fast. GeoJSON supports multiple kinds\n  // of objects at its root: FeatureCollection, Features, Geometries.\n  // This function has the responsibility of handling all of them, and that\n  // means that some of the `for` loops you see below actually just don't apply\n  // to certain inputs. For instance, if you give this just a\n  // Point geometry, then both loops are short-circuited and all we do\n  // is gradually rename the input until it's called 'geometry'.\n  //\n  // This also aims to allocate as few resources as possible: just a\n  // few numbers and booleans, rather than any temporary arrays as would\n  // be required with the normalization approach.\n  for (i = 0; i < stop; i++) {\n    geometryMaybeCollection = isFeatureCollection\n      ? geojson.features[i].geometry\n      : isFeature\n      ? geojson.geometry\n      : geojson;\n    featureProperties = isFeatureCollection\n      ? geojson.features[i].properties\n      : isFeature\n      ? geojson.properties\n      : {};\n    featureBBox = isFeatureCollection\n      ? geojson.features[i].bbox\n      : isFeature\n      ? geojson.bbox\n      : undefined;\n    featureId = isFeatureCollection\n      ? geojson.features[i].id\n      : isFeature\n      ? geojson.id\n      : undefined;\n    isGeometryCollection = geometryMaybeCollection\n      ? geometryMaybeCollection.type === \"GeometryCollection\"\n      : false;\n    stopG = isGeometryCollection\n      ? geometryMaybeCollection.geometries.length\n      : 1;\n\n    for (g = 0; g < stopG; g++) {\n      geometry = isGeometryCollection\n        ? geometryMaybeCollection.geometries[g]\n        : geometryMaybeCollection;\n\n      // Handle null Geometry\n      if (geometry === null) {\n        if (\n          callback(\n            null,\n            featureIndex,\n            featureProperties,\n            featureBBox,\n            featureId\n          ) === false\n        )\n          return false;\n        continue;\n      }\n      switch (geometry.type) {\n        case \"Point\":\n        case \"LineString\":\n        case \"MultiPoint\":\n        case \"Polygon\":\n        case \"MultiLineString\":\n        case \"MultiPolygon\": {\n          if (\n            callback(\n              geometry,\n              featureIndex,\n              featureProperties,\n              featureBBox,\n              featureId\n            ) === false\n          )\n            return false;\n          break;\n        }\n        case \"GeometryCollection\": {\n          for (j = 0; j < geometry.geometries.length; j++) {\n            if (\n              callback(\n                geometry.geometries[j],\n                featureIndex,\n                featureProperties,\n                featureBBox,\n                featureId\n              ) === false\n            )\n              return false;\n          }\n          break;\n        }\n        default:\n          throw new Error(\"Unknown Geometry Type\");\n      }\n    }\n    // Only increase `featureIndex` per each feature\n    featureIndex++;\n  }\n}\n\n/**\n * Callback for geomReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback geomReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Geometry} currentGeometry The current Geometry being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {Object} featureProperties The current Feature Properties being processed.\n * @param {Array<number>} featureBBox The current Feature BBox being processed.\n * @param {number|string} featureId The current Feature Id being processed.\n */\n\n/**\n * Reduce geometry in any GeoJSON object, similar to Array.reduce().\n *\n * @name geomReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.geomReduce(features, function (previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n *   //=previousValue\n *   //=currentGeometry\n *   //=featureIndex\n *   //=featureProperties\n *   //=featureBBox\n *   //=featureId\n *   return currentGeometry\n * });\n */\nfunction geomReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  geomEach(\n    geojson,\n    function (\n      currentGeometry,\n      featureIndex,\n      featureProperties,\n      featureBBox,\n      featureId\n    ) {\n      if (featureIndex === 0 && initialValue === undefined)\n        previousValue = currentGeometry;\n      else\n        previousValue = callback(\n          previousValue,\n          currentGeometry,\n          featureIndex,\n          featureProperties,\n          featureBBox,\n          featureId\n        );\n    }\n  );\n  return previousValue;\n}\n\n/**\n * Callback for flattenEach\n *\n * @callback flattenEachCallback\n * @param {Feature} currentFeature The current flattened feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n */\n\n/**\n * Iterate over flattened features in any GeoJSON object, similar to\n * Array.forEach.\n *\n * @name flattenEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentFeature, featureIndex, multiFeatureIndex)\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.multiPoint([[40, 30], [36, 53]], {hello: 'world'})\n * ]);\n *\n * turf.flattenEach(features, function (currentFeature, featureIndex, multiFeatureIndex) {\n *   //=currentFeature\n *   //=featureIndex\n *   //=multiFeatureIndex\n * });\n */\nfunction flattenEach(geojson, callback) {\n  geomEach(geojson, function (geometry, featureIndex, properties, bbox, id) {\n    // Callback for single geometry\n    var type = geometry === null ? null : geometry.type;\n    switch (type) {\n      case null:\n      case \"Point\":\n      case \"LineString\":\n      case \"Polygon\":\n        if (\n          callback(\n            feature(geometry, properties, { bbox: bbox, id: id }),\n            featureIndex,\n            0\n          ) === false\n        )\n          return false;\n        return;\n    }\n\n    var geomType;\n\n    // Callback for multi-geometry\n    switch (type) {\n      case \"MultiPoint\":\n        geomType = \"Point\";\n        break;\n      case \"MultiLineString\":\n        geomType = \"LineString\";\n        break;\n      case \"MultiPolygon\":\n        geomType = \"Polygon\";\n        break;\n    }\n\n    for (\n      var multiFeatureIndex = 0;\n      multiFeatureIndex < geometry.coordinates.length;\n      multiFeatureIndex++\n    ) {\n      var coordinate = geometry.coordinates[multiFeatureIndex];\n      var geom = {\n        type: geomType,\n        coordinates: coordinate,\n      };\n      if (\n        callback(feature(geom, properties), featureIndex, multiFeatureIndex) ===\n        false\n      )\n        return false;\n    }\n  });\n}\n\n/**\n * Callback for flattenReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback flattenReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n */\n\n/**\n * Reduce flattened features in any GeoJSON object, similar to Array.reduce().\n *\n * @name flattenReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentFeature, featureIndex, multiFeatureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.multiPoint([[40, 30], [36, 53]], {hello: 'world'})\n * ]);\n *\n * turf.flattenReduce(features, function (previousValue, currentFeature, featureIndex, multiFeatureIndex) {\n *   //=previousValue\n *   //=currentFeature\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   return currentFeature\n * });\n */\nfunction flattenReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  flattenEach(\n    geojson,\n    function (currentFeature, featureIndex, multiFeatureIndex) {\n      if (\n        featureIndex === 0 &&\n        multiFeatureIndex === 0 &&\n        initialValue === undefined\n      )\n        previousValue = currentFeature;\n      else\n        previousValue = callback(\n          previousValue,\n          currentFeature,\n          featureIndex,\n          multiFeatureIndex\n        );\n    }\n  );\n  return previousValue;\n}\n\n/**\n * Callback for segmentEach\n *\n * @callback segmentEachCallback\n * @param {Feature<LineString>} currentSegment The current Segment being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n * @param {number} segmentIndex The current index of the Segment being processed.\n * @returns {void}\n */\n\n/**\n * Iterate over 2-vertex line segment in any GeoJSON object, similar to Array.forEach()\n * (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON\n * @param {Function} callback a method that takes (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex)\n * @returns {void}\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n *\n * // Iterate over GeoJSON by 2-vertex segments\n * turf.segmentEach(polygon, function (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n *   //=currentSegment\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   //=segmentIndex\n * });\n *\n * // Calculate the total number of segments\n * var total = 0;\n * turf.segmentEach(polygon, function () {\n *     total++;\n * });\n */\nfunction segmentEach(geojson, callback) {\n  flattenEach(geojson, function (feature, featureIndex, multiFeatureIndex) {\n    var segmentIndex = 0;\n\n    // Exclude null Geometries\n    if (!feature.geometry) return;\n    // (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n    var type = feature.geometry.type;\n    if (type === \"Point\" || type === \"MultiPoint\") return;\n\n    // Generate 2-vertex line segments\n    var previousCoords;\n    var previousFeatureIndex = 0;\n    var previousMultiIndex = 0;\n    var prevGeomIndex = 0;\n    if (\n      coordEach(\n        feature,\n        function (\n          currentCoord,\n          coordIndex,\n          featureIndexCoord,\n          multiPartIndexCoord,\n          geometryIndex\n        ) {\n          // Simulating a meta.coordReduce() since `reduce` operations cannot be stopped by returning `false`\n          if (\n            previousCoords === undefined ||\n            featureIndex > previousFeatureIndex ||\n            multiPartIndexCoord > previousMultiIndex ||\n            geometryIndex > prevGeomIndex\n          ) {\n            previousCoords = currentCoord;\n            previousFeatureIndex = featureIndex;\n            previousMultiIndex = multiPartIndexCoord;\n            prevGeomIndex = geometryIndex;\n            segmentIndex = 0;\n            return;\n          }\n          var currentSegment = lineString(\n            [previousCoords, currentCoord],\n            feature.properties\n          );\n          if (\n            callback(\n              currentSegment,\n              featureIndex,\n              multiFeatureIndex,\n              geometryIndex,\n              segmentIndex\n            ) === false\n          )\n            return false;\n          segmentIndex++;\n          previousCoords = currentCoord;\n        }\n      ) === false\n    )\n      return false;\n  });\n}\n\n/**\n * Callback for segmentReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback segmentReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature<LineString>} currentSegment The current Segment being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n * @param {number} segmentIndex The current index of the Segment being processed.\n */\n\n/**\n * Reduce 2-vertex line segment in any GeoJSON object, similar to Array.reduce()\n * (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON\n * @param {Function} callback a method that takes (previousValue, currentSegment, currentIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {void}\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n *\n * // Iterate over GeoJSON by 2-vertex segments\n * turf.segmentReduce(polygon, function (previousSegment, currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n *   //= previousSegment\n *   //= currentSegment\n *   //= featureIndex\n *   //= multiFeatureIndex\n *   //= geometryIndex\n *   //= segmentIndex\n *   return currentSegment\n * });\n *\n * // Calculate the total number of segments\n * var initialValue = 0\n * var total = turf.segmentReduce(polygon, function (previousValue) {\n *     previousValue++;\n *     return previousValue;\n * }, initialValue);\n */\nfunction segmentReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  var started = false;\n  segmentEach(\n    geojson,\n    function (\n      currentSegment,\n      featureIndex,\n      multiFeatureIndex,\n      geometryIndex,\n      segmentIndex\n    ) {\n      if (started === false && initialValue === undefined)\n        previousValue = currentSegment;\n      else\n        previousValue = callback(\n          previousValue,\n          currentSegment,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex,\n          segmentIndex\n        );\n      started = true;\n    }\n  );\n  return previousValue;\n}\n\n/**\n * Callback for lineEach\n *\n * @callback lineEachCallback\n * @param {Feature<LineString>} currentLine The current LineString|LinearRing being processed\n * @param {number} featureIndex The current index of the Feature being processed\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed\n * @param {number} geometryIndex The current index of the Geometry being processed\n */\n\n/**\n * Iterate over line or ring coordinates in LineString, Polygon, MultiLineString, MultiPolygon Features or Geometries,\n * similar to Array.forEach.\n *\n * @name lineEach\n * @param {Geometry|Feature<LineString|Polygon|MultiLineString|MultiPolygon>} geojson object\n * @param {Function} callback a method that takes (currentLine, featureIndex, multiFeatureIndex, geometryIndex)\n * @example\n * var multiLine = turf.multiLineString([\n *   [[26, 37], [35, 45]],\n *   [[36, 53], [38, 50], [41, 55]]\n * ]);\n *\n * turf.lineEach(multiLine, function (currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=currentLine\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n * });\n */\nfunction lineEach(geojson, callback) {\n  // validation\n  if (!geojson) throw new Error(\"geojson is required\");\n\n  flattenEach(geojson, function (feature, featureIndex, multiFeatureIndex) {\n    if (feature.geometry === null) return;\n    var type = feature.geometry.type;\n    var coords = feature.geometry.coordinates;\n    switch (type) {\n      case \"LineString\":\n        if (callback(feature, featureIndex, multiFeatureIndex, 0, 0) === false)\n          return false;\n        break;\n      case \"Polygon\":\n        for (\n          var geometryIndex = 0;\n          geometryIndex < coords.length;\n          geometryIndex++\n        ) {\n          if (\n            callback(\n              lineString(coords[geometryIndex], feature.properties),\n              featureIndex,\n              multiFeatureIndex,\n              geometryIndex\n            ) === false\n          )\n            return false;\n        }\n        break;\n    }\n  });\n}\n\n/**\n * Callback for lineReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback lineReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature<LineString>} currentLine The current LineString|LinearRing being processed.\n * @param {number} featureIndex The current index of the Feature being processed\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed\n * @param {number} geometryIndex The current index of the Geometry being processed\n */\n\n/**\n * Reduce features in any GeoJSON object, similar to Array.reduce().\n *\n * @name lineReduce\n * @param {Geometry|Feature<LineString|Polygon|MultiLineString|MultiPolygon>} geojson object\n * @param {Function} callback a method that takes (previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var multiPoly = turf.multiPolygon([\n *   turf.polygon([[[12,48],[2,41],[24,38],[12,48]], [[9,44],[13,41],[13,45],[9,44]]]),\n *   turf.polygon([[[5, 5], [0, 0], [2, 2], [4, 4], [5, 5]]])\n * ]);\n *\n * turf.lineReduce(multiPoly, function (previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=previousValue\n *   //=currentLine\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   return currentLine\n * });\n */\nfunction lineReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  lineEach(\n    geojson,\n    function (currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n      if (featureIndex === 0 && initialValue === undefined)\n        previousValue = currentLine;\n      else\n        previousValue = callback(\n          previousValue,\n          currentLine,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex\n        );\n    }\n  );\n  return previousValue;\n}\n\n/**\n * Finds a particular 2-vertex LineString Segment from a GeoJSON using `@turf/meta` indexes.\n *\n * Negative indexes are permitted.\n * Point & MultiPoint will always return null.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson Any GeoJSON Feature or Geometry\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.featureIndex=0] Feature Index\n * @param {number} [options.multiFeatureIndex=0] Multi-Feature Index\n * @param {number} [options.geometryIndex=0] Geometry Index\n * @param {number} [options.segmentIndex=0] Segment Index\n * @param {Object} [options.properties={}] Translate Properties to output LineString\n * @param {BBox} [options.bbox={}] Translate BBox to output LineString\n * @param {number|string} [options.id={}] Translate Id to output LineString\n * @returns {Feature<LineString>} 2-vertex GeoJSON Feature LineString\n * @example\n * var multiLine = turf.multiLineString([\n *     [[10, 10], [50, 30], [30, 40]],\n *     [[-10, -10], [-50, -30], [-30, -40]]\n * ]);\n *\n * // First Segment (defaults are 0)\n * turf.findSegment(multiLine);\n * // => Feature<LineString<[[10, 10], [50, 30]]>>\n *\n * // First Segment of 2nd Multi Feature\n * turf.findSegment(multiLine, {multiFeatureIndex: 1});\n * // => Feature<LineString<[[-10, -10], [-50, -30]]>>\n *\n * // Last Segment of Last Multi Feature\n * turf.findSegment(multiLine, {multiFeatureIndex: -1, segmentIndex: -1});\n * // => Feature<LineString<[[-50, -30], [-30, -40]]>>\n */\nfunction findSegment(geojson, options) {\n  // Optional Parameters\n  options = options || {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  var featureIndex = options.featureIndex || 0;\n  var multiFeatureIndex = options.multiFeatureIndex || 0;\n  var geometryIndex = options.geometryIndex || 0;\n  var segmentIndex = options.segmentIndex || 0;\n\n  // Find FeatureIndex\n  var properties = options.properties;\n  var geometry;\n\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      if (featureIndex < 0)\n        featureIndex = geojson.features.length + featureIndex;\n      properties = properties || geojson.features[featureIndex].properties;\n      geometry = geojson.features[featureIndex].geometry;\n      break;\n    case \"Feature\":\n      properties = properties || geojson.properties;\n      geometry = geojson.geometry;\n      break;\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n    case \"Polygon\":\n    case \"MultiLineString\":\n    case \"MultiPolygon\":\n      geometry = geojson;\n      break;\n    default:\n      throw new Error(\"geojson is invalid\");\n  }\n\n  // Find SegmentIndex\n  if (geometry === null) return null;\n  var coords = geometry.coordinates;\n  switch (geometry.type) {\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n      if (segmentIndex < 0) segmentIndex = coords.length + segmentIndex - 1;\n      return lineString(\n        [coords[segmentIndex], coords[segmentIndex + 1]],\n        properties,\n        options\n      );\n    case \"Polygon\":\n      if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n      if (segmentIndex < 0)\n        segmentIndex = coords[geometryIndex].length + segmentIndex - 1;\n      return lineString(\n        [\n          coords[geometryIndex][segmentIndex],\n          coords[geometryIndex][segmentIndex + 1],\n        ],\n        properties,\n        options\n      );\n    case \"MultiLineString\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (segmentIndex < 0)\n        segmentIndex = coords[multiFeatureIndex].length + segmentIndex - 1;\n      return lineString(\n        [\n          coords[multiFeatureIndex][segmentIndex],\n          coords[multiFeatureIndex][segmentIndex + 1],\n        ],\n        properties,\n        options\n      );\n    case \"MultiPolygon\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (geometryIndex < 0)\n        geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n      if (segmentIndex < 0)\n        segmentIndex =\n          coords[multiFeatureIndex][geometryIndex].length - segmentIndex - 1;\n      return lineString(\n        [\n          coords[multiFeatureIndex][geometryIndex][segmentIndex],\n          coords[multiFeatureIndex][geometryIndex][segmentIndex + 1],\n        ],\n        properties,\n        options\n      );\n  }\n  throw new Error(\"geojson is invalid\");\n}\n\n/**\n * Finds a particular Point from a GeoJSON using `@turf/meta` indexes.\n *\n * Negative indexes are permitted.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson Any GeoJSON Feature or Geometry\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.featureIndex=0] Feature Index\n * @param {number} [options.multiFeatureIndex=0] Multi-Feature Index\n * @param {number} [options.geometryIndex=0] Geometry Index\n * @param {number} [options.coordIndex=0] Coord Index\n * @param {Object} [options.properties={}] Translate Properties to output Point\n * @param {BBox} [options.bbox={}] Translate BBox to output Point\n * @param {number|string} [options.id={}] Translate Id to output Point\n * @returns {Feature<Point>} 2-vertex GeoJSON Feature Point\n * @example\n * var multiLine = turf.multiLineString([\n *     [[10, 10], [50, 30], [30, 40]],\n *     [[-10, -10], [-50, -30], [-30, -40]]\n * ]);\n *\n * // First Segment (defaults are 0)\n * turf.findPoint(multiLine);\n * // => Feature<Point<[10, 10]>>\n *\n * // First Segment of the 2nd Multi-Feature\n * turf.findPoint(multiLine, {multiFeatureIndex: 1});\n * // => Feature<Point<[-10, -10]>>\n *\n * // Last Segment of last Multi-Feature\n * turf.findPoint(multiLine, {multiFeatureIndex: -1, coordIndex: -1});\n * // => Feature<Point<[-30, -40]>>\n */\nfunction findPoint(geojson, options) {\n  // Optional Parameters\n  options = options || {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  var featureIndex = options.featureIndex || 0;\n  var multiFeatureIndex = options.multiFeatureIndex || 0;\n  var geometryIndex = options.geometryIndex || 0;\n  var coordIndex = options.coordIndex || 0;\n\n  // Find FeatureIndex\n  var properties = options.properties;\n  var geometry;\n\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      if (featureIndex < 0)\n        featureIndex = geojson.features.length + featureIndex;\n      properties = properties || geojson.features[featureIndex].properties;\n      geometry = geojson.features[featureIndex].geometry;\n      break;\n    case \"Feature\":\n      properties = properties || geojson.properties;\n      geometry = geojson.geometry;\n      break;\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n    case \"Polygon\":\n    case \"MultiLineString\":\n    case \"MultiPolygon\":\n      geometry = geojson;\n      break;\n    default:\n      throw new Error(\"geojson is invalid\");\n  }\n\n  // Find Coord Index\n  if (geometry === null) return null;\n  var coords = geometry.coordinates;\n  switch (geometry.type) {\n    case \"Point\":\n      return point(coords, properties, options);\n    case \"MultiPoint\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      return point(coords[multiFeatureIndex], properties, options);\n    case \"LineString\":\n      if (coordIndex < 0) coordIndex = coords.length + coordIndex;\n      return point(coords[coordIndex], properties, options);\n    case \"Polygon\":\n      if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n      if (coordIndex < 0)\n        coordIndex = coords[geometryIndex].length + coordIndex;\n      return point(coords[geometryIndex][coordIndex], properties, options);\n    case \"MultiLineString\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (coordIndex < 0)\n        coordIndex = coords[multiFeatureIndex].length + coordIndex;\n      return point(coords[multiFeatureIndex][coordIndex], properties, options);\n    case \"MultiPolygon\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (geometryIndex < 0)\n        geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n      if (coordIndex < 0)\n        coordIndex =\n          coords[multiFeatureIndex][geometryIndex].length - coordIndex;\n      return point(\n        coords[multiFeatureIndex][geometryIndex][coordIndex],\n        properties,\n        options\n      );\n  }\n  throw new Error(\"geojson is invalid\");\n}\n\nexport { coordAll, coordEach, coordReduce, featureEach, featureReduce, findPoint, findSegment, flattenEach, flattenReduce, geomEach, geomReduce, lineEach, lineReduce, propEach, propReduce, segmentEach, segmentReduce };\n","import { polygon, } from \"@turf/helpers\";\nimport { coordEach } from \"@turf/meta\";\nimport concaveman from \"concaveman\";\n/**\n * Takes a {@link Feature} or a {@link FeatureCollection} and returns a convex hull {@link Polygon}.\n *\n * Internally this uses\n * the [convex-hull](https://github.com/mikolalysenko/convex-hull) module that implements a\n * [monotone chain hull](http://en.wikibooks.org/wiki/Algorithm_Implementation/Geometry/Convex_hull/Monotone_chain).\n *\n * @name convex\n * @param {GeoJSON} geojson input Feature or FeatureCollection\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.concavity=Infinity] 1 - thin shape. Infinity - convex hull.\n * @param {Object} [options.properties={}] Translate Properties to Feature\n * @returns {Feature<Polygon>} a convex hull\n * @example\n * var points = turf.featureCollection([\n *   turf.point([10.195312, 43.755225]),\n *   turf.point([10.404052, 43.8424511]),\n *   turf.point([10.579833, 43.659924]),\n *   turf.point([10.360107, 43.516688]),\n *   turf.point([10.14038, 43.588348]),\n *   turf.point([10.195312, 43.755225])\n * ]);\n *\n * var hull = turf.convex(points);\n *\n * //addToMap\n * var addToMap = [points, hull]\n */\nexport default function convex(geojson, options) {\n    if (options === void 0) { options = {}; }\n    // Default parameters\n    options.concavity = options.concavity || Infinity;\n    // Container\n    var points = [];\n    // Convert all points to flat 2D coordinate Array\n    coordEach(geojson, function (coord) {\n        points.push([coord[0], coord[1]]);\n    });\n    if (!points.length) {\n        return null;\n    }\n    var convexHull = concaveman(points, options.concavity);\n    // Convex hull should have at least 3 different vertices in order to create a valid polygon\n    if (convexHull.length > 3) {\n        return polygon([convexHull]);\n    }\n    return null;\n}\n","/**\n * @module helpers\n */\n/**\n * Earth Radius used with the Harvesine formula and approximates using a spherical (non-ellipsoid) Earth.\n *\n * @memberof helpers\n * @type {number}\n */\nexport var earthRadius = 6371008.8;\n/**\n * Unit of measurement factors using a spherical (non-ellipsoid) earth radius.\n *\n * @memberof helpers\n * @type {Object}\n */\nexport var factors = {\n    centimeters: earthRadius * 100,\n    centimetres: earthRadius * 100,\n    degrees: earthRadius / 111325,\n    feet: earthRadius * 3.28084,\n    inches: earthRadius * 39.37,\n    kilometers: earthRadius / 1000,\n    kilometres: earthRadius / 1000,\n    meters: earthRadius,\n    metres: earthRadius,\n    miles: earthRadius / 1609.344,\n    millimeters: earthRadius * 1000,\n    millimetres: earthRadius * 1000,\n    nauticalmiles: earthRadius / 1852,\n    radians: 1,\n    yards: earthRadius * 1.0936,\n};\n/**\n * Units of measurement factors based on 1 meter.\n *\n * @memberof helpers\n * @type {Object}\n */\nexport var unitsFactors = {\n    centimeters: 100,\n    centimetres: 100,\n    degrees: 1 / 111325,\n    feet: 3.28084,\n    inches: 39.37,\n    kilometers: 1 / 1000,\n    kilometres: 1 / 1000,\n    meters: 1,\n    metres: 1,\n    miles: 1 / 1609.344,\n    millimeters: 1000,\n    millimetres: 1000,\n    nauticalmiles: 1 / 1852,\n    radians: 1 / earthRadius,\n    yards: 1.0936133,\n};\n/**\n * Area of measurement factors based on 1 square meter.\n *\n * @memberof helpers\n * @type {Object}\n */\nexport var areaFactors = {\n    acres: 0.000247105,\n    centimeters: 10000,\n    centimetres: 10000,\n    feet: 10.763910417,\n    hectares: 0.0001,\n    inches: 1550.003100006,\n    kilometers: 0.000001,\n    kilometres: 0.000001,\n    meters: 1,\n    metres: 1,\n    miles: 3.86e-7,\n    millimeters: 1000000,\n    millimetres: 1000000,\n    yards: 1.195990046,\n};\n/**\n * Wraps a GeoJSON {@link Geometry} in a GeoJSON {@link Feature}.\n *\n * @name feature\n * @param {Geometry} geometry input geometry\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature} a GeoJSON Feature\n * @example\n * var geometry = {\n *   \"type\": \"Point\",\n *   \"coordinates\": [110, 50]\n * };\n *\n * var feature = turf.feature(geometry);\n *\n * //=feature\n */\nexport function feature(geom, properties, options) {\n    if (options === void 0) { options = {}; }\n    var feat = { type: \"Feature\" };\n    if (options.id === 0 || options.id) {\n        feat.id = options.id;\n    }\n    if (options.bbox) {\n        feat.bbox = options.bbox;\n    }\n    feat.properties = properties || {};\n    feat.geometry = geom;\n    return feat;\n}\n/**\n * Creates a GeoJSON {@link Geometry} from a Geometry string type & coordinates.\n * For GeometryCollection type use `helpers.geometryCollection`\n *\n * @name geometry\n * @param {string} type Geometry Type\n * @param {Array<any>} coordinates Coordinates\n * @param {Object} [options={}] Optional Parameters\n * @returns {Geometry} a GeoJSON Geometry\n * @example\n * var type = \"Point\";\n * var coordinates = [110, 50];\n * var geometry = turf.geometry(type, coordinates);\n * // => geometry\n */\nexport function geometry(type, coordinates, _options) {\n    if (_options === void 0) { _options = {}; }\n    switch (type) {\n        case \"Point\":\n            return point(coordinates).geometry;\n        case \"LineString\":\n            return lineString(coordinates).geometry;\n        case \"Polygon\":\n            return polygon(coordinates).geometry;\n        case \"MultiPoint\":\n            return multiPoint(coordinates).geometry;\n        case \"MultiLineString\":\n            return multiLineString(coordinates).geometry;\n        case \"MultiPolygon\":\n            return multiPolygon(coordinates).geometry;\n        default:\n            throw new Error(type + \" is invalid\");\n    }\n}\n/**\n * Creates a {@link Point} {@link Feature} from a Position.\n *\n * @name point\n * @param {Array<number>} coordinates longitude, latitude position (each in decimal degrees)\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Point>} a Point feature\n * @example\n * var point = turf.point([-75.343, 39.984]);\n *\n * //=point\n */\nexport function point(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    if (!coordinates) {\n        throw new Error(\"coordinates is required\");\n    }\n    if (!Array.isArray(coordinates)) {\n        throw new Error(\"coordinates must be an Array\");\n    }\n    if (coordinates.length < 2) {\n        throw new Error(\"coordinates must be at least 2 numbers long\");\n    }\n    if (!isNumber(coordinates[0]) || !isNumber(coordinates[1])) {\n        throw new Error(\"coordinates must contain numbers\");\n    }\n    var geom = {\n        type: \"Point\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link Point} {@link FeatureCollection} from an Array of Point coordinates.\n *\n * @name points\n * @param {Array<Array<number>>} coordinates an array of Points\n * @param {Object} [properties={}] Translate these properties to each Feature\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north]\n * associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Point>} Point Feature\n * @example\n * var points = turf.points([\n *   [-75, 39],\n *   [-80, 45],\n *   [-78, 50]\n * ]);\n *\n * //=points\n */\nexport function points(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return point(coords, properties);\n    }), options);\n}\n/**\n * Creates a {@link Polygon} {@link Feature} from an Array of LinearRings.\n *\n * @name polygon\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Polygon>} Polygon Feature\n * @example\n * var polygon = turf.polygon([[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]], { name: 'poly1' });\n *\n * //=polygon\n */\nexport function polygon(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    for (var _i = 0, coordinates_1 = coordinates; _i < coordinates_1.length; _i++) {\n        var ring = coordinates_1[_i];\n        if (ring.length < 4) {\n            throw new Error(\"Each LinearRing of a Polygon must have 4 or more Positions.\");\n        }\n        for (var j = 0; j < ring[ring.length - 1].length; j++) {\n            // Check if first point of Polygon contains two numbers\n            if (ring[ring.length - 1][j] !== ring[0][j]) {\n                throw new Error(\"First and last Position are not equivalent.\");\n            }\n        }\n    }\n    var geom = {\n        type: \"Polygon\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link Polygon} {@link FeatureCollection} from an Array of Polygon coordinates.\n *\n * @name polygons\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygon coordinates\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Polygon>} Polygon FeatureCollection\n * @example\n * var polygons = turf.polygons([\n *   [[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]],\n *   [[[-15, 42], [-14, 46], [-12, 41], [-17, 44], [-15, 42]]],\n * ]);\n *\n * //=polygons\n */\nexport function polygons(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return polygon(coords, properties);\n    }), options);\n}\n/**\n * Creates a {@link LineString} {@link Feature} from an Array of Positions.\n *\n * @name lineString\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<LineString>} LineString Feature\n * @example\n * var linestring1 = turf.lineString([[-24, 63], [-23, 60], [-25, 65], [-20, 69]], {name: 'line 1'});\n * var linestring2 = turf.lineString([[-14, 43], [-13, 40], [-15, 45], [-10, 49]], {name: 'line 2'});\n *\n * //=linestring1\n * //=linestring2\n */\nexport function lineString(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    if (coordinates.length < 2) {\n        throw new Error(\"coordinates must be an array of two or more positions\");\n    }\n    var geom = {\n        type: \"LineString\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link LineString} {@link FeatureCollection} from an Array of LineString coordinates.\n *\n * @name lineStrings\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north]\n * associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<LineString>} LineString FeatureCollection\n * @example\n * var linestrings = turf.lineStrings([\n *   [[-24, 63], [-23, 60], [-25, 65], [-20, 69]],\n *   [[-14, 43], [-13, 40], [-15, 45], [-10, 49]]\n * ]);\n *\n * //=linestrings\n */\nexport function lineStrings(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return lineString(coords, properties);\n    }), options);\n}\n/**\n * Takes one or more {@link Feature|Features} and creates a {@link FeatureCollection}.\n *\n * @name featureCollection\n * @param {Feature[]} features input features\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {FeatureCollection} FeatureCollection of Features\n * @example\n * var locationA = turf.point([-75.343, 39.984], {name: 'Location A'});\n * var locationB = turf.point([-75.833, 39.284], {name: 'Location B'});\n * var locationC = turf.point([-75.534, 39.123], {name: 'Location C'});\n *\n * var collection = turf.featureCollection([\n *   locationA,\n *   locationB,\n *   locationC\n * ]);\n *\n * //=collection\n */\nexport function featureCollection(features, options) {\n    if (options === void 0) { options = {}; }\n    var fc = { type: \"FeatureCollection\" };\n    if (options.id) {\n        fc.id = options.id;\n    }\n    if (options.bbox) {\n        fc.bbox = options.bbox;\n    }\n    fc.features = features;\n    return fc;\n}\n/**\n * Creates a {@link Feature<MultiLineString>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiLineString\n * @param {Array<Array<Array<number>>>} coordinates an array of LineStrings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiLineString>} a MultiLineString feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiLine = turf.multiLineString([[[0,0],[10,10]]]);\n *\n * //=multiLine\n */\nexport function multiLineString(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiLineString\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link Feature<MultiPoint>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPoint\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPoint>} a MultiPoint feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPt = turf.multiPoint([[0,0],[10,10]]);\n *\n * //=multiPt\n */\nexport function multiPoint(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiPoint\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link Feature<MultiPolygon>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPolygon\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygons\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPolygon>} a multipolygon feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPoly = turf.multiPolygon([[[[0,0],[0,10],[10,10],[10,0],[0,0]]]]);\n *\n * //=multiPoly\n *\n */\nexport function multiPolygon(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiPolygon\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link Feature<GeometryCollection>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name geometryCollection\n * @param {Array<Geometry>} geometries an array of GeoJSON Geometries\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<GeometryCollection>} a GeoJSON GeometryCollection Feature\n * @example\n * var pt = turf.geometry(\"Point\", [100, 0]);\n * var line = turf.geometry(\"LineString\", [[101, 0], [102, 1]]);\n * var collection = turf.geometryCollection([pt, line]);\n *\n * // => collection\n */\nexport function geometryCollection(geometries, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"GeometryCollection\",\n        geometries: geometries,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Round number to precision\n *\n * @param {number} num Number\n * @param {number} [precision=0] Precision\n * @returns {number} rounded number\n * @example\n * turf.round(120.4321)\n * //=120\n *\n * turf.round(120.4321, 2)\n * //=120.43\n */\nexport function round(num, precision) {\n    if (precision === void 0) { precision = 0; }\n    if (precision && !(precision >= 0)) {\n        throw new Error(\"precision must be a positive number\");\n    }\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.round(num * multiplier) / multiplier;\n}\n/**\n * Convert a distance measurement (assuming a spherical Earth) from radians to a more friendly unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name radiansToLength\n * @param {number} radians in radians across the sphere\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} distance\n */\nexport function radiansToLength(radians, units) {\n    if (units === void 0) { units = \"kilometers\"; }\n    var factor = factors[units];\n    if (!factor) {\n        throw new Error(units + \" units is invalid\");\n    }\n    return radians * factor;\n}\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into radians\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name lengthToRadians\n * @param {number} distance in real units\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} radians\n */\nexport function lengthToRadians(distance, units) {\n    if (units === void 0) { units = \"kilometers\"; }\n    var factor = factors[units];\n    if (!factor) {\n        throw new Error(units + \" units is invalid\");\n    }\n    return distance / factor;\n}\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into degrees\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, centimeters, kilometres, feet\n *\n * @name lengthToDegrees\n * @param {number} distance in real units\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} degrees\n */\nexport function lengthToDegrees(distance, units) {\n    return radiansToDegrees(lengthToRadians(distance, units));\n}\n/**\n * Converts any bearing angle from the north line direction (positive clockwise)\n * and returns an angle between 0-360 degrees (positive clockwise), 0 being the north line\n *\n * @name bearingToAzimuth\n * @param {number} bearing angle, between -180 and +180 degrees\n * @returns {number} angle between 0 and 360 degrees\n */\nexport function bearingToAzimuth(bearing) {\n    var angle = bearing % 360;\n    if (angle < 0) {\n        angle += 360;\n    }\n    return angle;\n}\n/**\n * Converts an angle in radians to degrees\n *\n * @name radiansToDegrees\n * @param {number} radians angle in radians\n * @returns {number} degrees between 0 and 360 degrees\n */\nexport function radiansToDegrees(radians) {\n    var degrees = radians % (2 * Math.PI);\n    return (degrees * 180) / Math.PI;\n}\n/**\n * Converts an angle in degrees to radians\n *\n * @name degreesToRadians\n * @param {number} degrees angle between 0 and 360 degrees\n * @returns {number} angle in radians\n */\nexport function degreesToRadians(degrees) {\n    var radians = degrees % 360;\n    return (radians * Math.PI) / 180;\n}\n/**\n * Converts a length to the requested unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @param {number} length to be converted\n * @param {Units} [originalUnit=\"kilometers\"] of the length\n * @param {Units} [finalUnit=\"kilometers\"] returned unit\n * @returns {number} the converted length\n */\nexport function convertLength(length, originalUnit, finalUnit) {\n    if (originalUnit === void 0) { originalUnit = \"kilometers\"; }\n    if (finalUnit === void 0) { finalUnit = \"kilometers\"; }\n    if (!(length >= 0)) {\n        throw new Error(\"length must be a positive number\");\n    }\n    return radiansToLength(lengthToRadians(length, originalUnit), finalUnit);\n}\n/**\n * Converts a area to the requested unit.\n * Valid units: kilometers, kilometres, meters, metres, centimetres, millimeters, acres, miles, yards, feet, inches, hectares\n * @param {number} area to be converted\n * @param {Units} [originalUnit=\"meters\"] of the distance\n * @param {Units} [finalUnit=\"kilometers\"] returned unit\n * @returns {number} the converted area\n */\nexport function convertArea(area, originalUnit, finalUnit) {\n    if (originalUnit === void 0) { originalUnit = \"meters\"; }\n    if (finalUnit === void 0) { finalUnit = \"kilometers\"; }\n    if (!(area >= 0)) {\n        throw new Error(\"area must be a positive number\");\n    }\n    var startFactor = areaFactors[originalUnit];\n    if (!startFactor) {\n        throw new Error(\"invalid original units\");\n    }\n    var finalFactor = areaFactors[finalUnit];\n    if (!finalFactor) {\n        throw new Error(\"invalid final units\");\n    }\n    return (area / startFactor) * finalFactor;\n}\n/**\n * isNumber\n *\n * @param {*} num Number to validate\n * @returns {boolean} true/false\n * @example\n * turf.isNumber(123)\n * //=true\n * turf.isNumber('foo')\n * //=false\n */\nexport function isNumber(num) {\n    return !isNaN(num) && num !== null && !Array.isArray(num);\n}\n/**\n * isObject\n *\n * @param {*} input variable to validate\n * @returns {boolean} true/false\n * @example\n * turf.isObject({elevation: 10})\n * //=true\n * turf.isObject('foo')\n * //=false\n */\nexport function isObject(input) {\n    return !!input && input.constructor === Object;\n}\n/**\n * Validate BBox\n *\n * @private\n * @param {Array<number>} bbox BBox to validate\n * @returns {void}\n * @throws Error if BBox is not valid\n * @example\n * validateBBox([-180, -40, 110, 50])\n * //=OK\n * validateBBox([-180, -40])\n * //=Error\n * validateBBox('Foo')\n * //=Error\n * validateBBox(5)\n * //=Error\n * validateBBox(null)\n * //=Error\n * validateBBox(undefined)\n * //=Error\n */\nexport function validateBBox(bbox) {\n    if (!bbox) {\n        throw new Error(\"bbox is required\");\n    }\n    if (!Array.isArray(bbox)) {\n        throw new Error(\"bbox must be an Array\");\n    }\n    if (bbox.length !== 4 && bbox.length !== 6) {\n        throw new Error(\"bbox must be an Array of 4 or 6 numbers\");\n    }\n    bbox.forEach(function (num) {\n        if (!isNumber(num)) {\n            throw new Error(\"bbox must only contain numbers\");\n        }\n    });\n}\n/**\n * Validate Id\n *\n * @private\n * @param {string|number} id Id to validate\n * @returns {void}\n * @throws Error if Id is not valid\n * @example\n * validateId([-180, -40, 110, 50])\n * //=Error\n * validateId([-180, -40])\n * //=Error\n * validateId('Foo')\n * //=OK\n * validateId(5)\n * //=OK\n * validateId(null)\n * //=Error\n * validateId(undefined)\n * //=Error\n */\nexport function validateId(id) {\n    if (!id) {\n        throw new Error(\"id is required\");\n    }\n    if ([\"string\", \"number\"].indexOf(typeof id) === -1) {\n        throw new Error(\"id must be a number or a string\");\n    }\n}\n","import polygonClipping from 'polygon-clipping';\nimport { polygon, multiPolygon } from '@turf/helpers';\nimport { getGeom } from '@turf/invariant';\n\n/**\n * Finds the difference between two {@link Polygon|polygons} by clipping the second polygon from the first.\n *\n * @name difference\n * @param {Feature<Polygon|MultiPolygon>} polygon1 input Polygon feature\n * @param {Feature<Polygon|MultiPolygon>} polygon2 Polygon feature to difference from polygon1\n * @returns {Feature<Polygon|MultiPolygon>|null} a Polygon or MultiPolygon feature showing the area of `polygon1` excluding the area of `polygon2` (if empty returns `null`)\n * @example\n * var polygon1 = turf.polygon([[\n *   [128, -26],\n *   [141, -26],\n *   [141, -21],\n *   [128, -21],\n *   [128, -26]\n * ]], {\n *   \"fill\": \"#F00\",\n *   \"fill-opacity\": 0.1\n * });\n * var polygon2 = turf.polygon([[\n *   [126, -28],\n *   [140, -28],\n *   [140, -20],\n *   [126, -20],\n *   [126, -28]\n * ]], {\n *   \"fill\": \"#00F\",\n *   \"fill-opacity\": 0.1\n * });\n *\n * var difference = turf.difference(polygon1, polygon2);\n *\n * //addToMap\n * var addToMap = [polygon1, polygon2, difference];\n */\nfunction difference(polygon1, polygon2) {\n  var geom1 = getGeom(polygon1);\n  var geom2 = getGeom(polygon2);\n  var properties = polygon1.properties || {};\n\n  var differenced = polygonClipping.difference(\n    geom1.coordinates,\n    geom2.coordinates\n  );\n  if (differenced.length === 0) return null;\n  if (differenced.length === 1) return polygon(differenced[0], properties);\n  return multiPolygon(differenced, properties);\n}\n\nexport default difference;\n","/**\n * @module helpers\n */\n/**\n * Earth Radius used with the Harvesine formula and approximates using a spherical (non-ellipsoid) Earth.\n *\n * @memberof helpers\n * @type {number}\n */\nexport var earthRadius = 6371008.8;\n/**\n * Unit of measurement factors using a spherical (non-ellipsoid) earth radius.\n *\n * @memberof helpers\n * @type {Object}\n */\nexport var factors = {\n    centimeters: earthRadius * 100,\n    centimetres: earthRadius * 100,\n    degrees: earthRadius / 111325,\n    feet: earthRadius * 3.28084,\n    inches: earthRadius * 39.37,\n    kilometers: earthRadius / 1000,\n    kilometres: earthRadius / 1000,\n    meters: earthRadius,\n    metres: earthRadius,\n    miles: earthRadius / 1609.344,\n    millimeters: earthRadius * 1000,\n    millimetres: earthRadius * 1000,\n    nauticalmiles: earthRadius / 1852,\n    radians: 1,\n    yards: earthRadius * 1.0936,\n};\n/**\n * Units of measurement factors based on 1 meter.\n *\n * @memberof helpers\n * @type {Object}\n */\nexport var unitsFactors = {\n    centimeters: 100,\n    centimetres: 100,\n    degrees: 1 / 111325,\n    feet: 3.28084,\n    inches: 39.37,\n    kilometers: 1 / 1000,\n    kilometres: 1 / 1000,\n    meters: 1,\n    metres: 1,\n    miles: 1 / 1609.344,\n    millimeters: 1000,\n    millimetres: 1000,\n    nauticalmiles: 1 / 1852,\n    radians: 1 / earthRadius,\n    yards: 1.0936133,\n};\n/**\n * Area of measurement factors based on 1 square meter.\n *\n * @memberof helpers\n * @type {Object}\n */\nexport var areaFactors = {\n    acres: 0.000247105,\n    centimeters: 10000,\n    centimetres: 10000,\n    feet: 10.763910417,\n    hectares: 0.0001,\n    inches: 1550.003100006,\n    kilometers: 0.000001,\n    kilometres: 0.000001,\n    meters: 1,\n    metres: 1,\n    miles: 3.86e-7,\n    millimeters: 1000000,\n    millimetres: 1000000,\n    yards: 1.195990046,\n};\n/**\n * Wraps a GeoJSON {@link Geometry} in a GeoJSON {@link Feature}.\n *\n * @name feature\n * @param {Geometry} geometry input geometry\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature} a GeoJSON Feature\n * @example\n * var geometry = {\n *   \"type\": \"Point\",\n *   \"coordinates\": [110, 50]\n * };\n *\n * var feature = turf.feature(geometry);\n *\n * //=feature\n */\nexport function feature(geom, properties, options) {\n    if (options === void 0) { options = {}; }\n    var feat = { type: \"Feature\" };\n    if (options.id === 0 || options.id) {\n        feat.id = options.id;\n    }\n    if (options.bbox) {\n        feat.bbox = options.bbox;\n    }\n    feat.properties = properties || {};\n    feat.geometry = geom;\n    return feat;\n}\n/**\n * Creates a GeoJSON {@link Geometry} from a Geometry string type & coordinates.\n * For GeometryCollection type use `helpers.geometryCollection`\n *\n * @name geometry\n * @param {string} type Geometry Type\n * @param {Array<any>} coordinates Coordinates\n * @param {Object} [options={}] Optional Parameters\n * @returns {Geometry} a GeoJSON Geometry\n * @example\n * var type = \"Point\";\n * var coordinates = [110, 50];\n * var geometry = turf.geometry(type, coordinates);\n * // => geometry\n */\nexport function geometry(type, coordinates, _options) {\n    if (_options === void 0) { _options = {}; }\n    switch (type) {\n        case \"Point\":\n            return point(coordinates).geometry;\n        case \"LineString\":\n            return lineString(coordinates).geometry;\n        case \"Polygon\":\n            return polygon(coordinates).geometry;\n        case \"MultiPoint\":\n            return multiPoint(coordinates).geometry;\n        case \"MultiLineString\":\n            return multiLineString(coordinates).geometry;\n        case \"MultiPolygon\":\n            return multiPolygon(coordinates).geometry;\n        default:\n            throw new Error(type + \" is invalid\");\n    }\n}\n/**\n * Creates a {@link Point} {@link Feature} from a Position.\n *\n * @name point\n * @param {Array<number>} coordinates longitude, latitude position (each in decimal degrees)\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Point>} a Point feature\n * @example\n * var point = turf.point([-75.343, 39.984]);\n *\n * //=point\n */\nexport function point(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    if (!coordinates) {\n        throw new Error(\"coordinates is required\");\n    }\n    if (!Array.isArray(coordinates)) {\n        throw new Error(\"coordinates must be an Array\");\n    }\n    if (coordinates.length < 2) {\n        throw new Error(\"coordinates must be at least 2 numbers long\");\n    }\n    if (!isNumber(coordinates[0]) || !isNumber(coordinates[1])) {\n        throw new Error(\"coordinates must contain numbers\");\n    }\n    var geom = {\n        type: \"Point\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link Point} {@link FeatureCollection} from an Array of Point coordinates.\n *\n * @name points\n * @param {Array<Array<number>>} coordinates an array of Points\n * @param {Object} [properties={}] Translate these properties to each Feature\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north]\n * associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Point>} Point Feature\n * @example\n * var points = turf.points([\n *   [-75, 39],\n *   [-80, 45],\n *   [-78, 50]\n * ]);\n *\n * //=points\n */\nexport function points(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return point(coords, properties);\n    }), options);\n}\n/**\n * Creates a {@link Polygon} {@link Feature} from an Array of LinearRings.\n *\n * @name polygon\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Polygon>} Polygon Feature\n * @example\n * var polygon = turf.polygon([[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]], { name: 'poly1' });\n *\n * //=polygon\n */\nexport function polygon(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    for (var _i = 0, coordinates_1 = coordinates; _i < coordinates_1.length; _i++) {\n        var ring = coordinates_1[_i];\n        if (ring.length < 4) {\n            throw new Error(\"Each LinearRing of a Polygon must have 4 or more Positions.\");\n        }\n        for (var j = 0; j < ring[ring.length - 1].length; j++) {\n            // Check if first point of Polygon contains two numbers\n            if (ring[ring.length - 1][j] !== ring[0][j]) {\n                throw new Error(\"First and last Position are not equivalent.\");\n            }\n        }\n    }\n    var geom = {\n        type: \"Polygon\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link Polygon} {@link FeatureCollection} from an Array of Polygon coordinates.\n *\n * @name polygons\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygon coordinates\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Polygon>} Polygon FeatureCollection\n * @example\n * var polygons = turf.polygons([\n *   [[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]],\n *   [[[-15, 42], [-14, 46], [-12, 41], [-17, 44], [-15, 42]]],\n * ]);\n *\n * //=polygons\n */\nexport function polygons(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return polygon(coords, properties);\n    }), options);\n}\n/**\n * Creates a {@link LineString} {@link Feature} from an Array of Positions.\n *\n * @name lineString\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<LineString>} LineString Feature\n * @example\n * var linestring1 = turf.lineString([[-24, 63], [-23, 60], [-25, 65], [-20, 69]], {name: 'line 1'});\n * var linestring2 = turf.lineString([[-14, 43], [-13, 40], [-15, 45], [-10, 49]], {name: 'line 2'});\n *\n * //=linestring1\n * //=linestring2\n */\nexport function lineString(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    if (coordinates.length < 2) {\n        throw new Error(\"coordinates must be an array of two or more positions\");\n    }\n    var geom = {\n        type: \"LineString\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link LineString} {@link FeatureCollection} from an Array of LineString coordinates.\n *\n * @name lineStrings\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north]\n * associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<LineString>} LineString FeatureCollection\n * @example\n * var linestrings = turf.lineStrings([\n *   [[-24, 63], [-23, 60], [-25, 65], [-20, 69]],\n *   [[-14, 43], [-13, 40], [-15, 45], [-10, 49]]\n * ]);\n *\n * //=linestrings\n */\nexport function lineStrings(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return lineString(coords, properties);\n    }), options);\n}\n/**\n * Takes one or more {@link Feature|Features} and creates a {@link FeatureCollection}.\n *\n * @name featureCollection\n * @param {Feature[]} features input features\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {FeatureCollection} FeatureCollection of Features\n * @example\n * var locationA = turf.point([-75.343, 39.984], {name: 'Location A'});\n * var locationB = turf.point([-75.833, 39.284], {name: 'Location B'});\n * var locationC = turf.point([-75.534, 39.123], {name: 'Location C'});\n *\n * var collection = turf.featureCollection([\n *   locationA,\n *   locationB,\n *   locationC\n * ]);\n *\n * //=collection\n */\nexport function featureCollection(features, options) {\n    if (options === void 0) { options = {}; }\n    var fc = { type: \"FeatureCollection\" };\n    if (options.id) {\n        fc.id = options.id;\n    }\n    if (options.bbox) {\n        fc.bbox = options.bbox;\n    }\n    fc.features = features;\n    return fc;\n}\n/**\n * Creates a {@link Feature<MultiLineString>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiLineString\n * @param {Array<Array<Array<number>>>} coordinates an array of LineStrings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiLineString>} a MultiLineString feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiLine = turf.multiLineString([[[0,0],[10,10]]]);\n *\n * //=multiLine\n */\nexport function multiLineString(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiLineString\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link Feature<MultiPoint>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPoint\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPoint>} a MultiPoint feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPt = turf.multiPoint([[0,0],[10,10]]);\n *\n * //=multiPt\n */\nexport function multiPoint(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiPoint\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link Feature<MultiPolygon>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPolygon\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygons\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPolygon>} a multipolygon feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPoly = turf.multiPolygon([[[[0,0],[0,10],[10,10],[10,0],[0,0]]]]);\n *\n * //=multiPoly\n *\n */\nexport function multiPolygon(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiPolygon\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link Feature<GeometryCollection>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name geometryCollection\n * @param {Array<Geometry>} geometries an array of GeoJSON Geometries\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<GeometryCollection>} a GeoJSON GeometryCollection Feature\n * @example\n * var pt = turf.geometry(\"Point\", [100, 0]);\n * var line = turf.geometry(\"LineString\", [[101, 0], [102, 1]]);\n * var collection = turf.geometryCollection([pt, line]);\n *\n * // => collection\n */\nexport function geometryCollection(geometries, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"GeometryCollection\",\n        geometries: geometries,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Round number to precision\n *\n * @param {number} num Number\n * @param {number} [precision=0] Precision\n * @returns {number} rounded number\n * @example\n * turf.round(120.4321)\n * //=120\n *\n * turf.round(120.4321, 2)\n * //=120.43\n */\nexport function round(num, precision) {\n    if (precision === void 0) { precision = 0; }\n    if (precision && !(precision >= 0)) {\n        throw new Error(\"precision must be a positive number\");\n    }\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.round(num * multiplier) / multiplier;\n}\n/**\n * Convert a distance measurement (assuming a spherical Earth) from radians to a more friendly unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name radiansToLength\n * @param {number} radians in radians across the sphere\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} distance\n */\nexport function radiansToLength(radians, units) {\n    if (units === void 0) { units = \"kilometers\"; }\n    var factor = factors[units];\n    if (!factor) {\n        throw new Error(units + \" units is invalid\");\n    }\n    return radians * factor;\n}\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into radians\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name lengthToRadians\n * @param {number} distance in real units\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} radians\n */\nexport function lengthToRadians(distance, units) {\n    if (units === void 0) { units = \"kilometers\"; }\n    var factor = factors[units];\n    if (!factor) {\n        throw new Error(units + \" units is invalid\");\n    }\n    return distance / factor;\n}\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into degrees\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, centimeters, kilometres, feet\n *\n * @name lengthToDegrees\n * @param {number} distance in real units\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} degrees\n */\nexport function lengthToDegrees(distance, units) {\n    return radiansToDegrees(lengthToRadians(distance, units));\n}\n/**\n * Converts any bearing angle from the north line direction (positive clockwise)\n * and returns an angle between 0-360 degrees (positive clockwise), 0 being the north line\n *\n * @name bearingToAzimuth\n * @param {number} bearing angle, between -180 and +180 degrees\n * @returns {number} angle between 0 and 360 degrees\n */\nexport function bearingToAzimuth(bearing) {\n    var angle = bearing % 360;\n    if (angle < 0) {\n        angle += 360;\n    }\n    return angle;\n}\n/**\n * Converts an angle in radians to degrees\n *\n * @name radiansToDegrees\n * @param {number} radians angle in radians\n * @returns {number} degrees between 0 and 360 degrees\n */\nexport function radiansToDegrees(radians) {\n    var degrees = radians % (2 * Math.PI);\n    return (degrees * 180) / Math.PI;\n}\n/**\n * Converts an angle in degrees to radians\n *\n * @name degreesToRadians\n * @param {number} degrees angle between 0 and 360 degrees\n * @returns {number} angle in radians\n */\nexport function degreesToRadians(degrees) {\n    var radians = degrees % 360;\n    return (radians * Math.PI) / 180;\n}\n/**\n * Converts a length to the requested unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @param {number} length to be converted\n * @param {Units} [originalUnit=\"kilometers\"] of the length\n * @param {Units} [finalUnit=\"kilometers\"] returned unit\n * @returns {number} the converted length\n */\nexport function convertLength(length, originalUnit, finalUnit) {\n    if (originalUnit === void 0) { originalUnit = \"kilometers\"; }\n    if (finalUnit === void 0) { finalUnit = \"kilometers\"; }\n    if (!(length >= 0)) {\n        throw new Error(\"length must be a positive number\");\n    }\n    return radiansToLength(lengthToRadians(length, originalUnit), finalUnit);\n}\n/**\n * Converts a area to the requested unit.\n * Valid units: kilometers, kilometres, meters, metres, centimetres, millimeters, acres, miles, yards, feet, inches, hectares\n * @param {number} area to be converted\n * @param {Units} [originalUnit=\"meters\"] of the distance\n * @param {Units} [finalUnit=\"kilometers\"] returned unit\n * @returns {number} the converted area\n */\nexport function convertArea(area, originalUnit, finalUnit) {\n    if (originalUnit === void 0) { originalUnit = \"meters\"; }\n    if (finalUnit === void 0) { finalUnit = \"kilometers\"; }\n    if (!(area >= 0)) {\n        throw new Error(\"area must be a positive number\");\n    }\n    var startFactor = areaFactors[originalUnit];\n    if (!startFactor) {\n        throw new Error(\"invalid original units\");\n    }\n    var finalFactor = areaFactors[finalUnit];\n    if (!finalFactor) {\n        throw new Error(\"invalid final units\");\n    }\n    return (area / startFactor) * finalFactor;\n}\n/**\n * isNumber\n *\n * @param {*} num Number to validate\n * @returns {boolean} true/false\n * @example\n * turf.isNumber(123)\n * //=true\n * turf.isNumber('foo')\n * //=false\n */\nexport function isNumber(num) {\n    return !isNaN(num) && num !== null && !Array.isArray(num);\n}\n/**\n * isObject\n *\n * @param {*} input variable to validate\n * @returns {boolean} true/false\n * @example\n * turf.isObject({elevation: 10})\n * //=true\n * turf.isObject('foo')\n * //=false\n */\nexport function isObject(input) {\n    return !!input && input.constructor === Object;\n}\n/**\n * Validate BBox\n *\n * @private\n * @param {Array<number>} bbox BBox to validate\n * @returns {void}\n * @throws Error if BBox is not valid\n * @example\n * validateBBox([-180, -40, 110, 50])\n * //=OK\n * validateBBox([-180, -40])\n * //=Error\n * validateBBox('Foo')\n * //=Error\n * validateBBox(5)\n * //=Error\n * validateBBox(null)\n * //=Error\n * validateBBox(undefined)\n * //=Error\n */\nexport function validateBBox(bbox) {\n    if (!bbox) {\n        throw new Error(\"bbox is required\");\n    }\n    if (!Array.isArray(bbox)) {\n        throw new Error(\"bbox must be an Array\");\n    }\n    if (bbox.length !== 4 && bbox.length !== 6) {\n        throw new Error(\"bbox must be an Array of 4 or 6 numbers\");\n    }\n    bbox.forEach(function (num) {\n        if (!isNumber(num)) {\n            throw new Error(\"bbox must only contain numbers\");\n        }\n    });\n}\n/**\n * Validate Id\n *\n * @private\n * @param {string|number} id Id to validate\n * @returns {void}\n * @throws Error if Id is not valid\n * @example\n * validateId([-180, -40, 110, 50])\n * //=Error\n * validateId([-180, -40])\n * //=Error\n * validateId('Foo')\n * //=OK\n * validateId(5)\n * //=OK\n * validateId(null)\n * //=Error\n * validateId(undefined)\n * //=Error\n */\nexport function validateId(id) {\n    if (!id) {\n        throw new Error(\"id is required\");\n    }\n    if ([\"string\", \"number\"].indexOf(typeof id) === -1) {\n        throw new Error(\"id must be a number or a string\");\n    }\n}\n","/**\n * @module helpers\n */\n/**\n * Earth Radius used with the Harvesine formula and approximates using a spherical (non-ellipsoid) Earth.\n *\n * @memberof helpers\n * @type {number}\n */\nexport var earthRadius = 6371008.8;\n/**\n * Unit of measurement factors using a spherical (non-ellipsoid) earth radius.\n *\n * @memberof helpers\n * @type {Object}\n */\nexport var factors = {\n    centimeters: earthRadius * 100,\n    centimetres: earthRadius * 100,\n    degrees: earthRadius / 111325,\n    feet: earthRadius * 3.28084,\n    inches: earthRadius * 39.37,\n    kilometers: earthRadius / 1000,\n    kilometres: earthRadius / 1000,\n    meters: earthRadius,\n    metres: earthRadius,\n    miles: earthRadius / 1609.344,\n    millimeters: earthRadius * 1000,\n    millimetres: earthRadius * 1000,\n    nauticalmiles: earthRadius / 1852,\n    radians: 1,\n    yards: earthRadius * 1.0936,\n};\n/**\n * Units of measurement factors based on 1 meter.\n *\n * @memberof helpers\n * @type {Object}\n */\nexport var unitsFactors = {\n    centimeters: 100,\n    centimetres: 100,\n    degrees: 1 / 111325,\n    feet: 3.28084,\n    inches: 39.37,\n    kilometers: 1 / 1000,\n    kilometres: 1 / 1000,\n    meters: 1,\n    metres: 1,\n    miles: 1 / 1609.344,\n    millimeters: 1000,\n    millimetres: 1000,\n    nauticalmiles: 1 / 1852,\n    radians: 1 / earthRadius,\n    yards: 1.0936133,\n};\n/**\n * Area of measurement factors based on 1 square meter.\n *\n * @memberof helpers\n * @type {Object}\n */\nexport var areaFactors = {\n    acres: 0.000247105,\n    centimeters: 10000,\n    centimetres: 10000,\n    feet: 10.763910417,\n    hectares: 0.0001,\n    inches: 1550.003100006,\n    kilometers: 0.000001,\n    kilometres: 0.000001,\n    meters: 1,\n    metres: 1,\n    miles: 3.86e-7,\n    millimeters: 1000000,\n    millimetres: 1000000,\n    yards: 1.195990046,\n};\n/**\n * Wraps a GeoJSON {@link Geometry} in a GeoJSON {@link Feature}.\n *\n * @name feature\n * @param {Geometry} geometry input geometry\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature} a GeoJSON Feature\n * @example\n * var geometry = {\n *   \"type\": \"Point\",\n *   \"coordinates\": [110, 50]\n * };\n *\n * var feature = turf.feature(geometry);\n *\n * //=feature\n */\nexport function feature(geom, properties, options) {\n    if (options === void 0) { options = {}; }\n    var feat = { type: \"Feature\" };\n    if (options.id === 0 || options.id) {\n        feat.id = options.id;\n    }\n    if (options.bbox) {\n        feat.bbox = options.bbox;\n    }\n    feat.properties = properties || {};\n    feat.geometry = geom;\n    return feat;\n}\n/**\n * Creates a GeoJSON {@link Geometry} from a Geometry string type & coordinates.\n * For GeometryCollection type use `helpers.geometryCollection`\n *\n * @name geometry\n * @param {string} type Geometry Type\n * @param {Array<any>} coordinates Coordinates\n * @param {Object} [options={}] Optional Parameters\n * @returns {Geometry} a GeoJSON Geometry\n * @example\n * var type = \"Point\";\n * var coordinates = [110, 50];\n * var geometry = turf.geometry(type, coordinates);\n * // => geometry\n */\nexport function geometry(type, coordinates, _options) {\n    if (_options === void 0) { _options = {}; }\n    switch (type) {\n        case \"Point\":\n            return point(coordinates).geometry;\n        case \"LineString\":\n            return lineString(coordinates).geometry;\n        case \"Polygon\":\n            return polygon(coordinates).geometry;\n        case \"MultiPoint\":\n            return multiPoint(coordinates).geometry;\n        case \"MultiLineString\":\n            return multiLineString(coordinates).geometry;\n        case \"MultiPolygon\":\n            return multiPolygon(coordinates).geometry;\n        default:\n            throw new Error(type + \" is invalid\");\n    }\n}\n/**\n * Creates a {@link Point} {@link Feature} from a Position.\n *\n * @name point\n * @param {Array<number>} coordinates longitude, latitude position (each in decimal degrees)\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Point>} a Point feature\n * @example\n * var point = turf.point([-75.343, 39.984]);\n *\n * //=point\n */\nexport function point(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    if (!coordinates) {\n        throw new Error(\"coordinates is required\");\n    }\n    if (!Array.isArray(coordinates)) {\n        throw new Error(\"coordinates must be an Array\");\n    }\n    if (coordinates.length < 2) {\n        throw new Error(\"coordinates must be at least 2 numbers long\");\n    }\n    if (!isNumber(coordinates[0]) || !isNumber(coordinates[1])) {\n        throw new Error(\"coordinates must contain numbers\");\n    }\n    var geom = {\n        type: \"Point\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link Point} {@link FeatureCollection} from an Array of Point coordinates.\n *\n * @name points\n * @param {Array<Array<number>>} coordinates an array of Points\n * @param {Object} [properties={}] Translate these properties to each Feature\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north]\n * associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Point>} Point Feature\n * @example\n * var points = turf.points([\n *   [-75, 39],\n *   [-80, 45],\n *   [-78, 50]\n * ]);\n *\n * //=points\n */\nexport function points(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return point(coords, properties);\n    }), options);\n}\n/**\n * Creates a {@link Polygon} {@link Feature} from an Array of LinearRings.\n *\n * @name polygon\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Polygon>} Polygon Feature\n * @example\n * var polygon = turf.polygon([[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]], { name: 'poly1' });\n *\n * //=polygon\n */\nexport function polygon(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    for (var _i = 0, coordinates_1 = coordinates; _i < coordinates_1.length; _i++) {\n        var ring = coordinates_1[_i];\n        if (ring.length < 4) {\n            throw new Error(\"Each LinearRing of a Polygon must have 4 or more Positions.\");\n        }\n        for (var j = 0; j < ring[ring.length - 1].length; j++) {\n            // Check if first point of Polygon contains two numbers\n            if (ring[ring.length - 1][j] !== ring[0][j]) {\n                throw new Error(\"First and last Position are not equivalent.\");\n            }\n        }\n    }\n    var geom = {\n        type: \"Polygon\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link Polygon} {@link FeatureCollection} from an Array of Polygon coordinates.\n *\n * @name polygons\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygon coordinates\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Polygon>} Polygon FeatureCollection\n * @example\n * var polygons = turf.polygons([\n *   [[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]],\n *   [[[-15, 42], [-14, 46], [-12, 41], [-17, 44], [-15, 42]]],\n * ]);\n *\n * //=polygons\n */\nexport function polygons(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return polygon(coords, properties);\n    }), options);\n}\n/**\n * Creates a {@link LineString} {@link Feature} from an Array of Positions.\n *\n * @name lineString\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<LineString>} LineString Feature\n * @example\n * var linestring1 = turf.lineString([[-24, 63], [-23, 60], [-25, 65], [-20, 69]], {name: 'line 1'});\n * var linestring2 = turf.lineString([[-14, 43], [-13, 40], [-15, 45], [-10, 49]], {name: 'line 2'});\n *\n * //=linestring1\n * //=linestring2\n */\nexport function lineString(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    if (coordinates.length < 2) {\n        throw new Error(\"coordinates must be an array of two or more positions\");\n    }\n    var geom = {\n        type: \"LineString\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link LineString} {@link FeatureCollection} from an Array of LineString coordinates.\n *\n * @name lineStrings\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north]\n * associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<LineString>} LineString FeatureCollection\n * @example\n * var linestrings = turf.lineStrings([\n *   [[-24, 63], [-23, 60], [-25, 65], [-20, 69]],\n *   [[-14, 43], [-13, 40], [-15, 45], [-10, 49]]\n * ]);\n *\n * //=linestrings\n */\nexport function lineStrings(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return lineString(coords, properties);\n    }), options);\n}\n/**\n * Takes one or more {@link Feature|Features} and creates a {@link FeatureCollection}.\n *\n * @name featureCollection\n * @param {Feature[]} features input features\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {FeatureCollection} FeatureCollection of Features\n * @example\n * var locationA = turf.point([-75.343, 39.984], {name: 'Location A'});\n * var locationB = turf.point([-75.833, 39.284], {name: 'Location B'});\n * var locationC = turf.point([-75.534, 39.123], {name: 'Location C'});\n *\n * var collection = turf.featureCollection([\n *   locationA,\n *   locationB,\n *   locationC\n * ]);\n *\n * //=collection\n */\nexport function featureCollection(features, options) {\n    if (options === void 0) { options = {}; }\n    var fc = { type: \"FeatureCollection\" };\n    if (options.id) {\n        fc.id = options.id;\n    }\n    if (options.bbox) {\n        fc.bbox = options.bbox;\n    }\n    fc.features = features;\n    return fc;\n}\n/**\n * Creates a {@link Feature<MultiLineString>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiLineString\n * @param {Array<Array<Array<number>>>} coordinates an array of LineStrings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiLineString>} a MultiLineString feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiLine = turf.multiLineString([[[0,0],[10,10]]]);\n *\n * //=multiLine\n */\nexport function multiLineString(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiLineString\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link Feature<MultiPoint>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPoint\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPoint>} a MultiPoint feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPt = turf.multiPoint([[0,0],[10,10]]);\n *\n * //=multiPt\n */\nexport function multiPoint(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiPoint\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link Feature<MultiPolygon>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPolygon\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygons\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPolygon>} a multipolygon feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPoly = turf.multiPolygon([[[[0,0],[0,10],[10,10],[10,0],[0,0]]]]);\n *\n * //=multiPoly\n *\n */\nexport function multiPolygon(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiPolygon\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link Feature<GeometryCollection>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name geometryCollection\n * @param {Array<Geometry>} geometries an array of GeoJSON Geometries\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<GeometryCollection>} a GeoJSON GeometryCollection Feature\n * @example\n * var pt = turf.geometry(\"Point\", [100, 0]);\n * var line = turf.geometry(\"LineString\", [[101, 0], [102, 1]]);\n * var collection = turf.geometryCollection([pt, line]);\n *\n * // => collection\n */\nexport function geometryCollection(geometries, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"GeometryCollection\",\n        geometries: geometries,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Round number to precision\n *\n * @param {number} num Number\n * @param {number} [precision=0] Precision\n * @returns {number} rounded number\n * @example\n * turf.round(120.4321)\n * //=120\n *\n * turf.round(120.4321, 2)\n * //=120.43\n */\nexport function round(num, precision) {\n    if (precision === void 0) { precision = 0; }\n    if (precision && !(precision >= 0)) {\n        throw new Error(\"precision must be a positive number\");\n    }\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.round(num * multiplier) / multiplier;\n}\n/**\n * Convert a distance measurement (assuming a spherical Earth) from radians to a more friendly unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name radiansToLength\n * @param {number} radians in radians across the sphere\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} distance\n */\nexport function radiansToLength(radians, units) {\n    if (units === void 0) { units = \"kilometers\"; }\n    var factor = factors[units];\n    if (!factor) {\n        throw new Error(units + \" units is invalid\");\n    }\n    return radians * factor;\n}\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into radians\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name lengthToRadians\n * @param {number} distance in real units\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} radians\n */\nexport function lengthToRadians(distance, units) {\n    if (units === void 0) { units = \"kilometers\"; }\n    var factor = factors[units];\n    if (!factor) {\n        throw new Error(units + \" units is invalid\");\n    }\n    return distance / factor;\n}\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into degrees\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, centimeters, kilometres, feet\n *\n * @name lengthToDegrees\n * @param {number} distance in real units\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} degrees\n */\nexport function lengthToDegrees(distance, units) {\n    return radiansToDegrees(lengthToRadians(distance, units));\n}\n/**\n * Converts any bearing angle from the north line direction (positive clockwise)\n * and returns an angle between 0-360 degrees (positive clockwise), 0 being the north line\n *\n * @name bearingToAzimuth\n * @param {number} bearing angle, between -180 and +180 degrees\n * @returns {number} angle between 0 and 360 degrees\n */\nexport function bearingToAzimuth(bearing) {\n    var angle = bearing % 360;\n    if (angle < 0) {\n        angle += 360;\n    }\n    return angle;\n}\n/**\n * Converts an angle in radians to degrees\n *\n * @name radiansToDegrees\n * @param {number} radians angle in radians\n * @returns {number} degrees between 0 and 360 degrees\n */\nexport function radiansToDegrees(radians) {\n    var degrees = radians % (2 * Math.PI);\n    return (degrees * 180) / Math.PI;\n}\n/**\n * Converts an angle in degrees to radians\n *\n * @name degreesToRadians\n * @param {number} degrees angle between 0 and 360 degrees\n * @returns {number} angle in radians\n */\nexport function degreesToRadians(degrees) {\n    var radians = degrees % 360;\n    return (radians * Math.PI) / 180;\n}\n/**\n * Converts a length to the requested unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @param {number} length to be converted\n * @param {Units} [originalUnit=\"kilometers\"] of the length\n * @param {Units} [finalUnit=\"kilometers\"] returned unit\n * @returns {number} the converted length\n */\nexport function convertLength(length, originalUnit, finalUnit) {\n    if (originalUnit === void 0) { originalUnit = \"kilometers\"; }\n    if (finalUnit === void 0) { finalUnit = \"kilometers\"; }\n    if (!(length >= 0)) {\n        throw new Error(\"length must be a positive number\");\n    }\n    return radiansToLength(lengthToRadians(length, originalUnit), finalUnit);\n}\n/**\n * Converts a area to the requested unit.\n * Valid units: kilometers, kilometres, meters, metres, centimetres, millimeters, acres, miles, yards, feet, inches, hectares\n * @param {number} area to be converted\n * @param {Units} [originalUnit=\"meters\"] of the distance\n * @param {Units} [finalUnit=\"kilometers\"] returned unit\n * @returns {number} the converted area\n */\nexport function convertArea(area, originalUnit, finalUnit) {\n    if (originalUnit === void 0) { originalUnit = \"meters\"; }\n    if (finalUnit === void 0) { finalUnit = \"kilometers\"; }\n    if (!(area >= 0)) {\n        throw new Error(\"area must be a positive number\");\n    }\n    var startFactor = areaFactors[originalUnit];\n    if (!startFactor) {\n        throw new Error(\"invalid original units\");\n    }\n    var finalFactor = areaFactors[finalUnit];\n    if (!finalFactor) {\n        throw new Error(\"invalid final units\");\n    }\n    return (area / startFactor) * finalFactor;\n}\n/**\n * isNumber\n *\n * @param {*} num Number to validate\n * @returns {boolean} true/false\n * @example\n * turf.isNumber(123)\n * //=true\n * turf.isNumber('foo')\n * //=false\n */\nexport function isNumber(num) {\n    return !isNaN(num) && num !== null && !Array.isArray(num);\n}\n/**\n * isObject\n *\n * @param {*} input variable to validate\n * @returns {boolean} true/false\n * @example\n * turf.isObject({elevation: 10})\n * //=true\n * turf.isObject('foo')\n * //=false\n */\nexport function isObject(input) {\n    return !!input && input.constructor === Object;\n}\n/**\n * Validate BBox\n *\n * @private\n * @param {Array<number>} bbox BBox to validate\n * @returns {void}\n * @throws Error if BBox is not valid\n * @example\n * validateBBox([-180, -40, 110, 50])\n * //=OK\n * validateBBox([-180, -40])\n * //=Error\n * validateBBox('Foo')\n * //=Error\n * validateBBox(5)\n * //=Error\n * validateBBox(null)\n * //=Error\n * validateBBox(undefined)\n * //=Error\n */\nexport function validateBBox(bbox) {\n    if (!bbox) {\n        throw new Error(\"bbox is required\");\n    }\n    if (!Array.isArray(bbox)) {\n        throw new Error(\"bbox must be an Array\");\n    }\n    if (bbox.length !== 4 && bbox.length !== 6) {\n        throw new Error(\"bbox must be an Array of 4 or 6 numbers\");\n    }\n    bbox.forEach(function (num) {\n        if (!isNumber(num)) {\n            throw new Error(\"bbox must only contain numbers\");\n        }\n    });\n}\n/**\n * Validate Id\n *\n * @private\n * @param {string|number} id Id to validate\n * @returns {void}\n * @throws Error if Id is not valid\n * @example\n * validateId([-180, -40, 110, 50])\n * //=Error\n * validateId([-180, -40])\n * //=Error\n * validateId('Foo')\n * //=OK\n * validateId(5)\n * //=OK\n * validateId(null)\n * //=Error\n * validateId(undefined)\n * //=Error\n */\nexport function validateId(id) {\n    if (!id) {\n        throw new Error(\"id is required\");\n    }\n    if ([\"string\", \"number\"].indexOf(typeof id) === -1) {\n        throw new Error(\"id must be a number or a string\");\n    }\n}\n","import polygonClipping from \"polygon-clipping\";\nimport { getGeom } from \"@turf/invariant\";\nimport { multiPolygon, polygon } from \"@turf/helpers\";\n/**\n * Takes two {@link (Multi)Polygon(s)} and returns a combined polygon. If the input polygons are not contiguous, this function returns a {@link MultiPolygon} feature.\n *\n * @name union\n * @param {Feature<Polygon|MultiPolygon>} polygon1 input Polygon feature\n * @param {Feature<Polygon|MultiPolygon>} polygon2 Polygon feature to difference from polygon1\n * @param {Object} [options={}] Optional Parameters\n * @param {Object} [options.properties={}] Translate Properties to output Feature\n * @returns {Feature<(Polygon|MultiPolygon)>} a combined {@link Polygon} or {@link MultiPolygon} feature, or null if the inputs are empty\n * @example\n * var poly1 = turf.polygon([[\n *     [-82.574787, 35.594087],\n *     [-82.574787, 35.615581],\n *     [-82.545261, 35.615581],\n *     [-82.545261, 35.594087],\n *     [-82.574787, 35.594087]\n * ]], {\"fill\": \"#0f0\"});\n * var poly2 = turf.polygon([[\n *     [-82.560024, 35.585153],\n *     [-82.560024, 35.602602],\n *     [-82.52964, 35.602602],\n *     [-82.52964, 35.585153],\n *     [-82.560024, 35.585153]\n * ]], {\"fill\": \"#00f\"});\n *\n * var union = turf.union(poly1, poly2);\n *\n * //addToMap\n * var addToMap = [poly1, poly2, union];\n */\nfunction union(poly1, poly2, options) {\n    if (options === void 0) { options = {}; }\n    var geom1 = getGeom(poly1);\n    var geom2 = getGeom(poly2);\n    var unioned = polygonClipping.union(geom1.coordinates, geom2.coordinates);\n    if (unioned.length === 0)\n        return null;\n    if (unioned.length === 1)\n        return polygon(unioned[0], options.properties);\n    else\n        return multiPolygon(unioned, options.properties);\n}\nexport default union;\n","import { point } from \"@turf/helpers\";\nexport default function findIntersections(coords) {\n    const arcs = new ArcCollection(coords);\n    const xy = arcs.findSegmentIntersections();\n    return dedupIntersections(xy).reduce((prev, apoint, index, array) => {\n        if (!prev)\n            prev = {};\n        prev[`${apoint.x}:${apoint.y}`] = apoint;\n        if (index != array.length - 1)\n            return prev;\n        return Object.keys(prev).map(key => point([prev[key].x, prev[key].y]));\n    }, []);\n}\nclass ArcCollection {\n    constructor(coords) {\n        this._zlimit = 0;\n        this.initArcs(coords);\n    }\n    initArcs(arcs) {\n        const xx = [], yy = [];\n        const nn = arcs.map(points => {\n            const n = points ? points.length : 0;\n            for (let i = 0; i < n; i++) {\n                xx.push(points[i][0]);\n                yy.push(points[i][1]);\n            }\n            return n;\n        });\n        this.initXYData(nn, xx, yy);\n    }\n    initXYData(nn, xx, yy) {\n        const size = nn.length;\n        this._xx = new Float64Array(xx);\n        this._yy = new Float64Array(yy);\n        this._nn = new Uint32Array(nn);\n        this._zz = null;\n        this._zlimit = 0;\n        this._filteredArcIter = null;\n        this._ii = new Uint32Array(size);\n        let idx = 0;\n        for (let j = 0; j < size; j++) {\n            this._ii[j] = idx;\n            idx += nn[j];\n        }\n        if (idx != this._xx.length || this._xx.length != this._yy.length) {\n            error(\"ArcCollection#initXYData() Counting error\");\n        }\n        this.initBounds();\n        this._arcIter = new ArcIter(this._xx, this._yy);\n    }\n    initBounds() {\n        const data = this.calcArcBounds_(this._xx, this._yy, this._nn);\n        this._bb = data.bb;\n        this._allBounds = data.bounds;\n    }\n    calcArcBounds_(xx, yy, nn) {\n        const numArcs = nn.length, bb = new Float64Array(numArcs * 4), bounds = new Bounds();\n        let arcOffs = 0, arcLen, j, b;\n        for (let i = 0; i < numArcs; i++) {\n            arcLen = nn[i];\n            if (arcLen > 0) {\n                j = i * 4;\n                b = calcArcBounds(xx, yy, arcOffs, arcLen);\n                bb[j++] = b[0];\n                bb[j++] = b[1];\n                bb[j++] = b[2];\n                bb[j] = b[3];\n                arcOffs += arcLen;\n                bounds.mergeBounds(b);\n            }\n        }\n        return {\n            bb,\n            bounds\n        };\n    }\n    getBounds() {\n        return this._allBounds.clone();\n    }\n    forEachSegment(cb) {\n        let count = 0;\n        for (let i = 0, n = this.size(); i < n; i++) {\n            count += this.forEachArcSegment(i, cb);\n        }\n        return count;\n    }\n    size() {\n        return (this._ii && this._ii.length) || 0;\n    }\n    forEachArcSegment(arcId, cb) {\n        const fw = arcId >= 0, absId = fw ? arcId : ~arcId, zlim = this.getRetainedInterval(), n = this._nn[absId], step = fw ? 1 : -1;\n        let v1 = fw ? this._ii[absId] : this._ii[absId] + n - 1, v2 = v1, count = 0;\n        for (let j = 1; j < n; j++) {\n            v2 += step;\n            if (zlim === 0 || this._zz[v2] >= zlim) {\n                cb(v1, v2, this._xx, this._yy);\n                v1 = v2;\n                count++;\n            }\n        }\n        return count;\n    }\n    getRetainedInterval() {\n        return this._zlimit;\n    }\n    getVertexData() {\n        return {\n            xx: this._xx,\n            yy: this._yy,\n            zz: this._zz,\n            bb: this._bb,\n            nn: this._nn,\n            ii: this._ii\n        };\n    }\n    getUint32Array(count) {\n        const bytes = count * 4;\n        if (!this.buf || this.buf.byteLength < bytes) {\n            this.buf = new ArrayBuffer(bytes);\n        }\n        return new Uint32Array(this.buf, 0, count);\n    }\n    getAvgSegment2() {\n        let dx = 0, dy = 0;\n        const count = this.forEachSegment((i, j, xx, yy) => {\n            dx += Math.abs(xx[i] - xx[j]);\n            dy += Math.abs(yy[i] - yy[j]);\n        });\n        return [dx / count || 0, dy / count || 0];\n    }\n    calcSegmentIntersectionStripeCount() {\n        const yrange = this.getBounds().height(), segLen = this.getAvgSegment2()[1];\n        let count = 1;\n        if (segLen > 0 && yrange > 0) {\n            count = Math.ceil(yrange / segLen / 20);\n        }\n        return count || 1;\n    }\n    findSegmentIntersections() {\n        const bounds = this.getBounds(), ymin = bounds.ymin, yrange = bounds.ymax - ymin, stripeCount = this.calcSegmentIntersectionStripeCount(), stripeSizes = new Uint32Array(stripeCount), stripeId = stripeCount > 1\n            ? (y) => Math.floor(((stripeCount - 1) * (y - ymin)) / yrange)\n            : () => 0;\n        let i, j;\n        this.forEachSegment((id1, id2, xx, yy) => {\n            let s1 = stripeId(yy[id1]);\n            const s2 = stripeId(yy[id2]);\n            while (true) {\n                stripeSizes[s1] = stripeSizes[s1] + 2;\n                if (s1 == s2)\n                    break;\n                s1 += s2 > s1 ? 1 : -1;\n            }\n        });\n        const stripeData = this.getUint32Array(utilsSum(stripeSizes));\n        let offs = 0;\n        const stripes = [];\n        utilsForEach(stripeSizes, (stripeSize) => {\n            const start = offs;\n            offs += stripeSize;\n            stripes.push(stripeData.subarray(start, offs));\n        });\n        initializeArray(stripeSizes, 0);\n        this.forEachSegment((id1, id2, xx, yy) => {\n            let s1 = stripeId(yy[id1]);\n            const s2 = stripeId(yy[id2]);\n            let count, stripe;\n            while (true) {\n                count = stripeSizes[s1];\n                stripeSizes[s1] = count + 2;\n                stripe = stripes[s1];\n                stripe[count] = id1;\n                stripe[count + 1] = id2;\n                if (s1 == s2)\n                    break;\n                s1 += s2 > s1 ? 1 : -1;\n            }\n        });\n        const raw = this.getVertexData(), intersections = [];\n        let arr;\n        for (i = 0; i < stripeCount; i++) {\n            arr = intersectSegments(stripes[i], raw.xx, raw.yy);\n            for (j = 0; j < arr.length; j++) {\n                intersections.push(arr[j]);\n            }\n        }\n        return dedupIntersections(intersections);\n    }\n}\nfunction error(...args) {\n    const msg = args.join(\" \");\n    throw new Error(msg);\n}\nfunction isArrayLike(obj) {\n    if (!obj)\n        return false;\n    if (isArray(obj))\n        return true;\n    if (isString(obj))\n        return false;\n    if (obj.length === 0)\n        return true;\n    return obj.length > 0;\n}\nfunction isString(obj) {\n    return obj != null && obj.toString === String.prototype.toString;\n}\nfunction isArray(obj) {\n    return Array.isArray(obj);\n}\nfunction utilsSum(arr, info) {\n    if (!isArrayLike(arr))\n        error(\"utils.sum() expects an array, received:\", arr);\n    let tot = 0, nan = 0, val;\n    for (let i = 0, n = arr.length; i < n; i++) {\n        val = arr[i];\n        if (val) {\n            tot += val;\n        }\n        else if (isNaN(val)) {\n            nan++;\n        }\n    }\n    if (info) {\n        info.nan = nan;\n    }\n    return tot;\n}\nfunction utilsForEach(arr, func, ctx) {\n    if (!isArrayLike(arr)) {\n        throw new Error(`#forEach() takes an array-like argument. ${arr}`);\n    }\n    for (let i = 0, n = arr.length; i < n; i++) {\n        func.call(ctx, arr[i], i);\n    }\n}\nfunction initializeArray(arr, init) {\n    for (let i = 0, len = arr.length; i < len; i++) {\n        arr[i] = init;\n    }\n    return arr;\n}\nfunction intersectSegments(ids, xx, yy) {\n    const lim = ids.length - 2, intersections = [];\n    let s1p1, s1p2, s2p1, s2p2, s1p1x, s1p2x, s2p1x, s2p2x, s1p1y, s1p2y, s2p1y, s2p2y, hit, seg1, seg2, i, j;\n    sortSegmentIds(xx, ids);\n    i = 0;\n    while (i < lim) {\n        s1p1 = ids[i];\n        s1p2 = ids[i + 1];\n        s1p1x = xx[s1p1];\n        s1p2x = xx[s1p2];\n        s1p1y = yy[s1p1];\n        s1p2y = yy[s1p2];\n        j = i;\n        while (j < lim) {\n            j += 2;\n            s2p1 = ids[j];\n            s2p1x = xx[s2p1];\n            if (s1p2x < s2p1x)\n                break;\n            s2p1y = yy[s2p1];\n            s2p2 = ids[j + 1];\n            s2p2x = xx[s2p2];\n            s2p2y = yy[s2p2];\n            if (s1p1y >= s2p1y) {\n                if (s1p1y > s2p2y && s1p2y > s2p1y && s1p2y > s2p2y)\n                    continue;\n            }\n            else {\n                if (s1p1y < s2p2y && s1p2y < s2p1y && s1p2y < s2p2y)\n                    continue;\n            }\n            if (s1p1 == s2p1 || s1p1 == s2p2 || s1p2 == s2p1 || s1p2 == s2p2) {\n                continue;\n            }\n            hit = segmentIntersection(s1p1x, s1p1y, s1p2x, s1p2y, s2p1x, s2p1y, s2p2x, s2p2y);\n            if (hit) {\n                seg1 = [s1p1, s1p2];\n                seg2 = [s2p1, s2p2];\n                intersections.push(formatIntersection(hit, seg1, seg2, xx, yy));\n                if (hit.length == 4) {\n                    intersections.push(formatIntersection(hit.slice(2), seg1, seg2, xx, yy));\n                }\n            }\n        }\n        i += 2;\n    }\n    return intersections;\n}\nfunction segmentIntersection(ax, ay, bx, by, cx, cy, dx, dy) {\n    const hit = segmentHit(ax, ay, bx, by, cx, cy, dx, dy);\n    let p = null;\n    if (hit) {\n        p = crossIntersection(ax, ay, bx, by, cx, cy, dx, dy);\n        if (!p) {\n            p = collinearIntersection(ax, ay, bx, by, cx, cy, dx, dy);\n        }\n        else if (endpointHit(ax, ay, bx, by, cx, cy, dx, dy)) {\n            p = null;\n        }\n    }\n    return p;\n}\nfunction segmentHit(ax, ay, bx, by, cx, cy, dx, dy) {\n    return (orient2D(ax, ay, bx, by, cx, cy) * orient2D(ax, ay, bx, by, dx, dy) <= 0 &&\n        orient2D(cx, cy, dx, dy, ax, ay) * orient2D(cx, cy, dx, dy, bx, by) <= 0);\n}\nfunction orient2D(ax, ay, bx, by, cx, cy) {\n    return determinant2D(ax - cx, ay - cy, bx - cx, by - cy);\n}\nfunction determinant2D(a, b, c, d) {\n    return a * d - b * c;\n}\nfunction crossIntersection(ax, ay, bx, by, cx, cy, dx, dy) {\n    let p = lineIntersection(ax, ay, bx, by, cx, cy, dx, dy);\n    let nearest;\n    if (p) {\n        nearest = nearestPoint(p[0], p[1], ax, ay, bx, by, cx, cy, dx, dy);\n        if (nearest == 1) {\n            p = lineIntersection(bx, by, ax, ay, cx, cy, dx, dy);\n        }\n        else if (nearest == 2) {\n            p = lineIntersection(cx, cy, dx, dy, ax, ay, bx, by);\n        }\n        else if (nearest == 3) {\n            p = lineIntersection(dx, dy, cx, cy, ax, ay, bx, by);\n        }\n    }\n    if (p) {\n        clampIntersectionPoint(p, ax, ay, bx, by, cx, cy, dx, dy);\n    }\n    return p;\n}\nfunction lineIntersection(ax, ay, bx, by, cx, cy, dx, dy) {\n    const den = determinant2D(bx - ax, by - ay, dx - cx, dy - cy);\n    const eps = 1e-18;\n    let p;\n    if (den === 0)\n        return null;\n    const m = orient2D(cx, cy, dx, dy, ax, ay) / den;\n    if (den <= eps && den >= -eps) {\n        p = findEndpointInRange(ax, ay, bx, by, cx, cy, dx, dy);\n    }\n    else {\n        p = [ax + m * (bx - ax), ay + m * (by - ay)];\n    }\n    return p;\n}\nfunction findEndpointInRange(ax, ay, bx, by, cx, cy, dx, dy) {\n    let p = null;\n    if (!outsideRange(ax, cx, dx) && !outsideRange(ay, cy, dy)) {\n        p = [ax, ay];\n    }\n    else if (!outsideRange(bx, cx, dx) && !outsideRange(by, cy, dy)) {\n        p = [bx, by];\n    }\n    else if (!outsideRange(cx, ax, bx) && !outsideRange(cy, ay, by)) {\n        p = [cx, cy];\n    }\n    else if (!outsideRange(dx, ax, bx) && !outsideRange(dy, ay, by)) {\n        p = [dx, dy];\n    }\n    return p;\n}\nfunction outsideRange(a, b, c) {\n    let out;\n    if (b < c) {\n        out = a < b || a > c;\n    }\n    else if (b > c) {\n        out = a > b || a < c;\n    }\n    else {\n        out = a != b;\n    }\n    return out;\n}\nfunction nearestPoint(x, y, ...args) {\n    let minIdx = -1, minDist = Infinity, dist;\n    for (let i = 0, j = 0, n = args.length; j < n; i++, j += 2) {\n        dist = distanceSq(x, y, args[j], args[j + 1]);\n        if (dist < minDist) {\n            minDist = dist;\n            minIdx = i;\n        }\n    }\n    return minIdx;\n}\nfunction distanceSq(ax, ay, bx, by) {\n    const dx = ax - bx, dy = ay - by;\n    return dx * dx + dy * dy;\n}\nfunction clampIntersectionPoint(p, ax, ay, bx, by, cx, cy, dx, dy) {\n    let x = p[0], y = p[1];\n    x = clampToCloseRange(x, ax, bx);\n    x = clampToCloseRange(x, cx, dx);\n    y = clampToCloseRange(y, ay, by);\n    y = clampToCloseRange(y, cy, dy);\n    p[0] = x;\n    p[1] = y;\n}\nfunction clampToCloseRange(a, b, c) {\n    let lim;\n    if (outsideRange(a, b, c)) {\n        lim = Math.abs(a - b) < Math.abs(a - c) ? b : c;\n        if (Math.abs(a - lim) > 1e-15) {\n        }\n        a = lim;\n    }\n    return a;\n}\nfunction collinearIntersection(ax, ay, bx, by, cx, cy, dx, dy) {\n    const minX = Math.min(ax, bx, cx, dx), maxX = Math.max(ax, bx, cx, dx), minY = Math.min(ay, by, cy, dy), maxY = Math.max(ay, by, cy, dy), useY = maxY - minY > maxX - minX;\n    let coords = [];\n    if (useY ? inside(ay, minY, maxY) : inside(ax, minX, maxX)) {\n        coords.push(ax, ay);\n    }\n    if (useY ? inside(by, minY, maxY) : inside(bx, minX, maxX)) {\n        coords.push(bx, by);\n    }\n    if (useY ? inside(cy, minY, maxY) : inside(cx, minX, maxX)) {\n        coords.push(cx, cy);\n    }\n    if (useY ? inside(dy, minY, maxY) : inside(dx, minX, maxX)) {\n        coords.push(dx, dy);\n    }\n    if (coords.length != 2 && coords.length != 4) {\n        coords = null;\n    }\n    else if (coords.length == 4 &&\n        coords[0] == coords[2] &&\n        coords[1] == coords[3]) {\n        coords = null;\n    }\n    return coords;\n}\nfunction endpointHit(ax, ay, bx, by, cx, cy, dx, dy) {\n    return ((ax == cx && ay == cy) ||\n        (ax == dx && ay == dy) ||\n        (bx == cx && by == cy) ||\n        (bx == dx && by == dy));\n}\nfunction inside(x, minX, maxX) {\n    return x > minX && x < maxX;\n}\nfunction sortSegmentIds(xx, ids) {\n    orderSegmentIds(xx, ids);\n    quicksortSegmentIds(xx, ids, 0, ids.length - 2);\n}\nfunction orderSegmentIds(xx, ids) {\n    for (let i = 0, n = ids.length; i < n; i += 2) {\n        if (xx[ids[i]] > xx[ids[i + 1]]) {\n            swap(ids, i, i + 1);\n        }\n    }\n}\nfunction swap(ids, i, j) {\n    const tmp = ids[i];\n    ids[i] = ids[j];\n    ids[j] = tmp;\n}\nfunction quicksortSegmentIds(a, ids, lo, hi) {\n    let i = lo, j = hi, pivot, tmp;\n    while (i < hi) {\n        pivot = a[ids[((lo + hi) >> 2) << 1]];\n        while (i <= j) {\n            while (a[ids[i]] < pivot)\n                i += 2;\n            while (a[ids[j]] > pivot)\n                j -= 2;\n            if (i <= j) {\n                tmp = ids[i];\n                ids[i] = ids[j];\n                ids[j] = tmp;\n                tmp = ids[i + 1];\n                ids[i + 1] = ids[j + 1];\n                ids[j + 1] = tmp;\n                i += 2;\n                j -= 2;\n            }\n        }\n        if (j - lo < 40)\n            insertionSortSegmentIds(a, ids, lo, j);\n        else\n            quicksortSegmentIds(a, ids, lo, j);\n        if (hi - i < 40) {\n            insertionSortSegmentIds(a, ids, i, hi);\n            return;\n        }\n        lo = i;\n        j = hi;\n    }\n}\nfunction insertionSortSegmentIds(arr, ids, start, end) {\n    let id, id2;\n    for (let j = start + 2; j <= end; j += 2) {\n        id = ids[j];\n        id2 = ids[j + 1];\n        let i;\n        for (i = j - 2; i >= start && arr[id] < arr[ids[i]]; i -= 2) {\n            ids[i + 2] = ids[i];\n            ids[i + 3] = ids[i + 1];\n        }\n        ids[i + 2] = id;\n        ids[i + 3] = id2;\n    }\n}\nfunction formatIntersection(xy, s1, s2, xx, yy) {\n    const x = xy[0], y = xy[1];\n    s1 = formatIntersectingSegment(x, y, s1[0], s1[1], xx, yy);\n    s2 = formatIntersectingSegment(x, y, s2[0], s2[1], xx, yy);\n    const a = s1[0] < s2[0] ? s1 : s2;\n    const b = a == s1 ? s2 : s1;\n    return { x, y, a, b };\n}\nfunction formatIntersectingSegment(x, y, id1, id2, xx, yy) {\n    let i = id1 < id2 ? id1 : id2, j = i === id1 ? id2 : id1;\n    if (xx[i] == x && yy[i] == y) {\n        j = i;\n    }\n    else if (xx[j] == x && yy[j] == y) {\n        i = j;\n    }\n    return [i, j];\n}\nfunction dedupIntersections(arr) {\n    const index = {};\n    return arr.filter((o) => {\n        const key = getIntersectionKey(o);\n        if (key in index) {\n            return false;\n        }\n        index[key] = true;\n        return true;\n    });\n}\nfunction getIntersectionKey(o) {\n    return `${o.a.join(\",\")};${o.b.join(\",\")}`;\n}\nclass ArcIter {\n    constructor(xx, yy) {\n        this._i = 0;\n        this._n = 0;\n        this._inc = 1;\n        this.i = 0;\n        this.x = 0;\n        this.y = 0;\n        this._xx = xx;\n        this._yy = yy;\n    }\n}\nfunction calcArcBounds(xx, yy, start, len) {\n    let i = start | 0;\n    const n = isNaN(len) ? xx.length - i : len + i;\n    let x, y, xmin, ymin, xmax, ymax;\n    if (n > 0) {\n        xmin = xmax = xx[i];\n        ymin = ymax = yy[i];\n    }\n    else\n        return [undefined, undefined, undefined, undefined];\n    for (i++; i < n; i++) {\n        x = xx[i];\n        y = yy[i];\n        if (x < xmin)\n            xmin = x;\n        if (x > xmax)\n            xmax = x;\n        if (y < ymin)\n            ymin = y;\n        if (y > ymax)\n            ymax = y;\n    }\n    return [xmin, ymin, xmax, ymax];\n}\nclass Bounds {\n    constructor(...args) {\n        if (args.length > 0) {\n            this.setBounds(args);\n        }\n    }\n    cloneBounds() {\n        return this.clone();\n    }\n    clone() {\n        return new Bounds(this.xmin, this.ymin, this.xmax, this.ymax);\n    }\n    width() {\n        return this.xmax - this.xmin || 0;\n    }\n    height() {\n        return this.ymax - this.ymin || 0;\n    }\n    setBounds(a, b, c, d) {\n        if (arguments.length == 1) {\n            if (isArrayLike(a)) {\n                b = a[1];\n                c = a[2];\n                d = a[3];\n                a = a[0];\n            }\n            else {\n                b = a.ymin;\n                c = a.xmax;\n                d = a.ymax;\n                a = a.xmin;\n            }\n        }\n        this.xmin = a;\n        this.ymin = b;\n        this.xmax = c;\n        this.ymax = d;\n        if (a > c || b > d)\n            this.update();\n        return this;\n    }\n    update() {\n        let tmp;\n        if (this.xmin > this.xmax) {\n            tmp = this.xmin;\n            this.xmin = this.xmax;\n            this.xmax = tmp;\n        }\n        if (this.ymin > this.ymax) {\n            tmp = this.ymin;\n            this.ymin = this.ymax;\n            this.ymax = tmp;\n        }\n    }\n    mergeBounds(bb, ...args) {\n        let a, b, c, d;\n        if (bb instanceof Bounds) {\n            a = bb.xmin;\n            b = bb.ymin;\n            c = bb.xmax;\n            d = bb.ymax;\n        }\n        else if (args.length == 3) {\n            a = bb;\n            b = args[0];\n            c = args[1];\n            d = args[2];\n        }\n        else if (bb.length == 4) {\n            a = bb[0];\n            b = bb[1];\n            c = bb[2];\n            d = bb[3];\n        }\n        else {\n            error(\"Bounds#mergeBounds() invalid argument:\", bb);\n        }\n        if (this.xmin === void 0) {\n            this.setBounds(a, b, c, d);\n        }\n        else {\n            if (a < this.xmin)\n                this.xmin = a;\n            if (b < this.ymin)\n                this.ymin = b;\n            if (c > this.xmax)\n                this.xmax = c;\n            if (d > this.ymax)\n                this.ymax = d;\n        }\n        return this;\n    }\n}\n//# sourceMappingURL=kinks.js.map","export const epsilon = 1.1102230246251565e-16;\nexport const splitter = 134217729;\nexport const resulterrbound = (3 + 8 * epsilon) * epsilon;\n\n// fast_expansion_sum_zeroelim routine from oritinal code\nexport function sum(elen, e, flen, f, h) {\n    let Q, Qnew, hh, bvirt;\n    let enow = e[0];\n    let fnow = f[0];\n    let eindex = 0;\n    let findex = 0;\n    if ((fnow > enow) === (fnow > -enow)) {\n        Q = enow;\n        enow = e[++eindex];\n    } else {\n        Q = fnow;\n        fnow = f[++findex];\n    }\n    let hindex = 0;\n    if (eindex < elen && findex < flen) {\n        if ((fnow > enow) === (fnow > -enow)) {\n            Qnew = enow + Q;\n            hh = Q - (Qnew - enow);\n            enow = e[++eindex];\n        } else {\n            Qnew = fnow + Q;\n            hh = Q - (Qnew - fnow);\n            fnow = f[++findex];\n        }\n        Q = Qnew;\n        if (hh !== 0) {\n            h[hindex++] = hh;\n        }\n        while (eindex < elen && findex < flen) {\n            if ((fnow > enow) === (fnow > -enow)) {\n                Qnew = Q + enow;\n                bvirt = Qnew - Q;\n                hh = Q - (Qnew - bvirt) + (enow - bvirt);\n                enow = e[++eindex];\n            } else {\n                Qnew = Q + fnow;\n                bvirt = Qnew - Q;\n                hh = Q - (Qnew - bvirt) + (fnow - bvirt);\n                fnow = f[++findex];\n            }\n            Q = Qnew;\n            if (hh !== 0) {\n                h[hindex++] = hh;\n            }\n        }\n    }\n    while (eindex < elen) {\n        Qnew = Q + enow;\n        bvirt = Qnew - Q;\n        hh = Q - (Qnew - bvirt) + (enow - bvirt);\n        enow = e[++eindex];\n        Q = Qnew;\n        if (hh !== 0) {\n            h[hindex++] = hh;\n        }\n    }\n    while (findex < flen) {\n        Qnew = Q + fnow;\n        bvirt = Qnew - Q;\n        hh = Q - (Qnew - bvirt) + (fnow - bvirt);\n        fnow = f[++findex];\n        Q = Qnew;\n        if (hh !== 0) {\n            h[hindex++] = hh;\n        }\n    }\n    if (Q !== 0 || hindex === 0) {\n        h[hindex++] = Q;\n    }\n    return hindex;\n}\n\nexport function sum_three(alen, a, blen, b, clen, c, tmp, out) {\n    return sum(sum(alen, a, blen, b, tmp), tmp, clen, c, out);\n}\n\n// scale_expansion_zeroelim routine from oritinal code\nexport function scale(elen, e, b, h) {\n    let Q, sum, hh, product1, product0;\n    let bvirt, c, ahi, alo, bhi, blo;\n\n    c = splitter * b;\n    bhi = c - (c - b);\n    blo = b - bhi;\n    let enow = e[0];\n    Q = enow * b;\n    c = splitter * enow;\n    ahi = c - (c - enow);\n    alo = enow - ahi;\n    hh = alo * blo - (Q - ahi * bhi - alo * bhi - ahi * blo);\n    let hindex = 0;\n    if (hh !== 0) {\n        h[hindex++] = hh;\n    }\n    for (let i = 1; i < elen; i++) {\n        enow = e[i];\n        product1 = enow * b;\n        c = splitter * enow;\n        ahi = c - (c - enow);\n        alo = enow - ahi;\n        product0 = alo * blo - (product1 - ahi * bhi - alo * bhi - ahi * blo);\n        sum = Q + product0;\n        bvirt = sum - Q;\n        hh = Q - (sum - bvirt) + (product0 - bvirt);\n        if (hh !== 0) {\n            h[hindex++] = hh;\n        }\n        Q = product1 + sum;\n        hh = sum - (Q - product1);\n        if (hh !== 0) {\n            h[hindex++] = hh;\n        }\n    }\n    if (Q !== 0 || hindex === 0) {\n        h[hindex++] = Q;\n    }\n    return hindex;\n}\n\nexport function negate(elen, e) {\n    for (let i = 0; i < elen; i++) e[i] = -e[i];\n    return elen;\n}\n\nexport function estimate(elen, e) {\n    let Q = e[0];\n    for (let i = 1; i < elen; i++) Q += e[i];\n    return Q;\n}\n\nexport function vec(n) {\n    return new Float64Array(n);\n}\n","import {epsilon, splitter, resulterrbound, estimate, vec, sum} from './util.js';\n\nconst ccwerrboundA = (3 + 16 * epsilon) * epsilon;\nconst ccwerrboundB = (2 + 12 * epsilon) * epsilon;\nconst ccwerrboundC = (9 + 64 * epsilon) * epsilon * epsilon;\n\nconst B = vec(4);\nconst C1 = vec(8);\nconst C2 = vec(12);\nconst D = vec(16);\nconst u = vec(4);\n\nfunction orient2dadapt(ax, ay, bx, by, cx, cy, detsum) {\n    let acxtail, acytail, bcxtail, bcytail;\n    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _0, s1, s0, t1, t0, u3;\n\n    const acx = ax - cx;\n    const bcx = bx - cx;\n    const acy = ay - cy;\n    const bcy = by - cy;\n\n    s1 = acx * bcy;\n    c = splitter * acx;\n    ahi = c - (c - acx);\n    alo = acx - ahi;\n    c = splitter * bcy;\n    bhi = c - (c - bcy);\n    blo = bcy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = acy * bcx;\n    c = splitter * acy;\n    ahi = c - (c - acy);\n    alo = acy - ahi;\n    c = splitter * bcx;\n    bhi = c - (c - bcx);\n    blo = bcx - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    B[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    B[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    B[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    B[3] = u3;\n\n    let det = estimate(4, B);\n    let errbound = ccwerrboundB * detsum;\n    if (det >= errbound || -det >= errbound) {\n        return det;\n    }\n\n    bvirt = ax - acx;\n    acxtail = ax - (acx + bvirt) + (bvirt - cx);\n    bvirt = bx - bcx;\n    bcxtail = bx - (bcx + bvirt) + (bvirt - cx);\n    bvirt = ay - acy;\n    acytail = ay - (acy + bvirt) + (bvirt - cy);\n    bvirt = by - bcy;\n    bcytail = by - (bcy + bvirt) + (bvirt - cy);\n\n    if (acxtail === 0 && acytail === 0 && bcxtail === 0 && bcytail === 0) {\n        return det;\n    }\n\n    errbound = ccwerrboundC * detsum + resulterrbound * Math.abs(det);\n    det += (acx * bcytail + bcy * acxtail) - (acy * bcxtail + bcx * acytail);\n    if (det >= errbound || -det >= errbound) return det;\n\n    s1 = acxtail * bcy;\n    c = splitter * acxtail;\n    ahi = c - (c - acxtail);\n    alo = acxtail - ahi;\n    c = splitter * bcy;\n    bhi = c - (c - bcy);\n    blo = bcy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = acytail * bcx;\n    c = splitter * acytail;\n    ahi = c - (c - acytail);\n    alo = acytail - ahi;\n    c = splitter * bcx;\n    bhi = c - (c - bcx);\n    blo = bcx - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    u[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    u[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    u[3] = u3;\n    const C1len = sum(4, B, 4, u, C1);\n\n    s1 = acx * bcytail;\n    c = splitter * acx;\n    ahi = c - (c - acx);\n    alo = acx - ahi;\n    c = splitter * bcytail;\n    bhi = c - (c - bcytail);\n    blo = bcytail - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = acy * bcxtail;\n    c = splitter * acy;\n    ahi = c - (c - acy);\n    alo = acy - ahi;\n    c = splitter * bcxtail;\n    bhi = c - (c - bcxtail);\n    blo = bcxtail - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    u[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    u[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    u[3] = u3;\n    const C2len = sum(C1len, C1, 4, u, C2);\n\n    s1 = acxtail * bcytail;\n    c = splitter * acxtail;\n    ahi = c - (c - acxtail);\n    alo = acxtail - ahi;\n    c = splitter * bcytail;\n    bhi = c - (c - bcytail);\n    blo = bcytail - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = acytail * bcxtail;\n    c = splitter * acytail;\n    ahi = c - (c - acytail);\n    alo = acytail - ahi;\n    c = splitter * bcxtail;\n    bhi = c - (c - bcxtail);\n    blo = bcxtail - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    u[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    u[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    u[3] = u3;\n    const Dlen = sum(C2len, C2, 4, u, D);\n\n    return D[Dlen - 1];\n}\n\nexport function orient2d(ax, ay, bx, by, cx, cy) {\n    const detleft = (ay - cy) * (bx - cx);\n    const detright = (ax - cx) * (by - cy);\n    const det = detleft - detright;\n\n    if (detleft === 0 || detright === 0 || (detleft > 0) !== (detright > 0)) return det;\n\n    const detsum = Math.abs(detleft + detright);\n    if (Math.abs(det) >= ccwerrboundA * detsum) return det;\n\n    return -orient2dadapt(ax, ay, bx, by, cx, cy, detsum);\n}\n\nexport function orient2dfast(ax, ay, bx, by, cx, cy) {\n    return (ay - cy) * (bx - cx) - (ax - cx) * (by - cy);\n}\n","import {epsilon, splitter, resulterrbound, estimate, vec, sum, scale} from './util.js';\n\nconst o3derrboundA = (7 + 56 * epsilon) * epsilon;\nconst o3derrboundB = (3 + 28 * epsilon) * epsilon;\nconst o3derrboundC = (26 + 288 * epsilon) * epsilon * epsilon;\n\nconst bc = vec(4);\nconst ca = vec(4);\nconst ab = vec(4);\nconst at_b = vec(4);\nconst at_c = vec(4);\nconst bt_c = vec(4);\nconst bt_a = vec(4);\nconst ct_a = vec(4);\nconst ct_b = vec(4);\nconst bct = vec(8);\nconst cat = vec(8);\nconst abt = vec(8);\nconst u = vec(4);\n\nconst _8 = vec(8);\nconst _8b = vec(8);\nconst _16 = vec(8);\nconst _12 = vec(12);\n\nlet fin = vec(192);\nlet fin2 = vec(192);\n\nfunction finadd(finlen, alen, a) {\n    finlen = sum(finlen, fin, alen, a, fin2);\n    const tmp = fin; fin = fin2; fin2 = tmp;\n    return finlen;\n}\n\nfunction tailinit(xtail, ytail, ax, ay, bx, by, a, b) {\n    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _k, _0, s1, s0, t1, t0, u3, negate;\n    if (xtail === 0) {\n        if (ytail === 0) {\n            a[0] = 0;\n            b[0] = 0;\n            return 1;\n        } else {\n            negate = -ytail;\n            s1 = negate * ax;\n            c = splitter * negate;\n            ahi = c - (c - negate);\n            alo = negate - ahi;\n            c = splitter * ax;\n            bhi = c - (c - ax);\n            blo = ax - bhi;\n            a[0] = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            a[1] = s1;\n            s1 = ytail * bx;\n            c = splitter * ytail;\n            ahi = c - (c - ytail);\n            alo = ytail - ahi;\n            c = splitter * bx;\n            bhi = c - (c - bx);\n            blo = bx - bhi;\n            b[0] = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            b[1] = s1;\n            return 2;\n        }\n    } else {\n        if (ytail === 0) {\n            s1 = xtail * ay;\n            c = splitter * xtail;\n            ahi = c - (c - xtail);\n            alo = xtail - ahi;\n            c = splitter * ay;\n            bhi = c - (c - ay);\n            blo = ay - bhi;\n            a[0] = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            a[1] = s1;\n            negate = -xtail;\n            s1 = negate * by;\n            c = splitter * negate;\n            ahi = c - (c - negate);\n            alo = negate - ahi;\n            c = splitter * by;\n            bhi = c - (c - by);\n            blo = by - bhi;\n            b[0] = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            b[1] = s1;\n            return 2;\n        } else {\n            s1 = xtail * ay;\n            c = splitter * xtail;\n            ahi = c - (c - xtail);\n            alo = xtail - ahi;\n            c = splitter * ay;\n            bhi = c - (c - ay);\n            blo = ay - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = ytail * ax;\n            c = splitter * ytail;\n            ahi = c - (c - ytail);\n            alo = ytail - ahi;\n            c = splitter * ax;\n            bhi = c - (c - ax);\n            blo = ax - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 - t0;\n            bvirt = s0 - _i;\n            a[0] = s0 - (_i + bvirt) + (bvirt - t0);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 - t1;\n            bvirt = _0 - _i;\n            a[1] = _0 - (_i + bvirt) + (bvirt - t1);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            a[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            a[3] = u3;\n            s1 = ytail * bx;\n            c = splitter * ytail;\n            ahi = c - (c - ytail);\n            alo = ytail - ahi;\n            c = splitter * bx;\n            bhi = c - (c - bx);\n            blo = bx - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = xtail * by;\n            c = splitter * xtail;\n            ahi = c - (c - xtail);\n            alo = xtail - ahi;\n            c = splitter * by;\n            bhi = c - (c - by);\n            blo = by - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 - t0;\n            bvirt = s0 - _i;\n            b[0] = s0 - (_i + bvirt) + (bvirt - t0);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 - t1;\n            bvirt = _0 - _i;\n            b[1] = _0 - (_i + bvirt) + (bvirt - t1);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            b[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            b[3] = u3;\n            return 4;\n        }\n    }\n}\n\nfunction tailadd(finlen, a, b, k, z) {\n    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _k, _0, s1, s0, u3;\n    s1 = a * b;\n    c = splitter * a;\n    ahi = c - (c - a);\n    alo = a - ahi;\n    c = splitter * b;\n    bhi = c - (c - b);\n    blo = b - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    c = splitter * k;\n    bhi = c - (c - k);\n    blo = k - bhi;\n    _i = s0 * k;\n    c = splitter * s0;\n    ahi = c - (c - s0);\n    alo = s0 - ahi;\n    u[0] = alo * blo - (_i - ahi * bhi - alo * bhi - ahi * blo);\n    _j = s1 * k;\n    c = splitter * s1;\n    ahi = c - (c - s1);\n    alo = s1 - ahi;\n    _0 = alo * blo - (_j - ahi * bhi - alo * bhi - ahi * blo);\n    _k = _i + _0;\n    bvirt = _k - _i;\n    u[1] = _i - (_k - bvirt) + (_0 - bvirt);\n    u3 = _j + _k;\n    u[2] = _k - (u3 - _j);\n    u[3] = u3;\n    finlen = finadd(finlen, 4, u);\n    if (z !== 0) {\n        c = splitter * z;\n        bhi = c - (c - z);\n        blo = z - bhi;\n        _i = s0 * z;\n        c = splitter * s0;\n        ahi = c - (c - s0);\n        alo = s0 - ahi;\n        u[0] = alo * blo - (_i - ahi * bhi - alo * bhi - ahi * blo);\n        _j = s1 * z;\n        c = splitter * s1;\n        ahi = c - (c - s1);\n        alo = s1 - ahi;\n        _0 = alo * blo - (_j - ahi * bhi - alo * bhi - ahi * blo);\n        _k = _i + _0;\n        bvirt = _k - _i;\n        u[1] = _i - (_k - bvirt) + (_0 - bvirt);\n        u3 = _j + _k;\n        u[2] = _k - (u3 - _j);\n        u[3] = u3;\n        finlen = finadd(finlen, 4, u);\n    }\n    return finlen;\n}\n\nfunction orient3dadapt(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, permanent) {\n    let finlen;\n    let adxtail, bdxtail, cdxtail;\n    let adytail, bdytail, cdytail;\n    let adztail, bdztail, cdztail;\n    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _k, _0, s1, s0, t1, t0, u3;\n\n    const adx = ax - dx;\n    const bdx = bx - dx;\n    const cdx = cx - dx;\n    const ady = ay - dy;\n    const bdy = by - dy;\n    const cdy = cy - dy;\n    const adz = az - dz;\n    const bdz = bz - dz;\n    const cdz = cz - dz;\n\n    s1 = bdx * cdy;\n    c = splitter * bdx;\n    ahi = c - (c - bdx);\n    alo = bdx - ahi;\n    c = splitter * cdy;\n    bhi = c - (c - cdy);\n    blo = cdy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = cdx * bdy;\n    c = splitter * cdx;\n    ahi = c - (c - cdx);\n    alo = cdx - ahi;\n    c = splitter * bdy;\n    bhi = c - (c - bdy);\n    blo = bdy - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    bc[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    bc[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    bc[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    bc[3] = u3;\n    s1 = cdx * ady;\n    c = splitter * cdx;\n    ahi = c - (c - cdx);\n    alo = cdx - ahi;\n    c = splitter * ady;\n    bhi = c - (c - ady);\n    blo = ady - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = adx * cdy;\n    c = splitter * adx;\n    ahi = c - (c - adx);\n    alo = adx - ahi;\n    c = splitter * cdy;\n    bhi = c - (c - cdy);\n    blo = cdy - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ca[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ca[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    ca[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    ca[3] = u3;\n    s1 = adx * bdy;\n    c = splitter * adx;\n    ahi = c - (c - adx);\n    alo = adx - ahi;\n    c = splitter * bdy;\n    bhi = c - (c - bdy);\n    blo = bdy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = bdx * ady;\n    c = splitter * bdx;\n    ahi = c - (c - bdx);\n    alo = bdx - ahi;\n    c = splitter * ady;\n    bhi = c - (c - ady);\n    blo = ady - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ab[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ab[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    ab[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    ab[3] = u3;\n\n    finlen = sum(\n        sum(\n            scale(4, bc, adz, _8), _8,\n            scale(4, ca, bdz, _8b), _8b, _16), _16,\n        scale(4, ab, cdz, _8), _8, fin);\n\n    let det = estimate(finlen, fin);\n    let errbound = o3derrboundB * permanent;\n    if (det >= errbound || -det >= errbound) {\n        return det;\n    }\n\n    bvirt = ax - adx;\n    adxtail = ax - (adx + bvirt) + (bvirt - dx);\n    bvirt = bx - bdx;\n    bdxtail = bx - (bdx + bvirt) + (bvirt - dx);\n    bvirt = cx - cdx;\n    cdxtail = cx - (cdx + bvirt) + (bvirt - dx);\n    bvirt = ay - ady;\n    adytail = ay - (ady + bvirt) + (bvirt - dy);\n    bvirt = by - bdy;\n    bdytail = by - (bdy + bvirt) + (bvirt - dy);\n    bvirt = cy - cdy;\n    cdytail = cy - (cdy + bvirt) + (bvirt - dy);\n    bvirt = az - adz;\n    adztail = az - (adz + bvirt) + (bvirt - dz);\n    bvirt = bz - bdz;\n    bdztail = bz - (bdz + bvirt) + (bvirt - dz);\n    bvirt = cz - cdz;\n    cdztail = cz - (cdz + bvirt) + (bvirt - dz);\n\n    if (adxtail === 0 && bdxtail === 0 && cdxtail === 0 &&\n        adytail === 0 && bdytail === 0 && cdytail === 0 &&\n        adztail === 0 && bdztail === 0 && cdztail === 0) {\n        return det;\n    }\n\n    errbound = o3derrboundC * permanent + resulterrbound * Math.abs(det);\n    det +=\n        adz * (bdx * cdytail + cdy * bdxtail - (bdy * cdxtail + cdx * bdytail)) + adztail * (bdx * cdy - bdy * cdx) +\n        bdz * (cdx * adytail + ady * cdxtail - (cdy * adxtail + adx * cdytail)) + bdztail * (cdx * ady - cdy * adx) +\n        cdz * (adx * bdytail + bdy * adxtail - (ady * bdxtail + bdx * adytail)) + cdztail * (adx * bdy - ady * bdx);\n    if (det >= errbound || -det >= errbound) {\n        return det;\n    }\n\n    const at_len = tailinit(adxtail, adytail, bdx, bdy, cdx, cdy, at_b, at_c);\n    const bt_len = tailinit(bdxtail, bdytail, cdx, cdy, adx, ady, bt_c, bt_a);\n    const ct_len = tailinit(cdxtail, cdytail, adx, ady, bdx, bdy, ct_a, ct_b);\n\n    const bctlen = sum(bt_len, bt_c, ct_len, ct_b, bct);\n    finlen = finadd(finlen, scale(bctlen, bct, adz, _16), _16);\n\n    const catlen = sum(ct_len, ct_a, at_len, at_c, cat);\n    finlen = finadd(finlen, scale(catlen, cat, bdz, _16), _16);\n\n    const abtlen = sum(at_len, at_b, bt_len, bt_a, abt);\n    finlen = finadd(finlen, scale(abtlen, abt, cdz, _16), _16);\n\n    if (adztail !== 0) {\n        finlen = finadd(finlen, scale(4, bc, adztail, _12), _12);\n        finlen = finadd(finlen, scale(bctlen, bct, adztail, _16), _16);\n    }\n    if (bdztail !== 0) {\n        finlen = finadd(finlen, scale(4, ca, bdztail, _12), _12);\n        finlen = finadd(finlen, scale(catlen, cat, bdztail, _16), _16);\n    }\n    if (cdztail !== 0) {\n        finlen = finadd(finlen, scale(4, ab, cdztail, _12), _12);\n        finlen = finadd(finlen, scale(abtlen, abt, cdztail, _16), _16);\n    }\n\n    if (adxtail !== 0) {\n        if (bdytail !== 0) {\n            finlen = tailadd(finlen, adxtail, bdytail, cdz, cdztail);\n        }\n        if (cdytail !== 0) {\n            finlen = tailadd(finlen, -adxtail, cdytail, bdz, bdztail);\n        }\n    }\n    if (bdxtail !== 0) {\n        if (cdytail !== 0) {\n            finlen = tailadd(finlen, bdxtail, cdytail, adz, adztail);\n        }\n        if (adytail !== 0) {\n            finlen = tailadd(finlen, -bdxtail, adytail, cdz, cdztail);\n        }\n    }\n    if (cdxtail !== 0) {\n        if (adytail !== 0) {\n            finlen = tailadd(finlen, cdxtail, adytail, bdz, bdztail);\n        }\n        if (bdytail !== 0) {\n            finlen = tailadd(finlen, -cdxtail, bdytail, adz, adztail);\n        }\n    }\n\n    return fin[finlen - 1];\n}\n\nexport function orient3d(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz) {\n    const adx = ax - dx;\n    const bdx = bx - dx;\n    const cdx = cx - dx;\n    const ady = ay - dy;\n    const bdy = by - dy;\n    const cdy = cy - dy;\n    const adz = az - dz;\n    const bdz = bz - dz;\n    const cdz = cz - dz;\n\n    const bdxcdy = bdx * cdy;\n    const cdxbdy = cdx * bdy;\n\n    const cdxady = cdx * ady;\n    const adxcdy = adx * cdy;\n\n    const adxbdy = adx * bdy;\n    const bdxady = bdx * ady;\n\n    const det =\n        adz * (bdxcdy - cdxbdy) +\n        bdz * (cdxady - adxcdy) +\n        cdz * (adxbdy - bdxady);\n\n    const permanent =\n        (Math.abs(bdxcdy) + Math.abs(cdxbdy)) * Math.abs(adz) +\n        (Math.abs(cdxady) + Math.abs(adxcdy)) * Math.abs(bdz) +\n        (Math.abs(adxbdy) + Math.abs(bdxady)) * Math.abs(cdz);\n\n    const errbound = o3derrboundA * permanent;\n    if (det > errbound || -det > errbound) {\n        return det;\n    }\n\n    return orient3dadapt(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, permanent);\n}\n\nexport function orient3dfast(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz) {\n    const adx = ax - dx;\n    const bdx = bx - dx;\n    const cdx = cx - dx;\n    const ady = ay - dy;\n    const bdy = by - dy;\n    const cdy = cy - dy;\n    const adz = az - dz;\n    const bdz = bz - dz;\n    const cdz = cz - dz;\n\n    return adx * (bdy * cdz - bdz * cdy) +\n        bdx * (cdy * adz - cdz * ady) +\n        cdx * (ady * bdz - adz * bdy);\n}\n","import {epsilon, splitter, resulterrbound, estimate, vec, sum, sum_three, scale} from './util.js';\n\nconst iccerrboundA = (10 + 96 * epsilon) * epsilon;\nconst iccerrboundB = (4 + 48 * epsilon) * epsilon;\nconst iccerrboundC = (44 + 576 * epsilon) * epsilon * epsilon;\n\nconst bc = vec(4);\nconst ca = vec(4);\nconst ab = vec(4);\nconst aa = vec(4);\nconst bb = vec(4);\nconst cc = vec(4);\nconst u = vec(4);\nconst v = vec(4);\nconst axtbc = vec(8);\nconst aytbc = vec(8);\nconst bxtca = vec(8);\nconst bytca = vec(8);\nconst cxtab = vec(8);\nconst cytab = vec(8);\nconst abt = vec(8);\nconst bct = vec(8);\nconst cat = vec(8);\nconst abtt = vec(4);\nconst bctt = vec(4);\nconst catt = vec(4);\n\nconst _8 = vec(8);\nconst _16 = vec(16);\nconst _16b = vec(16);\nconst _16c = vec(16);\nconst _32 = vec(32);\nconst _32b = vec(32);\nconst _48 = vec(48);\nconst _64 = vec(64);\n\nlet fin = vec(1152);\nlet fin2 = vec(1152);\n\nfunction finadd(finlen, a, alen) {\n    finlen = sum(finlen, fin, a, alen, fin2);\n    const tmp = fin; fin = fin2; fin2 = tmp;\n    return finlen;\n}\n\nfunction incircleadapt(ax, ay, bx, by, cx, cy, dx, dy, permanent) {\n    let finlen;\n    let adxtail, bdxtail, cdxtail, adytail, bdytail, cdytail;\n    let axtbclen, aytbclen, bxtcalen, bytcalen, cxtablen, cytablen;\n    let abtlen, bctlen, catlen;\n    let abttlen, bcttlen, cattlen;\n    let n1, n0;\n\n    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _0, s1, s0, t1, t0, u3;\n\n    const adx = ax - dx;\n    const bdx = bx - dx;\n    const cdx = cx - dx;\n    const ady = ay - dy;\n    const bdy = by - dy;\n    const cdy = cy - dy;\n\n    s1 = bdx * cdy;\n    c = splitter * bdx;\n    ahi = c - (c - bdx);\n    alo = bdx - ahi;\n    c = splitter * cdy;\n    bhi = c - (c - cdy);\n    blo = cdy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = cdx * bdy;\n    c = splitter * cdx;\n    ahi = c - (c - cdx);\n    alo = cdx - ahi;\n    c = splitter * bdy;\n    bhi = c - (c - bdy);\n    blo = bdy - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    bc[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    bc[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    bc[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    bc[3] = u3;\n    s1 = cdx * ady;\n    c = splitter * cdx;\n    ahi = c - (c - cdx);\n    alo = cdx - ahi;\n    c = splitter * ady;\n    bhi = c - (c - ady);\n    blo = ady - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = adx * cdy;\n    c = splitter * adx;\n    ahi = c - (c - adx);\n    alo = adx - ahi;\n    c = splitter * cdy;\n    bhi = c - (c - cdy);\n    blo = cdy - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ca[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ca[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    ca[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    ca[3] = u3;\n    s1 = adx * bdy;\n    c = splitter * adx;\n    ahi = c - (c - adx);\n    alo = adx - ahi;\n    c = splitter * bdy;\n    bhi = c - (c - bdy);\n    blo = bdy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = bdx * ady;\n    c = splitter * bdx;\n    ahi = c - (c - bdx);\n    alo = bdx - ahi;\n    c = splitter * ady;\n    bhi = c - (c - ady);\n    blo = ady - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ab[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ab[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    ab[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    ab[3] = u3;\n\n    finlen = sum(\n        sum(\n            sum(\n                scale(scale(4, bc, adx, _8), _8, adx, _16), _16,\n                scale(scale(4, bc, ady, _8), _8, ady, _16b), _16b, _32), _32,\n            sum(\n                scale(scale(4, ca, bdx, _8), _8, bdx, _16), _16,\n                scale(scale(4, ca, bdy, _8), _8, bdy, _16b), _16b, _32b), _32b, _64), _64,\n        sum(\n            scale(scale(4, ab, cdx, _8), _8, cdx, _16), _16,\n            scale(scale(4, ab, cdy, _8), _8, cdy, _16b), _16b, _32), _32, fin);\n\n    let det = estimate(finlen, fin);\n    let errbound = iccerrboundB * permanent;\n    if (det >= errbound || -det >= errbound) {\n        return det;\n    }\n\n    bvirt = ax - adx;\n    adxtail = ax - (adx + bvirt) + (bvirt - dx);\n    bvirt = ay - ady;\n    adytail = ay - (ady + bvirt) + (bvirt - dy);\n    bvirt = bx - bdx;\n    bdxtail = bx - (bdx + bvirt) + (bvirt - dx);\n    bvirt = by - bdy;\n    bdytail = by - (bdy + bvirt) + (bvirt - dy);\n    bvirt = cx - cdx;\n    cdxtail = cx - (cdx + bvirt) + (bvirt - dx);\n    bvirt = cy - cdy;\n    cdytail = cy - (cdy + bvirt) + (bvirt - dy);\n    if (adxtail === 0 && bdxtail === 0 && cdxtail === 0 && adytail === 0 && bdytail === 0 && cdytail === 0) {\n        return det;\n    }\n\n    errbound = iccerrboundC * permanent + resulterrbound * Math.abs(det);\n    det += ((adx * adx + ady * ady) * ((bdx * cdytail + cdy * bdxtail) - (bdy * cdxtail + cdx * bdytail)) +\n        2 * (adx * adxtail + ady * adytail) * (bdx * cdy - bdy * cdx)) +\n        ((bdx * bdx + bdy * bdy) * ((cdx * adytail + ady * cdxtail) - (cdy * adxtail + adx * cdytail)) +\n        2 * (bdx * bdxtail + bdy * bdytail) * (cdx * ady - cdy * adx)) +\n        ((cdx * cdx + cdy * cdy) * ((adx * bdytail + bdy * adxtail) - (ady * bdxtail + bdx * adytail)) +\n        2 * (cdx * cdxtail + cdy * cdytail) * (adx * bdy - ady * bdx));\n\n    if (det >= errbound || -det >= errbound) {\n        return det;\n    }\n\n    if (bdxtail !== 0 || bdytail !== 0 || cdxtail !== 0 || cdytail !== 0) {\n        s1 = adx * adx;\n        c = splitter * adx;\n        ahi = c - (c - adx);\n        alo = adx - ahi;\n        s0 = alo * alo - (s1 - ahi * ahi - (ahi + ahi) * alo);\n        t1 = ady * ady;\n        c = splitter * ady;\n        ahi = c - (c - ady);\n        alo = ady - ahi;\n        t0 = alo * alo - (t1 - ahi * ahi - (ahi + ahi) * alo);\n        _i = s0 + t0;\n        bvirt = _i - s0;\n        aa[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n        _j = s1 + _i;\n        bvirt = _j - s1;\n        _0 = s1 - (_j - bvirt) + (_i - bvirt);\n        _i = _0 + t1;\n        bvirt = _i - _0;\n        aa[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n        u3 = _j + _i;\n        bvirt = u3 - _j;\n        aa[2] = _j - (u3 - bvirt) + (_i - bvirt);\n        aa[3] = u3;\n    }\n    if (cdxtail !== 0 || cdytail !== 0 || adxtail !== 0 || adytail !== 0) {\n        s1 = bdx * bdx;\n        c = splitter * bdx;\n        ahi = c - (c - bdx);\n        alo = bdx - ahi;\n        s0 = alo * alo - (s1 - ahi * ahi - (ahi + ahi) * alo);\n        t1 = bdy * bdy;\n        c = splitter * bdy;\n        ahi = c - (c - bdy);\n        alo = bdy - ahi;\n        t0 = alo * alo - (t1 - ahi * ahi - (ahi + ahi) * alo);\n        _i = s0 + t0;\n        bvirt = _i - s0;\n        bb[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n        _j = s1 + _i;\n        bvirt = _j - s1;\n        _0 = s1 - (_j - bvirt) + (_i - bvirt);\n        _i = _0 + t1;\n        bvirt = _i - _0;\n        bb[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n        u3 = _j + _i;\n        bvirt = u3 - _j;\n        bb[2] = _j - (u3 - bvirt) + (_i - bvirt);\n        bb[3] = u3;\n    }\n    if (adxtail !== 0 || adytail !== 0 || bdxtail !== 0 || bdytail !== 0) {\n        s1 = cdx * cdx;\n        c = splitter * cdx;\n        ahi = c - (c - cdx);\n        alo = cdx - ahi;\n        s0 = alo * alo - (s1 - ahi * ahi - (ahi + ahi) * alo);\n        t1 = cdy * cdy;\n        c = splitter * cdy;\n        ahi = c - (c - cdy);\n        alo = cdy - ahi;\n        t0 = alo * alo - (t1 - ahi * ahi - (ahi + ahi) * alo);\n        _i = s0 + t0;\n        bvirt = _i - s0;\n        cc[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n        _j = s1 + _i;\n        bvirt = _j - s1;\n        _0 = s1 - (_j - bvirt) + (_i - bvirt);\n        _i = _0 + t1;\n        bvirt = _i - _0;\n        cc[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n        u3 = _j + _i;\n        bvirt = u3 - _j;\n        cc[2] = _j - (u3 - bvirt) + (_i - bvirt);\n        cc[3] = u3;\n    }\n\n    if (adxtail !== 0) {\n        axtbclen = scale(4, bc, adxtail, axtbc);\n        finlen = finadd(finlen, sum_three(\n            scale(axtbclen, axtbc, 2 * adx, _16), _16,\n            scale(scale(4, cc, adxtail, _8), _8, bdy, _16b), _16b,\n            scale(scale(4, bb, adxtail, _8), _8, -cdy, _16c), _16c, _32, _48), _48);\n    }\n    if (adytail !== 0) {\n        aytbclen = scale(4, bc, adytail, aytbc);\n        finlen = finadd(finlen, sum_three(\n            scale(aytbclen, aytbc, 2 * ady, _16), _16,\n            scale(scale(4, bb, adytail, _8), _8, cdx, _16b), _16b,\n            scale(scale(4, cc, adytail, _8), _8, -bdx, _16c), _16c, _32, _48), _48);\n    }\n    if (bdxtail !== 0) {\n        bxtcalen = scale(4, ca, bdxtail, bxtca);\n        finlen = finadd(finlen, sum_three(\n            scale(bxtcalen, bxtca, 2 * bdx, _16), _16,\n            scale(scale(4, aa, bdxtail, _8), _8, cdy, _16b), _16b,\n            scale(scale(4, cc, bdxtail, _8), _8, -ady, _16c), _16c, _32, _48), _48);\n    }\n    if (bdytail !== 0) {\n        bytcalen = scale(4, ca, bdytail, bytca);\n        finlen = finadd(finlen, sum_three(\n            scale(bytcalen, bytca, 2 * bdy, _16), _16,\n            scale(scale(4, cc, bdytail, _8), _8, adx, _16b), _16b,\n            scale(scale(4, aa, bdytail, _8), _8, -cdx, _16c), _16c, _32, _48), _48);\n    }\n    if (cdxtail !== 0) {\n        cxtablen = scale(4, ab, cdxtail, cxtab);\n        finlen = finadd(finlen, sum_three(\n            scale(cxtablen, cxtab, 2 * cdx, _16), _16,\n            scale(scale(4, bb, cdxtail, _8), _8, ady, _16b), _16b,\n            scale(scale(4, aa, cdxtail, _8), _8, -bdy, _16c), _16c, _32, _48), _48);\n    }\n    if (cdytail !== 0) {\n        cytablen = scale(4, ab, cdytail, cytab);\n        finlen = finadd(finlen, sum_three(\n            scale(cytablen, cytab, 2 * cdy, _16), _16,\n            scale(scale(4, aa, cdytail, _8), _8, bdx, _16b), _16b,\n            scale(scale(4, bb, cdytail, _8), _8, -adx, _16c), _16c, _32, _48), _48);\n    }\n\n    if (adxtail !== 0 || adytail !== 0) {\n        if (bdxtail !== 0 || bdytail !== 0 || cdxtail !== 0 || cdytail !== 0) {\n            s1 = bdxtail * cdy;\n            c = splitter * bdxtail;\n            ahi = c - (c - bdxtail);\n            alo = bdxtail - ahi;\n            c = splitter * cdy;\n            bhi = c - (c - cdy);\n            blo = cdy - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = bdx * cdytail;\n            c = splitter * bdx;\n            ahi = c - (c - bdx);\n            alo = bdx - ahi;\n            c = splitter * cdytail;\n            bhi = c - (c - cdytail);\n            blo = cdytail - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 + t0;\n            bvirt = _i - s0;\n            u[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 + t1;\n            bvirt = _i - _0;\n            u[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            u[3] = u3;\n            s1 = cdxtail * -bdy;\n            c = splitter * cdxtail;\n            ahi = c - (c - cdxtail);\n            alo = cdxtail - ahi;\n            c = splitter * -bdy;\n            bhi = c - (c - -bdy);\n            blo = -bdy - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = cdx * -bdytail;\n            c = splitter * cdx;\n            ahi = c - (c - cdx);\n            alo = cdx - ahi;\n            c = splitter * -bdytail;\n            bhi = c - (c - -bdytail);\n            blo = -bdytail - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 + t0;\n            bvirt = _i - s0;\n            v[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 + t1;\n            bvirt = _i - _0;\n            v[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            v[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            v[3] = u3;\n            bctlen = sum(4, u, 4, v, bct);\n            s1 = bdxtail * cdytail;\n            c = splitter * bdxtail;\n            ahi = c - (c - bdxtail);\n            alo = bdxtail - ahi;\n            c = splitter * cdytail;\n            bhi = c - (c - cdytail);\n            blo = cdytail - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = cdxtail * bdytail;\n            c = splitter * cdxtail;\n            ahi = c - (c - cdxtail);\n            alo = cdxtail - ahi;\n            c = splitter * bdytail;\n            bhi = c - (c - bdytail);\n            blo = bdytail - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 - t0;\n            bvirt = s0 - _i;\n            bctt[0] = s0 - (_i + bvirt) + (bvirt - t0);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 - t1;\n            bvirt = _0 - _i;\n            bctt[1] = _0 - (_i + bvirt) + (bvirt - t1);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            bctt[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            bctt[3] = u3;\n            bcttlen = 4;\n        } else {\n            bct[0] = 0;\n            bctlen = 1;\n            bctt[0] = 0;\n            bcttlen = 1;\n        }\n        if (adxtail !== 0) {\n            const len = scale(bctlen, bct, adxtail, _16c);\n            finlen = finadd(finlen, sum(\n                scale(axtbclen, axtbc, adxtail, _16), _16,\n                scale(len, _16c, 2 * adx, _32), _32, _48), _48);\n\n            const len2 = scale(bcttlen, bctt, adxtail, _8);\n            finlen = finadd(finlen, sum_three(\n                scale(len2, _8, 2 * adx, _16), _16,\n                scale(len2, _8, adxtail, _16b), _16b,\n                scale(len, _16c, adxtail, _32), _32, _32b, _64), _64);\n\n            if (bdytail !== 0) {\n                finlen = finadd(finlen, scale(scale(4, cc, adxtail, _8), _8, bdytail, _16), _16);\n            }\n            if (cdytail !== 0) {\n                finlen = finadd(finlen, scale(scale(4, bb, -adxtail, _8), _8, cdytail, _16), _16);\n            }\n        }\n        if (adytail !== 0) {\n            const len = scale(bctlen, bct, adytail, _16c);\n            finlen = finadd(finlen, sum(\n                scale(aytbclen, aytbc, adytail, _16), _16,\n                scale(len, _16c, 2 * ady, _32), _32, _48), _48);\n\n            const len2 = scale(bcttlen, bctt, adytail, _8);\n            finlen = finadd(finlen, sum_three(\n                scale(len2, _8, 2 * ady, _16), _16,\n                scale(len2, _8, adytail, _16b), _16b,\n                scale(len, _16c, adytail, _32), _32, _32b, _64), _64);\n        }\n    }\n    if (bdxtail !== 0 || bdytail !== 0) {\n        if (cdxtail !== 0 || cdytail !== 0 || adxtail !== 0 || adytail !== 0) {\n            s1 = cdxtail * ady;\n            c = splitter * cdxtail;\n            ahi = c - (c - cdxtail);\n            alo = cdxtail - ahi;\n            c = splitter * ady;\n            bhi = c - (c - ady);\n            blo = ady - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = cdx * adytail;\n            c = splitter * cdx;\n            ahi = c - (c - cdx);\n            alo = cdx - ahi;\n            c = splitter * adytail;\n            bhi = c - (c - adytail);\n            blo = adytail - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 + t0;\n            bvirt = _i - s0;\n            u[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 + t1;\n            bvirt = _i - _0;\n            u[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            u[3] = u3;\n            n1 = -cdy;\n            n0 = -cdytail;\n            s1 = adxtail * n1;\n            c = splitter * adxtail;\n            ahi = c - (c - adxtail);\n            alo = adxtail - ahi;\n            c = splitter * n1;\n            bhi = c - (c - n1);\n            blo = n1 - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = adx * n0;\n            c = splitter * adx;\n            ahi = c - (c - adx);\n            alo = adx - ahi;\n            c = splitter * n0;\n            bhi = c - (c - n0);\n            blo = n0 - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 + t0;\n            bvirt = _i - s0;\n            v[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 + t1;\n            bvirt = _i - _0;\n            v[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            v[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            v[3] = u3;\n            catlen = sum(4, u, 4, v, cat);\n            s1 = cdxtail * adytail;\n            c = splitter * cdxtail;\n            ahi = c - (c - cdxtail);\n            alo = cdxtail - ahi;\n            c = splitter * adytail;\n            bhi = c - (c - adytail);\n            blo = adytail - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = adxtail * cdytail;\n            c = splitter * adxtail;\n            ahi = c - (c - adxtail);\n            alo = adxtail - ahi;\n            c = splitter * cdytail;\n            bhi = c - (c - cdytail);\n            blo = cdytail - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 - t0;\n            bvirt = s0 - _i;\n            catt[0] = s0 - (_i + bvirt) + (bvirt - t0);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 - t1;\n            bvirt = _0 - _i;\n            catt[1] = _0 - (_i + bvirt) + (bvirt - t1);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            catt[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            catt[3] = u3;\n            cattlen = 4;\n        } else {\n            cat[0] = 0;\n            catlen = 1;\n            catt[0] = 0;\n            cattlen = 1;\n        }\n        if (bdxtail !== 0) {\n            const len = scale(catlen, cat, bdxtail, _16c);\n            finlen = finadd(finlen, sum(\n                scale(bxtcalen, bxtca, bdxtail, _16), _16,\n                scale(len, _16c, 2 * bdx, _32), _32, _48), _48);\n\n            const len2 = scale(cattlen, catt, bdxtail, _8);\n            finlen = finadd(finlen, sum_three(\n                scale(len2, _8, 2 * bdx, _16), _16,\n                scale(len2, _8, bdxtail, _16b), _16b,\n                scale(len, _16c, bdxtail, _32), _32, _32b, _64), _64);\n\n            if (cdytail !== 0) {\n                finlen = finadd(finlen, scale(scale(4, aa, bdxtail, _8), _8, cdytail, _16), _16);\n            }\n            if (adytail !== 0) {\n                finlen = finadd(finlen, scale(scale(4, cc, -bdxtail, _8), _8, adytail, _16), _16);\n            }\n        }\n        if (bdytail !== 0) {\n            const len = scale(catlen, cat, bdytail, _16c);\n            finlen = finadd(finlen, sum(\n                scale(bytcalen, bytca, bdytail, _16), _16,\n                scale(len, _16c, 2 * bdy, _32), _32, _48), _48);\n\n            const len2 = scale(cattlen, catt, bdytail, _8);\n            finlen = finadd(finlen, sum_three(\n                scale(len2, _8, 2 * bdy, _16), _16,\n                scale(len2, _8, bdytail, _16b), _16b,\n                scale(len, _16c, bdytail, _32), _32,  _32b, _64), _64);\n        }\n    }\n    if (cdxtail !== 0 || cdytail !== 0) {\n        if (adxtail !== 0 || adytail !== 0 || bdxtail !== 0 || bdytail !== 0) {\n            s1 = adxtail * bdy;\n            c = splitter * adxtail;\n            ahi = c - (c - adxtail);\n            alo = adxtail - ahi;\n            c = splitter * bdy;\n            bhi = c - (c - bdy);\n            blo = bdy - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = adx * bdytail;\n            c = splitter * adx;\n            ahi = c - (c - adx);\n            alo = adx - ahi;\n            c = splitter * bdytail;\n            bhi = c - (c - bdytail);\n            blo = bdytail - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 + t0;\n            bvirt = _i - s0;\n            u[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 + t1;\n            bvirt = _i - _0;\n            u[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            u[3] = u3;\n            n1 = -ady;\n            n0 = -adytail;\n            s1 = bdxtail * n1;\n            c = splitter * bdxtail;\n            ahi = c - (c - bdxtail);\n            alo = bdxtail - ahi;\n            c = splitter * n1;\n            bhi = c - (c - n1);\n            blo = n1 - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = bdx * n0;\n            c = splitter * bdx;\n            ahi = c - (c - bdx);\n            alo = bdx - ahi;\n            c = splitter * n0;\n            bhi = c - (c - n0);\n            blo = n0 - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 + t0;\n            bvirt = _i - s0;\n            v[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 + t1;\n            bvirt = _i - _0;\n            v[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            v[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            v[3] = u3;\n            abtlen = sum(4, u, 4, v, abt);\n            s1 = adxtail * bdytail;\n            c = splitter * adxtail;\n            ahi = c - (c - adxtail);\n            alo = adxtail - ahi;\n            c = splitter * bdytail;\n            bhi = c - (c - bdytail);\n            blo = bdytail - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = bdxtail * adytail;\n            c = splitter * bdxtail;\n            ahi = c - (c - bdxtail);\n            alo = bdxtail - ahi;\n            c = splitter * adytail;\n            bhi = c - (c - adytail);\n            blo = adytail - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 - t0;\n            bvirt = s0 - _i;\n            abtt[0] = s0 - (_i + bvirt) + (bvirt - t0);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 - t1;\n            bvirt = _0 - _i;\n            abtt[1] = _0 - (_i + bvirt) + (bvirt - t1);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            abtt[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            abtt[3] = u3;\n            abttlen = 4;\n        } else {\n            abt[0] = 0;\n            abtlen = 1;\n            abtt[0] = 0;\n            abttlen = 1;\n        }\n        if (cdxtail !== 0) {\n            const len = scale(abtlen, abt, cdxtail, _16c);\n            finlen = finadd(finlen, sum(\n                scale(cxtablen, cxtab, cdxtail, _16), _16,\n                scale(len, _16c, 2 * cdx, _32), _32, _48), _48);\n\n            const len2 = scale(abttlen, abtt, cdxtail, _8);\n            finlen = finadd(finlen, sum_three(\n                scale(len2, _8, 2 * cdx, _16), _16,\n                scale(len2, _8, cdxtail, _16b), _16b,\n                scale(len, _16c, cdxtail, _32), _32, _32b, _64), _64);\n\n            if (adytail !== 0) {\n                finlen = finadd(finlen, scale(scale(4, bb, cdxtail, _8), _8, adytail, _16), _16);\n            }\n            if (bdytail !== 0) {\n                finlen = finadd(finlen, scale(scale(4, aa, -cdxtail, _8), _8, bdytail, _16), _16);\n            }\n        }\n        if (cdytail !== 0) {\n            const len = scale(abtlen, abt, cdytail, _16c);\n            finlen = finadd(finlen, sum(\n                scale(cytablen, cytab, cdytail, _16), _16,\n                scale(len, _16c, 2 * cdy, _32), _32, _48), _48);\n\n            const len2 = scale(abttlen, abtt, cdytail, _8);\n            finlen = finadd(finlen, sum_three(\n                scale(len2, _8, 2 * cdy, _16), _16,\n                scale(len2, _8, cdytail, _16b), _16b,\n                scale(len, _16c, cdytail, _32), _32, _32b, _64), _64);\n        }\n    }\n\n    return fin[finlen - 1];\n}\n\nexport function incircle(ax, ay, bx, by, cx, cy, dx, dy) {\n    const adx = ax - dx;\n    const bdx = bx - dx;\n    const cdx = cx - dx;\n    const ady = ay - dy;\n    const bdy = by - dy;\n    const cdy = cy - dy;\n\n    const bdxcdy = bdx * cdy;\n    const cdxbdy = cdx * bdy;\n    const alift = adx * adx + ady * ady;\n\n    const cdxady = cdx * ady;\n    const adxcdy = adx * cdy;\n    const blift = bdx * bdx + bdy * bdy;\n\n    const adxbdy = adx * bdy;\n    const bdxady = bdx * ady;\n    const clift = cdx * cdx + cdy * cdy;\n\n    const det =\n        alift * (bdxcdy - cdxbdy) +\n        blift * (cdxady - adxcdy) +\n        clift * (adxbdy - bdxady);\n\n    const permanent =\n        (Math.abs(bdxcdy) + Math.abs(cdxbdy)) * alift +\n        (Math.abs(cdxady) + Math.abs(adxcdy)) * blift +\n        (Math.abs(adxbdy) + Math.abs(bdxady)) * clift;\n\n    const errbound = iccerrboundA * permanent;\n\n    if (det > errbound || -det > errbound) {\n        return det;\n    }\n    return incircleadapt(ax, ay, bx, by, cx, cy, dx, dy, permanent);\n}\n\nexport function incirclefast(ax, ay, bx, by, cx, cy, dx, dy) {\n    const adx = ax - dx;\n    const ady = ay - dy;\n    const bdx = bx - dx;\n    const bdy = by - dy;\n    const cdx = cx - dx;\n    const cdy = cy - dy;\n\n    const abdet = adx * bdy - bdx * ady;\n    const bcdet = bdx * cdy - cdx * bdy;\n    const cadet = cdx * ady - adx * cdy;\n    const alift = adx * adx + ady * ady;\n    const blift = bdx * bdx + bdy * bdy;\n    const clift = cdx * cdx + cdy * cdy;\n\n    return alift * bcdet + blift * cadet + clift * abdet;\n}\n","import {epsilon, splitter, resulterrbound, estimate, vec, sum, sum_three, scale, negate} from './util.js';\n\nconst isperrboundA = (16 + 224 * epsilon) * epsilon;\nconst isperrboundB = (5 + 72 * epsilon) * epsilon;\nconst isperrboundC = (71 + 1408 * epsilon) * epsilon * epsilon;\n\nconst ab = vec(4);\nconst bc = vec(4);\nconst cd = vec(4);\nconst de = vec(4);\nconst ea = vec(4);\nconst ac = vec(4);\nconst bd = vec(4);\nconst ce = vec(4);\nconst da = vec(4);\nconst eb = vec(4);\n\nconst abc = vec(24);\nconst bcd = vec(24);\nconst cde = vec(24);\nconst dea = vec(24);\nconst eab = vec(24);\nconst abd = vec(24);\nconst bce = vec(24);\nconst cda = vec(24);\nconst deb = vec(24);\nconst eac = vec(24);\n\nconst adet = vec(1152);\nconst bdet = vec(1152);\nconst cdet = vec(1152);\nconst ddet = vec(1152);\nconst edet = vec(1152);\nconst abdet = vec(2304);\nconst cddet = vec(2304);\nconst cdedet = vec(3456);\nconst deter = vec(5760);\n\nconst _8 = vec(8);\nconst _8b = vec(8);\nconst _8c = vec(8);\nconst _16 = vec(16);\nconst _24 = vec(24);\nconst _48 = vec(48);\nconst _48b = vec(48);\nconst _96 = vec(96);\nconst _192 = vec(192);\nconst _384x = vec(384);\nconst _384y = vec(384);\nconst _384z = vec(384);\nconst _768 = vec(768);\n\nfunction sum_three_scale(a, b, c, az, bz, cz, out) {\n    return sum_three(\n        scale(4, a, az, _8), _8,\n        scale(4, b, bz, _8b), _8b,\n        scale(4, c, cz, _8c), _8c, _16, out);\n}\n\nfunction liftexact(alen, a, blen, b, clen, c, dlen, d, x, y, z, out) {\n    const len = sum(\n        sum(alen, a, blen, b, _48), _48,\n        negate(sum(clen, c, dlen, d, _48b), _48b), _48b, _96);\n\n    return sum_three(\n        scale(scale(len, _96, x, _192), _192, x, _384x), _384x,\n        scale(scale(len, _96, y, _192), _192, y, _384y), _384y,\n        scale(scale(len, _96, z, _192), _192, z, _384z), _384z, _768, out);\n}\n\nfunction insphereexact(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez) {\n    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _0, s1, s0, t1, t0, u3;\n\n    s1 = ax * by;\n    c = splitter * ax;\n    ahi = c - (c - ax);\n    alo = ax - ahi;\n    c = splitter * by;\n    bhi = c - (c - by);\n    blo = by - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = bx * ay;\n    c = splitter * bx;\n    ahi = c - (c - bx);\n    alo = bx - ahi;\n    c = splitter * ay;\n    bhi = c - (c - ay);\n    blo = ay - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ab[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ab[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    ab[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    ab[3] = u3;\n    s1 = bx * cy;\n    c = splitter * bx;\n    ahi = c - (c - bx);\n    alo = bx - ahi;\n    c = splitter * cy;\n    bhi = c - (c - cy);\n    blo = cy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = cx * by;\n    c = splitter * cx;\n    ahi = c - (c - cx);\n    alo = cx - ahi;\n    c = splitter * by;\n    bhi = c - (c - by);\n    blo = by - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    bc[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    bc[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    bc[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    bc[3] = u3;\n    s1 = cx * dy;\n    c = splitter * cx;\n    ahi = c - (c - cx);\n    alo = cx - ahi;\n    c = splitter * dy;\n    bhi = c - (c - dy);\n    blo = dy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = dx * cy;\n    c = splitter * dx;\n    ahi = c - (c - dx);\n    alo = dx - ahi;\n    c = splitter * cy;\n    bhi = c - (c - cy);\n    blo = cy - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    cd[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    cd[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    cd[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    cd[3] = u3;\n    s1 = dx * ey;\n    c = splitter * dx;\n    ahi = c - (c - dx);\n    alo = dx - ahi;\n    c = splitter * ey;\n    bhi = c - (c - ey);\n    blo = ey - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = ex * dy;\n    c = splitter * ex;\n    ahi = c - (c - ex);\n    alo = ex - ahi;\n    c = splitter * dy;\n    bhi = c - (c - dy);\n    blo = dy - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    de[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    de[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    de[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    de[3] = u3;\n    s1 = ex * ay;\n    c = splitter * ex;\n    ahi = c - (c - ex);\n    alo = ex - ahi;\n    c = splitter * ay;\n    bhi = c - (c - ay);\n    blo = ay - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = ax * ey;\n    c = splitter * ax;\n    ahi = c - (c - ax);\n    alo = ax - ahi;\n    c = splitter * ey;\n    bhi = c - (c - ey);\n    blo = ey - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ea[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ea[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    ea[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    ea[3] = u3;\n    s1 = ax * cy;\n    c = splitter * ax;\n    ahi = c - (c - ax);\n    alo = ax - ahi;\n    c = splitter * cy;\n    bhi = c - (c - cy);\n    blo = cy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = cx * ay;\n    c = splitter * cx;\n    ahi = c - (c - cx);\n    alo = cx - ahi;\n    c = splitter * ay;\n    bhi = c - (c - ay);\n    blo = ay - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ac[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ac[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    ac[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    ac[3] = u3;\n    s1 = bx * dy;\n    c = splitter * bx;\n    ahi = c - (c - bx);\n    alo = bx - ahi;\n    c = splitter * dy;\n    bhi = c - (c - dy);\n    blo = dy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = dx * by;\n    c = splitter * dx;\n    ahi = c - (c - dx);\n    alo = dx - ahi;\n    c = splitter * by;\n    bhi = c - (c - by);\n    blo = by - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    bd[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    bd[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    bd[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    bd[3] = u3;\n    s1 = cx * ey;\n    c = splitter * cx;\n    ahi = c - (c - cx);\n    alo = cx - ahi;\n    c = splitter * ey;\n    bhi = c - (c - ey);\n    blo = ey - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = ex * cy;\n    c = splitter * ex;\n    ahi = c - (c - ex);\n    alo = ex - ahi;\n    c = splitter * cy;\n    bhi = c - (c - cy);\n    blo = cy - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ce[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ce[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    ce[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    ce[3] = u3;\n    s1 = dx * ay;\n    c = splitter * dx;\n    ahi = c - (c - dx);\n    alo = dx - ahi;\n    c = splitter * ay;\n    bhi = c - (c - ay);\n    blo = ay - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = ax * dy;\n    c = splitter * ax;\n    ahi = c - (c - ax);\n    alo = ax - ahi;\n    c = splitter * dy;\n    bhi = c - (c - dy);\n    blo = dy - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    da[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    da[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    da[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    da[3] = u3;\n    s1 = ex * by;\n    c = splitter * ex;\n    ahi = c - (c - ex);\n    alo = ex - ahi;\n    c = splitter * by;\n    bhi = c - (c - by);\n    blo = by - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = bx * ey;\n    c = splitter * bx;\n    ahi = c - (c - bx);\n    alo = bx - ahi;\n    c = splitter * ey;\n    bhi = c - (c - ey);\n    blo = ey - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    eb[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    eb[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    eb[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    eb[3] = u3;\n\n    const abclen = sum_three_scale(ab, bc, ac, cz, az, -bz, abc);\n    const bcdlen = sum_three_scale(bc, cd, bd, dz, bz, -cz, bcd);\n    const cdelen = sum_three_scale(cd, de, ce, ez, cz, -dz, cde);\n    const dealen = sum_three_scale(de, ea, da, az, dz, -ez, dea);\n    const eablen = sum_three_scale(ea, ab, eb, bz, ez, -az, eab);\n    const abdlen = sum_three_scale(ab, bd, da, dz, az, bz, abd);\n    const bcelen = sum_three_scale(bc, ce, eb, ez, bz, cz, bce);\n    const cdalen = sum_three_scale(cd, da, ac, az, cz, dz, cda);\n    const deblen = sum_three_scale(de, eb, bd, bz, dz, ez, deb);\n    const eaclen = sum_three_scale(ea, ac, ce, cz, ez, az, eac);\n\n    const deterlen = sum_three(\n        liftexact(cdelen, cde, bcelen, bce, deblen, deb, bcdlen, bcd, ax, ay, az, adet), adet,\n        liftexact(dealen, dea, cdalen, cda, eaclen, eac, cdelen, cde, bx, by, bz, bdet), bdet,\n        sum_three(\n            liftexact(eablen, eab, deblen, deb, abdlen, abd, dealen, dea, cx, cy, cz, cdet), cdet,\n            liftexact(abclen, abc, eaclen, eac, bcelen, bce, eablen, eab, dx, dy, dz, ddet), ddet,\n            liftexact(bcdlen, bcd, abdlen, abd, cdalen, cda, abclen, abc, ex, ey, ez, edet), edet, cddet, cdedet), cdedet, abdet, deter);\n\n    return deter[deterlen - 1];\n}\n\nconst xdet = vec(96);\nconst ydet = vec(96);\nconst zdet = vec(96);\nconst fin = vec(1152);\n\nfunction liftadapt(a, b, c, az, bz, cz, x, y, z, out) {\n    const len = sum_three_scale(a, b, c, az, bz, cz, _24);\n    return sum_three(\n        scale(scale(len, _24, x, _48), _48, x, xdet), xdet,\n        scale(scale(len, _24, y, _48), _48, y, ydet), ydet,\n        scale(scale(len, _24, z, _48), _48, z, zdet), zdet, _192, out);\n}\n\nfunction insphereadapt(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez, permanent) {\n    let ab3, bc3, cd3, da3, ac3, bd3;\n\n    let aextail, bextail, cextail, dextail;\n    let aeytail, beytail, ceytail, deytail;\n    let aeztail, beztail, ceztail, deztail;\n\n    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _0, s1, s0, t1, t0;\n\n    const aex = ax - ex;\n    const bex = bx - ex;\n    const cex = cx - ex;\n    const dex = dx - ex;\n    const aey = ay - ey;\n    const bey = by - ey;\n    const cey = cy - ey;\n    const dey = dy - ey;\n    const aez = az - ez;\n    const bez = bz - ez;\n    const cez = cz - ez;\n    const dez = dz - ez;\n\n    s1 = aex * bey;\n    c = splitter * aex;\n    ahi = c - (c - aex);\n    alo = aex - ahi;\n    c = splitter * bey;\n    bhi = c - (c - bey);\n    blo = bey - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = bex * aey;\n    c = splitter * bex;\n    ahi = c - (c - bex);\n    alo = bex - ahi;\n    c = splitter * aey;\n    bhi = c - (c - aey);\n    blo = aey - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ab[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ab[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    ab3 = _j + _i;\n    bvirt = ab3 - _j;\n    ab[2] = _j - (ab3 - bvirt) + (_i - bvirt);\n    ab[3] = ab3;\n    s1 = bex * cey;\n    c = splitter * bex;\n    ahi = c - (c - bex);\n    alo = bex - ahi;\n    c = splitter * cey;\n    bhi = c - (c - cey);\n    blo = cey - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = cex * bey;\n    c = splitter * cex;\n    ahi = c - (c - cex);\n    alo = cex - ahi;\n    c = splitter * bey;\n    bhi = c - (c - bey);\n    blo = bey - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    bc[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    bc[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    bc3 = _j + _i;\n    bvirt = bc3 - _j;\n    bc[2] = _j - (bc3 - bvirt) + (_i - bvirt);\n    bc[3] = bc3;\n    s1 = cex * dey;\n    c = splitter * cex;\n    ahi = c - (c - cex);\n    alo = cex - ahi;\n    c = splitter * dey;\n    bhi = c - (c - dey);\n    blo = dey - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = dex * cey;\n    c = splitter * dex;\n    ahi = c - (c - dex);\n    alo = dex - ahi;\n    c = splitter * cey;\n    bhi = c - (c - cey);\n    blo = cey - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    cd[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    cd[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    cd3 = _j + _i;\n    bvirt = cd3 - _j;\n    cd[2] = _j - (cd3 - bvirt) + (_i - bvirt);\n    cd[3] = cd3;\n    s1 = dex * aey;\n    c = splitter * dex;\n    ahi = c - (c - dex);\n    alo = dex - ahi;\n    c = splitter * aey;\n    bhi = c - (c - aey);\n    blo = aey - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = aex * dey;\n    c = splitter * aex;\n    ahi = c - (c - aex);\n    alo = aex - ahi;\n    c = splitter * dey;\n    bhi = c - (c - dey);\n    blo = dey - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    da[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    da[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    da3 = _j + _i;\n    bvirt = da3 - _j;\n    da[2] = _j - (da3 - bvirt) + (_i - bvirt);\n    da[3] = da3;\n    s1 = aex * cey;\n    c = splitter * aex;\n    ahi = c - (c - aex);\n    alo = aex - ahi;\n    c = splitter * cey;\n    bhi = c - (c - cey);\n    blo = cey - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = cex * aey;\n    c = splitter * cex;\n    ahi = c - (c - cex);\n    alo = cex - ahi;\n    c = splitter * aey;\n    bhi = c - (c - aey);\n    blo = aey - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ac[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ac[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    ac3 = _j + _i;\n    bvirt = ac3 - _j;\n    ac[2] = _j - (ac3 - bvirt) + (_i - bvirt);\n    ac[3] = ac3;\n    s1 = bex * dey;\n    c = splitter * bex;\n    ahi = c - (c - bex);\n    alo = bex - ahi;\n    c = splitter * dey;\n    bhi = c - (c - dey);\n    blo = dey - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = dex * bey;\n    c = splitter * dex;\n    ahi = c - (c - dex);\n    alo = dex - ahi;\n    c = splitter * bey;\n    bhi = c - (c - bey);\n    blo = bey - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    bd[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    bd[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    bd3 = _j + _i;\n    bvirt = bd3 - _j;\n    bd[2] = _j - (bd3 - bvirt) + (_i - bvirt);\n    bd[3] = bd3;\n\n    const finlen = sum(\n        sum(\n            negate(liftadapt(bc, cd, bd, dez, bez, -cez, aex, aey, aez, adet), adet), adet,\n            liftadapt(cd, da, ac, aez, cez, dez, bex, bey, bez, bdet), bdet, abdet), abdet,\n        sum(\n            negate(liftadapt(da, ab, bd, bez, dez, aez, cex, cey, cez, cdet), cdet), cdet,\n            liftadapt(ab, bc, ac, cez, aez, -bez, dex, dey, dez, ddet), ddet, cddet), cddet, fin);\n\n    let det = estimate(finlen, fin);\n    let errbound = isperrboundB * permanent;\n    if (det >= errbound || -det >= errbound) {\n        return det;\n    }\n\n    bvirt = ax - aex;\n    aextail = ax - (aex + bvirt) + (bvirt - ex);\n    bvirt = ay - aey;\n    aeytail = ay - (aey + bvirt) + (bvirt - ey);\n    bvirt = az - aez;\n    aeztail = az - (aez + bvirt) + (bvirt - ez);\n    bvirt = bx - bex;\n    bextail = bx - (bex + bvirt) + (bvirt - ex);\n    bvirt = by - bey;\n    beytail = by - (bey + bvirt) + (bvirt - ey);\n    bvirt = bz - bez;\n    beztail = bz - (bez + bvirt) + (bvirt - ez);\n    bvirt = cx - cex;\n    cextail = cx - (cex + bvirt) + (bvirt - ex);\n    bvirt = cy - cey;\n    ceytail = cy - (cey + bvirt) + (bvirt - ey);\n    bvirt = cz - cez;\n    ceztail = cz - (cez + bvirt) + (bvirt - ez);\n    bvirt = dx - dex;\n    dextail = dx - (dex + bvirt) + (bvirt - ex);\n    bvirt = dy - dey;\n    deytail = dy - (dey + bvirt) + (bvirt - ey);\n    bvirt = dz - dez;\n    deztail = dz - (dez + bvirt) + (bvirt - ez);\n    if (aextail === 0 && aeytail === 0 && aeztail === 0 &&\n        bextail === 0 && beytail === 0 && beztail === 0 &&\n        cextail === 0 && ceytail === 0 && ceztail === 0 &&\n        dextail === 0 && deytail === 0 && deztail === 0) {\n        return det;\n    }\n\n    errbound = isperrboundC * permanent + resulterrbound * Math.abs(det);\n\n    const abeps = (aex * beytail + bey * aextail) - (aey * bextail + bex * aeytail);\n    const bceps = (bex * ceytail + cey * bextail) - (bey * cextail + cex * beytail);\n    const cdeps = (cex * deytail + dey * cextail) - (cey * dextail + dex * ceytail);\n    const daeps = (dex * aeytail + aey * dextail) - (dey * aextail + aex * deytail);\n    const aceps = (aex * ceytail + cey * aextail) - (aey * cextail + cex * aeytail);\n    const bdeps = (bex * deytail + dey * bextail) - (bey * dextail + dex * beytail);\n    det +=\n        (((bex * bex + bey * bey + bez * bez) * ((cez * daeps + dez * aceps + aez * cdeps) +\n        (ceztail * da3 + deztail * ac3 + aeztail * cd3)) + (dex * dex + dey * dey + dez * dez) *\n        ((aez * bceps - bez * aceps + cez * abeps) + (aeztail * bc3 - beztail * ac3 + ceztail * ab3))) -\n        ((aex * aex + aey * aey + aez * aez) * ((bez * cdeps - cez * bdeps + dez * bceps) +\n        (beztail * cd3 - ceztail * bd3 + deztail * bc3)) + (cex * cex + cey * cey + cez * cez) *\n        ((dez * abeps + aez * bdeps + bez * daeps) + (deztail * ab3 + aeztail * bd3 + beztail * da3)))) +\n        2 * (((bex * bextail + bey * beytail + bez * beztail) * (cez * da3 + dez * ac3 + aez * cd3) +\n        (dex * dextail + dey * deytail + dez * deztail) * (aez * bc3 - bez * ac3 + cez * ab3)) -\n        ((aex * aextail + aey * aeytail + aez * aeztail) * (bez * cd3 - cez * bd3 + dez * bc3) +\n        (cex * cextail + cey * ceytail + cez * ceztail) * (dez * ab3 + aez * bd3 + bez * da3)));\n\n    if (det >= errbound || -det >= errbound) {\n        return det;\n    }\n\n    return insphereexact(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez);\n}\n\nexport function insphere(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez) {\n    const aex = ax - ex;\n    const bex = bx - ex;\n    const cex = cx - ex;\n    const dex = dx - ex;\n    const aey = ay - ey;\n    const bey = by - ey;\n    const cey = cy - ey;\n    const dey = dy - ey;\n    const aez = az - ez;\n    const bez = bz - ez;\n    const cez = cz - ez;\n    const dez = dz - ez;\n\n    const aexbey = aex * bey;\n    const bexaey = bex * aey;\n    const ab = aexbey - bexaey;\n    const bexcey = bex * cey;\n    const cexbey = cex * bey;\n    const bc = bexcey - cexbey;\n    const cexdey = cex * dey;\n    const dexcey = dex * cey;\n    const cd = cexdey - dexcey;\n    const dexaey = dex * aey;\n    const aexdey = aex * dey;\n    const da = dexaey - aexdey;\n    const aexcey = aex * cey;\n    const cexaey = cex * aey;\n    const ac = aexcey - cexaey;\n    const bexdey = bex * dey;\n    const dexbey = dex * bey;\n    const bd = bexdey - dexbey;\n\n    const abc = aez * bc - bez * ac + cez * ab;\n    const bcd = bez * cd - cez * bd + dez * bc;\n    const cda = cez * da + dez * ac + aez * cd;\n    const dab = dez * ab + aez * bd + bez * da;\n\n    const alift = aex * aex + aey * aey + aez * aez;\n    const blift = bex * bex + bey * bey + bez * bez;\n    const clift = cex * cex + cey * cey + cez * cez;\n    const dlift = dex * dex + dey * dey + dez * dez;\n\n    const det = (clift * dab - dlift * abc) + (alift * bcd - blift * cda);\n\n    const aezplus = Math.abs(aez);\n    const bezplus = Math.abs(bez);\n    const cezplus = Math.abs(cez);\n    const dezplus = Math.abs(dez);\n    const aexbeyplus = Math.abs(aexbey);\n    const bexaeyplus = Math.abs(bexaey);\n    const bexceyplus = Math.abs(bexcey);\n    const cexbeyplus = Math.abs(cexbey);\n    const cexdeyplus = Math.abs(cexdey);\n    const dexceyplus = Math.abs(dexcey);\n    const dexaeyplus = Math.abs(dexaey);\n    const aexdeyplus = Math.abs(aexdey);\n    const aexceyplus = Math.abs(aexcey);\n    const cexaeyplus = Math.abs(cexaey);\n    const bexdeyplus = Math.abs(bexdey);\n    const dexbeyplus = Math.abs(dexbey);\n    const permanent =\n        ((cexdeyplus + dexceyplus) * bezplus + (dexbeyplus + bexdeyplus) * cezplus + (bexceyplus + cexbeyplus) * dezplus) * alift +\n        ((dexaeyplus + aexdeyplus) * cezplus + (aexceyplus + cexaeyplus) * dezplus + (cexdeyplus + dexceyplus) * aezplus) * blift +\n        ((aexbeyplus + bexaeyplus) * dezplus + (bexdeyplus + dexbeyplus) * aezplus + (dexaeyplus + aexdeyplus) * bezplus) * clift +\n        ((bexceyplus + cexbeyplus) * aezplus + (cexaeyplus + aexceyplus) * bezplus + (aexbeyplus + bexaeyplus) * cezplus) * dlift;\n\n    const errbound = isperrboundA * permanent;\n    if (det > errbound || -det > errbound) {\n        return det;\n    }\n    return -insphereadapt(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez, permanent);\n}\n\nexport function inspherefast(pax, pay, paz, pbx, pby, pbz, pcx, pcy, pcz, pdx, pdy, pdz, pex, pey, pez) {\n    const aex = pax - pex;\n    const bex = pbx - pex;\n    const cex = pcx - pex;\n    const dex = pdx - pex;\n    const aey = pay - pey;\n    const bey = pby - pey;\n    const cey = pcy - pey;\n    const dey = pdy - pey;\n    const aez = paz - pez;\n    const bez = pbz - pez;\n    const cez = pcz - pez;\n    const dez = pdz - pez;\n\n    const ab = aex * bey - bex * aey;\n    const bc = bex * cey - cex * bey;\n    const cd = cex * dey - dex * cey;\n    const da = dex * aey - aex * dey;\n    const ac = aex * cey - cex * aey;\n    const bd = bex * dey - dex * bey;\n\n    const abc = aez * bc - bez * ac + cez * ab;\n    const bcd = bez * cd - cez * bd + dez * bc;\n    const cda = cez * da + dez * ac + aez * cd;\n    const dab = dez * ab + aez * bd + bez * da;\n\n    const alift = aex * aex + aey * aey + aez * aez;\n    const blift = bex * bex + bey * bey + bez * bez;\n    const clift = cex * cex + cey * cey + cez * cez;\n    const dlift = dex * dex + dey * dey + dez * dez;\n\n    return (clift * dab - dlift * abc) + (alift * bcd - blift * cda);\n}\n","\nconst EPSILON = Math.pow(2, -52);\nconst EDGE_STACK = new Uint32Array(512);\n\nimport {orient2d} from 'robust-predicates';\n\nexport default class Delaunator {\n\n    static from(points, getX = defaultGetX, getY = defaultGetY) {\n        const n = points.length;\n        const coords = new Float64Array(n * 2);\n\n        for (let i = 0; i < n; i++) {\n            const p = points[i];\n            coords[2 * i] = getX(p);\n            coords[2 * i + 1] = getY(p);\n        }\n\n        return new Delaunator(coords);\n    }\n\n    constructor(coords) {\n        const n = coords.length >> 1;\n        if (n > 0 && typeof coords[0] !== 'number') throw new Error('Expected coords to contain numbers.');\n\n        this.coords = coords;\n\n        // arrays that will store the triangulation graph\n        const maxTriangles = Math.max(2 * n - 5, 0);\n        this._triangles = new Uint32Array(maxTriangles * 3);\n        this._halfedges = new Int32Array(maxTriangles * 3);\n\n        // temporary arrays for tracking the edges of the advancing convex hull\n        this._hashSize = Math.ceil(Math.sqrt(n));\n        this._hullPrev = new Uint32Array(n); // edge to prev edge\n        this._hullNext = new Uint32Array(n); // edge to next edge\n        this._hullTri = new Uint32Array(n); // edge to adjacent triangle\n        this._hullHash = new Int32Array(this._hashSize).fill(-1); // angular edge hash\n\n        // temporary arrays for sorting points\n        this._ids = new Uint32Array(n);\n        this._dists = new Float64Array(n);\n\n        this.update();\n    }\n\n    update() {\n        const {coords, _hullPrev: hullPrev, _hullNext: hullNext, _hullTri: hullTri, _hullHash: hullHash} =  this;\n        const n = coords.length >> 1;\n\n        // populate an array of point indices; calculate input data bbox\n        let minX = Infinity;\n        let minY = Infinity;\n        let maxX = -Infinity;\n        let maxY = -Infinity;\n\n        for (let i = 0; i < n; i++) {\n            const x = coords[2 * i];\n            const y = coords[2 * i + 1];\n            if (x < minX) minX = x;\n            if (y < minY) minY = y;\n            if (x > maxX) maxX = x;\n            if (y > maxY) maxY = y;\n            this._ids[i] = i;\n        }\n        const cx = (minX + maxX) / 2;\n        const cy = (minY + maxY) / 2;\n\n        let minDist = Infinity;\n        let i0, i1, i2;\n\n        // pick a seed point close to the center\n        for (let i = 0; i < n; i++) {\n            const d = dist(cx, cy, coords[2 * i], coords[2 * i + 1]);\n            if (d < minDist) {\n                i0 = i;\n                minDist = d;\n            }\n        }\n        const i0x = coords[2 * i0];\n        const i0y = coords[2 * i0 + 1];\n\n        minDist = Infinity;\n\n        // find the point closest to the seed\n        for (let i = 0; i < n; i++) {\n            if (i === i0) continue;\n            const d = dist(i0x, i0y, coords[2 * i], coords[2 * i + 1]);\n            if (d < minDist && d > 0) {\n                i1 = i;\n                minDist = d;\n            }\n        }\n        let i1x = coords[2 * i1];\n        let i1y = coords[2 * i1 + 1];\n\n        let minRadius = Infinity;\n\n        // find the third point which forms the smallest circumcircle with the first two\n        for (let i = 0; i < n; i++) {\n            if (i === i0 || i === i1) continue;\n            const r = circumradius(i0x, i0y, i1x, i1y, coords[2 * i], coords[2 * i + 1]);\n            if (r < minRadius) {\n                i2 = i;\n                minRadius = r;\n            }\n        }\n        let i2x = coords[2 * i2];\n        let i2y = coords[2 * i2 + 1];\n\n        if (minRadius === Infinity) {\n            // order collinear points by dx (or dy if all x are identical)\n            // and return the list as a hull\n            for (let i = 0; i < n; i++) {\n                this._dists[i] = (coords[2 * i] - coords[0]) || (coords[2 * i + 1] - coords[1]);\n            }\n            quicksort(this._ids, this._dists, 0, n - 1);\n            const hull = new Uint32Array(n);\n            let j = 0;\n            for (let i = 0, d0 = -Infinity; i < n; i++) {\n                const id = this._ids[i];\n                if (this._dists[id] > d0) {\n                    hull[j++] = id;\n                    d0 = this._dists[id];\n                }\n            }\n            this.hull = hull.subarray(0, j);\n            this.triangles = new Uint32Array(0);\n            this.halfedges = new Uint32Array(0);\n            return;\n        }\n\n        // swap the order of the seed points for counter-clockwise orientation\n        if (orient2d(i0x, i0y, i1x, i1y, i2x, i2y) < 0) {\n            const i = i1;\n            const x = i1x;\n            const y = i1y;\n            i1 = i2;\n            i1x = i2x;\n            i1y = i2y;\n            i2 = i;\n            i2x = x;\n            i2y = y;\n        }\n\n        const center = circumcenter(i0x, i0y, i1x, i1y, i2x, i2y);\n        this._cx = center.x;\n        this._cy = center.y;\n\n        for (let i = 0; i < n; i++) {\n            this._dists[i] = dist(coords[2 * i], coords[2 * i + 1], center.x, center.y);\n        }\n\n        // sort the points by distance from the seed triangle circumcenter\n        quicksort(this._ids, this._dists, 0, n - 1);\n\n        // set up the seed triangle as the starting hull\n        this._hullStart = i0;\n        let hullSize = 3;\n\n        hullNext[i0] = hullPrev[i2] = i1;\n        hullNext[i1] = hullPrev[i0] = i2;\n        hullNext[i2] = hullPrev[i1] = i0;\n\n        hullTri[i0] = 0;\n        hullTri[i1] = 1;\n        hullTri[i2] = 2;\n\n        hullHash.fill(-1);\n        hullHash[this._hashKey(i0x, i0y)] = i0;\n        hullHash[this._hashKey(i1x, i1y)] = i1;\n        hullHash[this._hashKey(i2x, i2y)] = i2;\n\n        this.trianglesLen = 0;\n        this._addTriangle(i0, i1, i2, -1, -1, -1);\n\n        for (let k = 0, xp, yp; k < this._ids.length; k++) {\n            const i = this._ids[k];\n            const x = coords[2 * i];\n            const y = coords[2 * i + 1];\n\n            // skip near-duplicate points\n            if (k > 0 && Math.abs(x - xp) <= EPSILON && Math.abs(y - yp) <= EPSILON) continue;\n            xp = x;\n            yp = y;\n\n            // skip seed triangle points\n            if (i === i0 || i === i1 || i === i2) continue;\n\n            // find a visible edge on the convex hull using edge hash\n            let start = 0;\n            for (let j = 0, key = this._hashKey(x, y); j < this._hashSize; j++) {\n                start = hullHash[(key + j) % this._hashSize];\n                if (start !== -1 && start !== hullNext[start]) break;\n            }\n\n            start = hullPrev[start];\n            let e = start, q;\n            while (q = hullNext[e], orient2d(x, y, coords[2 * e], coords[2 * e + 1], coords[2 * q], coords[2 * q + 1]) >= 0) {\n                e = q;\n                if (e === start) {\n                    e = -1;\n                    break;\n                }\n            }\n            if (e === -1) continue; // likely a near-duplicate point; skip it\n\n            // add the first triangle from the point\n            let t = this._addTriangle(e, i, hullNext[e], -1, -1, hullTri[e]);\n\n            // recursively flip triangles from the point until they satisfy the Delaunay condition\n            hullTri[i] = this._legalize(t + 2);\n            hullTri[e] = t; // keep track of boundary triangles on the hull\n            hullSize++;\n\n            // walk forward through the hull, adding more triangles and flipping recursively\n            let n = hullNext[e];\n            while (q = hullNext[n], orient2d(x, y, coords[2 * n], coords[2 * n + 1], coords[2 * q], coords[2 * q + 1]) < 0) {\n                t = this._addTriangle(n, i, q, hullTri[i], -1, hullTri[n]);\n                hullTri[i] = this._legalize(t + 2);\n                hullNext[n] = n; // mark as removed\n                hullSize--;\n                n = q;\n            }\n\n            // walk backward from the other side, adding more triangles and flipping\n            if (e === start) {\n                while (q = hullPrev[e], orient2d(x, y, coords[2 * q], coords[2 * q + 1], coords[2 * e], coords[2 * e + 1]) < 0) {\n                    t = this._addTriangle(q, i, e, -1, hullTri[e], hullTri[q]);\n                    this._legalize(t + 2);\n                    hullTri[q] = t;\n                    hullNext[e] = e; // mark as removed\n                    hullSize--;\n                    e = q;\n                }\n            }\n\n            // update the hull indices\n            this._hullStart = hullPrev[i] = e;\n            hullNext[e] = hullPrev[n] = i;\n            hullNext[i] = n;\n\n            // save the two new edges in the hash table\n            hullHash[this._hashKey(x, y)] = i;\n            hullHash[this._hashKey(coords[2 * e], coords[2 * e + 1])] = e;\n        }\n\n        this.hull = new Uint32Array(hullSize);\n        for (let i = 0, e = this._hullStart; i < hullSize; i++) {\n            this.hull[i] = e;\n            e = hullNext[e];\n        }\n\n        // trim typed triangle mesh arrays\n        this.triangles = this._triangles.subarray(0, this.trianglesLen);\n        this.halfedges = this._halfedges.subarray(0, this.trianglesLen);\n    }\n\n    _hashKey(x, y) {\n        return Math.floor(pseudoAngle(x - this._cx, y - this._cy) * this._hashSize) % this._hashSize;\n    }\n\n    _legalize(a) {\n        const {_triangles: triangles, _halfedges: halfedges, coords} = this;\n\n        let i = 0;\n        let ar = 0;\n\n        // recursion eliminated with a fixed-size stack\n        while (true) {\n            const b = halfedges[a];\n\n            /* if the pair of triangles doesn't satisfy the Delaunay condition\n             * (p1 is inside the circumcircle of [p0, pl, pr]), flip them,\n             * then do the same check/flip recursively for the new pair of triangles\n             *\n             *           pl                    pl\n             *          /||\\                  /  \\\n             *       al/ || \\bl            al/    \\a\n             *        /  ||  \\              /      \\\n             *       /  a||b  \\    flip    /___ar___\\\n             *     p0\\   ||   /p1   =>   p0\\---bl---/p1\n             *        \\  ||  /              \\      /\n             *       ar\\ || /br             b\\    /br\n             *          \\||/                  \\  /\n             *           pr                    pr\n             */\n            const a0 = a - a % 3;\n            ar = a0 + (a + 2) % 3;\n\n            if (b === -1) { // convex hull edge\n                if (i === 0) break;\n                a = EDGE_STACK[--i];\n                continue;\n            }\n\n            const b0 = b - b % 3;\n            const al = a0 + (a + 1) % 3;\n            const bl = b0 + (b + 2) % 3;\n\n            const p0 = triangles[ar];\n            const pr = triangles[a];\n            const pl = triangles[al];\n            const p1 = triangles[bl];\n\n            const illegal = inCircle(\n                coords[2 * p0], coords[2 * p0 + 1],\n                coords[2 * pr], coords[2 * pr + 1],\n                coords[2 * pl], coords[2 * pl + 1],\n                coords[2 * p1], coords[2 * p1 + 1]);\n\n            if (illegal) {\n                triangles[a] = p1;\n                triangles[b] = p0;\n\n                const hbl = halfedges[bl];\n\n                // edge swapped on the other side of the hull (rare); fix the halfedge reference\n                if (hbl === -1) {\n                    let e = this._hullStart;\n                    do {\n                        if (this._hullTri[e] === bl) {\n                            this._hullTri[e] = a;\n                            break;\n                        }\n                        e = this._hullPrev[e];\n                    } while (e !== this._hullStart);\n                }\n                this._link(a, hbl);\n                this._link(b, halfedges[ar]);\n                this._link(ar, bl);\n\n                const br = b0 + (b + 1) % 3;\n\n                // don't worry about hitting the cap: it can only happen on extremely degenerate input\n                if (i < EDGE_STACK.length) {\n                    EDGE_STACK[i++] = br;\n                }\n            } else {\n                if (i === 0) break;\n                a = EDGE_STACK[--i];\n            }\n        }\n\n        return ar;\n    }\n\n    _link(a, b) {\n        this._halfedges[a] = b;\n        if (b !== -1) this._halfedges[b] = a;\n    }\n\n    // add a new triangle given vertex indices and adjacent half-edge ids\n    _addTriangle(i0, i1, i2, a, b, c) {\n        const t = this.trianglesLen;\n\n        this._triangles[t] = i0;\n        this._triangles[t + 1] = i1;\n        this._triangles[t + 2] = i2;\n\n        this._link(t, a);\n        this._link(t + 1, b);\n        this._link(t + 2, c);\n\n        this.trianglesLen += 3;\n\n        return t;\n    }\n}\n\n// monotonically increases with real angle, but doesn't need expensive trigonometry\nfunction pseudoAngle(dx, dy) {\n    const p = dx / (Math.abs(dx) + Math.abs(dy));\n    return (dy > 0 ? 3 - p : 1 + p) / 4; // [0..1]\n}\n\nfunction dist(ax, ay, bx, by) {\n    const dx = ax - bx;\n    const dy = ay - by;\n    return dx * dx + dy * dy;\n}\n\nfunction inCircle(ax, ay, bx, by, cx, cy, px, py) {\n    const dx = ax - px;\n    const dy = ay - py;\n    const ex = bx - px;\n    const ey = by - py;\n    const fx = cx - px;\n    const fy = cy - py;\n\n    const ap = dx * dx + dy * dy;\n    const bp = ex * ex + ey * ey;\n    const cp = fx * fx + fy * fy;\n\n    return dx * (ey * cp - bp * fy) -\n           dy * (ex * cp - bp * fx) +\n           ap * (ex * fy - ey * fx) < 0;\n}\n\nfunction circumradius(ax, ay, bx, by, cx, cy) {\n    const dx = bx - ax;\n    const dy = by - ay;\n    const ex = cx - ax;\n    const ey = cy - ay;\n\n    const bl = dx * dx + dy * dy;\n    const cl = ex * ex + ey * ey;\n    const d = 0.5 / (dx * ey - dy * ex);\n\n    const x = (ey * bl - dy * cl) * d;\n    const y = (dx * cl - ex * bl) * d;\n\n    return x * x + y * y;\n}\n\nfunction circumcenter(ax, ay, bx, by, cx, cy) {\n    const dx = bx - ax;\n    const dy = by - ay;\n    const ex = cx - ax;\n    const ey = cy - ay;\n\n    const bl = dx * dx + dy * dy;\n    const cl = ex * ex + ey * ey;\n    const d = 0.5 / (dx * ey - dy * ex);\n\n    const x = ax + (ey * bl - dy * cl) * d;\n    const y = ay + (dx * cl - ex * bl) * d;\n\n    return {x, y};\n}\n\nfunction quicksort(ids, dists, left, right) {\n    if (right - left <= 20) {\n        for (let i = left + 1; i <= right; i++) {\n            const temp = ids[i];\n            const tempDist = dists[temp];\n            let j = i - 1;\n            while (j >= left && dists[ids[j]] > tempDist) ids[j + 1] = ids[j--];\n            ids[j + 1] = temp;\n        }\n    } else {\n        const median = (left + right) >> 1;\n        let i = left + 1;\n        let j = right;\n        swap(ids, median, i);\n        if (dists[ids[left]] > dists[ids[right]]) swap(ids, left, right);\n        if (dists[ids[i]] > dists[ids[right]]) swap(ids, i, right);\n        if (dists[ids[left]] > dists[ids[i]]) swap(ids, left, i);\n\n        const temp = ids[i];\n        const tempDist = dists[temp];\n        while (true) {\n            do i++; while (dists[ids[i]] < tempDist);\n            do j--; while (dists[ids[j]] > tempDist);\n            if (j < i) break;\n            swap(ids, i, j);\n        }\n        ids[left + 1] = ids[j];\n        ids[j] = temp;\n\n        if (right - i + 1 >= j - left) {\n            quicksort(ids, dists, i, right);\n            quicksort(ids, dists, left, j - 1);\n        } else {\n            quicksort(ids, dists, left, j - 1);\n            quicksort(ids, dists, i, right);\n        }\n    }\n}\n\nfunction swap(arr, i, j) {\n    const tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultGetX(p) {\n    return p[0];\n}\nfunction defaultGetY(p) {\n    return p[1];\n}\n","export const epsilon = 1.1102230246251565e-16;\nexport const splitter = 134217729;\nexport const resulterrbound = (3 + 8 * epsilon) * epsilon;\n\n// fast_expansion_sum_zeroelim routine from oritinal code\nexport function sum(elen, e, flen, f, h) {\n    let Q, Qnew, hh, bvirt;\n    let enow = e[0];\n    let fnow = f[0];\n    let eindex = 0;\n    let findex = 0;\n    if ((fnow > enow) === (fnow > -enow)) {\n        Q = enow;\n        enow = e[++eindex];\n    } else {\n        Q = fnow;\n        fnow = f[++findex];\n    }\n    let hindex = 0;\n    if (eindex < elen && findex < flen) {\n        if ((fnow > enow) === (fnow > -enow)) {\n            Qnew = enow + Q;\n            hh = Q - (Qnew - enow);\n            enow = e[++eindex];\n        } else {\n            Qnew = fnow + Q;\n            hh = Q - (Qnew - fnow);\n            fnow = f[++findex];\n        }\n        Q = Qnew;\n        if (hh !== 0) {\n            h[hindex++] = hh;\n        }\n        while (eindex < elen && findex < flen) {\n            if ((fnow > enow) === (fnow > -enow)) {\n                Qnew = Q + enow;\n                bvirt = Qnew - Q;\n                hh = Q - (Qnew - bvirt) + (enow - bvirt);\n                enow = e[++eindex];\n            } else {\n                Qnew = Q + fnow;\n                bvirt = Qnew - Q;\n                hh = Q - (Qnew - bvirt) + (fnow - bvirt);\n                fnow = f[++findex];\n            }\n            Q = Qnew;\n            if (hh !== 0) {\n                h[hindex++] = hh;\n            }\n        }\n    }\n    while (eindex < elen) {\n        Qnew = Q + enow;\n        bvirt = Qnew - Q;\n        hh = Q - (Qnew - bvirt) + (enow - bvirt);\n        enow = e[++eindex];\n        Q = Qnew;\n        if (hh !== 0) {\n            h[hindex++] = hh;\n        }\n    }\n    while (findex < flen) {\n        Qnew = Q + fnow;\n        bvirt = Qnew - Q;\n        hh = Q - (Qnew - bvirt) + (fnow - bvirt);\n        fnow = f[++findex];\n        Q = Qnew;\n        if (hh !== 0) {\n            h[hindex++] = hh;\n        }\n    }\n    if (Q !== 0 || hindex === 0) {\n        h[hindex++] = Q;\n    }\n    return hindex;\n}\n\nexport function sum_three(alen, a, blen, b, clen, c, tmp, out) {\n    return sum(sum(alen, a, blen, b, tmp), tmp, clen, c, out);\n}\n\n// scale_expansion_zeroelim routine from oritinal code\nexport function scale(elen, e, b, h) {\n    let Q, sum, hh, product1, product0;\n    let bvirt, c, ahi, alo, bhi, blo;\n\n    c = splitter * b;\n    bhi = c - (c - b);\n    blo = b - bhi;\n    let enow = e[0];\n    Q = enow * b;\n    c = splitter * enow;\n    ahi = c - (c - enow);\n    alo = enow - ahi;\n    hh = alo * blo - (Q - ahi * bhi - alo * bhi - ahi * blo);\n    let hindex = 0;\n    if (hh !== 0) {\n        h[hindex++] = hh;\n    }\n    for (let i = 1; i < elen; i++) {\n        enow = e[i];\n        product1 = enow * b;\n        c = splitter * enow;\n        ahi = c - (c - enow);\n        alo = enow - ahi;\n        product0 = alo * blo - (product1 - ahi * bhi - alo * bhi - ahi * blo);\n        sum = Q + product0;\n        bvirt = sum - Q;\n        hh = Q - (sum - bvirt) + (product0 - bvirt);\n        if (hh !== 0) {\n            h[hindex++] = hh;\n        }\n        Q = product1 + sum;\n        hh = sum - (Q - product1);\n        if (hh !== 0) {\n            h[hindex++] = hh;\n        }\n    }\n    if (Q !== 0 || hindex === 0) {\n        h[hindex++] = Q;\n    }\n    return hindex;\n}\n\nexport function negate(elen, e) {\n    for (let i = 0; i < elen; i++) e[i] = -e[i];\n    return elen;\n}\n\nexport function estimate(elen, e) {\n    let Q = e[0];\n    for (let i = 1; i < elen; i++) Q += e[i];\n    return Q;\n}\n\nexport function vec(n) {\n    return new Float64Array(n);\n}\n","import {epsilon, splitter, resulterrbound, estimate, vec, sum} from './util.js';\n\nconst ccwerrboundA = (3 + 16 * epsilon) * epsilon;\nconst ccwerrboundB = (2 + 12 * epsilon) * epsilon;\nconst ccwerrboundC = (9 + 64 * epsilon) * epsilon * epsilon;\n\nconst B = vec(4);\nconst C1 = vec(8);\nconst C2 = vec(12);\nconst D = vec(16);\nconst u = vec(4);\n\nfunction orient2dadapt(ax, ay, bx, by, cx, cy, detsum) {\n    let acxtail, acytail, bcxtail, bcytail;\n    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _0, s1, s0, t1, t0, u3;\n\n    const acx = ax - cx;\n    const bcx = bx - cx;\n    const acy = ay - cy;\n    const bcy = by - cy;\n\n    s1 = acx * bcy;\n    c = splitter * acx;\n    ahi = c - (c - acx);\n    alo = acx - ahi;\n    c = splitter * bcy;\n    bhi = c - (c - bcy);\n    blo = bcy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = acy * bcx;\n    c = splitter * acy;\n    ahi = c - (c - acy);\n    alo = acy - ahi;\n    c = splitter * bcx;\n    bhi = c - (c - bcx);\n    blo = bcx - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    B[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    B[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    B[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    B[3] = u3;\n\n    let det = estimate(4, B);\n    let errbound = ccwerrboundB * detsum;\n    if (det >= errbound || -det >= errbound) {\n        return det;\n    }\n\n    bvirt = ax - acx;\n    acxtail = ax - (acx + bvirt) + (bvirt - cx);\n    bvirt = bx - bcx;\n    bcxtail = bx - (bcx + bvirt) + (bvirt - cx);\n    bvirt = ay - acy;\n    acytail = ay - (acy + bvirt) + (bvirt - cy);\n    bvirt = by - bcy;\n    bcytail = by - (bcy + bvirt) + (bvirt - cy);\n\n    if (acxtail === 0 && acytail === 0 && bcxtail === 0 && bcytail === 0) {\n        return det;\n    }\n\n    errbound = ccwerrboundC * detsum + resulterrbound * Math.abs(det);\n    det += (acx * bcytail + bcy * acxtail) - (acy * bcxtail + bcx * acytail);\n    if (det >= errbound || -det >= errbound) return det;\n\n    s1 = acxtail * bcy;\n    c = splitter * acxtail;\n    ahi = c - (c - acxtail);\n    alo = acxtail - ahi;\n    c = splitter * bcy;\n    bhi = c - (c - bcy);\n    blo = bcy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = acytail * bcx;\n    c = splitter * acytail;\n    ahi = c - (c - acytail);\n    alo = acytail - ahi;\n    c = splitter * bcx;\n    bhi = c - (c - bcx);\n    blo = bcx - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    u[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    u[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    u[3] = u3;\n    const C1len = sum(4, B, 4, u, C1);\n\n    s1 = acx * bcytail;\n    c = splitter * acx;\n    ahi = c - (c - acx);\n    alo = acx - ahi;\n    c = splitter * bcytail;\n    bhi = c - (c - bcytail);\n    blo = bcytail - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = acy * bcxtail;\n    c = splitter * acy;\n    ahi = c - (c - acy);\n    alo = acy - ahi;\n    c = splitter * bcxtail;\n    bhi = c - (c - bcxtail);\n    blo = bcxtail - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    u[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    u[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    u[3] = u3;\n    const C2len = sum(C1len, C1, 4, u, C2);\n\n    s1 = acxtail * bcytail;\n    c = splitter * acxtail;\n    ahi = c - (c - acxtail);\n    alo = acxtail - ahi;\n    c = splitter * bcytail;\n    bhi = c - (c - bcytail);\n    blo = bcytail - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = acytail * bcxtail;\n    c = splitter * acytail;\n    ahi = c - (c - acytail);\n    alo = acytail - ahi;\n    c = splitter * bcxtail;\n    bhi = c - (c - bcxtail);\n    blo = bcxtail - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    u[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    u[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    u[3] = u3;\n    const Dlen = sum(C2len, C2, 4, u, D);\n\n    return D[Dlen - 1];\n}\n\nexport function orient2d(ax, ay, bx, by, cx, cy) {\n    const detleft = (ay - cy) * (bx - cx);\n    const detright = (ax - cx) * (by - cy);\n    const det = detleft - detright;\n\n    if (detleft === 0 || detright === 0 || (detleft > 0) !== (detright > 0)) return det;\n\n    const detsum = Math.abs(detleft + detright);\n    if (Math.abs(det) >= ccwerrboundA * detsum) return det;\n\n    return -orient2dadapt(ax, ay, bx, by, cx, cy, detsum);\n}\n\nexport function orient2dfast(ax, ay, bx, by, cx, cy) {\n    return (ay - cy) * (bx - cx) - (ax - cx) * (by - cy);\n}\n","import {epsilon, splitter, resulterrbound, estimate, vec, sum, scale} from './util.js';\n\nconst o3derrboundA = (7 + 56 * epsilon) * epsilon;\nconst o3derrboundB = (3 + 28 * epsilon) * epsilon;\nconst o3derrboundC = (26 + 288 * epsilon) * epsilon * epsilon;\n\nconst bc = vec(4);\nconst ca = vec(4);\nconst ab = vec(4);\nconst at_b = vec(4);\nconst at_c = vec(4);\nconst bt_c = vec(4);\nconst bt_a = vec(4);\nconst ct_a = vec(4);\nconst ct_b = vec(4);\nconst bct = vec(8);\nconst cat = vec(8);\nconst abt = vec(8);\nconst u = vec(4);\n\nconst _8 = vec(8);\nconst _8b = vec(8);\nconst _16 = vec(8);\nconst _12 = vec(12);\n\nlet fin = vec(192);\nlet fin2 = vec(192);\n\nfunction finadd(finlen, alen, a) {\n    finlen = sum(finlen, fin, alen, a, fin2);\n    const tmp = fin; fin = fin2; fin2 = tmp;\n    return finlen;\n}\n\nfunction tailinit(xtail, ytail, ax, ay, bx, by, a, b) {\n    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _k, _0, s1, s0, t1, t0, u3, negate;\n    if (xtail === 0) {\n        if (ytail === 0) {\n            a[0] = 0;\n            b[0] = 0;\n            return 1;\n        } else {\n            negate = -ytail;\n            s1 = negate * ax;\n            c = splitter * negate;\n            ahi = c - (c - negate);\n            alo = negate - ahi;\n            c = splitter * ax;\n            bhi = c - (c - ax);\n            blo = ax - bhi;\n            a[0] = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            a[1] = s1;\n            s1 = ytail * bx;\n            c = splitter * ytail;\n            ahi = c - (c - ytail);\n            alo = ytail - ahi;\n            c = splitter * bx;\n            bhi = c - (c - bx);\n            blo = bx - bhi;\n            b[0] = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            b[1] = s1;\n            return 2;\n        }\n    } else {\n        if (ytail === 0) {\n            s1 = xtail * ay;\n            c = splitter * xtail;\n            ahi = c - (c - xtail);\n            alo = xtail - ahi;\n            c = splitter * ay;\n            bhi = c - (c - ay);\n            blo = ay - bhi;\n            a[0] = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            a[1] = s1;\n            negate = -xtail;\n            s1 = negate * by;\n            c = splitter * negate;\n            ahi = c - (c - negate);\n            alo = negate - ahi;\n            c = splitter * by;\n            bhi = c - (c - by);\n            blo = by - bhi;\n            b[0] = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            b[1] = s1;\n            return 2;\n        } else {\n            s1 = xtail * ay;\n            c = splitter * xtail;\n            ahi = c - (c - xtail);\n            alo = xtail - ahi;\n            c = splitter * ay;\n            bhi = c - (c - ay);\n            blo = ay - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = ytail * ax;\n            c = splitter * ytail;\n            ahi = c - (c - ytail);\n            alo = ytail - ahi;\n            c = splitter * ax;\n            bhi = c - (c - ax);\n            blo = ax - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 - t0;\n            bvirt = s0 - _i;\n            a[0] = s0 - (_i + bvirt) + (bvirt - t0);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 - t1;\n            bvirt = _0 - _i;\n            a[1] = _0 - (_i + bvirt) + (bvirt - t1);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            a[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            a[3] = u3;\n            s1 = ytail * bx;\n            c = splitter * ytail;\n            ahi = c - (c - ytail);\n            alo = ytail - ahi;\n            c = splitter * bx;\n            bhi = c - (c - bx);\n            blo = bx - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = xtail * by;\n            c = splitter * xtail;\n            ahi = c - (c - xtail);\n            alo = xtail - ahi;\n            c = splitter * by;\n            bhi = c - (c - by);\n            blo = by - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 - t0;\n            bvirt = s0 - _i;\n            b[0] = s0 - (_i + bvirt) + (bvirt - t0);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 - t1;\n            bvirt = _0 - _i;\n            b[1] = _0 - (_i + bvirt) + (bvirt - t1);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            b[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            b[3] = u3;\n            return 4;\n        }\n    }\n}\n\nfunction tailadd(finlen, a, b, k, z) {\n    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _k, _0, s1, s0, u3;\n    s1 = a * b;\n    c = splitter * a;\n    ahi = c - (c - a);\n    alo = a - ahi;\n    c = splitter * b;\n    bhi = c - (c - b);\n    blo = b - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    c = splitter * k;\n    bhi = c - (c - k);\n    blo = k - bhi;\n    _i = s0 * k;\n    c = splitter * s0;\n    ahi = c - (c - s0);\n    alo = s0 - ahi;\n    u[0] = alo * blo - (_i - ahi * bhi - alo * bhi - ahi * blo);\n    _j = s1 * k;\n    c = splitter * s1;\n    ahi = c - (c - s1);\n    alo = s1 - ahi;\n    _0 = alo * blo - (_j - ahi * bhi - alo * bhi - ahi * blo);\n    _k = _i + _0;\n    bvirt = _k - _i;\n    u[1] = _i - (_k - bvirt) + (_0 - bvirt);\n    u3 = _j + _k;\n    u[2] = _k - (u3 - _j);\n    u[3] = u3;\n    finlen = finadd(finlen, 4, u);\n    if (z !== 0) {\n        c = splitter * z;\n        bhi = c - (c - z);\n        blo = z - bhi;\n        _i = s0 * z;\n        c = splitter * s0;\n        ahi = c - (c - s0);\n        alo = s0 - ahi;\n        u[0] = alo * blo - (_i - ahi * bhi - alo * bhi - ahi * blo);\n        _j = s1 * z;\n        c = splitter * s1;\n        ahi = c - (c - s1);\n        alo = s1 - ahi;\n        _0 = alo * blo - (_j - ahi * bhi - alo * bhi - ahi * blo);\n        _k = _i + _0;\n        bvirt = _k - _i;\n        u[1] = _i - (_k - bvirt) + (_0 - bvirt);\n        u3 = _j + _k;\n        u[2] = _k - (u3 - _j);\n        u[3] = u3;\n        finlen = finadd(finlen, 4, u);\n    }\n    return finlen;\n}\n\nfunction orient3dadapt(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, permanent) {\n    let finlen;\n    let adxtail, bdxtail, cdxtail;\n    let adytail, bdytail, cdytail;\n    let adztail, bdztail, cdztail;\n    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _k, _0, s1, s0, t1, t0, u3;\n\n    const adx = ax - dx;\n    const bdx = bx - dx;\n    const cdx = cx - dx;\n    const ady = ay - dy;\n    const bdy = by - dy;\n    const cdy = cy - dy;\n    const adz = az - dz;\n    const bdz = bz - dz;\n    const cdz = cz - dz;\n\n    s1 = bdx * cdy;\n    c = splitter * bdx;\n    ahi = c - (c - bdx);\n    alo = bdx - ahi;\n    c = splitter * cdy;\n    bhi = c - (c - cdy);\n    blo = cdy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = cdx * bdy;\n    c = splitter * cdx;\n    ahi = c - (c - cdx);\n    alo = cdx - ahi;\n    c = splitter * bdy;\n    bhi = c - (c - bdy);\n    blo = bdy - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    bc[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    bc[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    bc[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    bc[3] = u3;\n    s1 = cdx * ady;\n    c = splitter * cdx;\n    ahi = c - (c - cdx);\n    alo = cdx - ahi;\n    c = splitter * ady;\n    bhi = c - (c - ady);\n    blo = ady - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = adx * cdy;\n    c = splitter * adx;\n    ahi = c - (c - adx);\n    alo = adx - ahi;\n    c = splitter * cdy;\n    bhi = c - (c - cdy);\n    blo = cdy - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ca[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ca[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    ca[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    ca[3] = u3;\n    s1 = adx * bdy;\n    c = splitter * adx;\n    ahi = c - (c - adx);\n    alo = adx - ahi;\n    c = splitter * bdy;\n    bhi = c - (c - bdy);\n    blo = bdy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = bdx * ady;\n    c = splitter * bdx;\n    ahi = c - (c - bdx);\n    alo = bdx - ahi;\n    c = splitter * ady;\n    bhi = c - (c - ady);\n    blo = ady - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ab[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ab[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    ab[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    ab[3] = u3;\n\n    finlen = sum(\n        sum(\n            scale(4, bc, adz, _8), _8,\n            scale(4, ca, bdz, _8b), _8b, _16), _16,\n        scale(4, ab, cdz, _8), _8, fin);\n\n    let det = estimate(finlen, fin);\n    let errbound = o3derrboundB * permanent;\n    if (det >= errbound || -det >= errbound) {\n        return det;\n    }\n\n    bvirt = ax - adx;\n    adxtail = ax - (adx + bvirt) + (bvirt - dx);\n    bvirt = bx - bdx;\n    bdxtail = bx - (bdx + bvirt) + (bvirt - dx);\n    bvirt = cx - cdx;\n    cdxtail = cx - (cdx + bvirt) + (bvirt - dx);\n    bvirt = ay - ady;\n    adytail = ay - (ady + bvirt) + (bvirt - dy);\n    bvirt = by - bdy;\n    bdytail = by - (bdy + bvirt) + (bvirt - dy);\n    bvirt = cy - cdy;\n    cdytail = cy - (cdy + bvirt) + (bvirt - dy);\n    bvirt = az - adz;\n    adztail = az - (adz + bvirt) + (bvirt - dz);\n    bvirt = bz - bdz;\n    bdztail = bz - (bdz + bvirt) + (bvirt - dz);\n    bvirt = cz - cdz;\n    cdztail = cz - (cdz + bvirt) + (bvirt - dz);\n\n    if (adxtail === 0 && bdxtail === 0 && cdxtail === 0 &&\n        adytail === 0 && bdytail === 0 && cdytail === 0 &&\n        adztail === 0 && bdztail === 0 && cdztail === 0) {\n        return det;\n    }\n\n    errbound = o3derrboundC * permanent + resulterrbound * Math.abs(det);\n    det +=\n        adz * (bdx * cdytail + cdy * bdxtail - (bdy * cdxtail + cdx * bdytail)) + adztail * (bdx * cdy - bdy * cdx) +\n        bdz * (cdx * adytail + ady * cdxtail - (cdy * adxtail + adx * cdytail)) + bdztail * (cdx * ady - cdy * adx) +\n        cdz * (adx * bdytail + bdy * adxtail - (ady * bdxtail + bdx * adytail)) + cdztail * (adx * bdy - ady * bdx);\n    if (det >= errbound || -det >= errbound) {\n        return det;\n    }\n\n    const at_len = tailinit(adxtail, adytail, bdx, bdy, cdx, cdy, at_b, at_c);\n    const bt_len = tailinit(bdxtail, bdytail, cdx, cdy, adx, ady, bt_c, bt_a);\n    const ct_len = tailinit(cdxtail, cdytail, adx, ady, bdx, bdy, ct_a, ct_b);\n\n    const bctlen = sum(bt_len, bt_c, ct_len, ct_b, bct);\n    finlen = finadd(finlen, scale(bctlen, bct, adz, _16), _16);\n\n    const catlen = sum(ct_len, ct_a, at_len, at_c, cat);\n    finlen = finadd(finlen, scale(catlen, cat, bdz, _16), _16);\n\n    const abtlen = sum(at_len, at_b, bt_len, bt_a, abt);\n    finlen = finadd(finlen, scale(abtlen, abt, cdz, _16), _16);\n\n    if (adztail !== 0) {\n        finlen = finadd(finlen, scale(4, bc, adztail, _12), _12);\n        finlen = finadd(finlen, scale(bctlen, bct, adztail, _16), _16);\n    }\n    if (bdztail !== 0) {\n        finlen = finadd(finlen, scale(4, ca, bdztail, _12), _12);\n        finlen = finadd(finlen, scale(catlen, cat, bdztail, _16), _16);\n    }\n    if (cdztail !== 0) {\n        finlen = finadd(finlen, scale(4, ab, cdztail, _12), _12);\n        finlen = finadd(finlen, scale(abtlen, abt, cdztail, _16), _16);\n    }\n\n    if (adxtail !== 0) {\n        if (bdytail !== 0) {\n            finlen = tailadd(finlen, adxtail, bdytail, cdz, cdztail);\n        }\n        if (cdytail !== 0) {\n            finlen = tailadd(finlen, -adxtail, cdytail, bdz, bdztail);\n        }\n    }\n    if (bdxtail !== 0) {\n        if (cdytail !== 0) {\n            finlen = tailadd(finlen, bdxtail, cdytail, adz, adztail);\n        }\n        if (adytail !== 0) {\n            finlen = tailadd(finlen, -bdxtail, adytail, cdz, cdztail);\n        }\n    }\n    if (cdxtail !== 0) {\n        if (adytail !== 0) {\n            finlen = tailadd(finlen, cdxtail, adytail, bdz, bdztail);\n        }\n        if (bdytail !== 0) {\n            finlen = tailadd(finlen, -cdxtail, bdytail, adz, adztail);\n        }\n    }\n\n    return fin[finlen - 1];\n}\n\nexport function orient3d(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz) {\n    const adx = ax - dx;\n    const bdx = bx - dx;\n    const cdx = cx - dx;\n    const ady = ay - dy;\n    const bdy = by - dy;\n    const cdy = cy - dy;\n    const adz = az - dz;\n    const bdz = bz - dz;\n    const cdz = cz - dz;\n\n    const bdxcdy = bdx * cdy;\n    const cdxbdy = cdx * bdy;\n\n    const cdxady = cdx * ady;\n    const adxcdy = adx * cdy;\n\n    const adxbdy = adx * bdy;\n    const bdxady = bdx * ady;\n\n    const det =\n        adz * (bdxcdy - cdxbdy) +\n        bdz * (cdxady - adxcdy) +\n        cdz * (adxbdy - bdxady);\n\n    const permanent =\n        (Math.abs(bdxcdy) + Math.abs(cdxbdy)) * Math.abs(adz) +\n        (Math.abs(cdxady) + Math.abs(adxcdy)) * Math.abs(bdz) +\n        (Math.abs(adxbdy) + Math.abs(bdxady)) * Math.abs(cdz);\n\n    const errbound = o3derrboundA * permanent;\n    if (det > errbound || -det > errbound) {\n        return det;\n    }\n\n    return orient3dadapt(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, permanent);\n}\n\nexport function orient3dfast(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz) {\n    const adx = ax - dx;\n    const bdx = bx - dx;\n    const cdx = cx - dx;\n    const ady = ay - dy;\n    const bdy = by - dy;\n    const cdy = cy - dy;\n    const adz = az - dz;\n    const bdz = bz - dz;\n    const cdz = cz - dz;\n\n    return adx * (bdy * cdz - bdz * cdy) +\n        bdx * (cdy * adz - cdz * ady) +\n        cdx * (ady * bdz - adz * bdy);\n}\n","import {epsilon, splitter, resulterrbound, estimate, vec, sum, sum_three, scale} from './util.js';\n\nconst iccerrboundA = (10 + 96 * epsilon) * epsilon;\nconst iccerrboundB = (4 + 48 * epsilon) * epsilon;\nconst iccerrboundC = (44 + 576 * epsilon) * epsilon * epsilon;\n\nconst bc = vec(4);\nconst ca = vec(4);\nconst ab = vec(4);\nconst aa = vec(4);\nconst bb = vec(4);\nconst cc = vec(4);\nconst u = vec(4);\nconst v = vec(4);\nconst axtbc = vec(8);\nconst aytbc = vec(8);\nconst bxtca = vec(8);\nconst bytca = vec(8);\nconst cxtab = vec(8);\nconst cytab = vec(8);\nconst abt = vec(8);\nconst bct = vec(8);\nconst cat = vec(8);\nconst abtt = vec(4);\nconst bctt = vec(4);\nconst catt = vec(4);\n\nconst _8 = vec(8);\nconst _16 = vec(16);\nconst _16b = vec(16);\nconst _16c = vec(16);\nconst _32 = vec(32);\nconst _32b = vec(32);\nconst _48 = vec(48);\nconst _64 = vec(64);\n\nlet fin = vec(1152);\nlet fin2 = vec(1152);\n\nfunction finadd(finlen, a, alen) {\n    finlen = sum(finlen, fin, a, alen, fin2);\n    const tmp = fin; fin = fin2; fin2 = tmp;\n    return finlen;\n}\n\nfunction incircleadapt(ax, ay, bx, by, cx, cy, dx, dy, permanent) {\n    let finlen;\n    let adxtail, bdxtail, cdxtail, adytail, bdytail, cdytail;\n    let axtbclen, aytbclen, bxtcalen, bytcalen, cxtablen, cytablen;\n    let abtlen, bctlen, catlen;\n    let abttlen, bcttlen, cattlen;\n    let n1, n0;\n\n    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _0, s1, s0, t1, t0, u3;\n\n    const adx = ax - dx;\n    const bdx = bx - dx;\n    const cdx = cx - dx;\n    const ady = ay - dy;\n    const bdy = by - dy;\n    const cdy = cy - dy;\n\n    s1 = bdx * cdy;\n    c = splitter * bdx;\n    ahi = c - (c - bdx);\n    alo = bdx - ahi;\n    c = splitter * cdy;\n    bhi = c - (c - cdy);\n    blo = cdy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = cdx * bdy;\n    c = splitter * cdx;\n    ahi = c - (c - cdx);\n    alo = cdx - ahi;\n    c = splitter * bdy;\n    bhi = c - (c - bdy);\n    blo = bdy - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    bc[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    bc[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    bc[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    bc[3] = u3;\n    s1 = cdx * ady;\n    c = splitter * cdx;\n    ahi = c - (c - cdx);\n    alo = cdx - ahi;\n    c = splitter * ady;\n    bhi = c - (c - ady);\n    blo = ady - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = adx * cdy;\n    c = splitter * adx;\n    ahi = c - (c - adx);\n    alo = adx - ahi;\n    c = splitter * cdy;\n    bhi = c - (c - cdy);\n    blo = cdy - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ca[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ca[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    ca[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    ca[3] = u3;\n    s1 = adx * bdy;\n    c = splitter * adx;\n    ahi = c - (c - adx);\n    alo = adx - ahi;\n    c = splitter * bdy;\n    bhi = c - (c - bdy);\n    blo = bdy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = bdx * ady;\n    c = splitter * bdx;\n    ahi = c - (c - bdx);\n    alo = bdx - ahi;\n    c = splitter * ady;\n    bhi = c - (c - ady);\n    blo = ady - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ab[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ab[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    ab[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    ab[3] = u3;\n\n    finlen = sum(\n        sum(\n            sum(\n                scale(scale(4, bc, adx, _8), _8, adx, _16), _16,\n                scale(scale(4, bc, ady, _8), _8, ady, _16b), _16b, _32), _32,\n            sum(\n                scale(scale(4, ca, bdx, _8), _8, bdx, _16), _16,\n                scale(scale(4, ca, bdy, _8), _8, bdy, _16b), _16b, _32b), _32b, _64), _64,\n        sum(\n            scale(scale(4, ab, cdx, _8), _8, cdx, _16), _16,\n            scale(scale(4, ab, cdy, _8), _8, cdy, _16b), _16b, _32), _32, fin);\n\n    let det = estimate(finlen, fin);\n    let errbound = iccerrboundB * permanent;\n    if (det >= errbound || -det >= errbound) {\n        return det;\n    }\n\n    bvirt = ax - adx;\n    adxtail = ax - (adx + bvirt) + (bvirt - dx);\n    bvirt = ay - ady;\n    adytail = ay - (ady + bvirt) + (bvirt - dy);\n    bvirt = bx - bdx;\n    bdxtail = bx - (bdx + bvirt) + (bvirt - dx);\n    bvirt = by - bdy;\n    bdytail = by - (bdy + bvirt) + (bvirt - dy);\n    bvirt = cx - cdx;\n    cdxtail = cx - (cdx + bvirt) + (bvirt - dx);\n    bvirt = cy - cdy;\n    cdytail = cy - (cdy + bvirt) + (bvirt - dy);\n    if (adxtail === 0 && bdxtail === 0 && cdxtail === 0 && adytail === 0 && bdytail === 0 && cdytail === 0) {\n        return det;\n    }\n\n    errbound = iccerrboundC * permanent + resulterrbound * Math.abs(det);\n    det += ((adx * adx + ady * ady) * ((bdx * cdytail + cdy * bdxtail) - (bdy * cdxtail + cdx * bdytail)) +\n        2 * (adx * adxtail + ady * adytail) * (bdx * cdy - bdy * cdx)) +\n        ((bdx * bdx + bdy * bdy) * ((cdx * adytail + ady * cdxtail) - (cdy * adxtail + adx * cdytail)) +\n        2 * (bdx * bdxtail + bdy * bdytail) * (cdx * ady - cdy * adx)) +\n        ((cdx * cdx + cdy * cdy) * ((adx * bdytail + bdy * adxtail) - (ady * bdxtail + bdx * adytail)) +\n        2 * (cdx * cdxtail + cdy * cdytail) * (adx * bdy - ady * bdx));\n\n    if (det >= errbound || -det >= errbound) {\n        return det;\n    }\n\n    if (bdxtail !== 0 || bdytail !== 0 || cdxtail !== 0 || cdytail !== 0) {\n        s1 = adx * adx;\n        c = splitter * adx;\n        ahi = c - (c - adx);\n        alo = adx - ahi;\n        s0 = alo * alo - (s1 - ahi * ahi - (ahi + ahi) * alo);\n        t1 = ady * ady;\n        c = splitter * ady;\n        ahi = c - (c - ady);\n        alo = ady - ahi;\n        t0 = alo * alo - (t1 - ahi * ahi - (ahi + ahi) * alo);\n        _i = s0 + t0;\n        bvirt = _i - s0;\n        aa[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n        _j = s1 + _i;\n        bvirt = _j - s1;\n        _0 = s1 - (_j - bvirt) + (_i - bvirt);\n        _i = _0 + t1;\n        bvirt = _i - _0;\n        aa[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n        u3 = _j + _i;\n        bvirt = u3 - _j;\n        aa[2] = _j - (u3 - bvirt) + (_i - bvirt);\n        aa[3] = u3;\n    }\n    if (cdxtail !== 0 || cdytail !== 0 || adxtail !== 0 || adytail !== 0) {\n        s1 = bdx * bdx;\n        c = splitter * bdx;\n        ahi = c - (c - bdx);\n        alo = bdx - ahi;\n        s0 = alo * alo - (s1 - ahi * ahi - (ahi + ahi) * alo);\n        t1 = bdy * bdy;\n        c = splitter * bdy;\n        ahi = c - (c - bdy);\n        alo = bdy - ahi;\n        t0 = alo * alo - (t1 - ahi * ahi - (ahi + ahi) * alo);\n        _i = s0 + t0;\n        bvirt = _i - s0;\n        bb[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n        _j = s1 + _i;\n        bvirt = _j - s1;\n        _0 = s1 - (_j - bvirt) + (_i - bvirt);\n        _i = _0 + t1;\n        bvirt = _i - _0;\n        bb[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n        u3 = _j + _i;\n        bvirt = u3 - _j;\n        bb[2] = _j - (u3 - bvirt) + (_i - bvirt);\n        bb[3] = u3;\n    }\n    if (adxtail !== 0 || adytail !== 0 || bdxtail !== 0 || bdytail !== 0) {\n        s1 = cdx * cdx;\n        c = splitter * cdx;\n        ahi = c - (c - cdx);\n        alo = cdx - ahi;\n        s0 = alo * alo - (s1 - ahi * ahi - (ahi + ahi) * alo);\n        t1 = cdy * cdy;\n        c = splitter * cdy;\n        ahi = c - (c - cdy);\n        alo = cdy - ahi;\n        t0 = alo * alo - (t1 - ahi * ahi - (ahi + ahi) * alo);\n        _i = s0 + t0;\n        bvirt = _i - s0;\n        cc[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n        _j = s1 + _i;\n        bvirt = _j - s1;\n        _0 = s1 - (_j - bvirt) + (_i - bvirt);\n        _i = _0 + t1;\n        bvirt = _i - _0;\n        cc[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n        u3 = _j + _i;\n        bvirt = u3 - _j;\n        cc[2] = _j - (u3 - bvirt) + (_i - bvirt);\n        cc[3] = u3;\n    }\n\n    if (adxtail !== 0) {\n        axtbclen = scale(4, bc, adxtail, axtbc);\n        finlen = finadd(finlen, sum_three(\n            scale(axtbclen, axtbc, 2 * adx, _16), _16,\n            scale(scale(4, cc, adxtail, _8), _8, bdy, _16b), _16b,\n            scale(scale(4, bb, adxtail, _8), _8, -cdy, _16c), _16c, _32, _48), _48);\n    }\n    if (adytail !== 0) {\n        aytbclen = scale(4, bc, adytail, aytbc);\n        finlen = finadd(finlen, sum_three(\n            scale(aytbclen, aytbc, 2 * ady, _16), _16,\n            scale(scale(4, bb, adytail, _8), _8, cdx, _16b), _16b,\n            scale(scale(4, cc, adytail, _8), _8, -bdx, _16c), _16c, _32, _48), _48);\n    }\n    if (bdxtail !== 0) {\n        bxtcalen = scale(4, ca, bdxtail, bxtca);\n        finlen = finadd(finlen, sum_three(\n            scale(bxtcalen, bxtca, 2 * bdx, _16), _16,\n            scale(scale(4, aa, bdxtail, _8), _8, cdy, _16b), _16b,\n            scale(scale(4, cc, bdxtail, _8), _8, -ady, _16c), _16c, _32, _48), _48);\n    }\n    if (bdytail !== 0) {\n        bytcalen = scale(4, ca, bdytail, bytca);\n        finlen = finadd(finlen, sum_three(\n            scale(bytcalen, bytca, 2 * bdy, _16), _16,\n            scale(scale(4, cc, bdytail, _8), _8, adx, _16b), _16b,\n            scale(scale(4, aa, bdytail, _8), _8, -cdx, _16c), _16c, _32, _48), _48);\n    }\n    if (cdxtail !== 0) {\n        cxtablen = scale(4, ab, cdxtail, cxtab);\n        finlen = finadd(finlen, sum_three(\n            scale(cxtablen, cxtab, 2 * cdx, _16), _16,\n            scale(scale(4, bb, cdxtail, _8), _8, ady, _16b), _16b,\n            scale(scale(4, aa, cdxtail, _8), _8, -bdy, _16c), _16c, _32, _48), _48);\n    }\n    if (cdytail !== 0) {\n        cytablen = scale(4, ab, cdytail, cytab);\n        finlen = finadd(finlen, sum_three(\n            scale(cytablen, cytab, 2 * cdy, _16), _16,\n            scale(scale(4, aa, cdytail, _8), _8, bdx, _16b), _16b,\n            scale(scale(4, bb, cdytail, _8), _8, -adx, _16c), _16c, _32, _48), _48);\n    }\n\n    if (adxtail !== 0 || adytail !== 0) {\n        if (bdxtail !== 0 || bdytail !== 0 || cdxtail !== 0 || cdytail !== 0) {\n            s1 = bdxtail * cdy;\n            c = splitter * bdxtail;\n            ahi = c - (c - bdxtail);\n            alo = bdxtail - ahi;\n            c = splitter * cdy;\n            bhi = c - (c - cdy);\n            blo = cdy - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = bdx * cdytail;\n            c = splitter * bdx;\n            ahi = c - (c - bdx);\n            alo = bdx - ahi;\n            c = splitter * cdytail;\n            bhi = c - (c - cdytail);\n            blo = cdytail - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 + t0;\n            bvirt = _i - s0;\n            u[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 + t1;\n            bvirt = _i - _0;\n            u[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            u[3] = u3;\n            s1 = cdxtail * -bdy;\n            c = splitter * cdxtail;\n            ahi = c - (c - cdxtail);\n            alo = cdxtail - ahi;\n            c = splitter * -bdy;\n            bhi = c - (c - -bdy);\n            blo = -bdy - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = cdx * -bdytail;\n            c = splitter * cdx;\n            ahi = c - (c - cdx);\n            alo = cdx - ahi;\n            c = splitter * -bdytail;\n            bhi = c - (c - -bdytail);\n            blo = -bdytail - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 + t0;\n            bvirt = _i - s0;\n            v[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 + t1;\n            bvirt = _i - _0;\n            v[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            v[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            v[3] = u3;\n            bctlen = sum(4, u, 4, v, bct);\n            s1 = bdxtail * cdytail;\n            c = splitter * bdxtail;\n            ahi = c - (c - bdxtail);\n            alo = bdxtail - ahi;\n            c = splitter * cdytail;\n            bhi = c - (c - cdytail);\n            blo = cdytail - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = cdxtail * bdytail;\n            c = splitter * cdxtail;\n            ahi = c - (c - cdxtail);\n            alo = cdxtail - ahi;\n            c = splitter * bdytail;\n            bhi = c - (c - bdytail);\n            blo = bdytail - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 - t0;\n            bvirt = s0 - _i;\n            bctt[0] = s0 - (_i + bvirt) + (bvirt - t0);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 - t1;\n            bvirt = _0 - _i;\n            bctt[1] = _0 - (_i + bvirt) + (bvirt - t1);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            bctt[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            bctt[3] = u3;\n            bcttlen = 4;\n        } else {\n            bct[0] = 0;\n            bctlen = 1;\n            bctt[0] = 0;\n            bcttlen = 1;\n        }\n        if (adxtail !== 0) {\n            const len = scale(bctlen, bct, adxtail, _16c);\n            finlen = finadd(finlen, sum(\n                scale(axtbclen, axtbc, adxtail, _16), _16,\n                scale(len, _16c, 2 * adx, _32), _32, _48), _48);\n\n            const len2 = scale(bcttlen, bctt, adxtail, _8);\n            finlen = finadd(finlen, sum_three(\n                scale(len2, _8, 2 * adx, _16), _16,\n                scale(len2, _8, adxtail, _16b), _16b,\n                scale(len, _16c, adxtail, _32), _32, _32b, _64), _64);\n\n            if (bdytail !== 0) {\n                finlen = finadd(finlen, scale(scale(4, cc, adxtail, _8), _8, bdytail, _16), _16);\n            }\n            if (cdytail !== 0) {\n                finlen = finadd(finlen, scale(scale(4, bb, -adxtail, _8), _8, cdytail, _16), _16);\n            }\n        }\n        if (adytail !== 0) {\n            const len = scale(bctlen, bct, adytail, _16c);\n            finlen = finadd(finlen, sum(\n                scale(aytbclen, aytbc, adytail, _16), _16,\n                scale(len, _16c, 2 * ady, _32), _32, _48), _48);\n\n            const len2 = scale(bcttlen, bctt, adytail, _8);\n            finlen = finadd(finlen, sum_three(\n                scale(len2, _8, 2 * ady, _16), _16,\n                scale(len2, _8, adytail, _16b), _16b,\n                scale(len, _16c, adytail, _32), _32, _32b, _64), _64);\n        }\n    }\n    if (bdxtail !== 0 || bdytail !== 0) {\n        if (cdxtail !== 0 || cdytail !== 0 || adxtail !== 0 || adytail !== 0) {\n            s1 = cdxtail * ady;\n            c = splitter * cdxtail;\n            ahi = c - (c - cdxtail);\n            alo = cdxtail - ahi;\n            c = splitter * ady;\n            bhi = c - (c - ady);\n            blo = ady - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = cdx * adytail;\n            c = splitter * cdx;\n            ahi = c - (c - cdx);\n            alo = cdx - ahi;\n            c = splitter * adytail;\n            bhi = c - (c - adytail);\n            blo = adytail - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 + t0;\n            bvirt = _i - s0;\n            u[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 + t1;\n            bvirt = _i - _0;\n            u[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            u[3] = u3;\n            n1 = -cdy;\n            n0 = -cdytail;\n            s1 = adxtail * n1;\n            c = splitter * adxtail;\n            ahi = c - (c - adxtail);\n            alo = adxtail - ahi;\n            c = splitter * n1;\n            bhi = c - (c - n1);\n            blo = n1 - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = adx * n0;\n            c = splitter * adx;\n            ahi = c - (c - adx);\n            alo = adx - ahi;\n            c = splitter * n0;\n            bhi = c - (c - n0);\n            blo = n0 - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 + t0;\n            bvirt = _i - s0;\n            v[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 + t1;\n            bvirt = _i - _0;\n            v[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            v[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            v[3] = u3;\n            catlen = sum(4, u, 4, v, cat);\n            s1 = cdxtail * adytail;\n            c = splitter * cdxtail;\n            ahi = c - (c - cdxtail);\n            alo = cdxtail - ahi;\n            c = splitter * adytail;\n            bhi = c - (c - adytail);\n            blo = adytail - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = adxtail * cdytail;\n            c = splitter * adxtail;\n            ahi = c - (c - adxtail);\n            alo = adxtail - ahi;\n            c = splitter * cdytail;\n            bhi = c - (c - cdytail);\n            blo = cdytail - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 - t0;\n            bvirt = s0 - _i;\n            catt[0] = s0 - (_i + bvirt) + (bvirt - t0);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 - t1;\n            bvirt = _0 - _i;\n            catt[1] = _0 - (_i + bvirt) + (bvirt - t1);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            catt[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            catt[3] = u3;\n            cattlen = 4;\n        } else {\n            cat[0] = 0;\n            catlen = 1;\n            catt[0] = 0;\n            cattlen = 1;\n        }\n        if (bdxtail !== 0) {\n            const len = scale(catlen, cat, bdxtail, _16c);\n            finlen = finadd(finlen, sum(\n                scale(bxtcalen, bxtca, bdxtail, _16), _16,\n                scale(len, _16c, 2 * bdx, _32), _32, _48), _48);\n\n            const len2 = scale(cattlen, catt, bdxtail, _8);\n            finlen = finadd(finlen, sum_three(\n                scale(len2, _8, 2 * bdx, _16), _16,\n                scale(len2, _8, bdxtail, _16b), _16b,\n                scale(len, _16c, bdxtail, _32), _32, _32b, _64), _64);\n\n            if (cdytail !== 0) {\n                finlen = finadd(finlen, scale(scale(4, aa, bdxtail, _8), _8, cdytail, _16), _16);\n            }\n            if (adytail !== 0) {\n                finlen = finadd(finlen, scale(scale(4, cc, -bdxtail, _8), _8, adytail, _16), _16);\n            }\n        }\n        if (bdytail !== 0) {\n            const len = scale(catlen, cat, bdytail, _16c);\n            finlen = finadd(finlen, sum(\n                scale(bytcalen, bytca, bdytail, _16), _16,\n                scale(len, _16c, 2 * bdy, _32), _32, _48), _48);\n\n            const len2 = scale(cattlen, catt, bdytail, _8);\n            finlen = finadd(finlen, sum_three(\n                scale(len2, _8, 2 * bdy, _16), _16,\n                scale(len2, _8, bdytail, _16b), _16b,\n                scale(len, _16c, bdytail, _32), _32,  _32b, _64), _64);\n        }\n    }\n    if (cdxtail !== 0 || cdytail !== 0) {\n        if (adxtail !== 0 || adytail !== 0 || bdxtail !== 0 || bdytail !== 0) {\n            s1 = adxtail * bdy;\n            c = splitter * adxtail;\n            ahi = c - (c - adxtail);\n            alo = adxtail - ahi;\n            c = splitter * bdy;\n            bhi = c - (c - bdy);\n            blo = bdy - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = adx * bdytail;\n            c = splitter * adx;\n            ahi = c - (c - adx);\n            alo = adx - ahi;\n            c = splitter * bdytail;\n            bhi = c - (c - bdytail);\n            blo = bdytail - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 + t0;\n            bvirt = _i - s0;\n            u[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 + t1;\n            bvirt = _i - _0;\n            u[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            u[3] = u3;\n            n1 = -ady;\n            n0 = -adytail;\n            s1 = bdxtail * n1;\n            c = splitter * bdxtail;\n            ahi = c - (c - bdxtail);\n            alo = bdxtail - ahi;\n            c = splitter * n1;\n            bhi = c - (c - n1);\n            blo = n1 - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = bdx * n0;\n            c = splitter * bdx;\n            ahi = c - (c - bdx);\n            alo = bdx - ahi;\n            c = splitter * n0;\n            bhi = c - (c - n0);\n            blo = n0 - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 + t0;\n            bvirt = _i - s0;\n            v[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 + t1;\n            bvirt = _i - _0;\n            v[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            v[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            v[3] = u3;\n            abtlen = sum(4, u, 4, v, abt);\n            s1 = adxtail * bdytail;\n            c = splitter * adxtail;\n            ahi = c - (c - adxtail);\n            alo = adxtail - ahi;\n            c = splitter * bdytail;\n            bhi = c - (c - bdytail);\n            blo = bdytail - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = bdxtail * adytail;\n            c = splitter * bdxtail;\n            ahi = c - (c - bdxtail);\n            alo = bdxtail - ahi;\n            c = splitter * adytail;\n            bhi = c - (c - adytail);\n            blo = adytail - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 - t0;\n            bvirt = s0 - _i;\n            abtt[0] = s0 - (_i + bvirt) + (bvirt - t0);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 - t1;\n            bvirt = _0 - _i;\n            abtt[1] = _0 - (_i + bvirt) + (bvirt - t1);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            abtt[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            abtt[3] = u3;\n            abttlen = 4;\n        } else {\n            abt[0] = 0;\n            abtlen = 1;\n            abtt[0] = 0;\n            abttlen = 1;\n        }\n        if (cdxtail !== 0) {\n            const len = scale(abtlen, abt, cdxtail, _16c);\n            finlen = finadd(finlen, sum(\n                scale(cxtablen, cxtab, cdxtail, _16), _16,\n                scale(len, _16c, 2 * cdx, _32), _32, _48), _48);\n\n            const len2 = scale(abttlen, abtt, cdxtail, _8);\n            finlen = finadd(finlen, sum_three(\n                scale(len2, _8, 2 * cdx, _16), _16,\n                scale(len2, _8, cdxtail, _16b), _16b,\n                scale(len, _16c, cdxtail, _32), _32, _32b, _64), _64);\n\n            if (adytail !== 0) {\n                finlen = finadd(finlen, scale(scale(4, bb, cdxtail, _8), _8, adytail, _16), _16);\n            }\n            if (bdytail !== 0) {\n                finlen = finadd(finlen, scale(scale(4, aa, -cdxtail, _8), _8, bdytail, _16), _16);\n            }\n        }\n        if (cdytail !== 0) {\n            const len = scale(abtlen, abt, cdytail, _16c);\n            finlen = finadd(finlen, sum(\n                scale(cytablen, cytab, cdytail, _16), _16,\n                scale(len, _16c, 2 * cdy, _32), _32, _48), _48);\n\n            const len2 = scale(abttlen, abtt, cdytail, _8);\n            finlen = finadd(finlen, sum_three(\n                scale(len2, _8, 2 * cdy, _16), _16,\n                scale(len2, _8, cdytail, _16b), _16b,\n                scale(len, _16c, cdytail, _32), _32, _32b, _64), _64);\n        }\n    }\n\n    return fin[finlen - 1];\n}\n\nexport function incircle(ax, ay, bx, by, cx, cy, dx, dy) {\n    const adx = ax - dx;\n    const bdx = bx - dx;\n    const cdx = cx - dx;\n    const ady = ay - dy;\n    const bdy = by - dy;\n    const cdy = cy - dy;\n\n    const bdxcdy = bdx * cdy;\n    const cdxbdy = cdx * bdy;\n    const alift = adx * adx + ady * ady;\n\n    const cdxady = cdx * ady;\n    const adxcdy = adx * cdy;\n    const blift = bdx * bdx + bdy * bdy;\n\n    const adxbdy = adx * bdy;\n    const bdxady = bdx * ady;\n    const clift = cdx * cdx + cdy * cdy;\n\n    const det =\n        alift * (bdxcdy - cdxbdy) +\n        blift * (cdxady - adxcdy) +\n        clift * (adxbdy - bdxady);\n\n    const permanent =\n        (Math.abs(bdxcdy) + Math.abs(cdxbdy)) * alift +\n        (Math.abs(cdxady) + Math.abs(adxcdy)) * blift +\n        (Math.abs(adxbdy) + Math.abs(bdxady)) * clift;\n\n    const errbound = iccerrboundA * permanent;\n\n    if (det > errbound || -det > errbound) {\n        return det;\n    }\n    return incircleadapt(ax, ay, bx, by, cx, cy, dx, dy, permanent);\n}\n\nexport function incirclefast(ax, ay, bx, by, cx, cy, dx, dy) {\n    const adx = ax - dx;\n    const ady = ay - dy;\n    const bdx = bx - dx;\n    const bdy = by - dy;\n    const cdx = cx - dx;\n    const cdy = cy - dy;\n\n    const abdet = adx * bdy - bdx * ady;\n    const bcdet = bdx * cdy - cdx * bdy;\n    const cadet = cdx * ady - adx * cdy;\n    const alift = adx * adx + ady * ady;\n    const blift = bdx * bdx + bdy * bdy;\n    const clift = cdx * cdx + cdy * cdy;\n\n    return alift * bcdet + blift * cadet + clift * abdet;\n}\n","import {epsilon, splitter, resulterrbound, estimate, vec, sum, sum_three, scale, negate} from './util.js';\n\nconst isperrboundA = (16 + 224 * epsilon) * epsilon;\nconst isperrboundB = (5 + 72 * epsilon) * epsilon;\nconst isperrboundC = (71 + 1408 * epsilon) * epsilon * epsilon;\n\nconst ab = vec(4);\nconst bc = vec(4);\nconst cd = vec(4);\nconst de = vec(4);\nconst ea = vec(4);\nconst ac = vec(4);\nconst bd = vec(4);\nconst ce = vec(4);\nconst da = vec(4);\nconst eb = vec(4);\n\nconst abc = vec(24);\nconst bcd = vec(24);\nconst cde = vec(24);\nconst dea = vec(24);\nconst eab = vec(24);\nconst abd = vec(24);\nconst bce = vec(24);\nconst cda = vec(24);\nconst deb = vec(24);\nconst eac = vec(24);\n\nconst adet = vec(1152);\nconst bdet = vec(1152);\nconst cdet = vec(1152);\nconst ddet = vec(1152);\nconst edet = vec(1152);\nconst abdet = vec(2304);\nconst cddet = vec(2304);\nconst cdedet = vec(3456);\nconst deter = vec(5760);\n\nconst _8 = vec(8);\nconst _8b = vec(8);\nconst _8c = vec(8);\nconst _16 = vec(16);\nconst _24 = vec(24);\nconst _48 = vec(48);\nconst _48b = vec(48);\nconst _96 = vec(96);\nconst _192 = vec(192);\nconst _384x = vec(384);\nconst _384y = vec(384);\nconst _384z = vec(384);\nconst _768 = vec(768);\n\nfunction sum_three_scale(a, b, c, az, bz, cz, out) {\n    return sum_three(\n        scale(4, a, az, _8), _8,\n        scale(4, b, bz, _8b), _8b,\n        scale(4, c, cz, _8c), _8c, _16, out);\n}\n\nfunction liftexact(alen, a, blen, b, clen, c, dlen, d, x, y, z, out) {\n    const len = sum(\n        sum(alen, a, blen, b, _48), _48,\n        negate(sum(clen, c, dlen, d, _48b), _48b), _48b, _96);\n\n    return sum_three(\n        scale(scale(len, _96, x, _192), _192, x, _384x), _384x,\n        scale(scale(len, _96, y, _192), _192, y, _384y), _384y,\n        scale(scale(len, _96, z, _192), _192, z, _384z), _384z, _768, out);\n}\n\nfunction insphereexact(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez) {\n    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _0, s1, s0, t1, t0, u3;\n\n    s1 = ax * by;\n    c = splitter * ax;\n    ahi = c - (c - ax);\n    alo = ax - ahi;\n    c = splitter * by;\n    bhi = c - (c - by);\n    blo = by - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = bx * ay;\n    c = splitter * bx;\n    ahi = c - (c - bx);\n    alo = bx - ahi;\n    c = splitter * ay;\n    bhi = c - (c - ay);\n    blo = ay - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ab[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ab[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    ab[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    ab[3] = u3;\n    s1 = bx * cy;\n    c = splitter * bx;\n    ahi = c - (c - bx);\n    alo = bx - ahi;\n    c = splitter * cy;\n    bhi = c - (c - cy);\n    blo = cy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = cx * by;\n    c = splitter * cx;\n    ahi = c - (c - cx);\n    alo = cx - ahi;\n    c = splitter * by;\n    bhi = c - (c - by);\n    blo = by - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    bc[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    bc[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    bc[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    bc[3] = u3;\n    s1 = cx * dy;\n    c = splitter * cx;\n    ahi = c - (c - cx);\n    alo = cx - ahi;\n    c = splitter * dy;\n    bhi = c - (c - dy);\n    blo = dy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = dx * cy;\n    c = splitter * dx;\n    ahi = c - (c - dx);\n    alo = dx - ahi;\n    c = splitter * cy;\n    bhi = c - (c - cy);\n    blo = cy - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    cd[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    cd[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    cd[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    cd[3] = u3;\n    s1 = dx * ey;\n    c = splitter * dx;\n    ahi = c - (c - dx);\n    alo = dx - ahi;\n    c = splitter * ey;\n    bhi = c - (c - ey);\n    blo = ey - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = ex * dy;\n    c = splitter * ex;\n    ahi = c - (c - ex);\n    alo = ex - ahi;\n    c = splitter * dy;\n    bhi = c - (c - dy);\n    blo = dy - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    de[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    de[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    de[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    de[3] = u3;\n    s1 = ex * ay;\n    c = splitter * ex;\n    ahi = c - (c - ex);\n    alo = ex - ahi;\n    c = splitter * ay;\n    bhi = c - (c - ay);\n    blo = ay - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = ax * ey;\n    c = splitter * ax;\n    ahi = c - (c - ax);\n    alo = ax - ahi;\n    c = splitter * ey;\n    bhi = c - (c - ey);\n    blo = ey - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ea[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ea[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    ea[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    ea[3] = u3;\n    s1 = ax * cy;\n    c = splitter * ax;\n    ahi = c - (c - ax);\n    alo = ax - ahi;\n    c = splitter * cy;\n    bhi = c - (c - cy);\n    blo = cy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = cx * ay;\n    c = splitter * cx;\n    ahi = c - (c - cx);\n    alo = cx - ahi;\n    c = splitter * ay;\n    bhi = c - (c - ay);\n    blo = ay - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ac[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ac[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    ac[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    ac[3] = u3;\n    s1 = bx * dy;\n    c = splitter * bx;\n    ahi = c - (c - bx);\n    alo = bx - ahi;\n    c = splitter * dy;\n    bhi = c - (c - dy);\n    blo = dy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = dx * by;\n    c = splitter * dx;\n    ahi = c - (c - dx);\n    alo = dx - ahi;\n    c = splitter * by;\n    bhi = c - (c - by);\n    blo = by - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    bd[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    bd[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    bd[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    bd[3] = u3;\n    s1 = cx * ey;\n    c = splitter * cx;\n    ahi = c - (c - cx);\n    alo = cx - ahi;\n    c = splitter * ey;\n    bhi = c - (c - ey);\n    blo = ey - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = ex * cy;\n    c = splitter * ex;\n    ahi = c - (c - ex);\n    alo = ex - ahi;\n    c = splitter * cy;\n    bhi = c - (c - cy);\n    blo = cy - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ce[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ce[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    ce[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    ce[3] = u3;\n    s1 = dx * ay;\n    c = splitter * dx;\n    ahi = c - (c - dx);\n    alo = dx - ahi;\n    c = splitter * ay;\n    bhi = c - (c - ay);\n    blo = ay - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = ax * dy;\n    c = splitter * ax;\n    ahi = c - (c - ax);\n    alo = ax - ahi;\n    c = splitter * dy;\n    bhi = c - (c - dy);\n    blo = dy - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    da[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    da[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    da[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    da[3] = u3;\n    s1 = ex * by;\n    c = splitter * ex;\n    ahi = c - (c - ex);\n    alo = ex - ahi;\n    c = splitter * by;\n    bhi = c - (c - by);\n    blo = by - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = bx * ey;\n    c = splitter * bx;\n    ahi = c - (c - bx);\n    alo = bx - ahi;\n    c = splitter * ey;\n    bhi = c - (c - ey);\n    blo = ey - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    eb[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    eb[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    eb[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    eb[3] = u3;\n\n    const abclen = sum_three_scale(ab, bc, ac, cz, az, -bz, abc);\n    const bcdlen = sum_three_scale(bc, cd, bd, dz, bz, -cz, bcd);\n    const cdelen = sum_three_scale(cd, de, ce, ez, cz, -dz, cde);\n    const dealen = sum_three_scale(de, ea, da, az, dz, -ez, dea);\n    const eablen = sum_three_scale(ea, ab, eb, bz, ez, -az, eab);\n    const abdlen = sum_three_scale(ab, bd, da, dz, az, bz, abd);\n    const bcelen = sum_three_scale(bc, ce, eb, ez, bz, cz, bce);\n    const cdalen = sum_three_scale(cd, da, ac, az, cz, dz, cda);\n    const deblen = sum_three_scale(de, eb, bd, bz, dz, ez, deb);\n    const eaclen = sum_three_scale(ea, ac, ce, cz, ez, az, eac);\n\n    const deterlen = sum_three(\n        liftexact(cdelen, cde, bcelen, bce, deblen, deb, bcdlen, bcd, ax, ay, az, adet), adet,\n        liftexact(dealen, dea, cdalen, cda, eaclen, eac, cdelen, cde, bx, by, bz, bdet), bdet,\n        sum_three(\n            liftexact(eablen, eab, deblen, deb, abdlen, abd, dealen, dea, cx, cy, cz, cdet), cdet,\n            liftexact(abclen, abc, eaclen, eac, bcelen, bce, eablen, eab, dx, dy, dz, ddet), ddet,\n            liftexact(bcdlen, bcd, abdlen, abd, cdalen, cda, abclen, abc, ex, ey, ez, edet), edet, cddet, cdedet), cdedet, abdet, deter);\n\n    return deter[deterlen - 1];\n}\n\nconst xdet = vec(96);\nconst ydet = vec(96);\nconst zdet = vec(96);\nconst fin = vec(1152);\n\nfunction liftadapt(a, b, c, az, bz, cz, x, y, z, out) {\n    const len = sum_three_scale(a, b, c, az, bz, cz, _24);\n    return sum_three(\n        scale(scale(len, _24, x, _48), _48, x, xdet), xdet,\n        scale(scale(len, _24, y, _48), _48, y, ydet), ydet,\n        scale(scale(len, _24, z, _48), _48, z, zdet), zdet, _192, out);\n}\n\nfunction insphereadapt(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez, permanent) {\n    let ab3, bc3, cd3, da3, ac3, bd3;\n\n    let aextail, bextail, cextail, dextail;\n    let aeytail, beytail, ceytail, deytail;\n    let aeztail, beztail, ceztail, deztail;\n\n    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _0, s1, s0, t1, t0;\n\n    const aex = ax - ex;\n    const bex = bx - ex;\n    const cex = cx - ex;\n    const dex = dx - ex;\n    const aey = ay - ey;\n    const bey = by - ey;\n    const cey = cy - ey;\n    const dey = dy - ey;\n    const aez = az - ez;\n    const bez = bz - ez;\n    const cez = cz - ez;\n    const dez = dz - ez;\n\n    s1 = aex * bey;\n    c = splitter * aex;\n    ahi = c - (c - aex);\n    alo = aex - ahi;\n    c = splitter * bey;\n    bhi = c - (c - bey);\n    blo = bey - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = bex * aey;\n    c = splitter * bex;\n    ahi = c - (c - bex);\n    alo = bex - ahi;\n    c = splitter * aey;\n    bhi = c - (c - aey);\n    blo = aey - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ab[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ab[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    ab3 = _j + _i;\n    bvirt = ab3 - _j;\n    ab[2] = _j - (ab3 - bvirt) + (_i - bvirt);\n    ab[3] = ab3;\n    s1 = bex * cey;\n    c = splitter * bex;\n    ahi = c - (c - bex);\n    alo = bex - ahi;\n    c = splitter * cey;\n    bhi = c - (c - cey);\n    blo = cey - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = cex * bey;\n    c = splitter * cex;\n    ahi = c - (c - cex);\n    alo = cex - ahi;\n    c = splitter * bey;\n    bhi = c - (c - bey);\n    blo = bey - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    bc[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    bc[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    bc3 = _j + _i;\n    bvirt = bc3 - _j;\n    bc[2] = _j - (bc3 - bvirt) + (_i - bvirt);\n    bc[3] = bc3;\n    s1 = cex * dey;\n    c = splitter * cex;\n    ahi = c - (c - cex);\n    alo = cex - ahi;\n    c = splitter * dey;\n    bhi = c - (c - dey);\n    blo = dey - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = dex * cey;\n    c = splitter * dex;\n    ahi = c - (c - dex);\n    alo = dex - ahi;\n    c = splitter * cey;\n    bhi = c - (c - cey);\n    blo = cey - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    cd[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    cd[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    cd3 = _j + _i;\n    bvirt = cd3 - _j;\n    cd[2] = _j - (cd3 - bvirt) + (_i - bvirt);\n    cd[3] = cd3;\n    s1 = dex * aey;\n    c = splitter * dex;\n    ahi = c - (c - dex);\n    alo = dex - ahi;\n    c = splitter * aey;\n    bhi = c - (c - aey);\n    blo = aey - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = aex * dey;\n    c = splitter * aex;\n    ahi = c - (c - aex);\n    alo = aex - ahi;\n    c = splitter * dey;\n    bhi = c - (c - dey);\n    blo = dey - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    da[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    da[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    da3 = _j + _i;\n    bvirt = da3 - _j;\n    da[2] = _j - (da3 - bvirt) + (_i - bvirt);\n    da[3] = da3;\n    s1 = aex * cey;\n    c = splitter * aex;\n    ahi = c - (c - aex);\n    alo = aex - ahi;\n    c = splitter * cey;\n    bhi = c - (c - cey);\n    blo = cey - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = cex * aey;\n    c = splitter * cex;\n    ahi = c - (c - cex);\n    alo = cex - ahi;\n    c = splitter * aey;\n    bhi = c - (c - aey);\n    blo = aey - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ac[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ac[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    ac3 = _j + _i;\n    bvirt = ac3 - _j;\n    ac[2] = _j - (ac3 - bvirt) + (_i - bvirt);\n    ac[3] = ac3;\n    s1 = bex * dey;\n    c = splitter * bex;\n    ahi = c - (c - bex);\n    alo = bex - ahi;\n    c = splitter * dey;\n    bhi = c - (c - dey);\n    blo = dey - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = dex * bey;\n    c = splitter * dex;\n    ahi = c - (c - dex);\n    alo = dex - ahi;\n    c = splitter * bey;\n    bhi = c - (c - bey);\n    blo = bey - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    bd[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    bd[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    bd3 = _j + _i;\n    bvirt = bd3 - _j;\n    bd[2] = _j - (bd3 - bvirt) + (_i - bvirt);\n    bd[3] = bd3;\n\n    const finlen = sum(\n        sum(\n            negate(liftadapt(bc, cd, bd, dez, bez, -cez, aex, aey, aez, adet), adet), adet,\n            liftadapt(cd, da, ac, aez, cez, dez, bex, bey, bez, bdet), bdet, abdet), abdet,\n        sum(\n            negate(liftadapt(da, ab, bd, bez, dez, aez, cex, cey, cez, cdet), cdet), cdet,\n            liftadapt(ab, bc, ac, cez, aez, -bez, dex, dey, dez, ddet), ddet, cddet), cddet, fin);\n\n    let det = estimate(finlen, fin);\n    let errbound = isperrboundB * permanent;\n    if (det >= errbound || -det >= errbound) {\n        return det;\n    }\n\n    bvirt = ax - aex;\n    aextail = ax - (aex + bvirt) + (bvirt - ex);\n    bvirt = ay - aey;\n    aeytail = ay - (aey + bvirt) + (bvirt - ey);\n    bvirt = az - aez;\n    aeztail = az - (aez + bvirt) + (bvirt - ez);\n    bvirt = bx - bex;\n    bextail = bx - (bex + bvirt) + (bvirt - ex);\n    bvirt = by - bey;\n    beytail = by - (bey + bvirt) + (bvirt - ey);\n    bvirt = bz - bez;\n    beztail = bz - (bez + bvirt) + (bvirt - ez);\n    bvirt = cx - cex;\n    cextail = cx - (cex + bvirt) + (bvirt - ex);\n    bvirt = cy - cey;\n    ceytail = cy - (cey + bvirt) + (bvirt - ey);\n    bvirt = cz - cez;\n    ceztail = cz - (cez + bvirt) + (bvirt - ez);\n    bvirt = dx - dex;\n    dextail = dx - (dex + bvirt) + (bvirt - ex);\n    bvirt = dy - dey;\n    deytail = dy - (dey + bvirt) + (bvirt - ey);\n    bvirt = dz - dez;\n    deztail = dz - (dez + bvirt) + (bvirt - ez);\n    if (aextail === 0 && aeytail === 0 && aeztail === 0 &&\n        bextail === 0 && beytail === 0 && beztail === 0 &&\n        cextail === 0 && ceytail === 0 && ceztail === 0 &&\n        dextail === 0 && deytail === 0 && deztail === 0) {\n        return det;\n    }\n\n    errbound = isperrboundC * permanent + resulterrbound * Math.abs(det);\n\n    const abeps = (aex * beytail + bey * aextail) - (aey * bextail + bex * aeytail);\n    const bceps = (bex * ceytail + cey * bextail) - (bey * cextail + cex * beytail);\n    const cdeps = (cex * deytail + dey * cextail) - (cey * dextail + dex * ceytail);\n    const daeps = (dex * aeytail + aey * dextail) - (dey * aextail + aex * deytail);\n    const aceps = (aex * ceytail + cey * aextail) - (aey * cextail + cex * aeytail);\n    const bdeps = (bex * deytail + dey * bextail) - (bey * dextail + dex * beytail);\n    det +=\n        (((bex * bex + bey * bey + bez * bez) * ((cez * daeps + dez * aceps + aez * cdeps) +\n        (ceztail * da3 + deztail * ac3 + aeztail * cd3)) + (dex * dex + dey * dey + dez * dez) *\n        ((aez * bceps - bez * aceps + cez * abeps) + (aeztail * bc3 - beztail * ac3 + ceztail * ab3))) -\n        ((aex * aex + aey * aey + aez * aez) * ((bez * cdeps - cez * bdeps + dez * bceps) +\n        (beztail * cd3 - ceztail * bd3 + deztail * bc3)) + (cex * cex + cey * cey + cez * cez) *\n        ((dez * abeps + aez * bdeps + bez * daeps) + (deztail * ab3 + aeztail * bd3 + beztail * da3)))) +\n        2 * (((bex * bextail + bey * beytail + bez * beztail) * (cez * da3 + dez * ac3 + aez * cd3) +\n        (dex * dextail + dey * deytail + dez * deztail) * (aez * bc3 - bez * ac3 + cez * ab3)) -\n        ((aex * aextail + aey * aeytail + aez * aeztail) * (bez * cd3 - cez * bd3 + dez * bc3) +\n        (cex * cextail + cey * ceytail + cez * ceztail) * (dez * ab3 + aez * bd3 + bez * da3)));\n\n    if (det >= errbound || -det >= errbound) {\n        return det;\n    }\n\n    return insphereexact(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez);\n}\n\nexport function insphere(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez) {\n    const aex = ax - ex;\n    const bex = bx - ex;\n    const cex = cx - ex;\n    const dex = dx - ex;\n    const aey = ay - ey;\n    const bey = by - ey;\n    const cey = cy - ey;\n    const dey = dy - ey;\n    const aez = az - ez;\n    const bez = bz - ez;\n    const cez = cz - ez;\n    const dez = dz - ez;\n\n    const aexbey = aex * bey;\n    const bexaey = bex * aey;\n    const ab = aexbey - bexaey;\n    const bexcey = bex * cey;\n    const cexbey = cex * bey;\n    const bc = bexcey - cexbey;\n    const cexdey = cex * dey;\n    const dexcey = dex * cey;\n    const cd = cexdey - dexcey;\n    const dexaey = dex * aey;\n    const aexdey = aex * dey;\n    const da = dexaey - aexdey;\n    const aexcey = aex * cey;\n    const cexaey = cex * aey;\n    const ac = aexcey - cexaey;\n    const bexdey = bex * dey;\n    const dexbey = dex * bey;\n    const bd = bexdey - dexbey;\n\n    const abc = aez * bc - bez * ac + cez * ab;\n    const bcd = bez * cd - cez * bd + dez * bc;\n    const cda = cez * da + dez * ac + aez * cd;\n    const dab = dez * ab + aez * bd + bez * da;\n\n    const alift = aex * aex + aey * aey + aez * aez;\n    const blift = bex * bex + bey * bey + bez * bez;\n    const clift = cex * cex + cey * cey + cez * cez;\n    const dlift = dex * dex + dey * dey + dez * dez;\n\n    const det = (clift * dab - dlift * abc) + (alift * bcd - blift * cda);\n\n    const aezplus = Math.abs(aez);\n    const bezplus = Math.abs(bez);\n    const cezplus = Math.abs(cez);\n    const dezplus = Math.abs(dez);\n    const aexbeyplus = Math.abs(aexbey);\n    const bexaeyplus = Math.abs(bexaey);\n    const bexceyplus = Math.abs(bexcey);\n    const cexbeyplus = Math.abs(cexbey);\n    const cexdeyplus = Math.abs(cexdey);\n    const dexceyplus = Math.abs(dexcey);\n    const dexaeyplus = Math.abs(dexaey);\n    const aexdeyplus = Math.abs(aexdey);\n    const aexceyplus = Math.abs(aexcey);\n    const cexaeyplus = Math.abs(cexaey);\n    const bexdeyplus = Math.abs(bexdey);\n    const dexbeyplus = Math.abs(dexbey);\n    const permanent =\n        ((cexdeyplus + dexceyplus) * bezplus + (dexbeyplus + bexdeyplus) * cezplus + (bexceyplus + cexbeyplus) * dezplus) * alift +\n        ((dexaeyplus + aexdeyplus) * cezplus + (aexceyplus + cexaeyplus) * dezplus + (cexdeyplus + dexceyplus) * aezplus) * blift +\n        ((aexbeyplus + bexaeyplus) * dezplus + (bexdeyplus + dexbeyplus) * aezplus + (dexaeyplus + aexdeyplus) * bezplus) * clift +\n        ((bexceyplus + cexbeyplus) * aezplus + (cexaeyplus + aexceyplus) * bezplus + (aexbeyplus + bexaeyplus) * cezplus) * dlift;\n\n    const errbound = isperrboundA * permanent;\n    if (det > errbound || -det > errbound) {\n        return det;\n    }\n    return -insphereadapt(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez, permanent);\n}\n\nexport function inspherefast(pax, pay, paz, pbx, pby, pbz, pcx, pcy, pcz, pdx, pdy, pdz, pex, pey, pez) {\n    const aex = pax - pex;\n    const bex = pbx - pex;\n    const cex = pcx - pex;\n    const dex = pdx - pex;\n    const aey = pay - pey;\n    const bey = pby - pey;\n    const cey = pcy - pey;\n    const dey = pdy - pey;\n    const aez = paz - pez;\n    const bez = pbz - pez;\n    const cez = pcz - pez;\n    const dez = pdz - pez;\n\n    const ab = aex * bey - bex * aey;\n    const bc = bex * cey - cex * bey;\n    const cd = cex * dey - dex * cey;\n    const da = dex * aey - aex * dey;\n    const ac = aex * cey - cex * aey;\n    const bd = bex * dey - dex * bey;\n\n    const abc = aez * bc - bez * ac + cez * ab;\n    const bcd = bez * cd - cez * bd + dez * bc;\n    const cda = cez * da + dez * ac + aez * cd;\n    const dab = dez * ab + aez * bd + bez * da;\n\n    const alift = aex * aex + aey * aey + aez * aez;\n    const blift = bex * bex + bey * bey + bez * bez;\n    const clift = cex * cex + cey * cey + cez * cez;\n    const dlift = dex * dex + dey * dey + dez * dez;\n\n    return (clift * dab - dlift * abc) + (alift * bcd - blift * cda);\n}\n","import { incircle, orient2d } from 'robust-predicates';\n\n/**\r\n * A set of numbers, stored as bits in a typed array. The amount of numbers /\r\n * the maximum number that can be stored is limited by the length, which is\r\n * fixed at construction time.\r\n */\r\nclass BitSet {\r\n    constructor(W, bs) {\r\n        this.W = W;\r\n        this.bs = bs;\r\n    }\r\n    /**\r\n     * Add a number to the set.\r\n     *\r\n     * @param idx The number to add. Must be 0 <= idx < len.\r\n     * @return this.\r\n     */\r\n    add(idx) {\r\n        const W = this.W, byte = (idx / W) | 0, bit = idx % W;\r\n        this.bs[byte] |= 1 << bit;\r\n        return this;\r\n    }\r\n    /**\r\n     * Delete a number from the set.\r\n     *\r\n     * @param idx The number to delete. Must be 0 <= idx < len.\r\n     * @return this.\r\n     */\r\n    delete(idx) {\r\n        const W = this.W, byte = (idx / W) | 0, bit = idx % W;\r\n        this.bs[byte] &= ~(1 << bit);\r\n        return this;\r\n    }\r\n    /**\r\n     * Add or delete a number in the set, depending on the second argument.\r\n     *\r\n     * @param idx The number to add or delete. Must be 0 <= idx < len.\r\n     * @param val If true, add the number, otherwise delete.\r\n     * @return val.\r\n     */\r\n    set(idx, val) {\r\n        const W = this.W, byte = (idx / W) | 0, bit = idx % W, m = 1 << bit;\r\n        //this.bs[byte] = set ? this.bs[byte] | m : this.bs[byte] & ~m;\r\n        this.bs[byte] ^= (-val ^ this.bs[byte]) & m; // -set == set * 255\r\n        return val;\r\n    }\r\n    /**\r\n     * Whether the number is in the set.\r\n     *\r\n     * @param idx The number to test. Must be 0 <= idx < len.\r\n     * @return True if the number is in the set.\r\n     */\r\n    has(idx) {\r\n        const W = this.W, byte = (idx / W) | 0, bit = idx % W;\r\n        return !!(this.bs[byte] & (1 << bit));\r\n    }\r\n    /**\r\n     * Iterate over the numbers that are in the set. The callback is invoked\r\n     * with each number that is set. It is allowed to change the BitSet during\r\n     * iteration. If it deletes a number that has not been iterated over, that\r\n     * number will not show up in a later call. If it adds a number during\r\n     * iteration, that number may or may not show up in a later call.\r\n     *\r\n     * @param fn The function to call for each number.\r\n     * @return this.\r\n     */\r\n    forEach(fn) {\r\n        const W = this.W, bs = this.bs, len = bs.length;\r\n        for (let byte = 0; byte < len; byte++) {\r\n            let bit = 0;\r\n            // bs[byte] may change during iteration\r\n            while (bs[byte] && bit < W) {\r\n                if (bs[byte] & (1 << bit)) {\r\n                    fn(byte * W + bit);\r\n                }\r\n                bit++;\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n}\r\n/**\r\n * A bit set using 8 bits per cell.\r\n */\r\nclass BitSet8 extends BitSet {\r\n    /**\r\n     * Create a bit set.\r\n     *\r\n     * @param len The length of the bit set, limiting the maximum value that\r\n     *        can be stored in it to len - 1.\r\n     */\r\n    constructor(len) {\r\n        const W = 8, bs = new Uint8Array(Math.ceil(len / W)).fill(0);\r\n        super(W, bs);\r\n    }\r\n}\n\nfunction nextEdge(e) { return (e % 3 === 2) ? e - 2 : e + 1; }\r\nfunction prevEdge(e) { return (e % 3 === 0) ? e + 2 : e - 1; }\r\n/**\r\n * Constrain a triangulation from Delaunator, using (parts of) the algorithm\r\n * in \"A fast algorithm for generating constrained Delaunay triangulations\" by\r\n * S. W. Sloan.\r\n */\r\nclass Constrainautor {\r\n    /**\r\n     * Make a Constrainautor.\r\n     *\r\n     * @param del The triangulation output from Delaunator.\r\n     * @param edges If provided, constrain these edges as by constrainAll.\r\n     */\r\n    constructor(del, edges) {\r\n        if (!del || typeof del !== 'object' || !del.triangles || !del.halfedges || !del.coords) {\r\n            throw new Error(\"Expected an object with Delaunator output\");\r\n        }\r\n        if (del.triangles.length % 3 || del.halfedges.length !== del.triangles.length || del.coords.length % 2) {\r\n            throw new Error(\"Delaunator output appears inconsistent\");\r\n        }\r\n        if (del.triangles.length < 3) {\r\n            throw new Error(\"No edges in triangulation\");\r\n        }\r\n        this.del = del;\r\n        const U32NIL = 2 ** 32 - 1, // Max value of a Uint32Array: use as a sentinel for not yet defined \r\n        numPoints = del.coords.length >> 1, numEdges = del.triangles.length;\r\n        // Map every vertex id to the right-most edge that points to that vertex.\r\n        this.vertMap = new Uint32Array(numPoints).fill(U32NIL);\r\n        // Keep track of edges flipped while constraining\r\n        this.flips = new BitSet8(numEdges);\r\n        // Keep track of constrained edges\r\n        this.consd = new BitSet8(numEdges);\r\n        for (let e = 0; e < numEdges; e++) {\r\n            const v = del.triangles[e];\r\n            if (this.vertMap[v] === U32NIL) {\r\n                this.updateVert(e);\r\n            }\r\n        }\r\n        if (edges) {\r\n            this.constrainAll(edges);\r\n        }\r\n    }\r\n    /**\r\n     * Constrain the triangulation such that there is an edge between p1 and p2.\r\n     *\r\n     * @param segP1 The index of one segment end-point in the coords array.\r\n     * @param segP2 The index of the other segment end-point in the coords array.\r\n     * @return The id of the edge that points from p1 to p2. If the\r\n     *         constrained edge lies on the hull and points in the opposite\r\n     *         direction (p2 to p1), the negative of its id is returned.\r\n     */\r\n    constrainOne(segP1, segP2) {\r\n        const { triangles, halfedges } = this.del, vm = this.vertMap, consd = this.consd, start = vm[segP1];\r\n        // Loop over the edges touching segP1\r\n        let edg = start;\r\n        do {\r\n            // edg points toward segP1, so its start-point is opposite it\r\n            const p4 = triangles[edg], nxt = nextEdge(edg);\r\n            // already constrained, but in reverse order\r\n            if (p4 === segP2) {\r\n                return this.protect(edg);\r\n            }\r\n            // The edge opposite segP1\r\n            const opp = prevEdge(edg), p3 = triangles[opp];\r\n            // already constrained\r\n            if (p3 === segP2) {\r\n                this.protect(nxt);\r\n                return nxt;\r\n            }\r\n            // edge opposite segP1 intersects constraint\r\n            if (this.intersectSegments(segP1, segP2, p3, p4)) {\r\n                edg = opp;\r\n                break;\r\n            }\r\n            const adj = halfedges[nxt];\r\n            // The next edge pointing to segP1\r\n            edg = adj;\r\n        } while (edg !== -1 && edg !== start);\r\n        let conEdge = edg;\r\n        // Walk through the triangulation looking for further intersecting\r\n        // edges and flip them. If an intersecting edge cannot be flipped,\r\n        // assign its id to `rescan` and restart from there, until there are\r\n        // no more intersects.\r\n        let rescan = -1;\r\n        while (edg !== -1) {\r\n            // edg is the intersecting half-edge in the triangle we came from\r\n            // adj is now the opposite half-edge in the adjacent triangle, which\r\n            // is away from segP1.\r\n            const adj = halfedges[edg], \r\n            // cross diagonal\r\n            bot = prevEdge(edg), top = prevEdge(adj), rgt = nextEdge(adj);\r\n            if (adj === -1) {\r\n                throw new Error(\"Constraining edge exited the hull\");\r\n            }\r\n            if (consd.has(edg)) { // || consd.has(adj) // assume consd is consistent\r\n                throw new Error(\"Edge intersects already constrained edge\");\r\n            }\r\n            if (this.isCollinear(segP1, segP2, triangles[edg]) ||\r\n                this.isCollinear(segP1, segP2, triangles[adj])) {\r\n                throw new Error(\"Constraining edge intersects point\");\r\n            }\r\n            const convex = this.intersectSegments(triangles[edg], triangles[adj], triangles[bot], triangles[top]);\r\n            // The quadrilateral formed by the two triangles adjoing edg is not\r\n            // convex, so the edge can't be flipped. Continue looking for the\r\n            // next intersecting edge and restart at this one later.\r\n            if (!convex) {\r\n                if (rescan === -1) {\r\n                    rescan = edg;\r\n                }\r\n                if (triangles[top] === segP2) {\r\n                    if (edg === rescan) {\r\n                        throw new Error(\"Infinite loop: non-convex quadrilateral\");\r\n                    }\r\n                    edg = rescan;\r\n                    rescan = -1;\r\n                    continue;\r\n                }\r\n                // Look for the next intersect\r\n                if (this.intersectSegments(segP1, segP2, triangles[top], triangles[adj])) {\r\n                    edg = top;\r\n                }\r\n                else if (this.intersectSegments(segP1, segP2, triangles[rgt], triangles[top])) {\r\n                    edg = rgt;\r\n                }\r\n                else if (rescan === edg) {\r\n                    throw new Error(\"Infinite loop: no further intersect after non-convex\");\r\n                }\r\n                continue;\r\n            }\r\n            this.flipDiagonal(edg);\r\n            // The new edge might still intersect, which will be fixed in the\r\n            // next rescan.\r\n            if (this.intersectSegments(segP1, segP2, triangles[bot], triangles[top])) {\r\n                if (rescan === -1) {\r\n                    rescan = bot;\r\n                }\r\n                if (rescan === bot) {\r\n                    throw new Error(\"Infinite loop: flipped diagonal still intersects\");\r\n                }\r\n            }\r\n            // Reached the other segment end-point? Start the rescan.\r\n            if (triangles[top] === segP2) {\r\n                conEdge = top;\r\n                edg = rescan;\r\n                rescan = -1;\r\n                // Otherwise, for the next edge that intersects. Because we just\r\n                // flipped, it's either edg again, or rgt.\r\n            }\r\n            else if (this.intersectSegments(segP1, segP2, triangles[rgt], triangles[top])) {\r\n                edg = rgt;\r\n            }\r\n        }\r\n        const flips = this.flips;\r\n        this.protect(conEdge);\r\n        do {\r\n            // need to use var to scope it outside the loop, but re-initialize\r\n            // to 0 each iteration\r\n            var flipped = 0;\r\n            flips.forEach(edg => {\r\n                flips.delete(edg);\r\n                const adj = halfedges[edg];\r\n                if (adj === -1) {\r\n                    return;\r\n                }\r\n                flips.delete(adj);\r\n                if (!this.isDelaunay(edg)) {\r\n                    this.flipDiagonal(edg);\r\n                    flipped++;\r\n                }\r\n            });\r\n        } while (flipped > 0);\r\n        return this.findEdge(segP1, segP2);\r\n    }\r\n    /**\r\n     * Fix the Delaunay condition. It is no longer necessary to call this\r\n     * method after constraining (many) edges, since constrainOne will do it\r\n     * after each.\r\n     *\r\n     * @param deep If true, keep checking & flipping edges until all\r\n     *        edges are Delaunay, otherwise only check the edges once.\r\n     * @return The triangulation object.\r\n     */\r\n    delaunify(deep = false) {\r\n        const halfedges = this.del.halfedges, flips = this.flips, consd = this.consd, len = halfedges.length;\r\n        do {\r\n            var flipped = 0;\r\n            for (let edg = 0; edg < len; edg++) {\r\n                if (consd.has(edg)) {\r\n                    continue;\r\n                }\r\n                flips.delete(edg);\r\n                const adj = halfedges[edg];\r\n                if (adj === -1) {\r\n                    continue;\r\n                }\r\n                flips.delete(adj);\r\n                if (!this.isDelaunay(edg)) {\r\n                    this.flipDiagonal(edg);\r\n                    flipped++;\r\n                }\r\n            }\r\n        } while (deep && flipped > 0);\r\n        return this;\r\n    }\r\n    /**\r\n     * Call constrainOne on each edge, and delaunify afterwards.\r\n     *\r\n     * @param edges The edges to constrain: each element is an array with\r\n     *        [p1, p2] which are indices into the points array originally\r\n     *        supplied to Delaunator.\r\n     * @return The triangulation object.\r\n     */\r\n    constrainAll(edges) {\r\n        const len = edges.length;\r\n        for (let i = 0; i < len; i++) {\r\n            const e = edges[i];\r\n            this.constrainOne(e[0], e[1]);\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Whether an edge is a constrained edge.\r\n     *\r\n     * @param edg The edge id.\r\n     * @return True if the edge is constrained.\r\n     */\r\n    isConstrained(edg) {\r\n        return this.consd.has(edg);\r\n    }\r\n    /**\r\n     * Find the edge that points from p1 -> p2. If there is only an edge from\r\n     * p2 -> p1 (i.e. it is on the hull), returns the negative id of it.\r\n     *\r\n     * @param p1 The index of the first point into the points array.\r\n     * @param p2 The index of the second point into the points array.\r\n     * @return The id of the edge that points from p1 -> p2, or the negative\r\n     *         id of the edge that goes from p2 -> p1, or Infinity if there is\r\n     *         no edge between p1 and p2.\r\n     */\r\n    findEdge(p1, p2) {\r\n        const start1 = this.vertMap[p2], { triangles, halfedges } = this.del;\r\n        let edg = start1, prv = -1;\r\n        // Walk around p2, iterating over the edges pointing to it\r\n        do {\r\n            if (triangles[edg] === p1) {\r\n                return edg;\r\n            }\r\n            prv = nextEdge(edg);\r\n            edg = halfedges[prv];\r\n        } while (edg !== -1 && edg !== start1);\r\n        // Did not find p1 -> p2, the only option is that it is on the hull on\r\n        // the 'left-hand' side, pointing p2 -> p1 (or there is no edge)\r\n        if (triangles[nextEdge(prv)] === p1) {\r\n            return -prv;\r\n        }\r\n        return Infinity;\r\n    }\r\n    /**\r\n     * Mark an edge as constrained, i.e. should not be touched by `delaunify`.\r\n     *\r\n     * @private\r\n     * @param edg The edge id.\r\n     * @return If edg has an adjacent, returns that, otherwise -edg.\r\n     */\r\n    protect(edg) {\r\n        const adj = this.del.halfedges[edg], flips = this.flips, consd = this.consd;\r\n        flips.delete(edg);\r\n        consd.add(edg);\r\n        if (adj !== -1) {\r\n            flips.delete(adj);\r\n            consd.add(adj);\r\n            return adj;\r\n        }\r\n        return -edg;\r\n    }\r\n    /**\r\n     * Mark an edge as flipped, unless it is already marked as constrained.\r\n     *\r\n     * @private\r\n     * @param edg The edge id.\r\n     * @return True if edg was not constrained.\r\n     */\r\n    markFlip(edg) {\r\n        const halfedges = this.del.halfedges, flips = this.flips, consd = this.consd;\r\n        if (consd.has(edg)) {\r\n            return false;\r\n        }\r\n        const adj = halfedges[edg];\r\n        if (adj !== -1) {\r\n            flips.add(edg);\r\n            flips.add(adj);\r\n        }\r\n        return true;\r\n    }\r\n    /**\r\n     * Flip the edge shared by two triangles.\r\n     *\r\n     * @private\r\n     * @param edg The edge shared by the two triangles, must have an\r\n     *        adjacent half-edge.\r\n     * @return The new diagonal.\r\n     */\r\n    flipDiagonal(edg) {\r\n        // Flip a diagonal\r\n        //                top                     edg\r\n        //          o  <----- o            o <------  o \r\n        //         | ^ \\      ^           |       ^ / ^\r\n        //      lft|  \\ \\     |        lft|      / /  |\r\n        //         |   \\ \\adj |           |  bot/ /   |\r\n        //         | edg\\ \\   |           |    / /top |\r\n        //         |     \\ \\  |rgt        |   / /     |rgt\r\n        //         v      \\ v |           v  / v      |\r\n        //         o ----->  o            o   ------> o \r\n        //           bot                     adj\r\n        const { triangles, halfedges } = this.del, flips = this.flips, consd = this.consd, adj = halfedges[edg], bot = prevEdge(edg), lft = nextEdge(edg), top = prevEdge(adj), rgt = nextEdge(adj), adjBot = halfedges[bot], adjTop = halfedges[top];\r\n        if (consd.has(edg)) { // || consd.has(adj) // assume consd is consistent\r\n            throw new Error(\"Trying to flip a constrained edge\");\r\n        }\r\n        // move *edg to *top\r\n        triangles[edg] = triangles[top];\r\n        halfedges[edg] = adjTop;\r\n        if (!flips.set(edg, flips.has(top))) {\r\n            consd.set(edg, consd.has(top));\r\n        }\r\n        if (adjTop !== -1) {\r\n            halfedges[adjTop] = edg;\r\n        }\r\n        halfedges[bot] = top;\r\n        // move *adj to *bot\r\n        triangles[adj] = triangles[bot];\r\n        halfedges[adj] = adjBot;\r\n        if (!flips.set(adj, flips.has(bot))) {\r\n            consd.set(adj, consd.has(bot));\r\n        }\r\n        if (adjBot !== -1) {\r\n            halfedges[adjBot] = adj;\r\n        }\r\n        halfedges[top] = bot;\r\n        this.markFlip(edg);\r\n        this.markFlip(lft);\r\n        this.markFlip(adj);\r\n        this.markFlip(rgt);\r\n        // mark flips unconditionally\r\n        flips.add(bot);\r\n        consd.delete(bot);\r\n        flips.add(top);\r\n        consd.delete(top);\r\n        this.updateVert(edg);\r\n        this.updateVert(lft);\r\n        this.updateVert(adj);\r\n        this.updateVert(rgt);\r\n        return bot;\r\n    }\r\n    /**\r\n     * Whether the two triangles sharing edg conform to the Delaunay condition.\r\n     * As a shortcut, if the given edge has no adjacent (is on the hull), it is\r\n     * certainly Delaunay.\r\n     *\r\n     * @private\r\n     * @param edg The edge shared by the triangles to test.\r\n     * @return True if they are Delaunay.\r\n     */\r\n    isDelaunay(edg) {\r\n        const { triangles, halfedges } = this.del, adj = halfedges[edg];\r\n        if (adj === -1) {\r\n            return true;\r\n        }\r\n        const p1 = triangles[prevEdge(edg)], p2 = triangles[edg], p3 = triangles[nextEdge(edg)], px = triangles[prevEdge(adj)];\r\n        return !this.inCircle(p1, p2, p3, px);\r\n    }\r\n    /**\r\n     * Update the vertex -> incoming edge map.\r\n     *\r\n     * @private\r\n     * @param start The id of an *outgoing* edge.\r\n     * @return The id of the right-most incoming edge.\r\n     */\r\n    updateVert(start) {\r\n        const { triangles, halfedges } = this.del, vm = this.vertMap, v = triangles[start];\r\n        // When iterating over incoming edges around a vertex, we do so in\r\n        // clockwise order ('going left'). If the vertex lies on the hull, two\r\n        // of the edges will have no opposite, leaving a gap. If the starting\r\n        // incoming edge is not the right-most, we will miss edges between it\r\n        // and the gap. So walk counter-clockwise until we find an edge on the\r\n        // hull, or get back to where we started.\r\n        let inc = prevEdge(start), adj = halfedges[inc];\r\n        while (adj !== -1 && adj !== start) {\r\n            inc = prevEdge(adj);\r\n            adj = halfedges[inc];\r\n        }\r\n        vm[v] = inc;\r\n        return inc;\r\n    }\r\n    /**\r\n     * Whether the segment between [p1, p2] intersects with [p3, p4]. When the\r\n     * segments share an end-point (e.g. p1 == p3 etc.), they are not considered\r\n     * intersecting.\r\n     *\r\n     * @private\r\n     * @param p1 The index of point 1 into this.del.coords.\r\n     * @param p2 The index of point 2 into this.del.coords.\r\n     * @param p3 The index of point 3 into this.del.coords.\r\n     * @param p4 The index of point 4 into this.del.coords.\r\n     * @return True if the segments intersect.\r\n     */\r\n    intersectSegments(p1, p2, p3, p4) {\r\n        const pts = this.del.coords;\r\n        // If the segments share one of the end-points, they cannot intersect\r\n        // (provided the input is properly segmented, and the triangulation is\r\n        // correct), but intersectSegments will say that they do. We can catch\r\n        // it here already.\r\n        if (p1 === p3 || p1 === p4 || p2 === p3 || p2 === p4) {\r\n            return false;\r\n        }\r\n        return intersectSegments(pts[p1 * 2], pts[p1 * 2 + 1], pts[p2 * 2], pts[p2 * 2 + 1], pts[p3 * 2], pts[p3 * 2 + 1], pts[p4 * 2], pts[p4 * 2 + 1]);\r\n    }\r\n    /**\r\n     * Whether point px is in the circumcircle of the triangle formed by p1, p2,\r\n     * and p3 (which are in counter-clockwise order).\r\n     *\r\n     * @param p1 The index of point 1 into this.del.coords.\r\n     * @param p2 The index of point 2 into this.del.coords.\r\n     * @param p3 The index of point 3 into this.del.coords.\r\n     * @param px The index of point x into this.del.coords.\r\n     * @return True if (px, py) is in the circumcircle.\r\n     */\r\n    inCircle(p1, p2, p3, px) {\r\n        const pts = this.del.coords;\r\n        return incircle(pts[p1 * 2], pts[p1 * 2 + 1], pts[p2 * 2], pts[p2 * 2 + 1], pts[p3 * 2], pts[p3 * 2 + 1], pts[px * 2], pts[px * 2 + 1]) < 0.0;\r\n    }\r\n    /**\r\n     * Whether point p1, p2, and p are collinear.\r\n     *\r\n     * @private\r\n     * @param p1 The index of segment point 1 into this.del.coords.\r\n     * @param p2 The index of segment point 2 into this.del.coords.\r\n     * @param p The index of the point p into this.del.coords.\r\n     * @return True if the points are collinear.\r\n     */\r\n    isCollinear(p1, p2, p) {\r\n        const pts = this.del.coords;\r\n        return orient2d(pts[p1 * 2], pts[p1 * 2 + 1], pts[p2 * 2], pts[p2 * 2 + 1], pts[p * 2], pts[p * 2 + 1]) === 0.0;\r\n    }\r\n}\r\nConstrainautor.intersectSegments = intersectSegments;\r\n/**\r\n * Compute if two line segments [p1, p2] and [p3, p4] intersect.\r\n *\r\n * @name Constrainautor.intersectSegments\r\n * @source https://github.com/mikolalysenko/robust-segment-intersect\r\n * @param p1x The x coordinate of point 1 of the first segment.\r\n * @param p1y The y coordinate of point 1 of the first segment.\r\n * @param p2x The x coordinate of point 2 of the first segment.\r\n * @param p2y The y coordinate of point 2 of the first segment.\r\n * @param p3x The x coordinate of point 1 of the second segment.\r\n * @param p3y The y coordinate of point 1 of the second segment.\r\n * @param p4x The x coordinate of point 2 of the second segment.\r\n * @param p4y The y coordinate of point 2 of the second segment.\r\n * @return True if the line segments intersect.\r\n */\r\nfunction intersectSegments(p1x, p1y, p2x, p2y, p3x, p3y, p4x, p4y) {\r\n    const x0 = orient2d(p1x, p1y, p3x, p3y, p4x, p4y), y0 = orient2d(p2x, p2y, p3x, p3y, p4x, p4y);\r\n    if ((x0 > 0 && y0 > 0) || (x0 < 0 && y0 < 0)) {\r\n        return false;\r\n    }\r\n    const x1 = orient2d(p3x, p3y, p1x, p1y, p2x, p2y), y1 = orient2d(p4x, p4y, p1x, p1y, p2x, p2y);\r\n    if ((x1 > 0 && y1 > 0) || (x1 < 0 && y1 < 0)) {\r\n        return false;\r\n    }\r\n    //Check for degenerate collinear case\r\n    if (x0 === 0 && y0 === 0 && x1 === 0 && y1 === 0) {\r\n        return !(Math.max(p3x, p4x) < Math.min(p1x, p2x) ||\r\n            Math.max(p1x, p2x) < Math.min(p3x, p4x) ||\r\n            Math.max(p3y, p4y) < Math.min(p1y, p2y) ||\r\n            Math.max(p1y, p2y) < Math.min(p3y, p4y));\r\n    }\r\n    return true;\r\n}\n\nexport { Constrainautor as default };\n","import { polygon, featureCollection } from \"@turf/helpers\";\nimport Delaunator from \"delaunator\";\nimport Constrainautor from \"@kninnug/constrainautor\";\nexport default function (points, edges, z) {\n    if (!edges)\n        edges = [];\n    if (typeof points !== \"object\" || points.type !== \"FeatureCollection\")\n        throw \"Argument points must be FeatureCollection\";\n    if (!Array.isArray(edges))\n        throw \"Argument points must be Array of Array\";\n    const del_points = points.features.map(point => point.geometry.coordinates);\n    const del = Delaunator.from(del_points);\n    let con;\n    const tris = [];\n    if (del.triangles.length !== 0 && edges.length !== 0) {\n        con = new Constrainautor(del);\n        con.constrainAll(edges);\n    }\n    for (let i = 0; i < del.triangles.length; i += 3) {\n        tris.push([del.triangles[i], del.triangles[i + 1], del.triangles[i + 2]]);\n    }\n    const keys = [\"a\", \"b\", \"c\"];\n    return featureCollection(tris.map(indices => {\n        const properties = {};\n        const coords = indices.map((index, i) => {\n            const point = points.features[index];\n            const xyz = point.geometry.coordinates;\n            const coord = [xyz[0], xyz[1]];\n            if (xyz.length === 3) {\n                coord[2] = xyz[2];\n            }\n            else {\n                properties[keys[i]] = point.properties[z];\n            }\n            return coord;\n        });\n        coords[3] = coords[0];\n        return polygon([coords], properties);\n    }));\n}\n//# sourceMappingURL=constrained-tin.js.map","\"use strict\";\nimport booleanPointInPolygon from \"./booleanPointInPolygon\";\nimport centroid from \"@turf/centroid\";\nimport convex from \"@turf/convex\";\nimport difference from \"@turf/difference\";\nimport { featureCollection, lineString, point, polygon } from \"@turf/helpers\";\nimport intersect from \"@turf/intersect\";\nimport { getCoords } from \"@turf/invariant\";\nimport lineIntersect from \"@turf/line-intersect\";\nimport union from \"@turf/union\";\nimport findIntersections from \"./kinks\";\nconst format_version = 2.00703;\nimport constrainedTin from \"./constrained-tin\";\nexport default class Tin {\n    constructor(options = {}) {\n        this.points = [];\n        if (options.bounds) {\n            this.setBounds(options.bounds);\n        }\n        else {\n            this.setWh(options.wh);\n            this.vertexMode = options.vertexMode || Tin.VERTEX_PLAIN;\n        }\n        this.strictMode = options.strictMode || Tin.MODE_AUTO;\n        this.yaxisMode = options.yaxisMode || Tin.YAXIS_INVERT;\n        this.importance = options.importance || 0;\n        this.priority = options.priority || 0;\n        this.stateFull = options.stateFull || false;\n        if (options.points) {\n            this.setPoints(options.points);\n        }\n        if (options.edges) {\n            this.setEdges(options.edges);\n        }\n    }\n    getFormatVersion() {\n        return format_version;\n    }\n    setPoints(points) {\n        if (this.yaxisMode == Tin.YAXIS_FOLLOW) {\n            points = points.map(point => [point[0], [point[1][0], -1 * point[1][1]]]);\n        }\n        this.points = points;\n        this.tins = undefined;\n        this.indexedTins = undefined;\n    }\n    setEdges(edges = []) {\n        this.edges = normalizeEdges(edges);\n        this.edgeNodes = undefined;\n        this.tins = undefined;\n        this.indexedTins = undefined;\n    }\n    setBounds(bounds) {\n        this.bounds = bounds;\n        let minx = bounds[0][0];\n        let maxx = minx;\n        let miny = bounds[0][1];\n        let maxy = miny;\n        const coords = [bounds[0]];\n        for (let i = 1; i < bounds.length; i++) {\n            const xy = bounds[i];\n            if (xy[0] < minx)\n                minx = xy[0];\n            if (xy[0] > maxx)\n                maxx = xy[0];\n            if (xy[1] < miny)\n                miny = xy[1];\n            if (xy[1] > maxy)\n                maxy = xy[1];\n            coords.push(xy);\n        }\n        coords.push(bounds[0]);\n        this.boundsPolygon = polygon([coords]);\n        this.xy = [minx, miny];\n        this.wh = [maxx - minx, maxy - miny];\n        this.vertexMode = Tin.VERTEX_PLAIN;\n        this.tins = undefined;\n        this.indexedTins = undefined;\n    }\n    setCompiled(compiled) {\n        if (compiled.version ||\n            (!compiled.tins && compiled.points && compiled.tins_points)) {\n            this.points = compiled.points;\n            this.pointsWeightBuffer =\n                !compiled.version || compiled.version < 2.00703\n                    ? [\"forw\", \"bakw\"].reduce((bd, forb) => {\n                        const base = compiled.weight_buffer[forb];\n                        if (base) {\n                            bd[forb] = Object.keys(base).reduce((buffer, key) => {\n                                const normKey = normalizeNodeKey(key);\n                                buffer[normKey] = base[key];\n                                return buffer;\n                            }, {});\n                        }\n                        return bd;\n                    }, {})\n                    : compiled.weight_buffer;\n            if (compiled.strict_status) {\n                this.strict_status = compiled.strict_status;\n            }\n            else if (compiled.kinks_points) {\n                this.strict_status = Tin.STATUS_ERROR;\n            }\n            else if (compiled.tins_points.length == 2) {\n                this.strict_status = Tin.STATUS_LOOSE;\n            }\n            else {\n                this.strict_status = Tin.STATUS_STRICT;\n            }\n            this.vertices_params = {\n                forw: [compiled.vertices_params[0]],\n                bakw: [compiled.vertices_params[1]]\n            };\n            this.vertices_params.forw[1] = [0, 1, 2, 3].map(idx => {\n                const idxNxt = (idx + 1) % 4;\n                const tri = indexesToTri([\"c\", `b${idx}`, `b${idxNxt}`], compiled.points, compiled.edgeNodes || [], compiled.centroid_point, compiled.vertices_points, false, format_version);\n                return featureCollection([tri]);\n            });\n            this.vertices_params.bakw[1] = [0, 1, 2, 3].map(idx => {\n                const idxNxt = (idx + 1) % 4;\n                const tri = indexesToTri([\"c\", `b${idx}`, `b${idxNxt}`], compiled.points, compiled.edgeNodes || [], compiled.centroid_point, compiled.vertices_points, true, format_version);\n                return featureCollection([tri]);\n            });\n            this.centroid = {\n                forw: point(compiled.centroid_point[0], {\n                    target: {\n                        geom: compiled.centroid_point[1],\n                        index: \"c\"\n                    }\n                }),\n                bakw: point(compiled.centroid_point[1], {\n                    target: {\n                        geom: compiled.centroid_point[0],\n                        index: \"c\"\n                    }\n                })\n            };\n            this.edges = normalizeEdges(compiled.edges || []);\n            this.edgeNodes = compiled.edgeNodes || [];\n            const bakwI = compiled.tins_points.length == 1 ? 0 : 1;\n            this.tins = {\n                forw: featureCollection(compiled.tins_points[0].map((idxes) => indexesToTri(idxes, compiled.points, compiled.edgeNodes || [], compiled.centroid_point, compiled.vertices_points, false, compiled.version))),\n                bakw: featureCollection(compiled.tins_points[bakwI].map((idxes) => indexesToTri(idxes, compiled.points, compiled.edgeNodes || [], compiled.centroid_point, compiled.vertices_points, true, compiled.version)))\n            };\n            this.addIndexedTin();\n            if (compiled.kinks_points) {\n                this.kinks = {\n                    bakw: featureCollection(compiled.kinks_points.map((coord) => point(coord)))\n                };\n            }\n            if (compiled.yaxisMode) {\n                this.yaxisMode = compiled.yaxisMode;\n            }\n            else {\n                this.yaxisMode = Tin.YAXIS_INVERT;\n            }\n            if (compiled.vertexMode) {\n                this.vertexMode = compiled.vertexMode;\n            }\n            if (compiled.strictMode) {\n                this.strictMode = compiled.strictMode;\n            }\n            if (compiled.bounds) {\n                this.bounds = compiled.bounds;\n                this.boundsPolygon = compiled.boundsPolygon;\n                this.xy = compiled.xy;\n                this.wh = compiled.wh;\n            }\n            else {\n                this.xy = [0, 0];\n                if (compiled.wh)\n                    this.wh = compiled.wh;\n                this.bounds = undefined;\n                this.boundsPolygon = undefined;\n            }\n        }\n        else {\n            compiled = JSON.parse(JSON.stringify(compiled)\n                .replace('\"cent\"', '\"c\"')\n                .replace(/\"bbox(\\d+)\"/g, '\"b$1\"'));\n            this.tins = compiled.tins;\n            this.addIndexedTin();\n            this.strict_status = compiled.strict_status;\n            this.pointsWeightBuffer = compiled.weight_buffer;\n            this.vertices_params = compiled.vertices_params;\n            this.centroid = compiled.centroid;\n            this.kinks = compiled.kinks;\n            const points = [];\n            for (let i = 0; i < this.tins.forw.features.length; i++) {\n                const tri = this.tins.forw.features[i];\n                [\"a\", \"b\", \"c\"].map((key, idx) => {\n                    const forw = tri.geometry.coordinates[0][idx];\n                    const bakw = tri.properties[key].geom;\n                    const pIdx = tri.properties[key].index;\n                    points[pIdx] = [forw, bakw];\n                });\n            }\n            this.points = points;\n        }\n        return {\n            tins: this.tins,\n            strict_status: this.strict_status,\n            weight_buffer: this.pointsWeightBuffer,\n            vertices_params: this.vertices_params,\n            centroid: this.centroid,\n            kinks: this.kinks\n        };\n    }\n    getCompiled() {\n        const compiled = {};\n        compiled.version = format_version;\n        compiled.points = this.points;\n        compiled.weight_buffer = this.pointsWeightBuffer;\n        compiled.centroid_point = [\n            this.centroid.forw.geometry.coordinates,\n            this.centroid.forw.properties.target.geom\n        ];\n        compiled.vertices_params = [\n            this.vertices_params.forw[0],\n            this.vertices_params.bakw[0]\n        ];\n        compiled.vertices_points = [];\n        const vertices = this.vertices_params.forw[1];\n        [0, 1, 2, 3].map(i => {\n            const vertex_data = vertices[i].features[0];\n            const forw = vertex_data.geometry.coordinates[0][1];\n            const bakw = vertex_data.properties.b.geom;\n            compiled.vertices_points[i] = [forw, bakw];\n        });\n        compiled.strict_status = this.strict_status;\n        compiled.tins_points = [[]];\n        this.tins.forw.features.map((tin) => {\n            compiled.tins_points[0].push([\"a\", \"b\", \"c\"].map(idx => tin.properties[idx].index));\n        });\n        if (this.strict_status == Tin.STATUS_LOOSE) {\n            compiled.tins_points[1] = [];\n            this.tins.bakw.features.map((tin) => {\n                compiled.tins_points[1].push([\"a\", \"b\", \"c\"].map(idx => tin.properties[idx].index));\n            });\n        }\n        else if (this.strict_status == Tin.STATUS_ERROR) {\n            compiled.kinks_points = this.kinks.bakw.features.map((kink) => kink.geometry.coordinates);\n        }\n        compiled.yaxisMode = this.yaxisMode;\n        compiled.vertexMode = this.vertexMode;\n        compiled.strictMode = this.strictMode;\n        if (this.bounds) {\n            compiled.bounds = this.bounds;\n            compiled.boundsPolygon = this.boundsPolygon;\n            compiled.xy = this.xy;\n            compiled.wh = this.wh;\n        }\n        else {\n            compiled.wh = this.wh;\n        }\n        compiled.edges = this.edges;\n        compiled.edgeNodes = this.edgeNodes;\n        return compiled;\n    }\n    addIndexedTin() {\n        const tins = this.tins;\n        const forw = tins.forw;\n        const bakw = tins.bakw;\n        const gridNum = Math.ceil(Math.sqrt(forw.features.length));\n        if (gridNum < 3) {\n            this.indexedTins = undefined;\n            return;\n        }\n        let forwBound = [];\n        let bakwBound = [];\n        const forwEachBound = forw.features.map((tri) => {\n            let eachBound = [];\n            getCoords(tri)[0].map((point) => {\n                if (forwBound.length === 0)\n                    forwBound = [Array.from(point), Array.from(point)];\n                else {\n                    if (point[0] < forwBound[0][0])\n                        forwBound[0][0] = point[0];\n                    if (point[0] > forwBound[1][0])\n                        forwBound[1][0] = point[0];\n                    if (point[1] < forwBound[0][1])\n                        forwBound[0][1] = point[1];\n                    if (point[1] > forwBound[1][1])\n                        forwBound[1][1] = point[1];\n                }\n                if (eachBound.length === 0)\n                    eachBound = [Array.from(point), Array.from(point)];\n                else {\n                    if (point[0] < eachBound[0][0])\n                        eachBound[0][0] = point[0];\n                    if (point[0] > eachBound[1][0])\n                        eachBound[1][0] = point[0];\n                    if (point[1] < eachBound[0][1])\n                        eachBound[0][1] = point[1];\n                    if (point[1] > eachBound[1][1])\n                        eachBound[1][1] = point[1];\n                }\n            });\n            return eachBound;\n        });\n        const forwXUnit = (forwBound[1][0] - forwBound[0][0]) / gridNum;\n        const forwYUnit = (forwBound[1][1] - forwBound[0][1]) / gridNum;\n        const forwGridCache = forwEachBound.reduce((prev, bound, index) => {\n            const normXMin = unitCalc(bound[0][0], forwBound[0][0], forwXUnit, gridNum);\n            const normXMax = unitCalc(bound[1][0], forwBound[0][0], forwXUnit, gridNum);\n            const normYMin = unitCalc(bound[0][1], forwBound[0][1], forwYUnit, gridNum);\n            const normYMax = unitCalc(bound[1][1], forwBound[0][1], forwYUnit, gridNum);\n            for (let cx = normXMin; cx <= normXMax; cx++) {\n                if (!prev[cx])\n                    prev[cx] = [];\n                for (let cy = normYMin; cy <= normYMax; cy++) {\n                    if (!prev[cx][cy])\n                        prev[cx][cy] = [];\n                    prev[cx][cy].push(index);\n                }\n            }\n            return prev;\n        }, []);\n        const bakwEachBound = bakw.features.map((tri) => {\n            let eachBound = [];\n            getCoords(tri)[0].map((point) => {\n                if (bakwBound.length === 0)\n                    bakwBound = [Array.from(point), Array.from(point)];\n                else {\n                    if (point[0] < bakwBound[0][0])\n                        bakwBound[0][0] = point[0];\n                    if (point[0] > bakwBound[1][0])\n                        bakwBound[1][0] = point[0];\n                    if (point[1] < bakwBound[0][1])\n                        bakwBound[0][1] = point[1];\n                    if (point[1] > bakwBound[1][1])\n                        bakwBound[1][1] = point[1];\n                }\n                if (eachBound.length === 0)\n                    eachBound = [Array.from(point), Array.from(point)];\n                else {\n                    if (point[0] < eachBound[0][0])\n                        eachBound[0][0] = point[0];\n                    if (point[0] > eachBound[1][0])\n                        eachBound[1][0] = point[0];\n                    if (point[1] < eachBound[0][1])\n                        eachBound[0][1] = point[1];\n                    if (point[1] > eachBound[1][1])\n                        eachBound[1][1] = point[1];\n                }\n            });\n            return eachBound;\n        });\n        const bakwXUnit = (bakwBound[1][0] - bakwBound[0][0]) / gridNum;\n        const bakwYUnit = (bakwBound[1][1] - bakwBound[0][1]) / gridNum;\n        const bakwGridCache = bakwEachBound.reduce((prev, bound, index) => {\n            const normXMin = unitCalc(bound[0][0], bakwBound[0][0], bakwXUnit, gridNum);\n            const normXMax = unitCalc(bound[1][0], bakwBound[0][0], bakwXUnit, gridNum);\n            const normYMin = unitCalc(bound[0][1], bakwBound[0][1], bakwYUnit, gridNum);\n            const normYMax = unitCalc(bound[1][1], bakwBound[0][1], bakwYUnit, gridNum);\n            for (let cx = normXMin; cx <= normXMax; cx++) {\n                if (!prev[cx])\n                    prev[cx] = [];\n                for (let cy = normYMin; cy <= normYMax; cy++) {\n                    if (!prev[cx][cy])\n                        prev[cx][cy] = [];\n                    prev[cx][cy].push(index);\n                }\n            }\n            return prev;\n        }, []);\n        this.indexedTins = {\n            forw: {\n                gridNum,\n                xOrigin: forwBound[0][0],\n                yOrigin: forwBound[0][1],\n                xUnit: forwXUnit,\n                yUnit: forwYUnit,\n                gridCache: forwGridCache\n            },\n            bakw: {\n                gridNum,\n                xOrigin: bakwBound[0][0],\n                yOrigin: bakwBound[0][1],\n                xUnit: bakwXUnit,\n                yUnit: bakwYUnit,\n                gridCache: bakwGridCache\n            }\n        };\n    }\n    setWh(wh) {\n        this.wh = wh;\n        this.xy = [0, 0];\n        this.bounds = undefined;\n        this.boundsPolygon = undefined;\n        this.tins = undefined;\n        this.indexedTins = undefined;\n    }\n    setVertexMode(mode) {\n        this.vertexMode = mode;\n        this.tins = undefined;\n        this.indexedTins = undefined;\n    }\n    setStrictMode(mode) {\n        this.strictMode = mode;\n        this.tins = undefined;\n        this.indexedTins = undefined;\n    }\n    calcurateStrictTinAsync() {\n        const edges = this.pointsSet.edges;\n        return Promise.all(this.tins.forw.features.map((tri) => Promise.resolve(counterTri(tri))))\n            .then((tris) => {\n            this.tins.bakw = featureCollection(tris);\n        })\n            .then(() => {\n            const searchIndex = {};\n            return Promise.all(this.tins.forw.features.map((forTri, index) => {\n                const bakTri = this.tins.bakw.features[index];\n                return Promise.resolve(insertSearchIndex(searchIndex, { forw: forTri, bakw: bakTri }));\n            }))\n                .then(() => Promise.all([\n                overlapCheckAsync(searchIndex),\n                Promise.resolve(searchIndex)\n            ]))\n                .catch(err => {\n                throw err;\n            });\n        })\n            .then((prevResult) => {\n            const overlapped = prevResult[0];\n            const searchIndex = prevResult[1];\n            if (overlapped.bakw)\n                Object.keys(overlapped.bakw).map(key => {\n                    if (overlapped.bakw[key] == \"Not include case\")\n                        return;\n                    const trises = searchIndex[key];\n                    const forUnion = union(trises[0].forw, trises[1].forw);\n                    const forConvex = convex(featureCollection([trises[0].forw, trises[1].forw]));\n                    const forDiff = difference(forConvex, forUnion);\n                    if (forDiff)\n                        return;\n                    const splittedKey = key.split(\"-\");\n                    if (splittedKey[0].match(/^[0-9]+$/) &&\n                        splittedKey[1].match(/^[0-9]+$/)) {\n                        const numberKey = splittedKey\n                            .map(key => parseInt(key))\n                            .sort((a, b) => (a < b ? -1 : 1));\n                        for (let i = 0; i < edges.length - 1; i++) {\n                            if (numberKey[0] == edges[i][0] && numberKey[1] == edges[i][1])\n                                return;\n                        }\n                    }\n                    const sharedVtx = splittedKey.map(val => [\"a\", \"b\", \"c\"]\n                        .map((alpha, index) => {\n                        const prop = trises[0].bakw.properties[alpha];\n                        const geom = trises[0].bakw.geometry.coordinates[0][index];\n                        return { geom, prop };\n                    })\n                        .filter(vtx => vtx.prop.index == val)[0]);\n                    const nonSharedVtx = trises.map((tris) => [\"a\", \"b\", \"c\"]\n                        .map((alpha, index) => {\n                        const prop = tris.bakw.properties[alpha];\n                        const geom = tris.bakw.geometry.coordinates[0][index];\n                        return { geom, prop };\n                    })\n                        .filter(vtx => vtx.prop.index != sharedVtx[0].prop.index &&\n                        vtx.prop.index != sharedVtx[1].prop.index)[0]);\n                    removeSearchIndex(searchIndex, trises[0], this.tins);\n                    removeSearchIndex(searchIndex, trises[1], this.tins);\n                    sharedVtx.map(sVtx => {\n                        const newTriCoords = [\n                            sVtx.geom,\n                            nonSharedVtx[0].geom,\n                            nonSharedVtx[1].geom,\n                            sVtx.geom\n                        ];\n                        const newTriProp = {\n                            a: sVtx.prop,\n                            b: nonSharedVtx[0].prop,\n                            c: nonSharedVtx[1].prop\n                        };\n                        const newBakTri = polygon([newTriCoords], newTriProp);\n                        const newForTri = counterTri(newBakTri);\n                        insertSearchIndex(searchIndex, { forw: newForTri, bakw: newBakTri }, this.tins);\n                    });\n                });\n            return Promise.all([\"forw\", \"bakw\"].map(direc => new Promise(resolve => {\n                const coords = this.tins[direc].features.map(poly => poly.geometry.coordinates[0]);\n                resolve(findIntersections(coords));\n            }).catch(err => {\n                throw err;\n            })))\n                .then((result) => {\n                if (result[0].length == 0 && result[1].length == 0) {\n                    this.strict_status = Tin.STATUS_STRICT;\n                    delete this.kinks;\n                }\n                else {\n                    this.strict_status = Tin.STATUS_ERROR;\n                    this.kinks = {};\n                    if (result[0].length > 0)\n                        this.kinks.forw = featureCollection(result[0]);\n                    if (result[1].length > 0)\n                        this.kinks.bakw = featureCollection(result[1]);\n                }\n            })\n                .catch(err => {\n                throw err;\n            });\n        })\n            .catch(err => {\n            throw err;\n        });\n    }\n    generatePointsSet() {\n        const pointsArray = { forw: [], bakw: [] };\n        for (let i = 0; i < this.points.length; i++) {\n            const mapxy = this.points[i][0];\n            const mercs = this.points[i][1];\n            const forPoint = createPoint(mapxy, mercs, i);\n            pointsArray.forw.push(forPoint);\n            pointsArray.bakw.push(counterPoint(forPoint));\n        }\n        const edges = [];\n        let edgeNodeIndex = 0;\n        this.edgeNodes = [];\n        if (!this.edges)\n            this.edges = [];\n        for (let i = 0; i < this.edges.length; i++) {\n            const startEnd = this.edges[i][2];\n            const illstNodes = Object.assign([], this.edges[i][0]);\n            const mercNodes = Object.assign([], this.edges[i][1]);\n            if (illstNodes.length === 0 && mercNodes.length === 0) {\n                edges.push(startEnd);\n                continue;\n            }\n            illstNodes.unshift(this.points[startEnd[0]][0]);\n            illstNodes.push(this.points[startEnd[1]][0]);\n            mercNodes.unshift(this.points[startEnd[0]][1]);\n            mercNodes.push(this.points[startEnd[1]][1]);\n            const lengths = [illstNodes, mercNodes].map(nodes => {\n                const eachLengths = nodes.map((node, index, arr) => {\n                    if (index === 0)\n                        return 0;\n                    const prev = arr[index - 1];\n                    return Math.sqrt(Math.pow(node[0] - prev[0], 2) + Math.pow(node[1] - prev[1], 2));\n                });\n                const sumLengths = eachLengths.reduce((prev, node, index) => {\n                    if (index === 0)\n                        return [0];\n                    prev.push(prev[index - 1] + node);\n                    return prev;\n                }, []);\n                return sumLengths.map((eachSum, index, arr) => {\n                    const ratio = eachSum / arr[arr.length - 1];\n                    return [nodes[index], eachLengths[index], sumLengths[index], ratio];\n                });\n            });\n            lengths\n                .map((thisLengths, i) => {\n                const anotherLengths = lengths[i ? 0 : 1];\n                return thisLengths\n                    .filter((val, index) => !(index === 0 ||\n                    index === thisLengths.length - 1 ||\n                    val[4] === \"handled\"))\n                    .map((lengthItem) => {\n                    const node = lengthItem[0];\n                    const ratio = lengthItem[3];\n                    const anotherSets = anotherLengths.reduce((prev, item, index, arr) => {\n                        if (prev)\n                            return prev;\n                        const next = arr[index + 1];\n                        if (item[3] === ratio) {\n                            item[4] = \"handled\";\n                            return [item];\n                        }\n                        if (item[3] < ratio && next[3] > ratio)\n                            return [item, next];\n                        return;\n                    }, undefined);\n                    if (anotherSets.length === 1) {\n                        return i === 0\n                            ? [node, anotherSets[0][0], ratio]\n                            : [anotherSets[0][0], node, ratio];\n                    }\n                    else {\n                        const anotherPrev = anotherSets[0];\n                        const anotherNext = anotherSets[1];\n                        const ratioDelta = ratio - anotherPrev[3];\n                        const ratioAnother = anotherNext[3] - anotherPrev[3];\n                        const ratioInEdge = ratioDelta / ratioAnother;\n                        const anotherNode = [\n                            (anotherNext[0][0] - anotherPrev[0][0]) * ratioInEdge +\n                                anotherPrev[0][0],\n                            (anotherNext[0][1] - anotherPrev[0][1]) * ratioInEdge +\n                                anotherPrev[0][1]\n                        ];\n                        return i === 0\n                            ? [node, anotherNode, ratio]\n                            : [anotherNode, node, ratio];\n                    }\n                });\n            })\n                .reduce((prev, nodes) => prev.concat(nodes), [])\n                .sort((a, b) => (a[2] < b[2] ? -1 : 1))\n                .map((node, index, arr) => {\n                this.edgeNodes[edgeNodeIndex] = [node[0], node[1]];\n                const forPoint = createPoint(node[0], node[1], `e${edgeNodeIndex}`);\n                edgeNodeIndex++;\n                pointsArray.forw.push(forPoint);\n                pointsArray.bakw.push(counterPoint(forPoint));\n                if (index === 0) {\n                    edges.push([startEnd[0], pointsArray.forw.length - 1]);\n                }\n                else {\n                    edges.push([\n                        pointsArray.forw.length - 2,\n                        pointsArray.forw.length - 1\n                    ]);\n                }\n                if (index === arr.length - 1) {\n                    edges.push([pointsArray.forw.length - 1, startEnd[1]]);\n                }\n            });\n        }\n        return {\n            forw: featureCollection(pointsArray.forw),\n            bakw: featureCollection(pointsArray.bakw),\n            edges\n        };\n    }\n    updateTinAsync() {\n        let strict = this.strictMode;\n        const minx = this.xy[0] - 0.05 * this.wh[0];\n        const maxx = this.xy[0] + 1.05 * this.wh[0];\n        const miny = this.xy[1] - 0.05 * this.wh[1];\n        const maxy = this.xy[1] + 1.05 * this.wh[1];\n        const insideCheck = this.bounds\n            ? (xy) => booleanPointInPolygon(xy, this.boundsPolygon)\n            : (xy) => xy[0] >= this.xy[0] &&\n                xy[0] <= this.xy[0] + this.wh[0] &&\n                xy[1] >= this.xy[1] &&\n                xy[1] <= this.xy[1] + this.wh[1];\n        const inside = this.points.reduce((prev, curr) => prev && insideCheck(curr[0]), true);\n        if (!inside) {\n            return new Promise((resolve, reject) => {\n                reject(\"SOME POINTS OUTSIDE\");\n            });\n        }\n        return new Promise(resolve => {\n            if (strict != Tin.MODE_STRICT && strict != Tin.MODE_LOOSE)\n                strict = Tin.MODE_AUTO;\n            let bbox = [];\n            if (this.wh) {\n                bbox = [\n                    [minx, miny],\n                    [maxx, miny],\n                    [minx, maxy],\n                    [maxx, maxy]\n                ];\n            }\n            const pointsSet = this.generatePointsSet();\n            resolve([pointsSet, bbox]);\n        })\n            .then((prevResults) => {\n            const pointsSet = prevResults[0];\n            return Promise.all([\n                new Promise(resolve => {\n                    resolve(constrainedTin(pointsSet.forw, pointsSet.edges, \"target\"));\n                }),\n                new Promise(resolve => {\n                    resolve(constrainedTin(pointsSet.bakw, pointsSet.edges, \"target\"));\n                }),\n                new Promise(resolve => {\n                    resolve(centroid(pointsSet.forw));\n                }),\n                Promise.resolve(prevResults)\n            ]).catch(err => {\n                throw err;\n            });\n        })\n            .then(prevResults => {\n            const tinForCentroid = prevResults[0];\n            const tinBakCentroid = prevResults[1];\n            const forCentroidFt = prevResults[2];\n            const pointsSetBbox = prevResults[3];\n            const pointsSet = pointsSetBbox[0];\n            if (tinForCentroid.features.length == 0 ||\n                tinBakCentroid.features.length == 0)\n                throw \"TOO LINEAR1\";\n            const centroid = {\n                forw: forCentroidFt.geometry.coordinates,\n                bakw: transformArr(forCentroidFt, tinForCentroid)\n            };\n            const forwBuf = createPoint(centroid.forw, centroid.bakw, \"c\");\n            this.centroid = {\n                forw: forwBuf,\n                bakw: counterPoint(forwBuf)\n            };\n            const convexBuf = {};\n            return Promise.all([\n                new Promise(resolve => {\n                    const forConvex = convex(pointsSet.forw).geometry\n                        .coordinates[0];\n                    let vconvex;\n                    try {\n                        vconvex = forConvex.map((forw) => ({\n                            forw,\n                            bakw: transformArr(point(forw), tinForCentroid)\n                        }));\n                    }\n                    catch (e) {\n                        throw \"TOO LINEAR2\";\n                    }\n                    vconvex.map((vertex) => {\n                        convexBuf[`${vertex.forw[0]}:${vertex.forw[1]}`] = vertex;\n                    });\n                    resolve(undefined);\n                }),\n                new Promise(resolve => {\n                    const bakConvex = convex(pointsSet.bakw).geometry\n                        .coordinates[0];\n                    let vconvex;\n                    try {\n                        vconvex = bakConvex.map((bakw) => ({\n                            bakw,\n                            forw: transformArr(point(bakw), tinBakCentroid)\n                        }));\n                    }\n                    catch (e) {\n                        throw \"TOO LINEAR2\";\n                    }\n                    vconvex.map((vertex) => {\n                        convexBuf[`${vertex.forw[0]}:${vertex.forw[1]}`] = vertex;\n                    });\n                    resolve(undefined);\n                })\n            ])\n                .then(() => [centroid, convexBuf, pointsSetBbox])\n                .catch(err => {\n                throw err;\n            });\n        })\n            .then(prevResults => {\n            const centroid = prevResults[0];\n            const convexBuf = prevResults[1];\n            const pointsSetBbox = prevResults[2];\n            const expandConvex = Object.keys(convexBuf).reduce((prev, key, _, _array) => {\n                const forVertex = convexBuf[key].forw;\n                const bakVertex = convexBuf[key].bakw;\n                const vertexDelta = {\n                    forw: [\n                        forVertex[0] - centroid.forw[0],\n                        forVertex[1] - centroid.forw[1]\n                    ]\n                };\n                vertexDelta.bakw = [\n                    bakVertex[0] - centroid.bakw[0],\n                    bakVertex[1] - centroid.bakw[1]\n                ];\n                const xRate = vertexDelta.forw[0] == 0\n                    ? Infinity\n                    : ((vertexDelta.forw[0] < 0 ? minx : maxx) - centroid.forw[0]) /\n                        vertexDelta.forw[0];\n                const yRate = vertexDelta.forw[1] == 0\n                    ? Infinity\n                    : ((vertexDelta.forw[1] < 0 ? miny : maxy) - centroid.forw[1]) /\n                        vertexDelta.forw[1];\n                if (Math.abs(xRate) / Math.abs(yRate) < 1.1) {\n                    const point = {\n                        forw: [\n                            vertexDelta.forw[0] * xRate + centroid.forw[0],\n                            vertexDelta.forw[1] * xRate + centroid.forw[1]\n                        ],\n                        bakw: [\n                            vertexDelta.bakw[0] * xRate + centroid.bakw[0],\n                            vertexDelta.bakw[1] * xRate + centroid.bakw[1]\n                        ]\n                    };\n                    if (vertexDelta.forw[0] < 0)\n                        prev[3].push(point);\n                    else\n                        prev[1].push(point);\n                }\n                if (Math.abs(yRate) / Math.abs(xRate) < 1.1) {\n                    const point = {\n                        forw: [\n                            vertexDelta.forw[0] * yRate + centroid.forw[0],\n                            vertexDelta.forw[1] * yRate + centroid.forw[1]\n                        ],\n                        bakw: [\n                            vertexDelta.bakw[0] * yRate + centroid.bakw[0],\n                            vertexDelta.bakw[1] * yRate + centroid.bakw[1]\n                        ]\n                    };\n                    if (vertexDelta.forw[1] < 0)\n                        prev[0].push(point);\n                    else\n                        prev[2].push(point);\n                }\n                return prev;\n            }, [[], [], [], []]);\n            let orthant = Object.keys(convexBuf)\n                .reduce((prev, key, idx, array) => {\n                const forVertex = convexBuf[key].forw;\n                const bakVertex = convexBuf[key].bakw;\n                const vertexDelta = {\n                    forw: [\n                        forVertex[0] - centroid.forw[0],\n                        forVertex[1] - centroid.forw[1]\n                    ]\n                };\n                vertexDelta.bakw = [\n                    bakVertex[0] - centroid.bakw[0],\n                    centroid.bakw[1] - bakVertex[1]\n                ];\n                if (vertexDelta.forw[0] == 0 || vertexDelta.forw[1] == 0)\n                    return prev;\n                let index = 0;\n                if (vertexDelta.forw[0] > 0)\n                    index += 1;\n                if (vertexDelta.forw[1] > 0)\n                    index += 2;\n                prev[index].push([\n                    vertexDelta.forw,\n                    vertexDelta.bakw\n                ]);\n                if (idx == array.length - 1) {\n                    return prev.length ==\n                        prev.filter(val => val.length > 0).length &&\n                        this.vertexMode == Tin.VERTEX_BIRDEYE\n                        ? prev\n                        : prev.reduce((pre, cur) => [pre[0].concat(cur)], [[]]);\n                }\n                return prev;\n            }, [[], [], [], []])\n                .map(item => item.reduce((prev, curr, index, arr) => {\n                if (!prev)\n                    prev = [Infinity, 0, 0];\n                let distanceSum = Math.sqrt(Math.pow(curr[0][0], 2) + Math.pow(curr[0][1], 2)) /\n                    Math.sqrt(Math.pow(curr[1][0], 2) + Math.pow(curr[1][1], 2));\n                distanceSum = distanceSum < prev[0] ? distanceSum : prev[0];\n                const thetaDelta = Math.atan2(curr[0][0], curr[0][1]) -\n                    Math.atan2(curr[1][0], curr[1][1]);\n                const sumThetaX = prev[1] + Math.cos(thetaDelta);\n                const sumThetaY = prev[2] + Math.sin(thetaDelta);\n                if (index == arr.length - 1) {\n                    return [distanceSum, Math.atan2(sumThetaY, sumThetaX)];\n                }\n                return [distanceSum, sumThetaX, sumThetaY];\n            }, null));\n            if (orthant.length == 1)\n                orthant = [orthant[0], orthant[0], orthant[0], orthant[0]];\n            return [orthant, centroid, expandConvex, pointsSetBbox];\n        })\n            .then(prevResults => {\n            const orthant = prevResults[0];\n            const centroid = prevResults[1];\n            const expandConvex = prevResults[2];\n            const pointsSet = prevResults[3][0];\n            const bbox = prevResults[3][1];\n            let verticesSet = orthant.map((delta, index) => {\n                const forVertex = bbox[index];\n                const forDelta = [\n                    forVertex[0] - centroid.forw[0],\n                    forVertex[1] - centroid.forw[1]\n                ];\n                const forDistance = Math.sqrt(Math.pow(forDelta[0], 2) + Math.pow(forDelta[1], 2));\n                const bakDistance = forDistance / delta[0];\n                const forTheta = Math.atan2(forDelta[0], forDelta[1]);\n                const bakTheta = forTheta - delta[1];\n                const bakVertex = [\n                    centroid.bakw[0] + bakDistance * Math.sin(bakTheta),\n                    centroid.bakw[1] - bakDistance * Math.cos(bakTheta)\n                ];\n                return { forw: forVertex, bakw: bakVertex };\n            });\n            const swap = verticesSet[2];\n            verticesSet[2] = verticesSet[3];\n            verticesSet[3] = swap;\n            const expandRate = [1, 1, 1, 1];\n            for (let i = 0; i < 4; i++) {\n                const j = (i + 1) % 4;\n                const side = lineString([verticesSet[i].bakw, verticesSet[j].bakw]);\n                const expands = expandConvex[i];\n                expands.map((expand) => {\n                    const expandLine = lineString([centroid.bakw, expand.bakw]);\n                    const intersect = lineIntersect(side, expandLine);\n                    if (intersect.features.length > 0 &&\n                        intersect.features[0].geometry) {\n                        const intersect_ = intersect.features[0];\n                        const expandDist = Math.sqrt(Math.pow(expand.bakw[0] - centroid.bakw[0], 2) +\n                            Math.pow(expand.bakw[1] - centroid.bakw[1], 2));\n                        const onSideDist = Math.sqrt(Math.pow(intersect_.geometry.coordinates[0] -\n                            centroid.bakw[0], 2) +\n                            Math.pow(intersect_.geometry.coordinates[1] -\n                                centroid.bakw[1], 2));\n                        const rate = expandDist / onSideDist;\n                        if (rate > expandRate[i])\n                            expandRate[i] = rate;\n                        if (rate > expandRate[j])\n                            expandRate[j] = rate;\n                    }\n                });\n            }\n            verticesSet = verticesSet.map((vertex, index) => {\n                const rate = expandRate[index];\n                const point = [\n                    (vertex.bakw[0] - centroid.bakw[0]) * rate + centroid.bakw[0],\n                    (vertex.bakw[1] - centroid.bakw[1]) * rate + centroid.bakw[1]\n                ];\n                return { forw: vertex.forw, bakw: point };\n            });\n            return [verticesSet, pointsSet];\n        })\n            .then(prevResults => {\n            const verticesSet = prevResults[0];\n            const pointsSet = prevResults[1];\n            const verticesList = { forw: [], bakw: [] };\n            for (let i = 0; i < verticesSet.length; i++) {\n                const forVertex = verticesSet[i].forw;\n                const bakVertex = verticesSet[i].bakw;\n                const forVertexFt = createPoint(forVertex, bakVertex, `b${i}`);\n                const bakVertexFt = counterPoint(forVertexFt);\n                pointsSet.forw.features.push(forVertexFt);\n                pointsSet.bakw.features.push(bakVertexFt);\n                verticesList.forw.push(forVertexFt);\n                verticesList.bakw.push(bakVertexFt);\n            }\n            this.pointsSet = pointsSet;\n            this.tins = {\n                forw: rotateVerticesTriangle(constrainedTin(pointsSet.forw, pointsSet.edges, \"target\"))\n            };\n            let prom;\n            if (strict == Tin.MODE_STRICT || strict == Tin.MODE_AUTO) {\n                prom = this.calcurateStrictTinAsync();\n            }\n            else {\n                prom = Promise.resolve();\n            }\n            return prom\n                .then(() => {\n                if (strict == Tin.MODE_LOOSE ||\n                    (strict == Tin.MODE_AUTO &&\n                        this.strict_status == Tin.STATUS_ERROR)) {\n                    this.tins.bakw = rotateVerticesTriangle(constrainedTin(pointsSet.bakw, pointsSet.edges, \"target\"));\n                    delete this.kinks;\n                    this.strict_status = Tin.STATUS_LOOSE;\n                }\n                this.vertices_params = {\n                    forw: vertexCalc(verticesList.forw, this.centroid.forw),\n                    bakw: vertexCalc(verticesList.bakw, this.centroid.bakw)\n                };\n                this.addIndexedTin();\n                return this.calculatePointsWeightAsync();\n            })\n                .catch(err => {\n                throw err;\n            });\n        })\n            .catch(err => {\n            throw err;\n        });\n    }\n    transform(apoint, backward, ignoreBounds) {\n        if (backward && this.strict_status == Tin.STATUS_ERROR)\n            throw 'Backward transform is not allowed if strict_status == \"strict_error\"';\n        if (this.yaxisMode == Tin.YAXIS_FOLLOW && backward) {\n            apoint = [apoint[0], -1 * apoint[1]];\n        }\n        const tpoint = point(apoint);\n        if (this.bounds && !backward && !ignoreBounds) {\n            if (!booleanPointInPolygon(tpoint, this.boundsPolygon))\n                return false;\n        }\n        const tins = backward ? this.tins.bakw : this.tins.forw;\n        const indexedTins = backward\n            ? this.indexedTins.bakw\n            : this.indexedTins.forw;\n        const verticesParams = backward\n            ? this.vertices_params.bakw\n            : this.vertices_params.forw;\n        const centroid = backward ? this.centroid.bakw : this.centroid.forw;\n        const weightBuffer = backward\n            ? this.pointsWeightBuffer.bakw\n            : this.pointsWeightBuffer.forw;\n        let stateTriangle = undefined, stateSetFunc = undefined;\n        if (this.stateFull) {\n            if (this.stateBackward == backward) {\n                stateTriangle = this.stateTriangle;\n            }\n            else {\n                this.stateBackward = backward;\n                this.stateTriangle = undefined;\n            }\n            stateSetFunc = (tri) => {\n                this.stateTriangle = tri;\n            };\n        }\n        let ret = transformArr(tpoint, tins, indexedTins, verticesParams, centroid, weightBuffer, stateTriangle, stateSetFunc);\n        if (this.bounds && backward && !ignoreBounds) {\n            const rpoint = point(ret);\n            if (!booleanPointInPolygon(rpoint, this.boundsPolygon))\n                return false;\n        }\n        else if (this.yaxisMode == Tin.YAXIS_FOLLOW && !backward) {\n            ret = [ret[0], -1 * ret[1]];\n        }\n        return ret;\n    }\n    calculatePointsWeightAsync() {\n        const calcTargets = [\"forw\"];\n        if (this.strict_status == Tin.STATUS_LOOSE)\n            calcTargets.push(\"bakw\");\n        const weightBuffer = {};\n        return Promise.all(calcTargets.map(target => {\n            weightBuffer[target] = {};\n            const alreadyChecked = {};\n            const tin = this.tins[target];\n            return Promise.all(tin.features.map((tri) => {\n                const vtxes = [\"a\", \"b\", \"c\"];\n                return new Promise(resolve => {\n                    for (let i = 0; i < 3; i++) {\n                        const j = (i + 1) % 3;\n                        const vi = vtxes[i];\n                        const vj = vtxes[j];\n                        const indexi = tri.properties[vi].index;\n                        const indexj = tri.properties[vj].index;\n                        const key = [indexi, indexj].sort().join(\"-\");\n                        if (!alreadyChecked[key]) {\n                            const fromi = tri.geometry.coordinates[0][i];\n                            const fromj = tri.geometry.coordinates[0][j];\n                            const toi = tri.properties[vi].geom;\n                            const toj = tri.properties[vj].geom;\n                            alreadyChecked[key] = 1;\n                            const weight = Math.sqrt(Math.pow(toi[0] - toj[0], 2) +\n                                Math.pow(toi[1] - toj[1], 2)) /\n                                Math.sqrt(Math.pow(fromi[0] - fromj[0], 2) +\n                                    Math.pow(fromi[1] - fromj[1], 2));\n                            if (!weightBuffer[target][indexi])\n                                weightBuffer[target][indexi] = {};\n                            if (!weightBuffer[target][indexj])\n                                weightBuffer[target][indexj] = {};\n                            weightBuffer[target][indexi][key] = weight;\n                            weightBuffer[target][indexj][key] = weight;\n                        }\n                    }\n                    resolve(undefined);\n                });\n            })).catch(err => {\n                throw err;\n            });\n        }))\n            .then(() => {\n            const pointsWeightBuffer = {};\n            calcTargets.map(target => {\n                pointsWeightBuffer[target] = {};\n                if (this.strict_status == Tin.STATUS_STRICT)\n                    pointsWeightBuffer[\"bakw\"] = {};\n                Object.keys(weightBuffer[target]).map(vtx => {\n                    pointsWeightBuffer[target][vtx] = Object.keys(weightBuffer[target][vtx]).reduce((prev, key, idx, arr) => {\n                        prev = prev + weightBuffer[target][vtx][key];\n                        return idx == arr.length - 1 ? prev / arr.length : prev;\n                    }, 0);\n                    if (this.strict_status == Tin.STATUS_STRICT)\n                        pointsWeightBuffer[\"bakw\"][vtx] =\n                            1 / pointsWeightBuffer[target][vtx];\n                });\n                pointsWeightBuffer[target][\"c\"] = [0, 1, 2, 3].reduce((prev, curr) => {\n                    const key = `b${curr}`;\n                    prev = prev + pointsWeightBuffer[target][key];\n                    return curr == 3 ? prev / 4 : prev;\n                }, 0);\n                if (this.strict_status == Tin.STATUS_STRICT)\n                    pointsWeightBuffer[\"bakw\"][\"c\"] =\n                        1 / pointsWeightBuffer[target][\"c\"];\n            });\n            this.pointsWeightBuffer = pointsWeightBuffer;\n        })\n            .catch(err => {\n            throw err;\n        });\n    }\n}\nTin.VERTEX_PLAIN = \"plain\";\nTin.VERTEX_BIRDEYE = \"birdeye\";\nTin.MODE_STRICT = \"strict\";\nTin.MODE_AUTO = \"auto\";\nTin.MODE_LOOSE = \"loose\";\nTin.STATUS_STRICT = \"strict\";\nTin.STATUS_ERROR = \"strict_error\";\nTin.STATUS_LOOSE = \"loose\";\nTin.YAXIS_FOLLOW = \"follow\";\nTin.YAXIS_INVERT = \"invert\";\nfunction rotateVerticesTriangle(tins) {\n    const features = tins.features;\n    for (let i = 0; i < features.length; i++) {\n        const feature = features[i];\n        if (`${feature.properties.a.index}`.substring(0, 1) === \"b\" &&\n            `${feature.properties.b.index}`.substring(0, 1) === \"b\") {\n            features[i] = {\n                geometry: {\n                    type: \"Polygon\",\n                    coordinates: [\n                        [\n                            feature.geometry.coordinates[0][2],\n                            feature.geometry.coordinates[0][0],\n                            feature.geometry.coordinates[0][1],\n                            feature.geometry.coordinates[0][2]\n                        ]\n                    ]\n                },\n                properties: {\n                    a: {\n                        geom: feature.properties.c.geom,\n                        index: feature.properties.c.index\n                    },\n                    b: {\n                        geom: feature.properties.a.geom,\n                        index: feature.properties.a.index\n                    },\n                    c: {\n                        geom: feature.properties.b.geom,\n                        index: feature.properties.b.index\n                    }\n                },\n                type: \"Feature\"\n            };\n        }\n        else if (`${feature.properties.c.index}`.substring(0, 1) === \"b\" &&\n            `${feature.properties.a.index}`.substring(0, 1) === \"b\") {\n            features[i] = {\n                geometry: {\n                    type: \"Polygon\",\n                    coordinates: [\n                        [\n                            feature.geometry.coordinates[0][1],\n                            feature.geometry.coordinates[0][2],\n                            feature.geometry.coordinates[0][0],\n                            feature.geometry.coordinates[0][1]\n                        ]\n                    ]\n                },\n                properties: {\n                    a: {\n                        geom: feature.properties.b.geom,\n                        index: feature.properties.b.index\n                    },\n                    b: {\n                        geom: feature.properties.c.geom,\n                        index: feature.properties.c.index\n                    },\n                    c: {\n                        geom: feature.properties.a.geom,\n                        index: feature.properties.a.index\n                    }\n                },\n                type: \"Feature\"\n            };\n        }\n    }\n    return tins;\n}\nfunction vertexCalc(list, centroid) {\n    const centCoord = centroid.geometry.coordinates;\n    return [0, 1, 2, 3]\n        .map(i => {\n        const j = (i + 1) % 4;\n        const itemi = list[i];\n        const itemj = list[j];\n        const coord = itemi.geometry.coordinates;\n        const radian = Math.atan2(coord[0] - centCoord[0], coord[1] - centCoord[1]);\n        const coordinates = [centroid, itemi, itemj, centroid].map(point => point.geometry.coordinates);\n        const properties = {\n            a: {\n                geom: centroid.properties.target.geom,\n                index: centroid.properties.target.index\n            },\n            b: {\n                geom: itemi.properties.target.geom,\n                index: itemi.properties.target.index\n            },\n            c: {\n                geom: itemj.properties.target.geom,\n                index: itemj.properties.target.index\n            }\n        };\n        const tin = featureCollection([polygon([coordinates], properties)]);\n        return [radian, tin];\n    })\n        .reduce((prev, curr) => {\n        prev[0].push(curr[0]);\n        prev[1].push(curr[1]);\n        return prev;\n    }, [[], []]);\n}\nfunction normalizeRadian(target, noNegative = false) {\n    const rangeFunc = noNegative\n        ? function (val) {\n            return !(val >= 0 && val < Math.PI * 2);\n        }\n        : function (val) {\n            return !(val > -1 * Math.PI && val <= Math.PI);\n        };\n    while (rangeFunc(target)) {\n        target = target + 2 * Math.PI * (target > 0 ? -1 : 1);\n    }\n    return target;\n}\nfunction decideUseVertex(radian, radianList) {\n    let idel = normalizeRadian(radian - radianList[0]);\n    let minTheta = Math.PI * 2;\n    let minIndex;\n    for (let i = 0; i < radianList.length; i++) {\n        const j = (i + 1) % radianList.length;\n        const jdel = normalizeRadian(radian - radianList[j]);\n        const minDel = Math.min(Math.abs(idel), Math.abs(jdel));\n        if (idel * jdel <= 0 && minDel < minTheta) {\n            minTheta = minDel;\n            minIndex = i;\n        }\n        idel = jdel;\n    }\n    return minIndex;\n}\nfunction createPoint(xy, geom, index) {\n    return point(xy, { target: { geom, index } });\n}\nfunction counterPoint(apoint) {\n    return point(apoint.properties.target.geom, {\n        target: {\n            geom: apoint.geometry.coordinates,\n            index: apoint.properties.target.index\n        }\n    });\n}\nfunction transformTin(of, tri, weightBuffer) {\n    return point(transformTinArr(of, tri, weightBuffer));\n}\nfunction transformTinArr(of, tri, weightBuffer) {\n    const a = tri.geometry.coordinates[0][0];\n    const b = tri.geometry.coordinates[0][1];\n    const c = tri.geometry.coordinates[0][2];\n    const o = of.geometry.coordinates;\n    const ad = tri.properties.a.geom;\n    const bd = tri.properties.b.geom;\n    const cd = tri.properties.c.geom;\n    const ab = [b[0] - a[0], b[1] - a[1]];\n    const ac = [c[0] - a[0], c[1] - a[1]];\n    const ao = [o[0] - a[0], o[1] - a[1]];\n    const abd = [bd[0] - ad[0], bd[1] - ad[1]];\n    const acd = [cd[0] - ad[0], cd[1] - ad[1]];\n    let abv = (ac[1] * ao[0] - ac[0] * ao[1]) / (ab[0] * ac[1] - ab[1] * ac[0]);\n    let acv = (ab[0] * ao[1] - ab[1] * ao[0]) / (ab[0] * ac[1] - ab[1] * ac[0]);\n    if (weightBuffer) {\n        const aW = weightBuffer[tri.properties.a.index];\n        const bW = weightBuffer[tri.properties.b.index];\n        const cW = weightBuffer[tri.properties.c.index];\n        let nabv;\n        if (abv < 0 || acv < 0 || 1 - abv - acv < 0) {\n            const normB = abv / (abv + acv);\n            const normC = acv / (abv + acv);\n            nabv = abv / bW / (normB / bW + normC / cW);\n            acv = acv / cW / (normB / bW + normC / cW);\n        }\n        else {\n            nabv = abv / bW / (abv / bW + acv / cW + (1 - abv - acv) / aW);\n            acv = acv / cW / (abv / bW + acv / cW + (1 - abv - acv) / aW);\n        }\n        abv = nabv;\n    }\n    return [\n        abv * abd[0] + acv * acd[0] + ad[0],\n        abv * abd[1] + acv * acd[1] + ad[1]\n    ];\n}\nfunction useVertices(o, verticesParams, centroid, weightBuffer) {\n    return point(useVerticesArr(o, verticesParams, centroid, weightBuffer));\n}\nfunction useVerticesArr(o, verticesParams, centroid, weightBuffer) {\n    const coord = o.geometry.coordinates;\n    const centCoord = centroid.geometry.coordinates;\n    const radian = Math.atan2(coord[0] - centCoord[0], coord[1] - centCoord[1]);\n    const index = decideUseVertex(radian, verticesParams[0]);\n    const tin = verticesParams[1][index];\n    return transformTinArr(o, tin.features[0], weightBuffer);\n}\nfunction hit(point, tins) {\n    for (let i = 0; i < tins.features.length; i++) {\n        const inside = booleanPointInPolygon(point, tins.features[i]);\n        if (inside) {\n            return tins.features[i];\n        }\n    }\n}\nfunction unitCalc(coord, origin, unit, gridNum) {\n    let normCoord = Math.floor((coord - origin) / unit);\n    if (normCoord >= gridNum)\n        normCoord = gridNum - 1;\n    return normCoord;\n}\nfunction transform(apoint, tins, indexedTins, verticesParams, centroid, weightBuffer, stateTriangle, stateSetFunc) {\n    return point(transformArr(apoint, tins, indexedTins, verticesParams, centroid, weightBuffer, stateTriangle, stateSetFunc));\n}\nfunction transformArr(point, tins, indexedTins, verticesParams, centroid, weightBuffer, stateTriangle, stateSetFunc) {\n    let tin;\n    if (stateTriangle) {\n        tin = hit(point, featureCollection([stateTriangle]));\n    }\n    if (!tin) {\n        if (indexedTins) {\n            const coords = point.geometry.coordinates;\n            const gridNum = indexedTins.gridNum;\n            const xOrigin = indexedTins.xOrigin;\n            const yOrigin = indexedTins.yOrigin;\n            const xUnit = indexedTins.xUnit;\n            const yUnit = indexedTins.yUnit;\n            const gridCache = indexedTins.gridCache;\n            const normX = unitCalc(coords[0], xOrigin, xUnit, gridNum);\n            const normY = unitCalc(coords[1], yOrigin, yUnit, gridNum);\n            const tinsKey = gridCache[normX]\n                ? gridCache[normX][normY]\n                    ? gridCache[normX][normY]\n                    : []\n                : [];\n            tins = featureCollection(tinsKey.map((key) => tins.features[key]));\n        }\n        tin = hit(point, tins);\n    }\n    if (stateSetFunc)\n        stateSetFunc(tin);\n    return tin\n        ? transformTinArr(point, tin, weightBuffer)\n        : useVerticesArr(point, verticesParams, centroid, weightBuffer);\n}\nfunction counterTri(tri) {\n    const coordinates = [\"a\", \"b\", \"c\", \"a\"].map(key => tri.properties[key].geom);\n    const geoms = tri.geometry.coordinates[0];\n    const props = tri.properties;\n    const properties = {\n        a: { geom: geoms[0], index: props[\"a\"].index },\n        b: { geom: geoms[1], index: props[\"b\"].index },\n        c: { geom: geoms[2], index: props[\"c\"].index }\n    };\n    return polygon([coordinates], properties);\n}\nfunction buildTri(points) {\n    const coordinates = [0, 1, 2, 0].map(i => points[i][0][0]);\n    const properties = {\n        a: { geom: points[0][0][1], index: points[0][1] },\n        b: { geom: points[1][0][1], index: points[1][1] },\n        c: { geom: points[2][0][1], index: points[2][1] }\n    };\n    return polygon([coordinates], properties);\n}\nfunction indexesToTri(indexes, points, edgeNodes, cent, bboxes, bakw = false, version) {\n    const points_ = indexes.map((index) => {\n        if (!version || version < 2.00703)\n            index = normalizeNodeKey(index);\n        const point_base = isFinite(index)\n            ? points[index]\n            : index === \"c\"\n                ? cent\n                : index === \"b0\"\n                    ? bboxes[0]\n                    : index === \"b1\"\n                        ? bboxes[1]\n                        : index === \"b2\"\n                            ? bboxes[2]\n                            : index === \"b3\"\n                                ? bboxes[3]\n                                : (function () {\n                                    const match = index.match(/e(\\d+)/);\n                                    if (match) {\n                                        const nodeIndex = parseInt(match[1]);\n                                        return edgeNodes[nodeIndex];\n                                    }\n                                    throw \"Bad index value for indexesToTri\";\n                                })();\n        return bakw\n            ? [[point_base[1], point_base[0]], index]\n            : [[point_base[0], point_base[1]], index];\n    });\n    return buildTri(points_);\n}\nfunction normalizeNodeKey(index) {\n    if (typeof index === \"number\")\n        return index;\n    return index.replace(/^(c|e|b)(?:ent|dgeNode|box)(\\d+)?$/, \"$1$2\");\n}\nfunction normalizeEdges(edges, version) {\n    if ((version && version >= 2.00703) || Array.isArray(edges[0]))\n        return edges;\n    return edges.map(edge => [\n        edge.illstNodes,\n        edge.mercNodes,\n        edge.startEnd\n    ]);\n}\nfunction overlapCheckAsync(searchIndex) {\n    const retValue = { forw: {}, bakw: {} };\n    return Promise.all(Object.keys(searchIndex).map(key => new Promise(resolve => {\n        const searchResult = searchIndex[key];\n        if (searchResult.length < 2)\n            return resolve(undefined);\n        [\"forw\", \"bakw\"].map(dir => {\n            const result = intersect(searchResult[0][dir], searchResult[1][dir]);\n            if (!result ||\n                result.geometry.type == \"Point\" ||\n                result.geometry.type == \"LineString\")\n                return resolve(undefined);\n            resolve(undefined);\n        });\n    })))\n        .then(() => {\n        if (Object.keys(retValue.forw).length == 0)\n            delete retValue.forw;\n        if (Object.keys(retValue.bakw).length == 0)\n            delete retValue.bakw;\n        return retValue;\n    })\n        .catch(err => {\n        throw err;\n    });\n}\nfunction insertSearchIndex(searchIndex, tris, tins) {\n    const keys = calcSearchKeys(tris.forw);\n    const bakKeys = calcSearchKeys(tris.bakw);\n    if (JSON.stringify(keys) != JSON.stringify(bakKeys))\n        throw `${JSON.stringify(tris, null, 2)}\\n${JSON.stringify(keys)}\\n${JSON.stringify(bakKeys)}`;\n    for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n        if (!searchIndex[key])\n            searchIndex[key] = [];\n        searchIndex[key].push(tris);\n    }\n    if (tins) {\n        tins.forw.features.push(tris.forw);\n        tins.bakw.features.push(tris.bakw);\n    }\n}\nfunction removeSearchIndex(searchIndex, tris, tins) {\n    const keys = calcSearchKeys(tris.forw);\n    const bakKeys = calcSearchKeys(tris.bakw);\n    if (JSON.stringify(keys) != JSON.stringify(bakKeys))\n        throw `${JSON.stringify(tris, null, 2)}\\n${JSON.stringify(keys)}\\n${JSON.stringify(bakKeys)}`;\n    for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n        const newArray = searchIndex[key].filter((eachTris) => eachTris.forw != tris.forw);\n        if (newArray.length == 0)\n            delete searchIndex[key];\n        else\n            searchIndex[key] = newArray;\n    }\n    if (tins) {\n        let newArray = tins.forw.features.filter((eachTri) => eachTri != tris.forw);\n        tins.forw.features = newArray;\n        newArray = tins.bakw.features.filter((eachTri) => eachTri != tris.bakw);\n        tins.bakw.features = newArray;\n    }\n}\nfunction calcSearchKeys(tri) {\n    const vtx = [\"a\", \"b\", \"c\"].map(key => tri.properties[key].index);\n    return [\n        [0, 1],\n        [0, 2],\n        [1, 2],\n        [0, 1, 2]\n    ]\n        .map(set => set\n        .map(i => vtx[i])\n        .sort()\n        .join(\"-\"))\n        .sort();\n}\nglobal.Tin = Tin;\n//# sourceMappingURL=index.js.map","import { multiPolygon, polygon, } from \"@turf/helpers\";\nimport { getGeom } from \"@turf/invariant\";\nimport polygonClipping from \"polygon-clipping\";\n/**\n * Takes two {@link Polygon|polygon} or {@link MultiPolygon|multi-polygon} geometries and\n * finds their polygonal intersection. If they don't intersect, returns null.\n *\n * @name intersect\n * @param {Feature<Polygon | MultiPolygon>} poly1 the first polygon or multipolygon\n * @param {Feature<Polygon | MultiPolygon>} poly2 the second polygon or multipolygon\n * @param {Object} [options={}] Optional Parameters\n * @param {Object} [options.properties={}] Translate GeoJSON Properties to Feature\n * @returns {Feature|null} returns a feature representing the area they share (either a {@link Polygon} or\n * {@link MultiPolygon}). If they do not share any area, returns `null`.\n * @example\n * var poly1 = turf.polygon([[\n *   [-122.801742, 45.48565],\n *   [-122.801742, 45.60491],\n *   [-122.584762, 45.60491],\n *   [-122.584762, 45.48565],\n *   [-122.801742, 45.48565]\n * ]]);\n *\n * var poly2 = turf.polygon([[\n *   [-122.520217, 45.535693],\n *   [-122.64038, 45.553967],\n *   [-122.720031, 45.526554],\n *   [-122.669906, 45.507309],\n *   [-122.723464, 45.446643],\n *   [-122.532577, 45.408574],\n *   [-122.487258, 45.477466],\n *   [-122.520217, 45.535693]\n * ]]);\n *\n * var intersection = turf.intersect(poly1, poly2);\n *\n * //addToMap\n * var addToMap = [poly1, poly2, intersection];\n */\nexport default function intersect(poly1, poly2, options) {\n    if (options === void 0) { options = {}; }\n    var geom1 = getGeom(poly1);\n    var geom2 = getGeom(poly2);\n    var intersection = polygonClipping.intersection(geom1.coordinates, geom2.coordinates);\n    if (intersection.length === 0)\n        return null;\n    if (intersection.length === 1)\n        return polygon(intersection[0], options.properties);\n    return multiPolygon(intersection, options.properties);\n}\n","import { feature, lineString } from '@turf/helpers';\n\n/**\n * Callback for coordEach\n *\n * @callback coordEachCallback\n * @param {Array<number>} currentCoord The current coordinate being processed.\n * @param {number} coordIndex The current index of the coordinate being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n */\n\n/**\n * Iterate over coordinates in any GeoJSON object, similar to Array.forEach()\n *\n * @name coordEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentCoord, coordIndex, featureIndex, multiFeatureIndex)\n * @param {boolean} [excludeWrapCoord=false] whether or not to include the final coordinate of LinearRings that wraps the ring in its iteration.\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.coordEach(features, function (currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=currentCoord\n *   //=coordIndex\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n * });\n */\nfunction coordEach(geojson, callback, excludeWrapCoord) {\n    // Handles null Geometry -- Skips this GeoJSON\n    if (geojson === null) return;\n    var j, k, l, geometry, stopG, coords,\n        geometryMaybeCollection,\n        wrapShrink = 0,\n        coordIndex = 0,\n        isGeometryCollection,\n        type = geojson.type,\n        isFeatureCollection = type === 'FeatureCollection',\n        isFeature = type === 'Feature',\n        stop = isFeatureCollection ? geojson.features.length : 1;\n\n    // This logic may look a little weird. The reason why it is that way\n    // is because it's trying to be fast. GeoJSON supports multiple kinds\n    // of objects at its root: FeatureCollection, Features, Geometries.\n    // This function has the responsibility of handling all of them, and that\n    // means that some of the `for` loops you see below actually just don't apply\n    // to certain inputs. For instance, if you give this just a\n    // Point geometry, then both loops are short-circuited and all we do\n    // is gradually rename the input until it's called 'geometry'.\n    //\n    // This also aims to allocate as few resources as possible: just a\n    // few numbers and booleans, rather than any temporary arrays as would\n    // be required with the normalization approach.\n    for (var featureIndex = 0; featureIndex < stop; featureIndex++) {\n        geometryMaybeCollection = (isFeatureCollection ? geojson.features[featureIndex].geometry :\n            (isFeature ? geojson.geometry : geojson));\n        isGeometryCollection = (geometryMaybeCollection) ? geometryMaybeCollection.type === 'GeometryCollection' : false;\n        stopG = isGeometryCollection ? geometryMaybeCollection.geometries.length : 1;\n\n        for (var geomIndex = 0; geomIndex < stopG; geomIndex++) {\n            var multiFeatureIndex = 0;\n            var geometryIndex = 0;\n            geometry = isGeometryCollection ?\n                geometryMaybeCollection.geometries[geomIndex] : geometryMaybeCollection;\n\n            // Handles null Geometry -- Skips this geometry\n            if (geometry === null) continue;\n            coords = geometry.coordinates;\n            var geomType = geometry.type;\n\n            wrapShrink = (excludeWrapCoord && (geomType === 'Polygon' || geomType === 'MultiPolygon')) ? 1 : 0;\n\n            switch (geomType) {\n            case null:\n                break;\n            case 'Point':\n                callback(coords, coordIndex, featureIndex, multiFeatureIndex, geometryIndex);\n                coordIndex++;\n                multiFeatureIndex++;\n                break;\n            case 'LineString':\n            case 'MultiPoint':\n                for (j = 0; j < coords.length; j++) {\n                    callback(coords[j], coordIndex, featureIndex, multiFeatureIndex, geometryIndex);\n                    coordIndex++;\n                    if (geomType === 'MultiPoint') multiFeatureIndex++;\n                }\n                if (geomType === 'LineString') multiFeatureIndex++;\n                break;\n            case 'Polygon':\n            case 'MultiLineString':\n                for (j = 0; j < coords.length; j++) {\n                    for (k = 0; k < coords[j].length - wrapShrink; k++) {\n                        callback(coords[j][k], coordIndex, featureIndex, multiFeatureIndex, geometryIndex);\n                        coordIndex++;\n                    }\n                    if (geomType === 'MultiLineString') multiFeatureIndex++;\n                    if (geomType === 'Polygon') geometryIndex++;\n                }\n                if (geomType === 'Polygon') multiFeatureIndex++;\n                break;\n            case 'MultiPolygon':\n                for (j = 0; j < coords.length; j++) {\n                    if (geomType === 'MultiPolygon') geometryIndex = 0;\n                    for (k = 0; k < coords[j].length; k++) {\n                        for (l = 0; l < coords[j][k].length - wrapShrink; l++) {\n                            callback(coords[j][k][l], coordIndex, featureIndex, multiFeatureIndex, geometryIndex);\n                            coordIndex++;\n                        }\n                        geometryIndex++;\n                    }\n                    multiFeatureIndex++;\n                }\n                break;\n            case 'GeometryCollection':\n                for (j = 0; j < geometry.geometries.length; j++)\n                    coordEach(geometry.geometries[j], callback, excludeWrapCoord);\n                break;\n            default:\n                throw new Error('Unknown Geometry Type');\n            }\n        }\n    }\n}\n\n/**\n * Callback for coordReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback coordReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Array<number>} currentCoord The current coordinate being processed.\n * @param {number} coordIndex The current index of the coordinate being processed.\n * Starts at index 0, if an initialValue is provided, and at index 1 otherwise.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n */\n\n/**\n * Reduce coordinates in any GeoJSON object, similar to Array.reduce()\n *\n * @name coordReduce\n * @param {FeatureCollection|Geometry|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentCoord, coordIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @param {boolean} [excludeWrapCoord=false] whether or not to include the final coordinate of LinearRings that wraps the ring in its iteration.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.coordReduce(features, function (previousValue, currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=previousValue\n *   //=currentCoord\n *   //=coordIndex\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   return currentCoord;\n * });\n */\nfunction coordReduce(geojson, callback, initialValue, excludeWrapCoord) {\n    var previousValue = initialValue;\n    coordEach(geojson, function (currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n        if (coordIndex === 0 && initialValue === undefined) previousValue = currentCoord;\n        else previousValue = callback(previousValue, currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex);\n    }, excludeWrapCoord);\n    return previousValue;\n}\n\n/**\n * Callback for propEach\n *\n * @callback propEachCallback\n * @param {Object} currentProperties The current Properties being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Iterate over properties in any GeoJSON object, similar to Array.forEach()\n *\n * @name propEach\n * @param {FeatureCollection|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentProperties, featureIndex)\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.propEach(features, function (currentProperties, featureIndex) {\n *   //=currentProperties\n *   //=featureIndex\n * });\n */\nfunction propEach(geojson, callback) {\n    var i;\n    switch (geojson.type) {\n    case 'FeatureCollection':\n        for (i = 0; i < geojson.features.length; i++) {\n            callback(geojson.features[i].properties, i);\n        }\n        break;\n    case 'Feature':\n        callback(geojson.properties, 0);\n        break;\n    }\n}\n\n\n/**\n * Callback for propReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback propReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {*} currentProperties The current Properties being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Reduce properties in any GeoJSON object into a single value,\n * similar to how Array.reduce works. However, in this case we lazily run\n * the reduction, so an array of all properties is unnecessary.\n *\n * @name propReduce\n * @param {FeatureCollection|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentProperties, featureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.propReduce(features, function (previousValue, currentProperties, featureIndex) {\n *   //=previousValue\n *   //=currentProperties\n *   //=featureIndex\n *   return currentProperties\n * });\n */\nfunction propReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    propEach(geojson, function (currentProperties, featureIndex) {\n        if (featureIndex === 0 && initialValue === undefined) previousValue = currentProperties;\n        else previousValue = callback(previousValue, currentProperties, featureIndex);\n    });\n    return previousValue;\n}\n\n/**\n * Callback for featureEach\n *\n * @callback featureEachCallback\n * @param {Feature<any>} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Iterate over features in any GeoJSON object, similar to\n * Array.forEach.\n *\n * @name featureEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentFeature, featureIndex)\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {foo: 'bar'}),\n *   turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.featureEach(features, function (currentFeature, featureIndex) {\n *   //=currentFeature\n *   //=featureIndex\n * });\n */\nfunction featureEach(geojson, callback) {\n    if (geojson.type === 'Feature') {\n        callback(geojson, 0);\n    } else if (geojson.type === 'FeatureCollection') {\n        for (var i = 0; i < geojson.features.length; i++) {\n            callback(geojson.features[i], i);\n        }\n    }\n}\n\n/**\n * Callback for featureReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback featureReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Reduce features in any GeoJSON object, similar to Array.reduce().\n *\n * @name featureReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentFeature, featureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.featureReduce(features, function (previousValue, currentFeature, featureIndex) {\n *   //=previousValue\n *   //=currentFeature\n *   //=featureIndex\n *   return currentFeature\n * });\n */\nfunction featureReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    featureEach(geojson, function (currentFeature, featureIndex) {\n        if (featureIndex === 0 && initialValue === undefined) previousValue = currentFeature;\n        else previousValue = callback(previousValue, currentFeature, featureIndex);\n    });\n    return previousValue;\n}\n\n/**\n * Get all coordinates from any GeoJSON object.\n *\n * @name coordAll\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @returns {Array<Array<number>>} coordinate position array\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {foo: 'bar'}),\n *   turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * var coords = turf.coordAll(features);\n * //= [[26, 37], [36, 53]]\n */\nfunction coordAll(geojson) {\n    var coords = [];\n    coordEach(geojson, function (coord) {\n        coords.push(coord);\n    });\n    return coords;\n}\n\n/**\n * Callback for geomEach\n *\n * @callback geomEachCallback\n * @param {Geometry} currentGeometry The current Geometry being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {Object} featureProperties The current Feature Properties being processed.\n * @param {Array<number>} featureBBox The current Feature BBox being processed.\n * @param {number|string} featureId The current Feature Id being processed.\n */\n\n/**\n * Iterate over each geometry in any GeoJSON object, similar to Array.forEach()\n *\n * @name geomEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentGeometry, featureIndex, featureProperties, featureBBox, featureId)\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.geomEach(features, function (currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n *   //=currentGeometry\n *   //=featureIndex\n *   //=featureProperties\n *   //=featureBBox\n *   //=featureId\n * });\n */\nfunction geomEach(geojson, callback) {\n    var i, j, g, geometry, stopG,\n        geometryMaybeCollection,\n        isGeometryCollection,\n        featureProperties,\n        featureBBox,\n        featureId,\n        featureIndex = 0,\n        isFeatureCollection = geojson.type === 'FeatureCollection',\n        isFeature = geojson.type === 'Feature',\n        stop = isFeatureCollection ? geojson.features.length : 1;\n\n    // This logic may look a little weird. The reason why it is that way\n    // is because it's trying to be fast. GeoJSON supports multiple kinds\n    // of objects at its root: FeatureCollection, Features, Geometries.\n    // This function has the responsibility of handling all of them, and that\n    // means that some of the `for` loops you see below actually just don't apply\n    // to certain inputs. For instance, if you give this just a\n    // Point geometry, then both loops are short-circuited and all we do\n    // is gradually rename the input until it's called 'geometry'.\n    //\n    // This also aims to allocate as few resources as possible: just a\n    // few numbers and booleans, rather than any temporary arrays as would\n    // be required with the normalization approach.\n    for (i = 0; i < stop; i++) {\n\n        geometryMaybeCollection = (isFeatureCollection ? geojson.features[i].geometry :\n            (isFeature ? geojson.geometry : geojson));\n        featureProperties = (isFeatureCollection ? geojson.features[i].properties :\n            (isFeature ? geojson.properties : {}));\n        featureBBox = (isFeatureCollection ? geojson.features[i].bbox :\n            (isFeature ? geojson.bbox : undefined));\n        featureId = (isFeatureCollection ? geojson.features[i].id :\n            (isFeature ? geojson.id : undefined));\n        isGeometryCollection = (geometryMaybeCollection) ? geometryMaybeCollection.type === 'GeometryCollection' : false;\n        stopG = isGeometryCollection ? geometryMaybeCollection.geometries.length : 1;\n\n        for (g = 0; g < stopG; g++) {\n            geometry = isGeometryCollection ?\n                geometryMaybeCollection.geometries[g] : geometryMaybeCollection;\n\n            // Handle null Geometry\n            if (geometry === null) {\n                callback(null, featureIndex, featureProperties, featureBBox, featureId);\n                continue;\n            }\n            switch (geometry.type) {\n            case 'Point':\n            case 'LineString':\n            case 'MultiPoint':\n            case 'Polygon':\n            case 'MultiLineString':\n            case 'MultiPolygon': {\n                callback(geometry, featureIndex, featureProperties, featureBBox, featureId);\n                break;\n            }\n            case 'GeometryCollection': {\n                for (j = 0; j < geometry.geometries.length; j++) {\n                    callback(geometry.geometries[j], featureIndex, featureProperties, featureBBox, featureId);\n                }\n                break;\n            }\n            default:\n                throw new Error('Unknown Geometry Type');\n            }\n        }\n        // Only increase `featureIndex` per each feature\n        featureIndex++;\n    }\n}\n\n/**\n * Callback for geomReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback geomReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Geometry} currentGeometry The current Geometry being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {Object} featureProperties The current Feature Properties being processed.\n * @param {Array<number>} featureBBox The current Feature BBox being processed.\n * @param {number|string} featureId The current Feature Id being processed.\n */\n\n/**\n * Reduce geometry in any GeoJSON object, similar to Array.reduce().\n *\n * @name geomReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.geomReduce(features, function (previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n *   //=previousValue\n *   //=currentGeometry\n *   //=featureIndex\n *   //=featureProperties\n *   //=featureBBox\n *   //=featureId\n *   return currentGeometry\n * });\n */\nfunction geomReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    geomEach(geojson, function (currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n        if (featureIndex === 0 && initialValue === undefined) previousValue = currentGeometry;\n        else previousValue = callback(previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId);\n    });\n    return previousValue;\n}\n\n/**\n * Callback for flattenEach\n *\n * @callback flattenEachCallback\n * @param {Feature} currentFeature The current flattened feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n */\n\n/**\n * Iterate over flattened features in any GeoJSON object, similar to\n * Array.forEach.\n *\n * @name flattenEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentFeature, featureIndex, multiFeatureIndex)\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.multiPoint([[40, 30], [36, 53]], {hello: 'world'})\n * ]);\n *\n * turf.flattenEach(features, function (currentFeature, featureIndex, multiFeatureIndex) {\n *   //=currentFeature\n *   //=featureIndex\n *   //=multiFeatureIndex\n * });\n */\nfunction flattenEach(geojson, callback) {\n    geomEach(geojson, function (geometry, featureIndex, properties, bbox, id) {\n        // Callback for single geometry\n        var type = (geometry === null) ? null : geometry.type;\n        switch (type) {\n        case null:\n        case 'Point':\n        case 'LineString':\n        case 'Polygon':\n            callback(feature(geometry, properties, {bbox: bbox, id: id}), featureIndex, 0);\n            return;\n        }\n\n        var geomType;\n\n        // Callback for multi-geometry\n        switch (type) {\n        case 'MultiPoint':\n            geomType = 'Point';\n            break;\n        case 'MultiLineString':\n            geomType = 'LineString';\n            break;\n        case 'MultiPolygon':\n            geomType = 'Polygon';\n            break;\n        }\n\n        geometry.coordinates.forEach(function (coordinate, multiFeatureIndex) {\n            var geom = {\n                type: geomType,\n                coordinates: coordinate\n            };\n            callback(feature(geom, properties), featureIndex, multiFeatureIndex);\n        });\n\n    });\n}\n\n/**\n * Callback for flattenReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback flattenReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n */\n\n/**\n * Reduce flattened features in any GeoJSON object, similar to Array.reduce().\n *\n * @name flattenReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentFeature, featureIndex, multiFeatureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.multiPoint([[40, 30], [36, 53]], {hello: 'world'})\n * ]);\n *\n * turf.flattenReduce(features, function (previousValue, currentFeature, featureIndex, multiFeatureIndex) {\n *   //=previousValue\n *   //=currentFeature\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   return currentFeature\n * });\n */\nfunction flattenReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    flattenEach(geojson, function (currentFeature, featureIndex, multiFeatureIndex) {\n        if (featureIndex === 0 && multiFeatureIndex === 0 && initialValue === undefined) previousValue = currentFeature;\n        else previousValue = callback(previousValue, currentFeature, featureIndex, multiFeatureIndex);\n    });\n    return previousValue;\n}\n\n/**\n * Callback for segmentEach\n *\n * @callback segmentEachCallback\n * @param {Feature<LineString>} currentSegment The current Segment being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n * @param {number} segmentIndex The current index of the Segment being processed.\n * @returns {void}\n */\n\n/**\n * Iterate over 2-vertex line segment in any GeoJSON object, similar to Array.forEach()\n * (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON\n * @param {Function} callback a method that takes (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex)\n * @returns {void}\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n *\n * // Iterate over GeoJSON by 2-vertex segments\n * turf.segmentEach(polygon, function (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n *   //=currentSegment\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   //=segmentIndex\n * });\n *\n * // Calculate the total number of segments\n * var total = 0;\n * turf.segmentEach(polygon, function () {\n *     total++;\n * });\n */\nfunction segmentEach(geojson, callback) {\n    flattenEach(geojson, function (feature$$1, featureIndex, multiFeatureIndex) {\n        var segmentIndex = 0;\n\n        // Exclude null Geometries\n        if (!feature$$1.geometry) return;\n        // (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n        var type = feature$$1.geometry.type;\n        if (type === 'Point' || type === 'MultiPoint') return;\n\n        // Generate 2-vertex line segments\n        coordReduce(feature$$1, function (previousCoords, currentCoord, coordIndex, featureIndexCoord, mutliPartIndexCoord, geometryIndex) {\n            var currentSegment = lineString([previousCoords, currentCoord], feature$$1.properties);\n            callback(currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex);\n            segmentIndex++;\n            return currentCoord;\n        });\n    });\n}\n\n/**\n * Callback for segmentReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback segmentReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature<LineString>} currentSegment The current Segment being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n * @param {number} segmentIndex The current index of the Segment being processed.\n */\n\n/**\n * Reduce 2-vertex line segment in any GeoJSON object, similar to Array.reduce()\n * (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON\n * @param {Function} callback a method that takes (previousValue, currentSegment, currentIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {void}\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n *\n * // Iterate over GeoJSON by 2-vertex segments\n * turf.segmentReduce(polygon, function (previousSegment, currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n *   //= previousSegment\n *   //= currentSegment\n *   //= featureIndex\n *   //= multiFeatureIndex\n *   //= geometryIndex\n *   //= segmentInex\n *   return currentSegment\n * });\n *\n * // Calculate the total number of segments\n * var initialValue = 0\n * var total = turf.segmentReduce(polygon, function (previousValue) {\n *     previousValue++;\n *     return previousValue;\n * }, initialValue);\n */\nfunction segmentReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    var started = false;\n    segmentEach(geojson, function (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n        if (started === false && initialValue === undefined) previousValue = currentSegment;\n        else previousValue = callback(previousValue, currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex);\n        started = true;\n    });\n    return previousValue;\n}\n\n/**\n * Callback for lineEach\n *\n * @callback lineEachCallback\n * @param {Feature<LineString>} currentLine The current LineString|LinearRing being processed\n * @param {number} featureIndex The current index of the Feature being processed\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed\n * @param {number} geometryIndex The current index of the Geometry being processed\n */\n\n/**\n * Iterate over line or ring coordinates in LineString, Polygon, MultiLineString, MultiPolygon Features or Geometries,\n * similar to Array.forEach.\n *\n * @name lineEach\n * @param {Geometry|Feature<LineString|Polygon|MultiLineString|MultiPolygon>} geojson object\n * @param {Function} callback a method that takes (currentLine, featureIndex, multiFeatureIndex, geometryIndex)\n * @example\n * var multiLine = turf.multiLineString([\n *   [[26, 37], [35, 45]],\n *   [[36, 53], [38, 50], [41, 55]]\n * ]);\n *\n * turf.lineEach(multiLine, function (currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=currentLine\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n * });\n */\nfunction lineEach(geojson, callback) {\n    // validation\n    if (!geojson) throw new Error('geojson is required');\n\n    flattenEach(geojson, function (feature$$1, featureIndex, multiFeatureIndex) {\n        if (feature$$1.geometry === null) return;\n        var type = feature$$1.geometry.type;\n        var coords = feature$$1.geometry.coordinates;\n        switch (type) {\n        case 'LineString':\n            callback(feature$$1, featureIndex, multiFeatureIndex, 0, 0);\n            break;\n        case 'Polygon':\n            for (var geometryIndex = 0; geometryIndex < coords.length; geometryIndex++) {\n                callback(lineString(coords[geometryIndex], feature$$1.properties), featureIndex, multiFeatureIndex, geometryIndex);\n            }\n            break;\n        }\n    });\n}\n\n/**\n * Callback for lineReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback lineReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature<LineString>} currentLine The current LineString|LinearRing being processed.\n * @param {number} featureIndex The current index of the Feature being processed\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed\n * @param {number} geometryIndex The current index of the Geometry being processed\n */\n\n/**\n * Reduce features in any GeoJSON object, similar to Array.reduce().\n *\n * @name lineReduce\n * @param {Geometry|Feature<LineString|Polygon|MultiLineString|MultiPolygon>} geojson object\n * @param {Function} callback a method that takes (previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var multiPoly = turf.multiPolygon([\n *   turf.polygon([[[12,48],[2,41],[24,38],[12,48]], [[9,44],[13,41],[13,45],[9,44]]]),\n *   turf.polygon([[[5, 5], [0, 0], [2, 2], [4, 4], [5, 5]]])\n * ]);\n *\n * turf.lineReduce(multiPoly, function (previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=previousValue\n *   //=currentLine\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   return currentLine\n * });\n */\nfunction lineReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    lineEach(geojson, function (currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n        if (featureIndex === 0 && initialValue === undefined) previousValue = currentLine;\n        else previousValue = callback(previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex);\n    });\n    return previousValue;\n}\n\nexport { coordEach, coordReduce, propEach, propReduce, featureEach, featureReduce, coordAll, geomEach, geomReduce, flattenEach, flattenReduce, segmentEach, segmentReduce, lineEach, lineReduce };\n","import { coordEach } from '@turf/meta';\n\n/**\n * Takes a set of features, calculates the bbox of all input features, and returns a bounding box.\n *\n * @name bbox\n * @param {GeoJSON} geojson any GeoJSON object\n * @returns {BBox} bbox extent in [minX, minY, maxX, maxY] order\n * @example\n * var line = turf.lineString([[-74, 40], [-78, 42], [-82, 35]]);\n * var bbox = turf.bbox(line);\n * var bboxPolygon = turf.bboxPolygon(bbox);\n *\n * //addToMap\n * var addToMap = [line, bboxPolygon]\n */\nfunction bbox(geojson) {\n    var BBox = [Infinity, Infinity, -Infinity, -Infinity];\n    coordEach(geojson, function (coord) {\n        if (BBox[0] > coord[0]) BBox[0] = coord[0];\n        if (BBox[1] > coord[1]) BBox[1] = coord[1];\n        if (BBox[2] < coord[0]) BBox[2] = coord[0];\n        if (BBox[3] < coord[1]) BBox[3] = coord[1];\n    });\n    return BBox;\n}\n\nexport default bbox;\n","/**\n * Earth Radius used with the Harvesine formula and approximates using a spherical (non-ellipsoid) Earth.\n */\nvar earthRadius = 6371008.8;\n\n/**\n * Unit of measurement factors using a spherical (non-ellipsoid) earth radius.\n */\nvar factors = {\n    meters: earthRadius,\n    metres: earthRadius,\n    millimeters: earthRadius * 1000,\n    millimetres: earthRadius * 1000,\n    centimeters: earthRadius * 100,\n    centimetres: earthRadius * 100,\n    kilometers: earthRadius / 1000,\n    kilometres: earthRadius / 1000,\n    miles: earthRadius / 1609.344,\n    nauticalmiles: earthRadius / 1852,\n    inches: earthRadius * 39.370,\n    yards: earthRadius / 1.0936,\n    feet: earthRadius * 3.28084,\n    radians: 1,\n    degrees: earthRadius / 111325,\n};\n\n/**\n * Units of measurement factors based on 1 meter.\n */\nvar unitsFactors = {\n    meters: 1,\n    metres: 1,\n    millimeters: 1000,\n    millimetres: 1000,\n    centimeters: 100,\n    centimetres: 100,\n    kilometers: 1 / 1000,\n    kilometres: 1 / 1000,\n    miles: 1 / 1609.344,\n    nauticalmiles: 1 / 1852,\n    inches: 39.370,\n    yards: 1 / 1.0936,\n    feet: 3.28084,\n    radians: 1 / earthRadius,\n    degrees: 1 / 111325,\n};\n\n/**\n * Area of measurement factors based on 1 square meter.\n */\nvar areaFactors = {\n    meters: 1,\n    metres: 1,\n    millimeters: 1000000,\n    millimetres: 1000000,\n    centimeters: 10000,\n    centimetres: 10000,\n    kilometers: 0.000001,\n    kilometres: 0.000001,\n    acres: 0.000247105,\n    miles: 3.86e-7,\n    yards: 1.195990046,\n    feet: 10.763910417,\n    inches: 1550.003100006\n};\n\n/**\n * Wraps a GeoJSON {@link Geometry} in a GeoJSON {@link Feature}.\n *\n * @name feature\n * @param {Geometry} geometry input geometry\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature} a GeoJSON Feature\n * @example\n * var geometry = {\n *   \"type\": \"Point\",\n *   \"coordinates\": [110, 50]\n * };\n *\n * var feature = turf.feature(geometry);\n *\n * //=feature\n */\nfunction feature(geometry, properties, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n    var id = options.id;\n\n    // Validation\n    if (geometry === undefined) throw new Error('geometry is required');\n    if (properties && properties.constructor !== Object) throw new Error('properties must be an Object');\n    if (bbox) validateBBox(bbox);\n    if (id) validateId(id);\n\n    // Main\n    var feat = {type: 'Feature'};\n    if (id) feat.id = id;\n    if (bbox) feat.bbox = bbox;\n    feat.properties = properties || {};\n    feat.geometry = geometry;\n    return feat;\n}\n\n/**\n * Creates a GeoJSON {@link Geometry} from a Geometry string type & coordinates.\n * For GeometryCollection type use `helpers.geometryCollection`\n *\n * @name geometry\n * @param {string} type Geometry Type\n * @param {Array<number>} coordinates Coordinates\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Geometry\n * @returns {Geometry} a GeoJSON Geometry\n * @example\n * var type = 'Point';\n * var coordinates = [110, 50];\n *\n * var geometry = turf.geometry(type, coordinates);\n *\n * //=geometry\n */\nfunction geometry(type, coordinates, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n\n    // Validation\n    if (!type) throw new Error('type is required');\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n    if (bbox) validateBBox(bbox);\n\n    // Main\n    var geom;\n    switch (type) {\n    case 'Point': geom = point(coordinates).geometry; break;\n    case 'LineString': geom = lineString(coordinates).geometry; break;\n    case 'Polygon': geom = polygon(coordinates).geometry; break;\n    case 'MultiPoint': geom = multiPoint(coordinates).geometry; break;\n    case 'MultiLineString': geom = multiLineString(coordinates).geometry; break;\n    case 'MultiPolygon': geom = multiPolygon(coordinates).geometry; break;\n    default: throw new Error(type + ' is invalid');\n    }\n    if (bbox) geom.bbox = bbox;\n    return geom;\n}\n\n/**\n * Creates a {@link Point} {@link Feature} from a Position.\n *\n * @name point\n * @param {Array<number>} coordinates longitude, latitude position (each in decimal degrees)\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Point>} a Point feature\n * @example\n * var point = turf.point([-75.343, 39.984]);\n *\n * //=point\n */\nfunction point(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n    if (coordinates.length < 2) throw new Error('coordinates must be at least 2 numbers long');\n    if (!isNumber(coordinates[0]) || !isNumber(coordinates[1])) throw new Error('coordinates must contain numbers');\n\n    return feature({\n        type: 'Point',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Point} {@link FeatureCollection} from an Array of Point coordinates.\n *\n * @name points\n * @param {Array<Array<number>>} coordinates an array of Points\n * @param {Object} [properties={}] Translate these properties to each Feature\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Point>} Point Feature\n * @example\n * var points = turf.points([\n *   [-75, 39],\n *   [-80, 45],\n *   [-78, 50]\n * ]);\n *\n * //=points\n */\nfunction points(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return point(coords, properties);\n    }), options);\n}\n\n/**\n * Creates a {@link Polygon} {@link Feature} from an Array of LinearRings.\n *\n * @name polygon\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Polygon>} Polygon Feature\n * @example\n * var polygon = turf.polygon([[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]], { name: 'poly1' });\n *\n * //=polygon\n */\nfunction polygon(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    for (var i = 0; i < coordinates.length; i++) {\n        var ring = coordinates[i];\n        if (ring.length < 4) {\n            throw new Error('Each LinearRing of a Polygon must have 4 or more Positions.');\n        }\n        for (var j = 0; j < ring[ring.length - 1].length; j++) {\n            // Check if first point of Polygon contains two numbers\n            if (i === 0 && j === 0 && !isNumber(ring[0][0]) || !isNumber(ring[0][1])) throw new Error('coordinates must contain numbers');\n            if (ring[ring.length - 1][j] !== ring[0][j]) {\n                throw new Error('First and last Position are not equivalent.');\n            }\n        }\n    }\n\n    return feature({\n        type: 'Polygon',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Polygon} {@link FeatureCollection} from an Array of Polygon coordinates.\n *\n * @name polygons\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygon coordinates\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Polygon>} Polygon FeatureCollection\n * @example\n * var polygons = turf.polygons([\n *   [[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]],\n *   [[[-15, 42], [-14, 46], [-12, 41], [-17, 44], [-15, 42]]],\n * ]);\n *\n * //=polygons\n */\nfunction polygons(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return polygon(coords, properties);\n    }), options);\n}\n\n/**\n * Creates a {@link LineString} {@link Feature} from an Array of Positions.\n *\n * @name lineString\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<LineString>} LineString Feature\n * @example\n * var linestring1 = turf.lineString([[-24, 63], [-23, 60], [-25, 65], [-20, 69]], {name: 'line 1'});\n * var linestring2 = turf.lineString([[-14, 43], [-13, 40], [-15, 45], [-10, 49]], {name: 'line 2'});\n *\n * //=linestring1\n * //=linestring2\n */\nfunction lineString(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (coordinates.length < 2) throw new Error('coordinates must be an array of two or more positions');\n    // Check if first point of LineString contains two numbers\n    if (!isNumber(coordinates[0][1]) || !isNumber(coordinates[0][1])) throw new Error('coordinates must contain numbers');\n\n    return feature({\n        type: 'LineString',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link LineString} {@link FeatureCollection} from an Array of LineString coordinates.\n *\n * @name lineStrings\n * @param {Array<Array<number>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<LineString>} LineString FeatureCollection\n * @example\n * var linestrings = turf.lineStrings([\n *   [[-24, 63], [-23, 60], [-25, 65], [-20, 69]],\n *   [[-14, 43], [-13, 40], [-15, 45], [-10, 49]]\n * ]);\n *\n * //=linestrings\n */\nfunction lineStrings(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return lineString(coords, properties);\n    }), options);\n}\n\n/**\n * Takes one or more {@link Feature|Features} and creates a {@link FeatureCollection}.\n *\n * @name featureCollection\n * @param {Feature[]} features input features\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {FeatureCollection} FeatureCollection of Features\n * @example\n * var locationA = turf.point([-75.343, 39.984], {name: 'Location A'});\n * var locationB = turf.point([-75.833, 39.284], {name: 'Location B'});\n * var locationC = turf.point([-75.534, 39.123], {name: 'Location C'});\n *\n * var collection = turf.featureCollection([\n *   locationA,\n *   locationB,\n *   locationC\n * ]);\n *\n * //=collection\n */\nfunction featureCollection(features, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n    var id = options.id;\n\n    // Validation\n    if (!features) throw new Error('No features passed');\n    if (!Array.isArray(features)) throw new Error('features must be an Array');\n    if (bbox) validateBBox(bbox);\n    if (id) validateId(id);\n\n    // Main\n    var fc = {type: 'FeatureCollection'};\n    if (id) fc.id = id;\n    if (bbox) fc.bbox = bbox;\n    fc.features = features;\n    return fc;\n}\n\n/**\n * Creates a {@link Feature<MultiLineString>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiLineString\n * @param {Array<Array<Array<number>>>} coordinates an array of LineStrings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiLineString>} a MultiLineString feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiLine = turf.multiLineString([[[0,0],[10,10]]]);\n *\n * //=multiLine\n */\nfunction multiLineString(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiLineString',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<MultiPoint>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPoint\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPoint>} a MultiPoint feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPt = turf.multiPoint([[0,0],[10,10]]);\n *\n * //=multiPt\n */\nfunction multiPoint(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiPoint',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<MultiPolygon>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPolygon\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygons\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPolygon>} a multipolygon feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPoly = turf.multiPolygon([[[[0,0],[0,10],[10,10],[10,0],[0,0]]]]);\n *\n * //=multiPoly\n *\n */\nfunction multiPolygon(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiPolygon',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<GeometryCollection>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name geometryCollection\n * @param {Array<Geometry>} geometries an array of GeoJSON Geometries\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<GeometryCollection>} a GeoJSON GeometryCollection Feature\n * @example\n * var pt = {\n *     \"type\": \"Point\",\n *       \"coordinates\": [100, 0]\n *     };\n * var line = {\n *     \"type\": \"LineString\",\n *     \"coordinates\": [ [101, 0], [102, 1] ]\n *   };\n * var collection = turf.geometryCollection([pt, line]);\n *\n * //=collection\n */\nfunction geometryCollection(geometries, properties, options) {\n    if (!geometries) throw new Error('geometries is required');\n    if (!Array.isArray(geometries)) throw new Error('geometries must be an Array');\n\n    return feature({\n        type: 'GeometryCollection',\n        geometries: geometries\n    }, properties, options);\n}\n\n/**\n * Round number to precision\n *\n * @param {number} num Number\n * @param {number} [precision=0] Precision\n * @returns {number} rounded number\n * @example\n * turf.round(120.4321)\n * //=120\n *\n * turf.round(120.4321, 2)\n * //=120.43\n */\nfunction round(num, precision) {\n    if (num === undefined || num === null || isNaN(num)) throw new Error('num is required');\n    if (precision && !(precision >= 0)) throw new Error('precision must be a positive number');\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.round(num * multiplier) / multiplier;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from radians to a more friendly unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name radiansToLength\n * @param {number} radians in radians across the sphere\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} distance\n */\nfunction radiansToLength(radians, units) {\n    if (radians === undefined || radians === null) throw new Error('radians is required');\n\n    if (units && typeof units !== 'string') throw new Error('units must be a string');\n    var factor = factors[units || 'kilometers'];\n    if (!factor) throw new Error(units + ' units is invalid');\n    return radians * factor;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into radians\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name lengthToRadians\n * @param {number} distance in real units\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} radians\n */\nfunction lengthToRadians(distance, units) {\n    if (distance === undefined || distance === null) throw new Error('distance is required');\n\n    if (units && typeof units !== 'string') throw new Error('units must be a string');\n    var factor = factors[units || 'kilometers'];\n    if (!factor) throw new Error(units + ' units is invalid');\n    return distance / factor;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into degrees\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, centimeters, kilometres, feet\n *\n * @name lengthToDegrees\n * @param {number} distance in real units\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} degrees\n */\nfunction lengthToDegrees(distance, units) {\n    return radiansToDegrees(lengthToRadians(distance, units));\n}\n\n/**\n * Converts any bearing angle from the north line direction (positive clockwise)\n * and returns an angle between 0-360 degrees (positive clockwise), 0 being the north line\n *\n * @name bearingToAzimuth\n * @param {number} bearing angle, between -180 and +180 degrees\n * @returns {number} angle between 0 and 360 degrees\n */\nfunction bearingToAzimuth(bearing) {\n    if (bearing === null || bearing === undefined) throw new Error('bearing is required');\n\n    var angle = bearing % 360;\n    if (angle < 0) angle += 360;\n    return angle;\n}\n\n/**\n * Converts an angle in radians to degrees\n *\n * @name radiansToDegrees\n * @param {number} radians angle in radians\n * @returns {number} degrees between 0 and 360 degrees\n */\nfunction radiansToDegrees(radians) {\n    if (radians === null || radians === undefined) throw new Error('radians is required');\n\n    var degrees = radians % (2 * Math.PI);\n    return degrees * 180 / Math.PI;\n}\n\n/**\n * Converts an angle in degrees to radians\n *\n * @name degreesToRadians\n * @param {number} degrees angle between 0 and 360 degrees\n * @returns {number} angle in radians\n */\nfunction degreesToRadians(degrees) {\n    if (degrees === null || degrees === undefined) throw new Error('degrees is required');\n\n    var radians = degrees % 360;\n    return radians * Math.PI / 180;\n}\n\n/**\n * Converts a length to the requested unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @param {number} length to be converted\n * @param {string} originalUnit of the length\n * @param {string} [finalUnit='kilometers'] returned unit\n * @returns {number} the converted length\n */\nfunction convertLength(length, originalUnit, finalUnit) {\n    if (length === null || length === undefined) throw new Error('length is required');\n    if (!(length >= 0)) throw new Error('length must be a positive number');\n\n    return radiansToLength(lengthToRadians(length, originalUnit), finalUnit || 'kilometers');\n}\n\n/**\n * Converts a area to the requested unit.\n * Valid units: kilometers, kilometres, meters, metres, centimetres, millimeters, acres, miles, yards, feet, inches\n * @param {number} area to be converted\n * @param {string} [originalUnit='meters'] of the distance\n * @param {string} [finalUnit='kilometers'] returned unit\n * @returns {number} the converted distance\n */\nfunction convertArea(area, originalUnit, finalUnit) {\n    if (area === null || area === undefined) throw new Error('area is required');\n    if (!(area >= 0)) throw new Error('area must be a positive number');\n\n    var startFactor = areaFactors[originalUnit || 'meters'];\n    if (!startFactor) throw new Error('invalid original units');\n\n    var finalFactor = areaFactors[finalUnit || 'kilometers'];\n    if (!finalFactor) throw new Error('invalid final units');\n\n    return (area / startFactor) * finalFactor;\n}\n\n/**\n * isNumber\n *\n * @param {*} num Number to validate\n * @returns {boolean} true/false\n * @example\n * turf.isNumber(123)\n * //=true\n * turf.isNumber('foo')\n * //=false\n */\nfunction isNumber(num) {\n    return !isNaN(num) && num !== null && !Array.isArray(num);\n}\n\n/**\n * isObject\n *\n * @param {*} input variable to validate\n * @returns {boolean} true/false\n * @example\n * turf.isObject({elevation: 10})\n * //=true\n * turf.isObject('foo')\n * //=false\n */\nfunction isObject(input) {\n    return (!!input) && (input.constructor === Object);\n}\n\n/**\n * Validate BBox\n *\n * @private\n * @param {Array<number>} bbox BBox to validate\n * @returns {void}\n * @throws Error if BBox is not valid\n * @example\n * validateBBox([-180, -40, 110, 50])\n * //=OK\n * validateBBox([-180, -40])\n * //=Error\n * validateBBox('Foo')\n * //=Error\n * validateBBox(5)\n * //=Error\n * validateBBox(null)\n * //=Error\n * validateBBox(undefined)\n * //=Error\n */\nfunction validateBBox(bbox) {\n    if (!bbox) throw new Error('bbox is required');\n    if (!Array.isArray(bbox)) throw new Error('bbox must be an Array');\n    if (bbox.length !== 4 && bbox.length !== 6) throw new Error('bbox must be an Array of 4 or 6 numbers');\n    bbox.forEach(function (num) {\n        if (!isNumber(num)) throw new Error('bbox must only contain numbers');\n    });\n}\n\n/**\n * Validate Id\n *\n * @private\n * @param {string|number} id Id to validate\n * @returns {void}\n * @throws Error if Id is not valid\n * @example\n * validateId([-180, -40, 110, 50])\n * //=Error\n * validateId([-180, -40])\n * //=Error\n * validateId('Foo')\n * //=OK\n * validateId(5)\n * //=OK\n * validateId(null)\n * //=Error\n * validateId(undefined)\n * //=Error\n */\nfunction validateId(id) {\n    if (!id) throw new Error('id is required');\n    if (['string', 'number'].indexOf(typeof id) === -1) throw new Error('id must be a number or a string');\n}\n\n// Deprecated methods\nfunction radians2degrees() {\n    throw new Error('method has been renamed to `radiansToDegrees`');\n}\n\nfunction degrees2radians() {\n    throw new Error('method has been renamed to `degreesToRadians`');\n}\n\nfunction distanceToDegrees() {\n    throw new Error('method has been renamed to `lengthToDegrees`');\n}\n\nfunction distanceToRadians() {\n    throw new Error('method has been renamed to `lengthToRadians`');\n}\n\nfunction radiansToDistance() {\n    throw new Error('method has been renamed to `radiansToLength`');\n}\n\nfunction bearingToAngle() {\n    throw new Error('method has been renamed to `bearingToAzimuth`');\n}\n\nfunction convertDistance() {\n    throw new Error('method has been renamed to `convertLength`');\n}\n\nexport { earthRadius, factors, unitsFactors, areaFactors, feature, geometry, point, points, polygon, polygons, lineString, lineStrings, featureCollection, multiLineString, multiPoint, multiPolygon, geometryCollection, round, radiansToLength, lengthToRadians, lengthToDegrees, bearingToAzimuth, radiansToDegrees, degreesToRadians, convertLength, convertArea, isNumber, isObject, validateBBox, validateId, radians2degrees, degrees2radians, distanceToDegrees, distanceToRadians, radiansToDistance, bearingToAngle, convertDistance };\n","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","'use strict';\n\nvar RBush = require('rbush');\nvar Queue = require('tinyqueue');\nvar pointInPolygon = require('point-in-polygon');\nconst orient = require('robust-predicates/umd/orient2d.min.js').orient2d;\n\n// Fix for require issue in webpack https://github.com/mapbox/concaveman/issues/18\nif (Queue.default) {\n    Queue = Queue.default\n}\n\nmodule.exports = concaveman;\nmodule.exports.default = concaveman;\n\nfunction concaveman(points, concavity, lengthThreshold) {\n    // a relative measure of concavity; higher value means simpler hull\n    concavity = Math.max(0, concavity === undefined ? 2 : concavity);\n\n    // when a segment goes below this length threshold, it won't be drilled down further\n    lengthThreshold = lengthThreshold || 0;\n\n    // start with a convex hull of the points\n    var hull = fastConvexHull(points);\n\n    // index the points with an R-tree\n    var tree = new RBush(16);\n    tree.toBBox = function (a) {\n        return {\n            minX: a[0],\n            minY: a[1],\n            maxX: a[0],\n            maxY: a[1]\n        };\n    };\n    tree.compareMinX = function (a, b) { return a[0] - b[0]; };\n    tree.compareMinY = function (a, b) { return a[1] - b[1]; };\n\n    tree.load(points);\n\n    // turn the convex hull into a linked list and populate the initial edge queue with the nodes\n    var queue = [];\n    for (var i = 0, last; i < hull.length; i++) {\n        var p = hull[i];\n        tree.remove(p);\n        last = insertNode(p, last);\n        queue.push(last);\n    }\n\n    // index the segments with an R-tree (for intersection checks)\n    var segTree = new RBush(16);\n    for (i = 0; i < queue.length; i++) segTree.insert(updateBBox(queue[i]));\n\n    var sqConcavity = concavity * concavity;\n    var sqLenThreshold = lengthThreshold * lengthThreshold;\n\n    // process edges one by one\n    while (queue.length) {\n        var node = queue.shift();\n        var a = node.p;\n        var b = node.next.p;\n\n        // skip the edge if it's already short enough\n        var sqLen = getSqDist(a, b);\n        if (sqLen < sqLenThreshold) continue;\n\n        var maxSqLen = sqLen / sqConcavity;\n\n        // find the best connection point for the current edge to flex inward to\n        p = findCandidate(tree, node.prev.p, a, b, node.next.next.p, maxSqLen, segTree);\n\n        // if we found a connection and it satisfies our concavity measure\n        if (p && Math.min(getSqDist(p, a), getSqDist(p, b)) <= maxSqLen) {\n            // connect the edge endpoints through this point and add 2 new edges to the queue\n            queue.push(node);\n            queue.push(insertNode(p, node));\n\n            // update point and segment indexes\n            tree.remove(p);\n            segTree.remove(node);\n            segTree.insert(updateBBox(node));\n            segTree.insert(updateBBox(node.next));\n        }\n    }\n\n    // convert the resulting hull linked list to an array of points\n    node = last;\n    var concave = [];\n    do {\n        concave.push(node.p);\n        node = node.next;\n    } while (node !== last);\n\n    concave.push(node.p);\n\n    return concave;\n}\n\nfunction findCandidate(tree, a, b, c, d, maxDist, segTree) {\n    var queue = new Queue([], compareDist);\n    var node = tree.data;\n\n    // search through the point R-tree with a depth-first search using a priority queue\n    // in the order of distance to the edge (b, c)\n    while (node) {\n        for (var i = 0; i < node.children.length; i++) {\n            var child = node.children[i];\n\n            var dist = node.leaf ? sqSegDist(child, b, c) : sqSegBoxDist(b, c, child);\n            if (dist > maxDist) continue; // skip the node if it's farther than we ever need\n\n            queue.push({\n                node: child,\n                dist: dist\n            });\n        }\n\n        while (queue.length && !queue.peek().node.children) {\n            var item = queue.pop();\n            var p = item.node;\n\n            // skip all points that are as close to adjacent edges (a,b) and (c,d),\n            // and points that would introduce self-intersections when connected\n            var d0 = sqSegDist(p, a, b);\n            var d1 = sqSegDist(p, c, d);\n            if (item.dist < d0 && item.dist < d1 &&\n                noIntersections(b, p, segTree) &&\n                noIntersections(c, p, segTree)) return p;\n        }\n\n        node = queue.pop();\n        if (node) node = node.node;\n    }\n\n    return null;\n}\n\nfunction compareDist(a, b) {\n    return a.dist - b.dist;\n}\n\n// square distance from a segment bounding box to the given one\nfunction sqSegBoxDist(a, b, bbox) {\n    if (inside(a, bbox) || inside(b, bbox)) return 0;\n    var d1 = sqSegSegDist(a[0], a[1], b[0], b[1], bbox.minX, bbox.minY, bbox.maxX, bbox.minY);\n    if (d1 === 0) return 0;\n    var d2 = sqSegSegDist(a[0], a[1], b[0], b[1], bbox.minX, bbox.minY, bbox.minX, bbox.maxY);\n    if (d2 === 0) return 0;\n    var d3 = sqSegSegDist(a[0], a[1], b[0], b[1], bbox.maxX, bbox.minY, bbox.maxX, bbox.maxY);\n    if (d3 === 0) return 0;\n    var d4 = sqSegSegDist(a[0], a[1], b[0], b[1], bbox.minX, bbox.maxY, bbox.maxX, bbox.maxY);\n    if (d4 === 0) return 0;\n    return Math.min(d1, d2, d3, d4);\n}\n\nfunction inside(a, bbox) {\n    return a[0] >= bbox.minX &&\n           a[0] <= bbox.maxX &&\n           a[1] >= bbox.minY &&\n           a[1] <= bbox.maxY;\n}\n\n// check if the edge (a,b) doesn't intersect any other edges\nfunction noIntersections(a, b, segTree) {\n    var minX = Math.min(a[0], b[0]);\n    var minY = Math.min(a[1], b[1]);\n    var maxX = Math.max(a[0], b[0]);\n    var maxY = Math.max(a[1], b[1]);\n\n    var edges = segTree.search({minX: minX, minY: minY, maxX: maxX, maxY: maxY});\n    for (var i = 0; i < edges.length; i++) {\n        if (intersects(edges[i].p, edges[i].next.p, a, b)) return false;\n    }\n    return true;\n}\n\nfunction cross(p1, p2, p3) {\n    return orient(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);\n}\n\n// check if the edges (p1,q1) and (p2,q2) intersect\nfunction intersects(p1, q1, p2, q2) {\n    return p1 !== q2 && q1 !== p2 &&\n        cross(p1, q1, p2) > 0 !== cross(p1, q1, q2) > 0 &&\n        cross(p2, q2, p1) > 0 !== cross(p2, q2, q1) > 0;\n}\n\n// update the bounding box of a node's edge\nfunction updateBBox(node) {\n    var p1 = node.p;\n    var p2 = node.next.p;\n    node.minX = Math.min(p1[0], p2[0]);\n    node.minY = Math.min(p1[1], p2[1]);\n    node.maxX = Math.max(p1[0], p2[0]);\n    node.maxY = Math.max(p1[1], p2[1]);\n    return node;\n}\n\n// speed up convex hull by filtering out points inside quadrilateral formed by 4 extreme points\nfunction fastConvexHull(points) {\n    var left = points[0];\n    var top = points[0];\n    var right = points[0];\n    var bottom = points[0];\n\n    // find the leftmost, rightmost, topmost and bottommost points\n    for (var i = 0; i < points.length; i++) {\n        var p = points[i];\n        if (p[0] < left[0]) left = p;\n        if (p[0] > right[0]) right = p;\n        if (p[1] < top[1]) top = p;\n        if (p[1] > bottom[1]) bottom = p;\n    }\n\n    // filter out points that are inside the resulting quadrilateral\n    var cull = [left, top, right, bottom];\n    var filtered = cull.slice();\n    for (i = 0; i < points.length; i++) {\n        if (!pointInPolygon(points[i], cull)) filtered.push(points[i]);\n    }\n\n    // get convex hull around the filtered points\n    return convexHull(filtered);\n}\n\n// create a new node in a doubly linked list\nfunction insertNode(p, prev) {\n    var node = {\n        p: p,\n        prev: null,\n        next: null,\n        minX: 0,\n        minY: 0,\n        maxX: 0,\n        maxY: 0\n    };\n\n    if (!prev) {\n        node.prev = node;\n        node.next = node;\n\n    } else {\n        node.next = prev.next;\n        node.prev = prev;\n        prev.next.prev = node;\n        prev.next = node;\n    }\n    return node;\n}\n\n// square distance between 2 points\nfunction getSqDist(p1, p2) {\n\n    var dx = p1[0] - p2[0],\n        dy = p1[1] - p2[1];\n\n    return dx * dx + dy * dy;\n}\n\n// square distance from a point to a segment\nfunction sqSegDist(p, p1, p2) {\n\n    var x = p1[0],\n        y = p1[1],\n        dx = p2[0] - x,\n        dy = p2[1] - y;\n\n    if (dx !== 0 || dy !== 0) {\n\n        var t = ((p[0] - x) * dx + (p[1] - y) * dy) / (dx * dx + dy * dy);\n\n        if (t > 1) {\n            x = p2[0];\n            y = p2[1];\n\n        } else if (t > 0) {\n            x += dx * t;\n            y += dy * t;\n        }\n    }\n\n    dx = p[0] - x;\n    dy = p[1] - y;\n\n    return dx * dx + dy * dy;\n}\n\n// segment to segment distance, ported from http://geomalgorithms.com/a07-_distance.html by Dan Sunday\nfunction sqSegSegDist(x0, y0, x1, y1, x2, y2, x3, y3) {\n    var ux = x1 - x0;\n    var uy = y1 - y0;\n    var vx = x3 - x2;\n    var vy = y3 - y2;\n    var wx = x0 - x2;\n    var wy = y0 - y2;\n    var a = ux * ux + uy * uy;\n    var b = ux * vx + uy * vy;\n    var c = vx * vx + vy * vy;\n    var d = ux * wx + uy * wy;\n    var e = vx * wx + vy * wy;\n    var D = a * c - b * b;\n\n    var sc, sN, tc, tN;\n    var sD = D;\n    var tD = D;\n\n    if (D === 0) {\n        sN = 0;\n        sD = 1;\n        tN = e;\n        tD = c;\n    } else {\n        sN = b * e - c * d;\n        tN = a * e - b * d;\n        if (sN < 0) {\n            sN = 0;\n            tN = e;\n            tD = c;\n        } else if (sN > sD) {\n            sN = sD;\n            tN = e + b;\n            tD = c;\n        }\n    }\n\n    if (tN < 0.0) {\n        tN = 0.0;\n        if (-d < 0.0) sN = 0.0;\n        else if (-d > a) sN = sD;\n        else {\n            sN = -d;\n            sD = a;\n        }\n    } else if (tN > tD) {\n        tN = tD;\n        if ((-d + b) < 0.0) sN = 0;\n        else if (-d + b > a) sN = sD;\n        else {\n            sN = -d + b;\n            sD = a;\n        }\n    }\n\n    sc = sN === 0 ? 0 : sN / sD;\n    tc = tN === 0 ? 0 : tN / tD;\n\n    var cx = (1 - sc) * x0 + sc * x1;\n    var cy = (1 - sc) * y0 + sc * y1;\n    var cx2 = (1 - tc) * x2 + tc * x3;\n    var cy2 = (1 - tc) * y2 + tc * y3;\n    var dx = cx2 - cx;\n    var dy = cy2 - cy;\n\n    return dx * dx + dy * dy;\n}\n\nfunction compareByX(a, b) {\n    return a[0] === b[0] ? a[1] - b[1] : a[0] - b[0];\n}\n\nfunction convexHull(points) {\n    points.sort(compareByX);\n\n    var lower = [];\n    for (var i = 0; i < points.length; i++) {\n        while (lower.length >= 2 && cross(lower[lower.length - 2], lower[lower.length - 1], points[i]) <= 0) {\n            lower.pop();\n        }\n        lower.push(points[i]);\n    }\n\n    var upper = [];\n    for (var ii = points.length - 1; ii >= 0; ii--) {\n        while (upper.length >= 2 && cross(upper[upper.length - 2], upper[upper.length - 1], points[ii]) <= 0) {\n            upper.pop();\n        }\n        upper.push(points[ii]);\n    }\n\n    upper.pop();\n    lower.pop();\n    return lower.concat(upper);\n}\n","var rbush = require('rbush');\nvar helpers = require('@turf/helpers');\nvar meta = require('@turf/meta');\nvar turfBBox = require('@turf/bbox').default;\nvar featureEach = meta.featureEach;\nvar coordEach = meta.coordEach;\nvar polygon = helpers.polygon;\nvar featureCollection = helpers.featureCollection;\n\n/**\n * GeoJSON implementation of [RBush](https://github.com/mourner/rbush#rbush) spatial index.\n *\n * @name rbush\n * @param {number} [maxEntries=9] defines the maximum number of entries in a tree node. 9 (used by default) is a\n * reasonable choice for most applications. Higher value means faster insertion and slower search, and vice versa.\n * @returns {RBush} GeoJSON RBush\n * @example\n * var geojsonRbush = require('geojson-rbush').default;\n * var tree = geojsonRbush();\n */\nfunction geojsonRbush(maxEntries) {\n    var tree = rbush(maxEntries);\n    /**\n     * [insert](https://github.com/mourner/rbush#data-format)\n     *\n     * @param {Feature} feature insert single GeoJSON Feature\n     * @returns {RBush} GeoJSON RBush\n     * @example\n     * var poly = turf.polygon([[[-78, 41], [-67, 41], [-67, 48], [-78, 48], [-78, 41]]]);\n     * tree.insert(poly)\n     */\n    tree.insert = function (feature) {\n        if (feature.type !== 'Feature') throw new Error('invalid feature');\n        feature.bbox = feature.bbox ? feature.bbox : turfBBox(feature);\n        return rbush.prototype.insert.call(this, feature);\n    };\n\n    /**\n     * [load](https://github.com/mourner/rbush#bulk-inserting-data)\n     *\n     * @param {FeatureCollection|Array<Feature>} features load entire GeoJSON FeatureCollection\n     * @returns {RBush} GeoJSON RBush\n     * @example\n     * var polys = turf.polygons([\n     *     [[[-78, 41], [-67, 41], [-67, 48], [-78, 48], [-78, 41]]],\n     *     [[[-93, 32], [-83, 32], [-83, 39], [-93, 39], [-93, 32]]]\n     * ]);\n     * tree.load(polys);\n     */\n    tree.load = function (features) {\n        var load = [];\n        // Load an Array of Features\n        if (Array.isArray(features)) {\n            features.forEach(function (feature) {\n                if (feature.type !== 'Feature') throw new Error('invalid features');\n                feature.bbox = feature.bbox ? feature.bbox : turfBBox(feature);\n                load.push(feature);\n            });\n        } else {\n            // Load a FeatureCollection\n            featureEach(features, function (feature) {\n                if (feature.type !== 'Feature') throw new Error('invalid features');\n                feature.bbox = feature.bbox ? feature.bbox : turfBBox(feature);\n                load.push(feature);\n            });\n        }\n        return rbush.prototype.load.call(this, load);\n    };\n\n    /**\n     * [remove](https://github.com/mourner/rbush#removing-data)\n     *\n     * @param {Feature} feature remove single GeoJSON Feature\n     * @param {Function} equals Pass a custom equals function to compare by value for removal.\n     * @returns {RBush} GeoJSON RBush\n     * @example\n     * var poly = turf.polygon([[[-78, 41], [-67, 41], [-67, 48], [-78, 48], [-78, 41]]]);\n     *\n     * tree.remove(poly);\n     */\n    tree.remove = function (feature, equals) {\n        if (feature.type !== 'Feature') throw new Error('invalid feature');\n        feature.bbox = feature.bbox ? feature.bbox : turfBBox(feature);\n        return rbush.prototype.remove.call(this, feature, equals);\n    };\n\n    /**\n     * [clear](https://github.com/mourner/rbush#removing-data)\n     *\n     * @returns {RBush} GeoJSON Rbush\n     * @example\n     * tree.clear()\n     */\n    tree.clear = function () {\n        return rbush.prototype.clear.call(this);\n    };\n\n    /**\n     * [search](https://github.com/mourner/rbush#search)\n     *\n     * @param {BBox|FeatureCollection|Feature} geojson search with GeoJSON\n     * @returns {FeatureCollection} all features that intersects with the given GeoJSON.\n     * @example\n     * var poly = turf.polygon([[[-78, 41], [-67, 41], [-67, 48], [-78, 48], [-78, 41]]]);\n     *\n     * tree.search(poly);\n     */\n    tree.search = function (geojson) {\n        var features = rbush.prototype.search.call(this, this.toBBox(geojson));\n        return featureCollection(features);\n    };\n\n    /**\n     * [collides](https://github.com/mourner/rbush#collisions)\n     *\n     * @param {BBox|FeatureCollection|Feature} geojson collides with GeoJSON\n     * @returns {boolean} true if there are any items intersecting the given GeoJSON, otherwise false.\n     * @example\n     * var poly = turf.polygon([[[-78, 41], [-67, 41], [-67, 48], [-78, 48], [-78, 41]]]);\n     *\n     * tree.collides(poly);\n     */\n    tree.collides = function (geojson) {\n        return rbush.prototype.collides.call(this, this.toBBox(geojson));\n    };\n\n    /**\n     * [all](https://github.com/mourner/rbush#search)\n     *\n     * @returns {FeatureCollection} all the features in RBush\n     * @example\n     * tree.all()\n     */\n    tree.all = function () {\n        var features = rbush.prototype.all.call(this);\n        return featureCollection(features);\n    };\n\n    /**\n     * [toJSON](https://github.com/mourner/rbush#export-and-import)\n     *\n     * @returns {any} export data as JSON object\n     * @example\n     * var exported = tree.toJSON()\n     */\n    tree.toJSON = function () {\n        return rbush.prototype.toJSON.call(this);\n    };\n\n    /**\n     * [fromJSON](https://github.com/mourner/rbush#export-and-import)\n     *\n     * @param {any} json import previously exported data\n     * @returns {RBush} GeoJSON RBush\n     * @example\n     * var exported = {\n     *   \"children\": [\n     *     {\n     *       \"type\": \"Feature\",\n     *       \"geometry\": {\n     *         \"type\": \"Point\",\n     *         \"coordinates\": [110, 50]\n     *       },\n     *       \"properties\": {},\n     *       \"bbox\": [110, 50, 110, 50]\n     *     }\n     *   ],\n     *   \"height\": 1,\n     *   \"leaf\": true,\n     *   \"minX\": 110,\n     *   \"minY\": 50,\n     *   \"maxX\": 110,\n     *   \"maxY\": 50\n     * }\n     * tree.fromJSON(exported)\n     */\n    tree.fromJSON = function (json) {\n        return rbush.prototype.fromJSON.call(this, json);\n    };\n\n    /**\n     * Converts GeoJSON to {minX, minY, maxX, maxY} schema\n     *\n     * @private\n     * @param {BBox|FeatureCollection|Feature} geojson feature(s) to retrieve BBox from\n     * @returns {Object} converted to {minX, minY, maxX, maxY}\n     */\n    tree.toBBox = function (geojson) {\n        var bbox;\n        if (geojson.bbox) bbox = geojson.bbox;\n        else if (Array.isArray(geojson) && geojson.length === 4) bbox = geojson;\n        else if (Array.isArray(geojson) && geojson.length === 6) bbox = [geojson[0], geojson[1], geojson[3], geojson[4]];\n        else if (geojson.type === 'Feature') bbox = turfBBox(geojson);\n        else if (geojson.type === 'FeatureCollection') bbox = turfBBox(geojson);\n        else throw new Error('invalid geojson')\n\n        return {\n            minX: bbox[0],\n            minY: bbox[1],\n            maxX: bbox[2],\n            maxY: bbox[3]\n        };\n    };\n    return tree;\n}\n\nmodule.exports = geojsonRbush;\nmodule.exports.default = geojsonRbush;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @module helpers\n */\n/**\n * Earth Radius used with the Harvesine formula and approximates using a spherical (non-ellipsoid) Earth.\n *\n * @memberof helpers\n * @type {number}\n */\nexports.earthRadius = 6371008.8;\n/**\n * Unit of measurement factors using a spherical (non-ellipsoid) earth radius.\n *\n * @memberof helpers\n * @type {Object}\n */\nexports.factors = {\n    centimeters: exports.earthRadius * 100,\n    centimetres: exports.earthRadius * 100,\n    degrees: exports.earthRadius / 111325,\n    feet: exports.earthRadius * 3.28084,\n    inches: exports.earthRadius * 39.37,\n    kilometers: exports.earthRadius / 1000,\n    kilometres: exports.earthRadius / 1000,\n    meters: exports.earthRadius,\n    metres: exports.earthRadius,\n    miles: exports.earthRadius / 1609.344,\n    millimeters: exports.earthRadius * 1000,\n    millimetres: exports.earthRadius * 1000,\n    nauticalmiles: exports.earthRadius / 1852,\n    radians: 1,\n    yards: exports.earthRadius * 1.0936,\n};\n/**\n * Units of measurement factors based on 1 meter.\n *\n * @memberof helpers\n * @type {Object}\n */\nexports.unitsFactors = {\n    centimeters: 100,\n    centimetres: 100,\n    degrees: 1 / 111325,\n    feet: 3.28084,\n    inches: 39.37,\n    kilometers: 1 / 1000,\n    kilometres: 1 / 1000,\n    meters: 1,\n    metres: 1,\n    miles: 1 / 1609.344,\n    millimeters: 1000,\n    millimetres: 1000,\n    nauticalmiles: 1 / 1852,\n    radians: 1 / exports.earthRadius,\n    yards: 1.0936133,\n};\n/**\n * Area of measurement factors based on 1 square meter.\n *\n * @memberof helpers\n * @type {Object}\n */\nexports.areaFactors = {\n    acres: 0.000247105,\n    centimeters: 10000,\n    centimetres: 10000,\n    feet: 10.763910417,\n    hectares: 0.0001,\n    inches: 1550.003100006,\n    kilometers: 0.000001,\n    kilometres: 0.000001,\n    meters: 1,\n    metres: 1,\n    miles: 3.86e-7,\n    millimeters: 1000000,\n    millimetres: 1000000,\n    yards: 1.195990046,\n};\n/**\n * Wraps a GeoJSON {@link Geometry} in a GeoJSON {@link Feature}.\n *\n * @name feature\n * @param {Geometry} geometry input geometry\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature} a GeoJSON Feature\n * @example\n * var geometry = {\n *   \"type\": \"Point\",\n *   \"coordinates\": [110, 50]\n * };\n *\n * var feature = turf.feature(geometry);\n *\n * //=feature\n */\nfunction feature(geom, properties, options) {\n    if (options === void 0) { options = {}; }\n    var feat = { type: \"Feature\" };\n    if (options.id === 0 || options.id) {\n        feat.id = options.id;\n    }\n    if (options.bbox) {\n        feat.bbox = options.bbox;\n    }\n    feat.properties = properties || {};\n    feat.geometry = geom;\n    return feat;\n}\nexports.feature = feature;\n/**\n * Creates a GeoJSON {@link Geometry} from a Geometry string type & coordinates.\n * For GeometryCollection type use `helpers.geometryCollection`\n *\n * @name geometry\n * @param {string} type Geometry Type\n * @param {Array<any>} coordinates Coordinates\n * @param {Object} [options={}] Optional Parameters\n * @returns {Geometry} a GeoJSON Geometry\n * @example\n * var type = \"Point\";\n * var coordinates = [110, 50];\n * var geometry = turf.geometry(type, coordinates);\n * // => geometry\n */\nfunction geometry(type, coordinates, _options) {\n    if (_options === void 0) { _options = {}; }\n    switch (type) {\n        case \"Point\":\n            return point(coordinates).geometry;\n        case \"LineString\":\n            return lineString(coordinates).geometry;\n        case \"Polygon\":\n            return polygon(coordinates).geometry;\n        case \"MultiPoint\":\n            return multiPoint(coordinates).geometry;\n        case \"MultiLineString\":\n            return multiLineString(coordinates).geometry;\n        case \"MultiPolygon\":\n            return multiPolygon(coordinates).geometry;\n        default:\n            throw new Error(type + \" is invalid\");\n    }\n}\nexports.geometry = geometry;\n/**\n * Creates a {@link Point} {@link Feature} from a Position.\n *\n * @name point\n * @param {Array<number>} coordinates longitude, latitude position (each in decimal degrees)\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Point>} a Point feature\n * @example\n * var point = turf.point([-75.343, 39.984]);\n *\n * //=point\n */\nfunction point(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    if (!coordinates) {\n        throw new Error(\"coordinates is required\");\n    }\n    if (!Array.isArray(coordinates)) {\n        throw new Error(\"coordinates must be an Array\");\n    }\n    if (coordinates.length < 2) {\n        throw new Error(\"coordinates must be at least 2 numbers long\");\n    }\n    if (!isNumber(coordinates[0]) || !isNumber(coordinates[1])) {\n        throw new Error(\"coordinates must contain numbers\");\n    }\n    var geom = {\n        type: \"Point\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.point = point;\n/**\n * Creates a {@link Point} {@link FeatureCollection} from an Array of Point coordinates.\n *\n * @name points\n * @param {Array<Array<number>>} coordinates an array of Points\n * @param {Object} [properties={}] Translate these properties to each Feature\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north]\n * associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Point>} Point Feature\n * @example\n * var points = turf.points([\n *   [-75, 39],\n *   [-80, 45],\n *   [-78, 50]\n * ]);\n *\n * //=points\n */\nfunction points(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return point(coords, properties);\n    }), options);\n}\nexports.points = points;\n/**\n * Creates a {@link Polygon} {@link Feature} from an Array of LinearRings.\n *\n * @name polygon\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Polygon>} Polygon Feature\n * @example\n * var polygon = turf.polygon([[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]], { name: 'poly1' });\n *\n * //=polygon\n */\nfunction polygon(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    for (var _i = 0, coordinates_1 = coordinates; _i < coordinates_1.length; _i++) {\n        var ring = coordinates_1[_i];\n        if (ring.length < 4) {\n            throw new Error(\"Each LinearRing of a Polygon must have 4 or more Positions.\");\n        }\n        for (var j = 0; j < ring[ring.length - 1].length; j++) {\n            // Check if first point of Polygon contains two numbers\n            if (ring[ring.length - 1][j] !== ring[0][j]) {\n                throw new Error(\"First and last Position are not equivalent.\");\n            }\n        }\n    }\n    var geom = {\n        type: \"Polygon\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.polygon = polygon;\n/**\n * Creates a {@link Polygon} {@link FeatureCollection} from an Array of Polygon coordinates.\n *\n * @name polygons\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygon coordinates\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Polygon>} Polygon FeatureCollection\n * @example\n * var polygons = turf.polygons([\n *   [[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]],\n *   [[[-15, 42], [-14, 46], [-12, 41], [-17, 44], [-15, 42]]],\n * ]);\n *\n * //=polygons\n */\nfunction polygons(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return polygon(coords, properties);\n    }), options);\n}\nexports.polygons = polygons;\n/**\n * Creates a {@link LineString} {@link Feature} from an Array of Positions.\n *\n * @name lineString\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<LineString>} LineString Feature\n * @example\n * var linestring1 = turf.lineString([[-24, 63], [-23, 60], [-25, 65], [-20, 69]], {name: 'line 1'});\n * var linestring2 = turf.lineString([[-14, 43], [-13, 40], [-15, 45], [-10, 49]], {name: 'line 2'});\n *\n * //=linestring1\n * //=linestring2\n */\nfunction lineString(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    if (coordinates.length < 2) {\n        throw new Error(\"coordinates must be an array of two or more positions\");\n    }\n    var geom = {\n        type: \"LineString\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.lineString = lineString;\n/**\n * Creates a {@link LineString} {@link FeatureCollection} from an Array of LineString coordinates.\n *\n * @name lineStrings\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north]\n * associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<LineString>} LineString FeatureCollection\n * @example\n * var linestrings = turf.lineStrings([\n *   [[-24, 63], [-23, 60], [-25, 65], [-20, 69]],\n *   [[-14, 43], [-13, 40], [-15, 45], [-10, 49]]\n * ]);\n *\n * //=linestrings\n */\nfunction lineStrings(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return lineString(coords, properties);\n    }), options);\n}\nexports.lineStrings = lineStrings;\n/**\n * Takes one or more {@link Feature|Features} and creates a {@link FeatureCollection}.\n *\n * @name featureCollection\n * @param {Feature[]} features input features\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {FeatureCollection} FeatureCollection of Features\n * @example\n * var locationA = turf.point([-75.343, 39.984], {name: 'Location A'});\n * var locationB = turf.point([-75.833, 39.284], {name: 'Location B'});\n * var locationC = turf.point([-75.534, 39.123], {name: 'Location C'});\n *\n * var collection = turf.featureCollection([\n *   locationA,\n *   locationB,\n *   locationC\n * ]);\n *\n * //=collection\n */\nfunction featureCollection(features, options) {\n    if (options === void 0) { options = {}; }\n    var fc = { type: \"FeatureCollection\" };\n    if (options.id) {\n        fc.id = options.id;\n    }\n    if (options.bbox) {\n        fc.bbox = options.bbox;\n    }\n    fc.features = features;\n    return fc;\n}\nexports.featureCollection = featureCollection;\n/**\n * Creates a {@link Feature<MultiLineString>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiLineString\n * @param {Array<Array<Array<number>>>} coordinates an array of LineStrings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiLineString>} a MultiLineString feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiLine = turf.multiLineString([[[0,0],[10,10]]]);\n *\n * //=multiLine\n */\nfunction multiLineString(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiLineString\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.multiLineString = multiLineString;\n/**\n * Creates a {@link Feature<MultiPoint>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPoint\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPoint>} a MultiPoint feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPt = turf.multiPoint([[0,0],[10,10]]);\n *\n * //=multiPt\n */\nfunction multiPoint(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiPoint\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.multiPoint = multiPoint;\n/**\n * Creates a {@link Feature<MultiPolygon>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPolygon\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygons\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPolygon>} a multipolygon feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPoly = turf.multiPolygon([[[[0,0],[0,10],[10,10],[10,0],[0,0]]]]);\n *\n * //=multiPoly\n *\n */\nfunction multiPolygon(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiPolygon\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.multiPolygon = multiPolygon;\n/**\n * Creates a {@link Feature<GeometryCollection>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name geometryCollection\n * @param {Array<Geometry>} geometries an array of GeoJSON Geometries\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<GeometryCollection>} a GeoJSON GeometryCollection Feature\n * @example\n * var pt = turf.geometry(\"Point\", [100, 0]);\n * var line = turf.geometry(\"LineString\", [[101, 0], [102, 1]]);\n * var collection = turf.geometryCollection([pt, line]);\n *\n * // => collection\n */\nfunction geometryCollection(geometries, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"GeometryCollection\",\n        geometries: geometries,\n    };\n    return feature(geom, properties, options);\n}\nexports.geometryCollection = geometryCollection;\n/**\n * Round number to precision\n *\n * @param {number} num Number\n * @param {number} [precision=0] Precision\n * @returns {number} rounded number\n * @example\n * turf.round(120.4321)\n * //=120\n *\n * turf.round(120.4321, 2)\n * //=120.43\n */\nfunction round(num, precision) {\n    if (precision === void 0) { precision = 0; }\n    if (precision && !(precision >= 0)) {\n        throw new Error(\"precision must be a positive number\");\n    }\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.round(num * multiplier) / multiplier;\n}\nexports.round = round;\n/**\n * Convert a distance measurement (assuming a spherical Earth) from radians to a more friendly unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name radiansToLength\n * @param {number} radians in radians across the sphere\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} distance\n */\nfunction radiansToLength(radians, units) {\n    if (units === void 0) { units = \"kilometers\"; }\n    var factor = exports.factors[units];\n    if (!factor) {\n        throw new Error(units + \" units is invalid\");\n    }\n    return radians * factor;\n}\nexports.radiansToLength = radiansToLength;\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into radians\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name lengthToRadians\n * @param {number} distance in real units\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} radians\n */\nfunction lengthToRadians(distance, units) {\n    if (units === void 0) { units = \"kilometers\"; }\n    var factor = exports.factors[units];\n    if (!factor) {\n        throw new Error(units + \" units is invalid\");\n    }\n    return distance / factor;\n}\nexports.lengthToRadians = lengthToRadians;\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into degrees\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, centimeters, kilometres, feet\n *\n * @name lengthToDegrees\n * @param {number} distance in real units\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} degrees\n */\nfunction lengthToDegrees(distance, units) {\n    return radiansToDegrees(lengthToRadians(distance, units));\n}\nexports.lengthToDegrees = lengthToDegrees;\n/**\n * Converts any bearing angle from the north line direction (positive clockwise)\n * and returns an angle between 0-360 degrees (positive clockwise), 0 being the north line\n *\n * @name bearingToAzimuth\n * @param {number} bearing angle, between -180 and +180 degrees\n * @returns {number} angle between 0 and 360 degrees\n */\nfunction bearingToAzimuth(bearing) {\n    var angle = bearing % 360;\n    if (angle < 0) {\n        angle += 360;\n    }\n    return angle;\n}\nexports.bearingToAzimuth = bearingToAzimuth;\n/**\n * Converts an angle in radians to degrees\n *\n * @name radiansToDegrees\n * @param {number} radians angle in radians\n * @returns {number} degrees between 0 and 360 degrees\n */\nfunction radiansToDegrees(radians) {\n    var degrees = radians % (2 * Math.PI);\n    return (degrees * 180) / Math.PI;\n}\nexports.radiansToDegrees = radiansToDegrees;\n/**\n * Converts an angle in degrees to radians\n *\n * @name degreesToRadians\n * @param {number} degrees angle between 0 and 360 degrees\n * @returns {number} angle in radians\n */\nfunction degreesToRadians(degrees) {\n    var radians = degrees % 360;\n    return (radians * Math.PI) / 180;\n}\nexports.degreesToRadians = degreesToRadians;\n/**\n * Converts a length to the requested unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @param {number} length to be converted\n * @param {Units} [originalUnit=\"kilometers\"] of the length\n * @param {Units} [finalUnit=\"kilometers\"] returned unit\n * @returns {number} the converted length\n */\nfunction convertLength(length, originalUnit, finalUnit) {\n    if (originalUnit === void 0) { originalUnit = \"kilometers\"; }\n    if (finalUnit === void 0) { finalUnit = \"kilometers\"; }\n    if (!(length >= 0)) {\n        throw new Error(\"length must be a positive number\");\n    }\n    return radiansToLength(lengthToRadians(length, originalUnit), finalUnit);\n}\nexports.convertLength = convertLength;\n/**\n * Converts a area to the requested unit.\n * Valid units: kilometers, kilometres, meters, metres, centimetres, millimeters, acres, miles, yards, feet, inches, hectares\n * @param {number} area to be converted\n * @param {Units} [originalUnit=\"meters\"] of the distance\n * @param {Units} [finalUnit=\"kilometers\"] returned unit\n * @returns {number} the converted area\n */\nfunction convertArea(area, originalUnit, finalUnit) {\n    if (originalUnit === void 0) { originalUnit = \"meters\"; }\n    if (finalUnit === void 0) { finalUnit = \"kilometers\"; }\n    if (!(area >= 0)) {\n        throw new Error(\"area must be a positive number\");\n    }\n    var startFactor = exports.areaFactors[originalUnit];\n    if (!startFactor) {\n        throw new Error(\"invalid original units\");\n    }\n    var finalFactor = exports.areaFactors[finalUnit];\n    if (!finalFactor) {\n        throw new Error(\"invalid final units\");\n    }\n    return (area / startFactor) * finalFactor;\n}\nexports.convertArea = convertArea;\n/**\n * isNumber\n *\n * @param {*} num Number to validate\n * @returns {boolean} true/false\n * @example\n * turf.isNumber(123)\n * //=true\n * turf.isNumber('foo')\n * //=false\n */\nfunction isNumber(num) {\n    return !isNaN(num) && num !== null && !Array.isArray(num);\n}\nexports.isNumber = isNumber;\n/**\n * isObject\n *\n * @param {*} input variable to validate\n * @returns {boolean} true/false\n * @example\n * turf.isObject({elevation: 10})\n * //=true\n * turf.isObject('foo')\n * //=false\n */\nfunction isObject(input) {\n    return !!input && input.constructor === Object;\n}\nexports.isObject = isObject;\n/**\n * Validate BBox\n *\n * @private\n * @param {Array<number>} bbox BBox to validate\n * @returns {void}\n * @throws Error if BBox is not valid\n * @example\n * validateBBox([-180, -40, 110, 50])\n * //=OK\n * validateBBox([-180, -40])\n * //=Error\n * validateBBox('Foo')\n * //=Error\n * validateBBox(5)\n * //=Error\n * validateBBox(null)\n * //=Error\n * validateBBox(undefined)\n * //=Error\n */\nfunction validateBBox(bbox) {\n    if (!bbox) {\n        throw new Error(\"bbox is required\");\n    }\n    if (!Array.isArray(bbox)) {\n        throw new Error(\"bbox must be an Array\");\n    }\n    if (bbox.length !== 4 && bbox.length !== 6) {\n        throw new Error(\"bbox must be an Array of 4 or 6 numbers\");\n    }\n    bbox.forEach(function (num) {\n        if (!isNumber(num)) {\n            throw new Error(\"bbox must only contain numbers\");\n        }\n    });\n}\nexports.validateBBox = validateBBox;\n/**\n * Validate Id\n *\n * @private\n * @param {string|number} id Id to validate\n * @returns {void}\n * @throws Error if Id is not valid\n * @example\n * validateId([-180, -40, 110, 50])\n * //=Error\n * validateId([-180, -40])\n * //=Error\n * validateId('Foo')\n * //=OK\n * validateId(5)\n * //=OK\n * validateId(null)\n * //=Error\n * validateId(undefined)\n * //=Error\n */\nfunction validateId(id) {\n    if (!id) {\n        throw new Error(\"id is required\");\n    }\n    if ([\"string\", \"number\"].indexOf(typeof id) === -1) {\n        throw new Error(\"id must be a number or a string\");\n    }\n}\nexports.validateId = validateId;\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar helpers = require('@turf/helpers');\n\n/**\n * Callback for coordEach\n *\n * @callback coordEachCallback\n * @param {Array<number>} currentCoord The current coordinate being processed.\n * @param {number} coordIndex The current index of the coordinate being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n */\n\n/**\n * Iterate over coordinates in any GeoJSON object, similar to Array.forEach()\n *\n * @name coordEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentCoord, coordIndex, featureIndex, multiFeatureIndex)\n * @param {boolean} [excludeWrapCoord=false] whether or not to include the final coordinate of LinearRings that wraps the ring in its iteration.\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.coordEach(features, function (currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=currentCoord\n *   //=coordIndex\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n * });\n */\nfunction coordEach(geojson, callback, excludeWrapCoord) {\n  // Handles null Geometry -- Skips this GeoJSON\n  if (geojson === null) return;\n  var j,\n    k,\n    l,\n    geometry,\n    stopG,\n    coords,\n    geometryMaybeCollection,\n    wrapShrink = 0,\n    coordIndex = 0,\n    isGeometryCollection,\n    type = geojson.type,\n    isFeatureCollection = type === \"FeatureCollection\",\n    isFeature = type === \"Feature\",\n    stop = isFeatureCollection ? geojson.features.length : 1;\n\n  // This logic may look a little weird. The reason why it is that way\n  // is because it's trying to be fast. GeoJSON supports multiple kinds\n  // of objects at its root: FeatureCollection, Features, Geometries.\n  // This function has the responsibility of handling all of them, and that\n  // means that some of the `for` loops you see below actually just don't apply\n  // to certain inputs. For instance, if you give this just a\n  // Point geometry, then both loops are short-circuited and all we do\n  // is gradually rename the input until it's called 'geometry'.\n  //\n  // This also aims to allocate as few resources as possible: just a\n  // few numbers and booleans, rather than any temporary arrays as would\n  // be required with the normalization approach.\n  for (var featureIndex = 0; featureIndex < stop; featureIndex++) {\n    geometryMaybeCollection = isFeatureCollection\n      ? geojson.features[featureIndex].geometry\n      : isFeature\n      ? geojson.geometry\n      : geojson;\n    isGeometryCollection = geometryMaybeCollection\n      ? geometryMaybeCollection.type === \"GeometryCollection\"\n      : false;\n    stopG = isGeometryCollection\n      ? geometryMaybeCollection.geometries.length\n      : 1;\n\n    for (var geomIndex = 0; geomIndex < stopG; geomIndex++) {\n      var multiFeatureIndex = 0;\n      var geometryIndex = 0;\n      geometry = isGeometryCollection\n        ? geometryMaybeCollection.geometries[geomIndex]\n        : geometryMaybeCollection;\n\n      // Handles null Geometry -- Skips this geometry\n      if (geometry === null) continue;\n      coords = geometry.coordinates;\n      var geomType = geometry.type;\n\n      wrapShrink =\n        excludeWrapCoord &&\n        (geomType === \"Polygon\" || geomType === \"MultiPolygon\")\n          ? 1\n          : 0;\n\n      switch (geomType) {\n        case null:\n          break;\n        case \"Point\":\n          if (\n            callback(\n              coords,\n              coordIndex,\n              featureIndex,\n              multiFeatureIndex,\n              geometryIndex\n            ) === false\n          )\n            return false;\n          coordIndex++;\n          multiFeatureIndex++;\n          break;\n        case \"LineString\":\n        case \"MultiPoint\":\n          for (j = 0; j < coords.length; j++) {\n            if (\n              callback(\n                coords[j],\n                coordIndex,\n                featureIndex,\n                multiFeatureIndex,\n                geometryIndex\n              ) === false\n            )\n              return false;\n            coordIndex++;\n            if (geomType === \"MultiPoint\") multiFeatureIndex++;\n          }\n          if (geomType === \"LineString\") multiFeatureIndex++;\n          break;\n        case \"Polygon\":\n        case \"MultiLineString\":\n          for (j = 0; j < coords.length; j++) {\n            for (k = 0; k < coords[j].length - wrapShrink; k++) {\n              if (\n                callback(\n                  coords[j][k],\n                  coordIndex,\n                  featureIndex,\n                  multiFeatureIndex,\n                  geometryIndex\n                ) === false\n              )\n                return false;\n              coordIndex++;\n            }\n            if (geomType === \"MultiLineString\") multiFeatureIndex++;\n            if (geomType === \"Polygon\") geometryIndex++;\n          }\n          if (geomType === \"Polygon\") multiFeatureIndex++;\n          break;\n        case \"MultiPolygon\":\n          for (j = 0; j < coords.length; j++) {\n            geometryIndex = 0;\n            for (k = 0; k < coords[j].length; k++) {\n              for (l = 0; l < coords[j][k].length - wrapShrink; l++) {\n                if (\n                  callback(\n                    coords[j][k][l],\n                    coordIndex,\n                    featureIndex,\n                    multiFeatureIndex,\n                    geometryIndex\n                  ) === false\n                )\n                  return false;\n                coordIndex++;\n              }\n              geometryIndex++;\n            }\n            multiFeatureIndex++;\n          }\n          break;\n        case \"GeometryCollection\":\n          for (j = 0; j < geometry.geometries.length; j++)\n            if (\n              coordEach(geometry.geometries[j], callback, excludeWrapCoord) ===\n              false\n            )\n              return false;\n          break;\n        default:\n          throw new Error(\"Unknown Geometry Type\");\n      }\n    }\n  }\n}\n\n/**\n * Callback for coordReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback coordReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Array<number>} currentCoord The current coordinate being processed.\n * @param {number} coordIndex The current index of the coordinate being processed.\n * Starts at index 0, if an initialValue is provided, and at index 1 otherwise.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n */\n\n/**\n * Reduce coordinates in any GeoJSON object, similar to Array.reduce()\n *\n * @name coordReduce\n * @param {FeatureCollection|Geometry|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentCoord, coordIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @param {boolean} [excludeWrapCoord=false] whether or not to include the final coordinate of LinearRings that wraps the ring in its iteration.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.coordReduce(features, function (previousValue, currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=previousValue\n *   //=currentCoord\n *   //=coordIndex\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   return currentCoord;\n * });\n */\nfunction coordReduce(geojson, callback, initialValue, excludeWrapCoord) {\n  var previousValue = initialValue;\n  coordEach(\n    geojson,\n    function (\n      currentCoord,\n      coordIndex,\n      featureIndex,\n      multiFeatureIndex,\n      geometryIndex\n    ) {\n      if (coordIndex === 0 && initialValue === undefined)\n        previousValue = currentCoord;\n      else\n        previousValue = callback(\n          previousValue,\n          currentCoord,\n          coordIndex,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex\n        );\n    },\n    excludeWrapCoord\n  );\n  return previousValue;\n}\n\n/**\n * Callback for propEach\n *\n * @callback propEachCallback\n * @param {Object} currentProperties The current Properties being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Iterate over properties in any GeoJSON object, similar to Array.forEach()\n *\n * @name propEach\n * @param {FeatureCollection|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentProperties, featureIndex)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.propEach(features, function (currentProperties, featureIndex) {\n *   //=currentProperties\n *   //=featureIndex\n * });\n */\nfunction propEach(geojson, callback) {\n  var i;\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      for (i = 0; i < geojson.features.length; i++) {\n        if (callback(geojson.features[i].properties, i) === false) break;\n      }\n      break;\n    case \"Feature\":\n      callback(geojson.properties, 0);\n      break;\n  }\n}\n\n/**\n * Callback for propReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback propReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {*} currentProperties The current Properties being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Reduce properties in any GeoJSON object into a single value,\n * similar to how Array.reduce works. However, in this case we lazily run\n * the reduction, so an array of all properties is unnecessary.\n *\n * @name propReduce\n * @param {FeatureCollection|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentProperties, featureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.propReduce(features, function (previousValue, currentProperties, featureIndex) {\n *   //=previousValue\n *   //=currentProperties\n *   //=featureIndex\n *   return currentProperties\n * });\n */\nfunction propReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  propEach(geojson, function (currentProperties, featureIndex) {\n    if (featureIndex === 0 && initialValue === undefined)\n      previousValue = currentProperties;\n    else\n      previousValue = callback(previousValue, currentProperties, featureIndex);\n  });\n  return previousValue;\n}\n\n/**\n * Callback for featureEach\n *\n * @callback featureEachCallback\n * @param {Feature<any>} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Iterate over features in any GeoJSON object, similar to\n * Array.forEach.\n *\n * @name featureEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentFeature, featureIndex)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {foo: 'bar'}),\n *   turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.featureEach(features, function (currentFeature, featureIndex) {\n *   //=currentFeature\n *   //=featureIndex\n * });\n */\nfunction featureEach(geojson, callback) {\n  if (geojson.type === \"Feature\") {\n    callback(geojson, 0);\n  } else if (geojson.type === \"FeatureCollection\") {\n    for (var i = 0; i < geojson.features.length; i++) {\n      if (callback(geojson.features[i], i) === false) break;\n    }\n  }\n}\n\n/**\n * Callback for featureReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback featureReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Reduce features in any GeoJSON object, similar to Array.reduce().\n *\n * @name featureReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentFeature, featureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.featureReduce(features, function (previousValue, currentFeature, featureIndex) {\n *   //=previousValue\n *   //=currentFeature\n *   //=featureIndex\n *   return currentFeature\n * });\n */\nfunction featureReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  featureEach(geojson, function (currentFeature, featureIndex) {\n    if (featureIndex === 0 && initialValue === undefined)\n      previousValue = currentFeature;\n    else previousValue = callback(previousValue, currentFeature, featureIndex);\n  });\n  return previousValue;\n}\n\n/**\n * Get all coordinates from any GeoJSON object.\n *\n * @name coordAll\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @returns {Array<Array<number>>} coordinate position array\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {foo: 'bar'}),\n *   turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * var coords = turf.coordAll(features);\n * //= [[26, 37], [36, 53]]\n */\nfunction coordAll(geojson) {\n  var coords = [];\n  coordEach(geojson, function (coord) {\n    coords.push(coord);\n  });\n  return coords;\n}\n\n/**\n * Callback for geomEach\n *\n * @callback geomEachCallback\n * @param {Geometry} currentGeometry The current Geometry being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {Object} featureProperties The current Feature Properties being processed.\n * @param {Array<number>} featureBBox The current Feature BBox being processed.\n * @param {number|string} featureId The current Feature Id being processed.\n */\n\n/**\n * Iterate over each geometry in any GeoJSON object, similar to Array.forEach()\n *\n * @name geomEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentGeometry, featureIndex, featureProperties, featureBBox, featureId)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.geomEach(features, function (currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n *   //=currentGeometry\n *   //=featureIndex\n *   //=featureProperties\n *   //=featureBBox\n *   //=featureId\n * });\n */\nfunction geomEach(geojson, callback) {\n  var i,\n    j,\n    g,\n    geometry,\n    stopG,\n    geometryMaybeCollection,\n    isGeometryCollection,\n    featureProperties,\n    featureBBox,\n    featureId,\n    featureIndex = 0,\n    isFeatureCollection = geojson.type === \"FeatureCollection\",\n    isFeature = geojson.type === \"Feature\",\n    stop = isFeatureCollection ? geojson.features.length : 1;\n\n  // This logic may look a little weird. The reason why it is that way\n  // is because it's trying to be fast. GeoJSON supports multiple kinds\n  // of objects at its root: FeatureCollection, Features, Geometries.\n  // This function has the responsibility of handling all of them, and that\n  // means that some of the `for` loops you see below actually just don't apply\n  // to certain inputs. For instance, if you give this just a\n  // Point geometry, then both loops are short-circuited and all we do\n  // is gradually rename the input until it's called 'geometry'.\n  //\n  // This also aims to allocate as few resources as possible: just a\n  // few numbers and booleans, rather than any temporary arrays as would\n  // be required with the normalization approach.\n  for (i = 0; i < stop; i++) {\n    geometryMaybeCollection = isFeatureCollection\n      ? geojson.features[i].geometry\n      : isFeature\n      ? geojson.geometry\n      : geojson;\n    featureProperties = isFeatureCollection\n      ? geojson.features[i].properties\n      : isFeature\n      ? geojson.properties\n      : {};\n    featureBBox = isFeatureCollection\n      ? geojson.features[i].bbox\n      : isFeature\n      ? geojson.bbox\n      : undefined;\n    featureId = isFeatureCollection\n      ? geojson.features[i].id\n      : isFeature\n      ? geojson.id\n      : undefined;\n    isGeometryCollection = geometryMaybeCollection\n      ? geometryMaybeCollection.type === \"GeometryCollection\"\n      : false;\n    stopG = isGeometryCollection\n      ? geometryMaybeCollection.geometries.length\n      : 1;\n\n    for (g = 0; g < stopG; g++) {\n      geometry = isGeometryCollection\n        ? geometryMaybeCollection.geometries[g]\n        : geometryMaybeCollection;\n\n      // Handle null Geometry\n      if (geometry === null) {\n        if (\n          callback(\n            null,\n            featureIndex,\n            featureProperties,\n            featureBBox,\n            featureId\n          ) === false\n        )\n          return false;\n        continue;\n      }\n      switch (geometry.type) {\n        case \"Point\":\n        case \"LineString\":\n        case \"MultiPoint\":\n        case \"Polygon\":\n        case \"MultiLineString\":\n        case \"MultiPolygon\": {\n          if (\n            callback(\n              geometry,\n              featureIndex,\n              featureProperties,\n              featureBBox,\n              featureId\n            ) === false\n          )\n            return false;\n          break;\n        }\n        case \"GeometryCollection\": {\n          for (j = 0; j < geometry.geometries.length; j++) {\n            if (\n              callback(\n                geometry.geometries[j],\n                featureIndex,\n                featureProperties,\n                featureBBox,\n                featureId\n              ) === false\n            )\n              return false;\n          }\n          break;\n        }\n        default:\n          throw new Error(\"Unknown Geometry Type\");\n      }\n    }\n    // Only increase `featureIndex` per each feature\n    featureIndex++;\n  }\n}\n\n/**\n * Callback for geomReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback geomReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Geometry} currentGeometry The current Geometry being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {Object} featureProperties The current Feature Properties being processed.\n * @param {Array<number>} featureBBox The current Feature BBox being processed.\n * @param {number|string} featureId The current Feature Id being processed.\n */\n\n/**\n * Reduce geometry in any GeoJSON object, similar to Array.reduce().\n *\n * @name geomReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.geomReduce(features, function (previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n *   //=previousValue\n *   //=currentGeometry\n *   //=featureIndex\n *   //=featureProperties\n *   //=featureBBox\n *   //=featureId\n *   return currentGeometry\n * });\n */\nfunction geomReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  geomEach(\n    geojson,\n    function (\n      currentGeometry,\n      featureIndex,\n      featureProperties,\n      featureBBox,\n      featureId\n    ) {\n      if (featureIndex === 0 && initialValue === undefined)\n        previousValue = currentGeometry;\n      else\n        previousValue = callback(\n          previousValue,\n          currentGeometry,\n          featureIndex,\n          featureProperties,\n          featureBBox,\n          featureId\n        );\n    }\n  );\n  return previousValue;\n}\n\n/**\n * Callback for flattenEach\n *\n * @callback flattenEachCallback\n * @param {Feature} currentFeature The current flattened feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n */\n\n/**\n * Iterate over flattened features in any GeoJSON object, similar to\n * Array.forEach.\n *\n * @name flattenEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentFeature, featureIndex, multiFeatureIndex)\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.multiPoint([[40, 30], [36, 53]], {hello: 'world'})\n * ]);\n *\n * turf.flattenEach(features, function (currentFeature, featureIndex, multiFeatureIndex) {\n *   //=currentFeature\n *   //=featureIndex\n *   //=multiFeatureIndex\n * });\n */\nfunction flattenEach(geojson, callback) {\n  geomEach(geojson, function (geometry, featureIndex, properties, bbox, id) {\n    // Callback for single geometry\n    var type = geometry === null ? null : geometry.type;\n    switch (type) {\n      case null:\n      case \"Point\":\n      case \"LineString\":\n      case \"Polygon\":\n        if (\n          callback(\n            helpers.feature(geometry, properties, { bbox: bbox, id: id }),\n            featureIndex,\n            0\n          ) === false\n        )\n          return false;\n        return;\n    }\n\n    var geomType;\n\n    // Callback for multi-geometry\n    switch (type) {\n      case \"MultiPoint\":\n        geomType = \"Point\";\n        break;\n      case \"MultiLineString\":\n        geomType = \"LineString\";\n        break;\n      case \"MultiPolygon\":\n        geomType = \"Polygon\";\n        break;\n    }\n\n    for (\n      var multiFeatureIndex = 0;\n      multiFeatureIndex < geometry.coordinates.length;\n      multiFeatureIndex++\n    ) {\n      var coordinate = geometry.coordinates[multiFeatureIndex];\n      var geom = {\n        type: geomType,\n        coordinates: coordinate,\n      };\n      if (\n        callback(helpers.feature(geom, properties), featureIndex, multiFeatureIndex) ===\n        false\n      )\n        return false;\n    }\n  });\n}\n\n/**\n * Callback for flattenReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback flattenReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n */\n\n/**\n * Reduce flattened features in any GeoJSON object, similar to Array.reduce().\n *\n * @name flattenReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentFeature, featureIndex, multiFeatureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.multiPoint([[40, 30], [36, 53]], {hello: 'world'})\n * ]);\n *\n * turf.flattenReduce(features, function (previousValue, currentFeature, featureIndex, multiFeatureIndex) {\n *   //=previousValue\n *   //=currentFeature\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   return currentFeature\n * });\n */\nfunction flattenReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  flattenEach(\n    geojson,\n    function (currentFeature, featureIndex, multiFeatureIndex) {\n      if (\n        featureIndex === 0 &&\n        multiFeatureIndex === 0 &&\n        initialValue === undefined\n      )\n        previousValue = currentFeature;\n      else\n        previousValue = callback(\n          previousValue,\n          currentFeature,\n          featureIndex,\n          multiFeatureIndex\n        );\n    }\n  );\n  return previousValue;\n}\n\n/**\n * Callback for segmentEach\n *\n * @callback segmentEachCallback\n * @param {Feature<LineString>} currentSegment The current Segment being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n * @param {number} segmentIndex The current index of the Segment being processed.\n * @returns {void}\n */\n\n/**\n * Iterate over 2-vertex line segment in any GeoJSON object, similar to Array.forEach()\n * (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON\n * @param {Function} callback a method that takes (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex)\n * @returns {void}\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n *\n * // Iterate over GeoJSON by 2-vertex segments\n * turf.segmentEach(polygon, function (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n *   //=currentSegment\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   //=segmentIndex\n * });\n *\n * // Calculate the total number of segments\n * var total = 0;\n * turf.segmentEach(polygon, function () {\n *     total++;\n * });\n */\nfunction segmentEach(geojson, callback) {\n  flattenEach(geojson, function (feature, featureIndex, multiFeatureIndex) {\n    var segmentIndex = 0;\n\n    // Exclude null Geometries\n    if (!feature.geometry) return;\n    // (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n    var type = feature.geometry.type;\n    if (type === \"Point\" || type === \"MultiPoint\") return;\n\n    // Generate 2-vertex line segments\n    var previousCoords;\n    var previousFeatureIndex = 0;\n    var previousMultiIndex = 0;\n    var prevGeomIndex = 0;\n    if (\n      coordEach(\n        feature,\n        function (\n          currentCoord,\n          coordIndex,\n          featureIndexCoord,\n          multiPartIndexCoord,\n          geometryIndex\n        ) {\n          // Simulating a meta.coordReduce() since `reduce` operations cannot be stopped by returning `false`\n          if (\n            previousCoords === undefined ||\n            featureIndex > previousFeatureIndex ||\n            multiPartIndexCoord > previousMultiIndex ||\n            geometryIndex > prevGeomIndex\n          ) {\n            previousCoords = currentCoord;\n            previousFeatureIndex = featureIndex;\n            previousMultiIndex = multiPartIndexCoord;\n            prevGeomIndex = geometryIndex;\n            segmentIndex = 0;\n            return;\n          }\n          var currentSegment = helpers.lineString(\n            [previousCoords, currentCoord],\n            feature.properties\n          );\n          if (\n            callback(\n              currentSegment,\n              featureIndex,\n              multiFeatureIndex,\n              geometryIndex,\n              segmentIndex\n            ) === false\n          )\n            return false;\n          segmentIndex++;\n          previousCoords = currentCoord;\n        }\n      ) === false\n    )\n      return false;\n  });\n}\n\n/**\n * Callback for segmentReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback segmentReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature<LineString>} currentSegment The current Segment being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n * @param {number} segmentIndex The current index of the Segment being processed.\n */\n\n/**\n * Reduce 2-vertex line segment in any GeoJSON object, similar to Array.reduce()\n * (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON\n * @param {Function} callback a method that takes (previousValue, currentSegment, currentIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {void}\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n *\n * // Iterate over GeoJSON by 2-vertex segments\n * turf.segmentReduce(polygon, function (previousSegment, currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n *   //= previousSegment\n *   //= currentSegment\n *   //= featureIndex\n *   //= multiFeatureIndex\n *   //= geometryIndex\n *   //= segmentIndex\n *   return currentSegment\n * });\n *\n * // Calculate the total number of segments\n * var initialValue = 0\n * var total = turf.segmentReduce(polygon, function (previousValue) {\n *     previousValue++;\n *     return previousValue;\n * }, initialValue);\n */\nfunction segmentReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  var started = false;\n  segmentEach(\n    geojson,\n    function (\n      currentSegment,\n      featureIndex,\n      multiFeatureIndex,\n      geometryIndex,\n      segmentIndex\n    ) {\n      if (started === false && initialValue === undefined)\n        previousValue = currentSegment;\n      else\n        previousValue = callback(\n          previousValue,\n          currentSegment,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex,\n          segmentIndex\n        );\n      started = true;\n    }\n  );\n  return previousValue;\n}\n\n/**\n * Callback for lineEach\n *\n * @callback lineEachCallback\n * @param {Feature<LineString>} currentLine The current LineString|LinearRing being processed\n * @param {number} featureIndex The current index of the Feature being processed\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed\n * @param {number} geometryIndex The current index of the Geometry being processed\n */\n\n/**\n * Iterate over line or ring coordinates in LineString, Polygon, MultiLineString, MultiPolygon Features or Geometries,\n * similar to Array.forEach.\n *\n * @name lineEach\n * @param {Geometry|Feature<LineString|Polygon|MultiLineString|MultiPolygon>} geojson object\n * @param {Function} callback a method that takes (currentLine, featureIndex, multiFeatureIndex, geometryIndex)\n * @example\n * var multiLine = turf.multiLineString([\n *   [[26, 37], [35, 45]],\n *   [[36, 53], [38, 50], [41, 55]]\n * ]);\n *\n * turf.lineEach(multiLine, function (currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=currentLine\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n * });\n */\nfunction lineEach(geojson, callback) {\n  // validation\n  if (!geojson) throw new Error(\"geojson is required\");\n\n  flattenEach(geojson, function (feature, featureIndex, multiFeatureIndex) {\n    if (feature.geometry === null) return;\n    var type = feature.geometry.type;\n    var coords = feature.geometry.coordinates;\n    switch (type) {\n      case \"LineString\":\n        if (callback(feature, featureIndex, multiFeatureIndex, 0, 0) === false)\n          return false;\n        break;\n      case \"Polygon\":\n        for (\n          var geometryIndex = 0;\n          geometryIndex < coords.length;\n          geometryIndex++\n        ) {\n          if (\n            callback(\n              helpers.lineString(coords[geometryIndex], feature.properties),\n              featureIndex,\n              multiFeatureIndex,\n              geometryIndex\n            ) === false\n          )\n            return false;\n        }\n        break;\n    }\n  });\n}\n\n/**\n * Callback for lineReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback lineReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature<LineString>} currentLine The current LineString|LinearRing being processed.\n * @param {number} featureIndex The current index of the Feature being processed\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed\n * @param {number} geometryIndex The current index of the Geometry being processed\n */\n\n/**\n * Reduce features in any GeoJSON object, similar to Array.reduce().\n *\n * @name lineReduce\n * @param {Geometry|Feature<LineString|Polygon|MultiLineString|MultiPolygon>} geojson object\n * @param {Function} callback a method that takes (previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var multiPoly = turf.multiPolygon([\n *   turf.polygon([[[12,48],[2,41],[24,38],[12,48]], [[9,44],[13,41],[13,45],[9,44]]]),\n *   turf.polygon([[[5, 5], [0, 0], [2, 2], [4, 4], [5, 5]]])\n * ]);\n *\n * turf.lineReduce(multiPoly, function (previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=previousValue\n *   //=currentLine\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   return currentLine\n * });\n */\nfunction lineReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  lineEach(\n    geojson,\n    function (currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n      if (featureIndex === 0 && initialValue === undefined)\n        previousValue = currentLine;\n      else\n        previousValue = callback(\n          previousValue,\n          currentLine,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex\n        );\n    }\n  );\n  return previousValue;\n}\n\n/**\n * Finds a particular 2-vertex LineString Segment from a GeoJSON using `@turf/meta` indexes.\n *\n * Negative indexes are permitted.\n * Point & MultiPoint will always return null.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson Any GeoJSON Feature or Geometry\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.featureIndex=0] Feature Index\n * @param {number} [options.multiFeatureIndex=0] Multi-Feature Index\n * @param {number} [options.geometryIndex=0] Geometry Index\n * @param {number} [options.segmentIndex=0] Segment Index\n * @param {Object} [options.properties={}] Translate Properties to output LineString\n * @param {BBox} [options.bbox={}] Translate BBox to output LineString\n * @param {number|string} [options.id={}] Translate Id to output LineString\n * @returns {Feature<LineString>} 2-vertex GeoJSON Feature LineString\n * @example\n * var multiLine = turf.multiLineString([\n *     [[10, 10], [50, 30], [30, 40]],\n *     [[-10, -10], [-50, -30], [-30, -40]]\n * ]);\n *\n * // First Segment (defaults are 0)\n * turf.findSegment(multiLine);\n * // => Feature<LineString<[[10, 10], [50, 30]]>>\n *\n * // First Segment of 2nd Multi Feature\n * turf.findSegment(multiLine, {multiFeatureIndex: 1});\n * // => Feature<LineString<[[-10, -10], [-50, -30]]>>\n *\n * // Last Segment of Last Multi Feature\n * turf.findSegment(multiLine, {multiFeatureIndex: -1, segmentIndex: -1});\n * // => Feature<LineString<[[-50, -30], [-30, -40]]>>\n */\nfunction findSegment(geojson, options) {\n  // Optional Parameters\n  options = options || {};\n  if (!helpers.isObject(options)) throw new Error(\"options is invalid\");\n  var featureIndex = options.featureIndex || 0;\n  var multiFeatureIndex = options.multiFeatureIndex || 0;\n  var geometryIndex = options.geometryIndex || 0;\n  var segmentIndex = options.segmentIndex || 0;\n\n  // Find FeatureIndex\n  var properties = options.properties;\n  var geometry;\n\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      if (featureIndex < 0)\n        featureIndex = geojson.features.length + featureIndex;\n      properties = properties || geojson.features[featureIndex].properties;\n      geometry = geojson.features[featureIndex].geometry;\n      break;\n    case \"Feature\":\n      properties = properties || geojson.properties;\n      geometry = geojson.geometry;\n      break;\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n    case \"Polygon\":\n    case \"MultiLineString\":\n    case \"MultiPolygon\":\n      geometry = geojson;\n      break;\n    default:\n      throw new Error(\"geojson is invalid\");\n  }\n\n  // Find SegmentIndex\n  if (geometry === null) return null;\n  var coords = geometry.coordinates;\n  switch (geometry.type) {\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n      if (segmentIndex < 0) segmentIndex = coords.length + segmentIndex - 1;\n      return helpers.lineString(\n        [coords[segmentIndex], coords[segmentIndex + 1]],\n        properties,\n        options\n      );\n    case \"Polygon\":\n      if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n      if (segmentIndex < 0)\n        segmentIndex = coords[geometryIndex].length + segmentIndex - 1;\n      return helpers.lineString(\n        [\n          coords[geometryIndex][segmentIndex],\n          coords[geometryIndex][segmentIndex + 1],\n        ],\n        properties,\n        options\n      );\n    case \"MultiLineString\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (segmentIndex < 0)\n        segmentIndex = coords[multiFeatureIndex].length + segmentIndex - 1;\n      return helpers.lineString(\n        [\n          coords[multiFeatureIndex][segmentIndex],\n          coords[multiFeatureIndex][segmentIndex + 1],\n        ],\n        properties,\n        options\n      );\n    case \"MultiPolygon\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (geometryIndex < 0)\n        geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n      if (segmentIndex < 0)\n        segmentIndex =\n          coords[multiFeatureIndex][geometryIndex].length - segmentIndex - 1;\n      return helpers.lineString(\n        [\n          coords[multiFeatureIndex][geometryIndex][segmentIndex],\n          coords[multiFeatureIndex][geometryIndex][segmentIndex + 1],\n        ],\n        properties,\n        options\n      );\n  }\n  throw new Error(\"geojson is invalid\");\n}\n\n/**\n * Finds a particular Point from a GeoJSON using `@turf/meta` indexes.\n *\n * Negative indexes are permitted.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson Any GeoJSON Feature or Geometry\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.featureIndex=0] Feature Index\n * @param {number} [options.multiFeatureIndex=0] Multi-Feature Index\n * @param {number} [options.geometryIndex=0] Geometry Index\n * @param {number} [options.coordIndex=0] Coord Index\n * @param {Object} [options.properties={}] Translate Properties to output Point\n * @param {BBox} [options.bbox={}] Translate BBox to output Point\n * @param {number|string} [options.id={}] Translate Id to output Point\n * @returns {Feature<Point>} 2-vertex GeoJSON Feature Point\n * @example\n * var multiLine = turf.multiLineString([\n *     [[10, 10], [50, 30], [30, 40]],\n *     [[-10, -10], [-50, -30], [-30, -40]]\n * ]);\n *\n * // First Segment (defaults are 0)\n * turf.findPoint(multiLine);\n * // => Feature<Point<[10, 10]>>\n *\n * // First Segment of the 2nd Multi-Feature\n * turf.findPoint(multiLine, {multiFeatureIndex: 1});\n * // => Feature<Point<[-10, -10]>>\n *\n * // Last Segment of last Multi-Feature\n * turf.findPoint(multiLine, {multiFeatureIndex: -1, coordIndex: -1});\n * // => Feature<Point<[-30, -40]>>\n */\nfunction findPoint(geojson, options) {\n  // Optional Parameters\n  options = options || {};\n  if (!helpers.isObject(options)) throw new Error(\"options is invalid\");\n  var featureIndex = options.featureIndex || 0;\n  var multiFeatureIndex = options.multiFeatureIndex || 0;\n  var geometryIndex = options.geometryIndex || 0;\n  var coordIndex = options.coordIndex || 0;\n\n  // Find FeatureIndex\n  var properties = options.properties;\n  var geometry;\n\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      if (featureIndex < 0)\n        featureIndex = geojson.features.length + featureIndex;\n      properties = properties || geojson.features[featureIndex].properties;\n      geometry = geojson.features[featureIndex].geometry;\n      break;\n    case \"Feature\":\n      properties = properties || geojson.properties;\n      geometry = geojson.geometry;\n      break;\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n    case \"Polygon\":\n    case \"MultiLineString\":\n    case \"MultiPolygon\":\n      geometry = geojson;\n      break;\n    default:\n      throw new Error(\"geojson is invalid\");\n  }\n\n  // Find Coord Index\n  if (geometry === null) return null;\n  var coords = geometry.coordinates;\n  switch (geometry.type) {\n    case \"Point\":\n      return helpers.point(coords, properties, options);\n    case \"MultiPoint\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      return helpers.point(coords[multiFeatureIndex], properties, options);\n    case \"LineString\":\n      if (coordIndex < 0) coordIndex = coords.length + coordIndex;\n      return helpers.point(coords[coordIndex], properties, options);\n    case \"Polygon\":\n      if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n      if (coordIndex < 0)\n        coordIndex = coords[geometryIndex].length + coordIndex;\n      return helpers.point(coords[geometryIndex][coordIndex], properties, options);\n    case \"MultiLineString\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (coordIndex < 0)\n        coordIndex = coords[multiFeatureIndex].length + coordIndex;\n      return helpers.point(coords[multiFeatureIndex][coordIndex], properties, options);\n    case \"MultiPolygon\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (geometryIndex < 0)\n        geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n      if (coordIndex < 0)\n        coordIndex =\n          coords[multiFeatureIndex][geometryIndex].length - coordIndex;\n      return helpers.point(\n        coords[multiFeatureIndex][geometryIndex][coordIndex],\n        properties,\n        options\n      );\n  }\n  throw new Error(\"geojson is invalid\");\n}\n\nexports.coordAll = coordAll;\nexports.coordEach = coordEach;\nexports.coordReduce = coordReduce;\nexports.featureEach = featureEach;\nexports.featureReduce = featureReduce;\nexports.findPoint = findPoint;\nexports.findSegment = findSegment;\nexports.flattenEach = flattenEach;\nexports.flattenReduce = flattenReduce;\nexports.geomEach = geomEach;\nexports.geomReduce = geomReduce;\nexports.lineEach = lineEach;\nexports.lineReduce = lineReduce;\nexports.propEach = propEach;\nexports.propReduce = propReduce;\nexports.segmentEach = segmentEach;\nexports.segmentReduce = segmentReduce;\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.quickselect = factory());\n}(this, (function () { 'use strict';\n\nfunction quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\nreturn quickselect;\n\n})));\n","'use strict';\n\nmodule.exports = rbush;\nmodule.exports.default = rbush;\n\nvar quickselect = require('quickselect');\n\nfunction rbush(maxEntries, format) {\n    if (!(this instanceof rbush)) return new rbush(maxEntries, format);\n\n    // max entries in a node is 9 by default; min node fill is 40% for best performance\n    this._maxEntries = Math.max(4, maxEntries || 9);\n    this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n\n    if (format) {\n        this._initFormat(format);\n    }\n\n    this.clear();\n}\n\nrbush.prototype = {\n\n    all: function () {\n        return this._all(this.data, []);\n    },\n\n    search: function (bbox) {\n\n        var node = this.data,\n            result = [],\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return result;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    },\n\n    collides: function (bbox) {\n\n        var node = this.data,\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return false;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    },\n\n    load: function (data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (var i = 0, len = data.length; i < len; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        var node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                var tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    },\n\n    insert: function (item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    },\n\n    clear: function () {\n        this.data = createNode([]);\n        return this;\n    },\n\n    remove: function (item, equalsFn) {\n        if (!item) return this;\n\n        var node = this.data,\n            bbox = this.toBBox(item),\n            path = [],\n            indexes = [],\n            i, parent, index, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    },\n\n    toBBox: function (item) { return item; },\n\n    compareMinX: compareNodeMinX,\n    compareMinY: compareNodeMinY,\n\n    toJSON: function () { return this.data; },\n\n    fromJSON: function (data) {\n        this.data = data;\n        return this;\n    },\n\n    _all: function (node, result) {\n        var nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push.apply(result, node.children);\n            else nodesToSearch.push.apply(nodesToSearch, node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    },\n\n    _build: function (items, left, right, height) {\n\n        var N = right - left + 1,\n            M = this._maxEntries,\n            node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        var N2 = Math.ceil(N / M),\n            N1 = N2 * Math.ceil(Math.sqrt(M)),\n            i, j, right2, right3;\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (i = left; i <= right; i += N1) {\n\n            right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (j = i; j <= right2; j += N2) {\n\n                right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    },\n\n    _chooseSubtree: function (bbox, node, level, path) {\n\n        var i, len, child, targetNode, area, enlargement, minArea, minEnlargement;\n\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            minArea = minEnlargement = Infinity;\n\n            for (i = 0, len = node.children.length; i < len; i++) {\n                child = node.children[i];\n                area = bboxArea(child);\n                enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    },\n\n    _insert: function (item, level, isNode) {\n\n        var toBBox = this.toBBox,\n            bbox = isNode ? item : toBBox(item),\n            insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        var node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    },\n\n    // split overflowed node into two\n    _split: function (insertPath, level) {\n\n        var node = insertPath[level],\n            M = node.children.length,\n            m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        var splitIndex = this._chooseSplitIndex(node, m, M);\n\n        var newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    },\n\n    _splitRoot: function (node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    },\n\n    _chooseSplitIndex: function (node, m, M) {\n\n        var i, bbox1, bbox2, overlap, area, minOverlap, minArea, index;\n\n        minOverlap = minArea = Infinity;\n\n        for (i = m; i <= M - m; i++) {\n            bbox1 = distBBox(node, 0, i, this.toBBox);\n            bbox2 = distBBox(node, i, M, this.toBBox);\n\n            overlap = intersectionArea(bbox1, bbox2);\n            area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index;\n    },\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis: function (node, m, M) {\n\n        var compareMinX = node.leaf ? this.compareMinX : compareNodeMinX,\n            compareMinY = node.leaf ? this.compareMinY : compareNodeMinY,\n            xMargin = this._allDistMargin(node, m, M, compareMinX),\n            yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    },\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin: function (node, m, M, compare) {\n\n        node.children.sort(compare);\n\n        var toBBox = this.toBBox,\n            leftBBox = distBBox(node, 0, m, toBBox),\n            rightBBox = distBBox(node, M - m, M, toBBox),\n            margin = bboxMargin(leftBBox) + bboxMargin(rightBBox),\n            i, child;\n\n        for (i = m; i < M - m; i++) {\n            child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (i = M - m - 1; i >= m; i--) {\n            child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    },\n\n    _adjustParentBBoxes: function (bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (var i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    },\n\n    _condense: function (path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (var i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    },\n\n    _initFormat: function (format) {\n        // data format (minX, minY, maxX, maxY accessors)\n\n        // uses eval-type function compilation instead of just accepting a toBBox function\n        // because the algorithms are very sensitive to sorting functions performance,\n        // so they should be dead simple and without inner calls\n\n        var compareArr = ['return a', ' - b', ';'];\n\n        this.compareMinX = new Function('a', 'b', compareArr.join(format[0]));\n        this.compareMinY = new Function('a', 'b', compareArr.join(format[1]));\n\n        this.toBBox = new Function('a',\n            'return {minX: a' + format[0] +\n            ', minY: a' + format[1] +\n            ', maxX: a' + format[2] +\n            ', maxY: a' + format[3] + '};');\n    }\n};\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (var i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (var i = k, child; i < p; i++) {\n        child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    var minX = Math.max(a.minX, b.minX),\n        minY = Math.max(a.minY, b.minY),\n        maxX = Math.min(a.maxX, b.maxX),\n        maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children: children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    var stack = [left, right],\n        mid;\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","module.exports = function pointInPolygonFlat (point, vs, start, end) {\n    var x = point[0], y = point[1];\n    var inside = false;\n    if (start === undefined) start = 0;\n    if (end === undefined) end = vs.length;\n    var len = (end-start)/2;\n    for (var i = 0, j = len - 1; i < len; j = i++) {\n        var xi = vs[start+i*2+0], yi = vs[start+i*2+1];\n        var xj = vs[start+j*2+0], yj = vs[start+j*2+1];\n        var intersect = ((yi > y) !== (yj > y))\n            && (x < (xj - xi) * (y - yi) / (yj - yi) + xi);\n        if (intersect) inside = !inside;\n    }\n    return inside;\n};\n","var pointInPolygonFlat = require('./flat.js')\nvar pointInPolygonNested = require('./nested.js')\n\nmodule.exports = function pointInPolygon (point, vs, start, end) {\n    if (vs.length > 0 && Array.isArray(vs[0])) {\n        return pointInPolygonNested(point, vs, start, end);\n    } else {\n        return pointInPolygonFlat(point, vs, start, end);\n    }\n}\nmodule.exports.nested = pointInPolygonNested\nmodule.exports.flat = pointInPolygonFlat\n","// ray-casting algorithm based on\n// https://wrf.ecse.rpi.edu/Research/Short_Notes/pnpoly.html\n\nmodule.exports = function pointInPolygonNested (point, vs, start, end) {\n    var x = point[0], y = point[1];\n    var inside = false;\n    if (start === undefined) start = 0;\n    if (end === undefined) end = vs.length;\n    var len = end - start;\n    for (var i = 0, j = len - 1; i < len; j = i++) {\n        var xi = vs[i+start][0], yi = vs[i+start][1];\n        var xj = vs[j+start][0], yj = vs[j+start][1];\n        var intersect = ((yi > y) !== (yj > y))\n            && (x < (xj - xi) * (y - yi) / (yj - yi) + xi);\n        if (intersect) inside = !inside;\n    }\n    return inside;\n};\n","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.polygonClipping = factory());\n}(this, (function () { 'use strict';\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  /**\n   * splaytree v3.1.0\n   * Fast Splay tree for Node and browser\n   *\n   * @author Alexander Milevski <info@w8r.name>\n   * @license MIT\n   * @preserve\n   */\n  var Node =\n  /** @class */\n  function () {\n    function Node(key, data) {\n      this.next = null;\n      this.key = key;\n      this.data = data;\n      this.left = null;\n      this.right = null;\n    }\n\n    return Node;\n  }();\n  /* follows \"An implementation of top-down splaying\"\r\n   * by D. Sleator <sleator@cs.cmu.edu> March 1992\r\n   */\n\n\n  function DEFAULT_COMPARE(a, b) {\n    return a > b ? 1 : a < b ? -1 : 0;\n  }\n  /**\r\n   * Simple top down splay, not requiring i to be in the tree t.\r\n   */\n\n\n  function splay(i, t, comparator) {\n    var N = new Node(null, null);\n    var l = N;\n    var r = N;\n\n    while (true) {\n      var cmp = comparator(i, t.key); //if (i < t.key) {\n\n      if (cmp < 0) {\n        if (t.left === null) break; //if (i < t.left.key) {\n\n        if (comparator(i, t.left.key) < 0) {\n          var y = t.left;\n          /* rotate right */\n\n          t.left = y.right;\n          y.right = t;\n          t = y;\n          if (t.left === null) break;\n        }\n\n        r.left = t;\n        /* link right */\n\n        r = t;\n        t = t.left; //} else if (i > t.key) {\n      } else if (cmp > 0) {\n        if (t.right === null) break; //if (i > t.right.key) {\n\n        if (comparator(i, t.right.key) > 0) {\n          var y = t.right;\n          /* rotate left */\n\n          t.right = y.left;\n          y.left = t;\n          t = y;\n          if (t.right === null) break;\n        }\n\n        l.right = t;\n        /* link left */\n\n        l = t;\n        t = t.right;\n      } else break;\n    }\n    /* assemble */\n\n\n    l.right = t.left;\n    r.left = t.right;\n    t.left = N.right;\n    t.right = N.left;\n    return t;\n  }\n\n  function insert(i, data, t, comparator) {\n    var node = new Node(i, data);\n\n    if (t === null) {\n      node.left = node.right = null;\n      return node;\n    }\n\n    t = splay(i, t, comparator);\n    var cmp = comparator(i, t.key);\n\n    if (cmp < 0) {\n      node.left = t.left;\n      node.right = t;\n      t.left = null;\n    } else if (cmp >= 0) {\n      node.right = t.right;\n      node.left = t;\n      t.right = null;\n    }\n\n    return node;\n  }\n\n  function split(key, v, comparator) {\n    var left = null;\n    var right = null;\n\n    if (v) {\n      v = splay(key, v, comparator);\n      var cmp = comparator(v.key, key);\n\n      if (cmp === 0) {\n        left = v.left;\n        right = v.right;\n      } else if (cmp < 0) {\n        right = v.right;\n        v.right = null;\n        left = v;\n      } else {\n        left = v.left;\n        v.left = null;\n        right = v;\n      }\n    }\n\n    return {\n      left: left,\n      right: right\n    };\n  }\n\n  function merge(left, right, comparator) {\n    if (right === null) return left;\n    if (left === null) return right;\n    right = splay(left.key, right, comparator);\n    right.left = left;\n    return right;\n  }\n  /**\r\n   * Prints level of the tree\r\n   */\n\n\n  function printRow(root, prefix, isTail, out, printNode) {\n    if (root) {\n      out(\"\" + prefix + (isTail ? '└── ' : '├── ') + printNode(root) + \"\\n\");\n      var indent = prefix + (isTail ? '    ' : '│   ');\n      if (root.left) printRow(root.left, indent, false, out, printNode);\n      if (root.right) printRow(root.right, indent, true, out, printNode);\n    }\n  }\n\n  var Tree =\n  /** @class */\n  function () {\n    function Tree(comparator) {\n      if (comparator === void 0) {\n        comparator = DEFAULT_COMPARE;\n      }\n\n      this._root = null;\n      this._size = 0;\n      this._comparator = comparator;\n    }\n    /**\r\n     * Inserts a key, allows duplicates\r\n     */\n\n\n    Tree.prototype.insert = function (key, data) {\n      this._size++;\n      return this._root = insert(key, data, this._root, this._comparator);\n    };\n    /**\r\n     * Adds a key, if it is not present in the tree\r\n     */\n\n\n    Tree.prototype.add = function (key, data) {\n      var node = new Node(key, data);\n\n      if (this._root === null) {\n        node.left = node.right = null;\n        this._size++;\n        this._root = node;\n      }\n\n      var comparator = this._comparator;\n      var t = splay(key, this._root, comparator);\n      var cmp = comparator(key, t.key);\n      if (cmp === 0) this._root = t;else {\n        if (cmp < 0) {\n          node.left = t.left;\n          node.right = t;\n          t.left = null;\n        } else if (cmp > 0) {\n          node.right = t.right;\n          node.left = t;\n          t.right = null;\n        }\n\n        this._size++;\n        this._root = node;\n      }\n      return this._root;\n    };\n    /**\r\n     * @param  {Key} key\r\n     * @return {Node|null}\r\n     */\n\n\n    Tree.prototype.remove = function (key) {\n      this._root = this._remove(key, this._root, this._comparator);\n    };\n    /**\r\n     * Deletes i from the tree if it's there\r\n     */\n\n\n    Tree.prototype._remove = function (i, t, comparator) {\n      var x;\n      if (t === null) return null;\n      t = splay(i, t, comparator);\n      var cmp = comparator(i, t.key);\n\n      if (cmp === 0) {\n        /* found it */\n        if (t.left === null) {\n          x = t.right;\n        } else {\n          x = splay(i, t.left, comparator);\n          x.right = t.right;\n        }\n\n        this._size--;\n        return x;\n      }\n\n      return t;\n      /* It wasn't there */\n    };\n    /**\r\n     * Removes and returns the node with smallest key\r\n     */\n\n\n    Tree.prototype.pop = function () {\n      var node = this._root;\n\n      if (node) {\n        while (node.left) {\n          node = node.left;\n        }\n\n        this._root = splay(node.key, this._root, this._comparator);\n        this._root = this._remove(node.key, this._root, this._comparator);\n        return {\n          key: node.key,\n          data: node.data\n        };\n      }\n\n      return null;\n    };\n    /**\r\n     * Find without splaying\r\n     */\n\n\n    Tree.prototype.findStatic = function (key) {\n      var current = this._root;\n      var compare = this._comparator;\n\n      while (current) {\n        var cmp = compare(key, current.key);\n        if (cmp === 0) return current;else if (cmp < 0) current = current.left;else current = current.right;\n      }\n\n      return null;\n    };\n\n    Tree.prototype.find = function (key) {\n      if (this._root) {\n        this._root = splay(key, this._root, this._comparator);\n        if (this._comparator(key, this._root.key) !== 0) return null;\n      }\n\n      return this._root;\n    };\n\n    Tree.prototype.contains = function (key) {\n      var current = this._root;\n      var compare = this._comparator;\n\n      while (current) {\n        var cmp = compare(key, current.key);\n        if (cmp === 0) return true;else if (cmp < 0) current = current.left;else current = current.right;\n      }\n\n      return false;\n    };\n\n    Tree.prototype.forEach = function (visitor, ctx) {\n      var current = this._root;\n      var Q = [];\n      /* Initialize stack s */\n\n      var done = false;\n\n      while (!done) {\n        if (current !== null) {\n          Q.push(current);\n          current = current.left;\n        } else {\n          if (Q.length !== 0) {\n            current = Q.pop();\n            visitor.call(ctx, current);\n            current = current.right;\n          } else done = true;\n        }\n      }\n\n      return this;\n    };\n    /**\r\n     * Walk key range from `low` to `high`. Stops if `fn` returns a value.\r\n     */\n\n\n    Tree.prototype.range = function (low, high, fn, ctx) {\n      var Q = [];\n      var compare = this._comparator;\n      var node = this._root;\n      var cmp;\n\n      while (Q.length !== 0 || node) {\n        if (node) {\n          Q.push(node);\n          node = node.left;\n        } else {\n          node = Q.pop();\n          cmp = compare(node.key, high);\n\n          if (cmp > 0) {\n            break;\n          } else if (compare(node.key, low) >= 0) {\n            if (fn.call(ctx, node)) return this; // stop if smth is returned\n          }\n\n          node = node.right;\n        }\n      }\n\n      return this;\n    };\n    /**\r\n     * Returns array of keys\r\n     */\n\n\n    Tree.prototype.keys = function () {\n      var keys = [];\n      this.forEach(function (_a) {\n        var key = _a.key;\n        return keys.push(key);\n      });\n      return keys;\n    };\n    /**\r\n     * Returns array of all the data in the nodes\r\n     */\n\n\n    Tree.prototype.values = function () {\n      var values = [];\n      this.forEach(function (_a) {\n        var data = _a.data;\n        return values.push(data);\n      });\n      return values;\n    };\n\n    Tree.prototype.min = function () {\n      if (this._root) return this.minNode(this._root).key;\n      return null;\n    };\n\n    Tree.prototype.max = function () {\n      if (this._root) return this.maxNode(this._root).key;\n      return null;\n    };\n\n    Tree.prototype.minNode = function (t) {\n      if (t === void 0) {\n        t = this._root;\n      }\n\n      if (t) while (t.left) {\n        t = t.left;\n      }\n      return t;\n    };\n\n    Tree.prototype.maxNode = function (t) {\n      if (t === void 0) {\n        t = this._root;\n      }\n\n      if (t) while (t.right) {\n        t = t.right;\n      }\n      return t;\n    };\n    /**\r\n     * Returns node at given index\r\n     */\n\n\n    Tree.prototype.at = function (index) {\n      var current = this._root;\n      var done = false;\n      var i = 0;\n      var Q = [];\n\n      while (!done) {\n        if (current) {\n          Q.push(current);\n          current = current.left;\n        } else {\n          if (Q.length > 0) {\n            current = Q.pop();\n            if (i === index) return current;\n            i++;\n            current = current.right;\n          } else done = true;\n        }\n      }\n\n      return null;\n    };\n\n    Tree.prototype.next = function (d) {\n      var root = this._root;\n      var successor = null;\n\n      if (d.right) {\n        successor = d.right;\n\n        while (successor.left) {\n          successor = successor.left;\n        }\n\n        return successor;\n      }\n\n      var comparator = this._comparator;\n\n      while (root) {\n        var cmp = comparator(d.key, root.key);\n        if (cmp === 0) break;else if (cmp < 0) {\n          successor = root;\n          root = root.left;\n        } else root = root.right;\n      }\n\n      return successor;\n    };\n\n    Tree.prototype.prev = function (d) {\n      var root = this._root;\n      var predecessor = null;\n\n      if (d.left !== null) {\n        predecessor = d.left;\n\n        while (predecessor.right) {\n          predecessor = predecessor.right;\n        }\n\n        return predecessor;\n      }\n\n      var comparator = this._comparator;\n\n      while (root) {\n        var cmp = comparator(d.key, root.key);\n        if (cmp === 0) break;else if (cmp < 0) root = root.left;else {\n          predecessor = root;\n          root = root.right;\n        }\n      }\n\n      return predecessor;\n    };\n\n    Tree.prototype.clear = function () {\n      this._root = null;\n      this._size = 0;\n      return this;\n    };\n\n    Tree.prototype.toList = function () {\n      return toList(this._root);\n    };\n    /**\r\n     * Bulk-load items. Both array have to be same size\r\n     */\n\n\n    Tree.prototype.load = function (keys, values, presort) {\n      if (values === void 0) {\n        values = [];\n      }\n\n      if (presort === void 0) {\n        presort = false;\n      }\n\n      var size = keys.length;\n      var comparator = this._comparator; // sort if needed\n\n      if (presort) sort(keys, values, 0, size - 1, comparator);\n\n      if (this._root === null) {\n        // empty tree\n        this._root = loadRecursive(keys, values, 0, size);\n        this._size = size;\n      } else {\n        // that re-builds the whole tree from two in-order traversals\n        var mergedList = mergeLists(this.toList(), createList(keys, values), comparator);\n        size = this._size + size;\n        this._root = sortedListToBST({\n          head: mergedList\n        }, 0, size);\n      }\n\n      return this;\n    };\n\n    Tree.prototype.isEmpty = function () {\n      return this._root === null;\n    };\n\n    Object.defineProperty(Tree.prototype, \"size\", {\n      get: function get() {\n        return this._size;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(Tree.prototype, \"root\", {\n      get: function get() {\n        return this._root;\n      },\n      enumerable: true,\n      configurable: true\n    });\n\n    Tree.prototype.toString = function (printNode) {\n      if (printNode === void 0) {\n        printNode = function printNode(n) {\n          return String(n.key);\n        };\n      }\n\n      var out = [];\n      printRow(this._root, '', true, function (v) {\n        return out.push(v);\n      }, printNode);\n      return out.join('');\n    };\n\n    Tree.prototype.update = function (key, newKey, newData) {\n      var comparator = this._comparator;\n\n      var _a = split(key, this._root, comparator),\n          left = _a.left,\n          right = _a.right;\n\n      if (comparator(key, newKey) < 0) {\n        right = insert(newKey, newData, right, comparator);\n      } else {\n        left = insert(newKey, newData, left, comparator);\n      }\n\n      this._root = merge(left, right, comparator);\n    };\n\n    Tree.prototype.split = function (key) {\n      return split(key, this._root, this._comparator);\n    };\n\n    return Tree;\n  }();\n\n  function loadRecursive(keys, values, start, end) {\n    var size = end - start;\n\n    if (size > 0) {\n      var middle = start + Math.floor(size / 2);\n      var key = keys[middle];\n      var data = values[middle];\n      var node = new Node(key, data);\n      node.left = loadRecursive(keys, values, start, middle);\n      node.right = loadRecursive(keys, values, middle + 1, end);\n      return node;\n    }\n\n    return null;\n  }\n\n  function createList(keys, values) {\n    var head = new Node(null, null);\n    var p = head;\n\n    for (var i = 0; i < keys.length; i++) {\n      p = p.next = new Node(keys[i], values[i]);\n    }\n\n    p.next = null;\n    return head.next;\n  }\n\n  function toList(root) {\n    var current = root;\n    var Q = [];\n    var done = false;\n    var head = new Node(null, null);\n    var p = head;\n\n    while (!done) {\n      if (current) {\n        Q.push(current);\n        current = current.left;\n      } else {\n        if (Q.length > 0) {\n          current = p = p.next = Q.pop();\n          current = current.right;\n        } else done = true;\n      }\n    }\n\n    p.next = null; // that'll work even if the tree was empty\n\n    return head.next;\n  }\n\n  function sortedListToBST(list, start, end) {\n    var size = end - start;\n\n    if (size > 0) {\n      var middle = start + Math.floor(size / 2);\n      var left = sortedListToBST(list, start, middle);\n      var root = list.head;\n      root.left = left;\n      list.head = list.head.next;\n      root.right = sortedListToBST(list, middle + 1, end);\n      return root;\n    }\n\n    return null;\n  }\n\n  function mergeLists(l1, l2, compare) {\n    var head = new Node(null, null); // dummy\n\n    var p = head;\n    var p1 = l1;\n    var p2 = l2;\n\n    while (p1 !== null && p2 !== null) {\n      if (compare(p1.key, p2.key) < 0) {\n        p.next = p1;\n        p1 = p1.next;\n      } else {\n        p.next = p2;\n        p2 = p2.next;\n      }\n\n      p = p.next;\n    }\n\n    if (p1 !== null) {\n      p.next = p1;\n    } else if (p2 !== null) {\n      p.next = p2;\n    }\n\n    return head.next;\n  }\n\n  function sort(keys, values, left, right, compare) {\n    if (left >= right) return;\n    var pivot = keys[left + right >> 1];\n    var i = left - 1;\n    var j = right + 1;\n\n    while (true) {\n      do {\n        i++;\n      } while (compare(keys[i], pivot) < 0);\n\n      do {\n        j--;\n      } while (compare(keys[j], pivot) > 0);\n\n      if (i >= j) break;\n      var tmp = keys[i];\n      keys[i] = keys[j];\n      keys[j] = tmp;\n      tmp = values[i];\n      values[i] = values[j];\n      values[j] = tmp;\n    }\n\n    sort(keys, values, left, j, compare);\n    sort(keys, values, j + 1, right, compare);\n  }\n\n  /**\n   * A bounding box has the format:\n   *\n   *  { ll: { x: xmin, y: ymin }, ur: { x: xmax, y: ymax } }\n   *\n   */\n  var isInBbox = function isInBbox(bbox, point) {\n    return bbox.ll.x <= point.x && point.x <= bbox.ur.x && bbox.ll.y <= point.y && point.y <= bbox.ur.y;\n  };\n  /* Returns either null, or a bbox (aka an ordered pair of points)\n   * If there is only one point of overlap, a bbox with identical points\n   * will be returned */\n\n  var getBboxOverlap = function getBboxOverlap(b1, b2) {\n    // check if the bboxes overlap at all\n    if (b2.ur.x < b1.ll.x || b1.ur.x < b2.ll.x || b2.ur.y < b1.ll.y || b1.ur.y < b2.ll.y) return null; // find the middle two X values\n\n    var lowerX = b1.ll.x < b2.ll.x ? b2.ll.x : b1.ll.x;\n    var upperX = b1.ur.x < b2.ur.x ? b1.ur.x : b2.ur.x; // find the middle two Y values\n\n    var lowerY = b1.ll.y < b2.ll.y ? b2.ll.y : b1.ll.y;\n    var upperY = b1.ur.y < b2.ur.y ? b1.ur.y : b2.ur.y; // put those middle values together to get the overlap\n\n    return {\n      ll: {\n        x: lowerX,\n        y: lowerY\n      },\n      ur: {\n        x: upperX,\n        y: upperY\n      }\n    };\n  };\n\n  /* Javascript doesn't do integer math. Everything is\n   * floating point with percision Number.EPSILON.\n   *\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/EPSILON\n   */\n  var epsilon = Number.EPSILON; // IE Polyfill\n\n  if (epsilon === undefined) epsilon = Math.pow(2, -52);\n  var EPSILON_SQ = epsilon * epsilon;\n  /* FLP comparator */\n\n  var cmp = function cmp(a, b) {\n    // check if they're both 0\n    if (-epsilon < a && a < epsilon) {\n      if (-epsilon < b && b < epsilon) {\n        return 0;\n      }\n    } // check if they're flp equal\n\n\n    var ab = a - b;\n\n    if (ab * ab < EPSILON_SQ * a * b) {\n      return 0;\n    } // normal comparison\n\n\n    return a < b ? -1 : 1;\n  };\n\n  /**\n   * This class rounds incoming values sufficiently so that\n   * floating points problems are, for the most part, avoided.\n   *\n   * Incoming points are have their x & y values tested against\n   * all previously seen x & y values. If either is 'too close'\n   * to a previously seen value, it's value is 'snapped' to the\n   * previously seen value.\n   *\n   * All points should be rounded by this class before being\n   * stored in any data structures in the rest of this algorithm.\n   */\n\n  var PtRounder = /*#__PURE__*/function () {\n    function PtRounder() {\n      _classCallCheck(this, PtRounder);\n\n      this.reset();\n    }\n\n    _createClass(PtRounder, [{\n      key: \"reset\",\n      value: function reset() {\n        this.xRounder = new CoordRounder();\n        this.yRounder = new CoordRounder();\n      }\n    }, {\n      key: \"round\",\n      value: function round(x, y) {\n        return {\n          x: this.xRounder.round(x),\n          y: this.yRounder.round(y)\n        };\n      }\n    }]);\n\n    return PtRounder;\n  }();\n\n  var CoordRounder = /*#__PURE__*/function () {\n    function CoordRounder() {\n      _classCallCheck(this, CoordRounder);\n\n      this.tree = new Tree(); // preseed with 0 so we don't end up with values < Number.EPSILON\n\n      this.round(0);\n    } // Note: this can rounds input values backwards or forwards.\n    //       You might ask, why not restrict this to just rounding\n    //       forwards? Wouldn't that allow left endpoints to always\n    //       remain left endpoints during splitting (never change to\n    //       right). No - it wouldn't, because we snap intersections\n    //       to endpoints (to establish independence from the segment\n    //       angle for t-intersections).\n\n\n    _createClass(CoordRounder, [{\n      key: \"round\",\n      value: function round(coord) {\n        var node = this.tree.add(coord);\n        var prevNode = this.tree.prev(node);\n\n        if (prevNode !== null && cmp(node.key, prevNode.key) === 0) {\n          this.tree.remove(coord);\n          return prevNode.key;\n        }\n\n        var nextNode = this.tree.next(node);\n\n        if (nextNode !== null && cmp(node.key, nextNode.key) === 0) {\n          this.tree.remove(coord);\n          return nextNode.key;\n        }\n\n        return coord;\n      }\n    }]);\n\n    return CoordRounder;\n  }(); // singleton available by import\n\n\n  var rounder = new PtRounder();\n\n  /* Cross Product of two vectors with first point at origin */\n\n  var crossProduct = function crossProduct(a, b) {\n    return a.x * b.y - a.y * b.x;\n  };\n  /* Dot Product of two vectors with first point at origin */\n\n  var dotProduct = function dotProduct(a, b) {\n    return a.x * b.x + a.y * b.y;\n  };\n  /* Comparator for two vectors with same starting point */\n\n  var compareVectorAngles = function compareVectorAngles(basePt, endPt1, endPt2) {\n    var v1 = {\n      x: endPt1.x - basePt.x,\n      y: endPt1.y - basePt.y\n    };\n    var v2 = {\n      x: endPt2.x - basePt.x,\n      y: endPt2.y - basePt.y\n    };\n    var kross = crossProduct(v1, v2);\n    return cmp(kross, 0);\n  };\n  var length = function length(v) {\n    return Math.sqrt(dotProduct(v, v));\n  };\n  /* Get the sine of the angle from pShared -> pAngle to pShaed -> pBase */\n\n  var sineOfAngle = function sineOfAngle(pShared, pBase, pAngle) {\n    var vBase = {\n      x: pBase.x - pShared.x,\n      y: pBase.y - pShared.y\n    };\n    var vAngle = {\n      x: pAngle.x - pShared.x,\n      y: pAngle.y - pShared.y\n    };\n    return crossProduct(vAngle, vBase) / length(vAngle) / length(vBase);\n  };\n  /* Get the cosine of the angle from pShared -> pAngle to pShaed -> pBase */\n\n  var cosineOfAngle = function cosineOfAngle(pShared, pBase, pAngle) {\n    var vBase = {\n      x: pBase.x - pShared.x,\n      y: pBase.y - pShared.y\n    };\n    var vAngle = {\n      x: pAngle.x - pShared.x,\n      y: pAngle.y - pShared.y\n    };\n    return dotProduct(vAngle, vBase) / length(vAngle) / length(vBase);\n  };\n  /* Get the x coordinate where the given line (defined by a point and vector)\n   * crosses the horizontal line with the given y coordiante.\n   * In the case of parrallel lines (including overlapping ones) returns null. */\n\n  var horizontalIntersection = function horizontalIntersection(pt, v, y) {\n    if (v.y === 0) return null;\n    return {\n      x: pt.x + v.x / v.y * (y - pt.y),\n      y: y\n    };\n  };\n  /* Get the y coordinate where the given line (defined by a point and vector)\n   * crosses the vertical line with the given x coordiante.\n   * In the case of parrallel lines (including overlapping ones) returns null. */\n\n  var verticalIntersection = function verticalIntersection(pt, v, x) {\n    if (v.x === 0) return null;\n    return {\n      x: x,\n      y: pt.y + v.y / v.x * (x - pt.x)\n    };\n  };\n  /* Get the intersection of two lines, each defined by a base point and a vector.\n   * In the case of parrallel lines (including overlapping ones) returns null. */\n\n  var intersection = function intersection(pt1, v1, pt2, v2) {\n    // take some shortcuts for vertical and horizontal lines\n    // this also ensures we don't calculate an intersection and then discover\n    // it's actually outside the bounding box of the line\n    if (v1.x === 0) return verticalIntersection(pt2, v2, pt1.x);\n    if (v2.x === 0) return verticalIntersection(pt1, v1, pt2.x);\n    if (v1.y === 0) return horizontalIntersection(pt2, v2, pt1.y);\n    if (v2.y === 0) return horizontalIntersection(pt1, v1, pt2.y); // General case for non-overlapping segments.\n    // This algorithm is based on Schneider and Eberly.\n    // http://www.cimec.org.ar/~ncalvo/Schneider_Eberly.pdf - pg 244\n\n    var kross = crossProduct(v1, v2);\n    if (kross == 0) return null;\n    var ve = {\n      x: pt2.x - pt1.x,\n      y: pt2.y - pt1.y\n    };\n    var d1 = crossProduct(ve, v1) / kross;\n    var d2 = crossProduct(ve, v2) / kross; // take the average of the two calculations to minimize rounding error\n\n    var x1 = pt1.x + d2 * v1.x,\n        x2 = pt2.x + d1 * v2.x;\n    var y1 = pt1.y + d2 * v1.y,\n        y2 = pt2.y + d1 * v2.y;\n    var x = (x1 + x2) / 2;\n    var y = (y1 + y2) / 2;\n    return {\n      x: x,\n      y: y\n    };\n  };\n\n  var SweepEvent = /*#__PURE__*/function () {\n    _createClass(SweepEvent, null, [{\n      key: \"compare\",\n      // for ordering sweep events in the sweep event queue\n      value: function compare(a, b) {\n        // favor event with a point that the sweep line hits first\n        var ptCmp = SweepEvent.comparePoints(a.point, b.point);\n        if (ptCmp !== 0) return ptCmp; // the points are the same, so link them if needed\n\n        if (a.point !== b.point) a.link(b); // favor right events over left\n\n        if (a.isLeft !== b.isLeft) return a.isLeft ? 1 : -1; // we have two matching left or right endpoints\n        // ordering of this case is the same as for their segments\n\n        return Segment.compare(a.segment, b.segment);\n      } // for ordering points in sweep line order\n\n    }, {\n      key: \"comparePoints\",\n      value: function comparePoints(aPt, bPt) {\n        if (aPt.x < bPt.x) return -1;\n        if (aPt.x > bPt.x) return 1;\n        if (aPt.y < bPt.y) return -1;\n        if (aPt.y > bPt.y) return 1;\n        return 0;\n      } // Warning: 'point' input will be modified and re-used (for performance)\n\n    }]);\n\n    function SweepEvent(point, isLeft) {\n      _classCallCheck(this, SweepEvent);\n\n      if (point.events === undefined) point.events = [this];else point.events.push(this);\n      this.point = point;\n      this.isLeft = isLeft; // this.segment, this.otherSE set by factory\n    }\n\n    _createClass(SweepEvent, [{\n      key: \"link\",\n      value: function link(other) {\n        if (other.point === this.point) {\n          throw new Error('Tried to link already linked events');\n        }\n\n        var otherEvents = other.point.events;\n\n        for (var i = 0, iMax = otherEvents.length; i < iMax; i++) {\n          var evt = otherEvents[i];\n          this.point.events.push(evt);\n          evt.point = this.point;\n        }\n\n        this.checkForConsuming();\n      }\n      /* Do a pass over our linked events and check to see if any pair\n       * of segments match, and should be consumed. */\n\n    }, {\n      key: \"checkForConsuming\",\n      value: function checkForConsuming() {\n        // FIXME: The loops in this method run O(n^2) => no good.\n        //        Maintain little ordered sweep event trees?\n        //        Can we maintaining an ordering that avoids the need\n        //        for the re-sorting with getLeftmostComparator in geom-out?\n        // Compare each pair of events to see if other events also match\n        var numEvents = this.point.events.length;\n\n        for (var i = 0; i < numEvents; i++) {\n          var evt1 = this.point.events[i];\n          if (evt1.segment.consumedBy !== undefined) continue;\n\n          for (var j = i + 1; j < numEvents; j++) {\n            var evt2 = this.point.events[j];\n            if (evt2.consumedBy !== undefined) continue;\n            if (evt1.otherSE.point.events !== evt2.otherSE.point.events) continue;\n            evt1.segment.consume(evt2.segment);\n          }\n        }\n      }\n    }, {\n      key: \"getAvailableLinkedEvents\",\n      value: function getAvailableLinkedEvents() {\n        // point.events is always of length 2 or greater\n        var events = [];\n\n        for (var i = 0, iMax = this.point.events.length; i < iMax; i++) {\n          var evt = this.point.events[i];\n\n          if (evt !== this && !evt.segment.ringOut && evt.segment.isInResult()) {\n            events.push(evt);\n          }\n        }\n\n        return events;\n      }\n      /**\n       * Returns a comparator function for sorting linked events that will\n       * favor the event that will give us the smallest left-side angle.\n       * All ring construction starts as low as possible heading to the right,\n       * so by always turning left as sharp as possible we'll get polygons\n       * without uncessary loops & holes.\n       *\n       * The comparator function has a compute cache such that it avoids\n       * re-computing already-computed values.\n       */\n\n    }, {\n      key: \"getLeftmostComparator\",\n      value: function getLeftmostComparator(baseEvent) {\n        var _this = this;\n\n        var cache = new Map();\n\n        var fillCache = function fillCache(linkedEvent) {\n          var nextEvent = linkedEvent.otherSE;\n          cache.set(linkedEvent, {\n            sine: sineOfAngle(_this.point, baseEvent.point, nextEvent.point),\n            cosine: cosineOfAngle(_this.point, baseEvent.point, nextEvent.point)\n          });\n        };\n\n        return function (a, b) {\n          if (!cache.has(a)) fillCache(a);\n          if (!cache.has(b)) fillCache(b);\n\n          var _cache$get = cache.get(a),\n              asine = _cache$get.sine,\n              acosine = _cache$get.cosine;\n\n          var _cache$get2 = cache.get(b),\n              bsine = _cache$get2.sine,\n              bcosine = _cache$get2.cosine; // both on or above x-axis\n\n\n          if (asine >= 0 && bsine >= 0) {\n            if (acosine < bcosine) return 1;\n            if (acosine > bcosine) return -1;\n            return 0;\n          } // both below x-axis\n\n\n          if (asine < 0 && bsine < 0) {\n            if (acosine < bcosine) return -1;\n            if (acosine > bcosine) return 1;\n            return 0;\n          } // one above x-axis, one below\n\n\n          if (bsine < asine) return -1;\n          if (bsine > asine) return 1;\n          return 0;\n        };\n      }\n    }]);\n\n    return SweepEvent;\n  }();\n\n  // segments and sweep events when all else is identical\n\n  var segmentId = 0;\n\n  var Segment = /*#__PURE__*/function () {\n    _createClass(Segment, null, [{\n      key: \"compare\",\n\n      /* This compare() function is for ordering segments in the sweep\n       * line tree, and does so according to the following criteria:\n       *\n       * Consider the vertical line that lies an infinestimal step to the\n       * right of the right-more of the two left endpoints of the input\n       * segments. Imagine slowly moving a point up from negative infinity\n       * in the increasing y direction. Which of the two segments will that\n       * point intersect first? That segment comes 'before' the other one.\n       *\n       * If neither segment would be intersected by such a line, (if one\n       * or more of the segments are vertical) then the line to be considered\n       * is directly on the right-more of the two left inputs.\n       */\n      value: function compare(a, b) {\n        var alx = a.leftSE.point.x;\n        var blx = b.leftSE.point.x;\n        var arx = a.rightSE.point.x;\n        var brx = b.rightSE.point.x; // check if they're even in the same vertical plane\n\n        if (brx < alx) return 1;\n        if (arx < blx) return -1;\n        var aly = a.leftSE.point.y;\n        var bly = b.leftSE.point.y;\n        var ary = a.rightSE.point.y;\n        var bry = b.rightSE.point.y; // is left endpoint of segment B the right-more?\n\n        if (alx < blx) {\n          // are the two segments in the same horizontal plane?\n          if (bly < aly && bly < ary) return 1;\n          if (bly > aly && bly > ary) return -1; // is the B left endpoint colinear to segment A?\n\n          var aCmpBLeft = a.comparePoint(b.leftSE.point);\n          if (aCmpBLeft < 0) return 1;\n          if (aCmpBLeft > 0) return -1; // is the A right endpoint colinear to segment B ?\n\n          var bCmpARight = b.comparePoint(a.rightSE.point);\n          if (bCmpARight !== 0) return bCmpARight; // colinear segments, consider the one with left-more\n          // left endpoint to be first (arbitrary?)\n\n          return -1;\n        } // is left endpoint of segment A the right-more?\n\n\n        if (alx > blx) {\n          if (aly < bly && aly < bry) return -1;\n          if (aly > bly && aly > bry) return 1; // is the A left endpoint colinear to segment B?\n\n          var bCmpALeft = b.comparePoint(a.leftSE.point);\n          if (bCmpALeft !== 0) return bCmpALeft; // is the B right endpoint colinear to segment A?\n\n          var aCmpBRight = a.comparePoint(b.rightSE.point);\n          if (aCmpBRight < 0) return 1;\n          if (aCmpBRight > 0) return -1; // colinear segments, consider the one with left-more\n          // left endpoint to be first (arbitrary?)\n\n          return 1;\n        } // if we get here, the two left endpoints are in the same\n        // vertical plane, ie alx === blx\n        // consider the lower left-endpoint to come first\n\n\n        if (aly < bly) return -1;\n        if (aly > bly) return 1; // left endpoints are identical\n        // check for colinearity by using the left-more right endpoint\n        // is the A right endpoint more left-more?\n\n        if (arx < brx) {\n          var _bCmpARight = b.comparePoint(a.rightSE.point);\n\n          if (_bCmpARight !== 0) return _bCmpARight;\n        } // is the B right endpoint more left-more?\n\n\n        if (arx > brx) {\n          var _aCmpBRight = a.comparePoint(b.rightSE.point);\n\n          if (_aCmpBRight < 0) return 1;\n          if (_aCmpBRight > 0) return -1;\n        }\n\n        if (arx !== brx) {\n          // are these two [almost] vertical segments with opposite orientation?\n          // if so, the one with the lower right endpoint comes first\n          var ay = ary - aly;\n          var ax = arx - alx;\n          var by = bry - bly;\n          var bx = brx - blx;\n          if (ay > ax && by < bx) return 1;\n          if (ay < ax && by > bx) return -1;\n        } // we have colinear segments with matching orientation\n        // consider the one with more left-more right endpoint to be first\n\n\n        if (arx > brx) return 1;\n        if (arx < brx) return -1; // if we get here, two two right endpoints are in the same\n        // vertical plane, ie arx === brx\n        // consider the lower right-endpoint to come first\n\n        if (ary < bry) return -1;\n        if (ary > bry) return 1; // right endpoints identical as well, so the segments are idential\n        // fall back on creation order as consistent tie-breaker\n\n        if (a.id < b.id) return -1;\n        if (a.id > b.id) return 1; // identical segment, ie a === b\n\n        return 0;\n      }\n      /* Warning: a reference to ringWindings input will be stored,\n       *  and possibly will be later modified */\n\n    }]);\n\n    function Segment(leftSE, rightSE, rings, windings) {\n      _classCallCheck(this, Segment);\n\n      this.id = ++segmentId;\n      this.leftSE = leftSE;\n      leftSE.segment = this;\n      leftSE.otherSE = rightSE;\n      this.rightSE = rightSE;\n      rightSE.segment = this;\n      rightSE.otherSE = leftSE;\n      this.rings = rings;\n      this.windings = windings; // left unset for performance, set later in algorithm\n      // this.ringOut, this.consumedBy, this.prev\n    }\n\n    _createClass(Segment, [{\n      key: \"replaceRightSE\",\n\n      /* When a segment is split, the rightSE is replaced with a new sweep event */\n      value: function replaceRightSE(newRightSE) {\n        this.rightSE = newRightSE;\n        this.rightSE.segment = this;\n        this.rightSE.otherSE = this.leftSE;\n        this.leftSE.otherSE = this.rightSE;\n      }\n    }, {\n      key: \"bbox\",\n      value: function bbox() {\n        var y1 = this.leftSE.point.y;\n        var y2 = this.rightSE.point.y;\n        return {\n          ll: {\n            x: this.leftSE.point.x,\n            y: y1 < y2 ? y1 : y2\n          },\n          ur: {\n            x: this.rightSE.point.x,\n            y: y1 > y2 ? y1 : y2\n          }\n        };\n      }\n      /* A vector from the left point to the right */\n\n    }, {\n      key: \"vector\",\n      value: function vector() {\n        return {\n          x: this.rightSE.point.x - this.leftSE.point.x,\n          y: this.rightSE.point.y - this.leftSE.point.y\n        };\n      }\n    }, {\n      key: \"isAnEndpoint\",\n      value: function isAnEndpoint(pt) {\n        return pt.x === this.leftSE.point.x && pt.y === this.leftSE.point.y || pt.x === this.rightSE.point.x && pt.y === this.rightSE.point.y;\n      }\n      /* Compare this segment with a point.\n       *\n       * A point P is considered to be colinear to a segment if there\n       * exists a distance D such that if we travel along the segment\n       * from one * endpoint towards the other a distance D, we find\n       * ourselves at point P.\n       *\n       * Return value indicates:\n       *\n       *   1: point lies above the segment (to the left of vertical)\n       *   0: point is colinear to segment\n       *  -1: point lies below the segment (to the right of vertical)\n       */\n\n    }, {\n      key: \"comparePoint\",\n      value: function comparePoint(point) {\n        if (this.isAnEndpoint(point)) return 0;\n        var lPt = this.leftSE.point;\n        var rPt = this.rightSE.point;\n        var v = this.vector(); // Exactly vertical segments.\n\n        if (lPt.x === rPt.x) {\n          if (point.x === lPt.x) return 0;\n          return point.x < lPt.x ? 1 : -1;\n        } // Nearly vertical segments with an intersection.\n        // Check to see where a point on the line with matching Y coordinate is.\n\n\n        var yDist = (point.y - lPt.y) / v.y;\n        var xFromYDist = lPt.x + yDist * v.x;\n        if (point.x === xFromYDist) return 0; // General case.\n        // Check to see where a point on the line with matching X coordinate is.\n\n        var xDist = (point.x - lPt.x) / v.x;\n        var yFromXDist = lPt.y + xDist * v.y;\n        if (point.y === yFromXDist) return 0;\n        return point.y < yFromXDist ? -1 : 1;\n      }\n      /**\n       * Given another segment, returns the first non-trivial intersection\n       * between the two segments (in terms of sweep line ordering), if it exists.\n       *\n       * A 'non-trivial' intersection is one that will cause one or both of the\n       * segments to be split(). As such, 'trivial' vs. 'non-trivial' intersection:\n       *\n       *   * endpoint of segA with endpoint of segB --> trivial\n       *   * endpoint of segA with point along segB --> non-trivial\n       *   * endpoint of segB with point along segA --> non-trivial\n       *   * point along segA with point along segB --> non-trivial\n       *\n       * If no non-trivial intersection exists, return null\n       * Else, return null.\n       */\n\n    }, {\n      key: \"getIntersection\",\n      value: function getIntersection(other) {\n        // If bboxes don't overlap, there can't be any intersections\n        var tBbox = this.bbox();\n        var oBbox = other.bbox();\n        var bboxOverlap = getBboxOverlap(tBbox, oBbox);\n        if (bboxOverlap === null) return null; // We first check to see if the endpoints can be considered intersections.\n        // This will 'snap' intersections to endpoints if possible, and will\n        // handle cases of colinearity.\n\n        var tlp = this.leftSE.point;\n        var trp = this.rightSE.point;\n        var olp = other.leftSE.point;\n        var orp = other.rightSE.point; // does each endpoint touch the other segment?\n        // note that we restrict the 'touching' definition to only allow segments\n        // to touch endpoints that lie forward from where we are in the sweep line pass\n\n        var touchesOtherLSE = isInBbox(tBbox, olp) && this.comparePoint(olp) === 0;\n        var touchesThisLSE = isInBbox(oBbox, tlp) && other.comparePoint(tlp) === 0;\n        var touchesOtherRSE = isInBbox(tBbox, orp) && this.comparePoint(orp) === 0;\n        var touchesThisRSE = isInBbox(oBbox, trp) && other.comparePoint(trp) === 0; // do left endpoints match?\n\n        if (touchesThisLSE && touchesOtherLSE) {\n          // these two cases are for colinear segments with matching left\n          // endpoints, and one segment being longer than the other\n          if (touchesThisRSE && !touchesOtherRSE) return trp;\n          if (!touchesThisRSE && touchesOtherRSE) return orp; // either the two segments match exactly (two trival intersections)\n          // or just on their left endpoint (one trivial intersection\n\n          return null;\n        } // does this left endpoint matches (other doesn't)\n\n\n        if (touchesThisLSE) {\n          // check for segments that just intersect on opposing endpoints\n          if (touchesOtherRSE) {\n            if (tlp.x === orp.x && tlp.y === orp.y) return null;\n          } // t-intersection on left endpoint\n\n\n          return tlp;\n        } // does other left endpoint matches (this doesn't)\n\n\n        if (touchesOtherLSE) {\n          // check for segments that just intersect on opposing endpoints\n          if (touchesThisRSE) {\n            if (trp.x === olp.x && trp.y === olp.y) return null;\n          } // t-intersection on left endpoint\n\n\n          return olp;\n        } // trivial intersection on right endpoints\n\n\n        if (touchesThisRSE && touchesOtherRSE) return null; // t-intersections on just one right endpoint\n\n        if (touchesThisRSE) return trp;\n        if (touchesOtherRSE) return orp; // None of our endpoints intersect. Look for a general intersection between\n        // infinite lines laid over the segments\n\n        var pt = intersection(tlp, this.vector(), olp, other.vector()); // are the segments parrallel? Note that if they were colinear with overlap,\n        // they would have an endpoint intersection and that case was already handled above\n\n        if (pt === null) return null; // is the intersection found between the lines not on the segments?\n\n        if (!isInBbox(bboxOverlap, pt)) return null; // round the the computed point if needed\n\n        return rounder.round(pt.x, pt.y);\n      }\n      /**\n       * Split the given segment into multiple segments on the given points.\n       *  * Each existing segment will retain its leftSE and a new rightSE will be\n       *    generated for it.\n       *  * A new segment will be generated which will adopt the original segment's\n       *    rightSE, and a new leftSE will be generated for it.\n       *  * If there are more than two points given to split on, new segments\n       *    in the middle will be generated with new leftSE and rightSE's.\n       *  * An array of the newly generated SweepEvents will be returned.\n       *\n       * Warning: input array of points is modified\n       */\n\n    }, {\n      key: \"split\",\n      value: function split(point) {\n        var newEvents = [];\n        var alreadyLinked = point.events !== undefined;\n        var newLeftSE = new SweepEvent(point, true);\n        var newRightSE = new SweepEvent(point, false);\n        var oldRightSE = this.rightSE;\n        this.replaceRightSE(newRightSE);\n        newEvents.push(newRightSE);\n        newEvents.push(newLeftSE);\n        var newSeg = new Segment(newLeftSE, oldRightSE, this.rings.slice(), this.windings.slice()); // when splitting a nearly vertical downward-facing segment,\n        // sometimes one of the resulting new segments is vertical, in which\n        // case its left and right events may need to be swapped\n\n        if (SweepEvent.comparePoints(newSeg.leftSE.point, newSeg.rightSE.point) > 0) {\n          newSeg.swapEvents();\n        }\n\n        if (SweepEvent.comparePoints(this.leftSE.point, this.rightSE.point) > 0) {\n          this.swapEvents();\n        } // in the point we just used to create new sweep events with was already\n        // linked to other events, we need to check if either of the affected\n        // segments should be consumed\n\n\n        if (alreadyLinked) {\n          newLeftSE.checkForConsuming();\n          newRightSE.checkForConsuming();\n        }\n\n        return newEvents;\n      }\n      /* Swap which event is left and right */\n\n    }, {\n      key: \"swapEvents\",\n      value: function swapEvents() {\n        var tmpEvt = this.rightSE;\n        this.rightSE = this.leftSE;\n        this.leftSE = tmpEvt;\n        this.leftSE.isLeft = true;\n        this.rightSE.isLeft = false;\n\n        for (var i = 0, iMax = this.windings.length; i < iMax; i++) {\n          this.windings[i] *= -1;\n        }\n      }\n      /* Consume another segment. We take their rings under our wing\n       * and mark them as consumed. Use for perfectly overlapping segments */\n\n    }, {\n      key: \"consume\",\n      value: function consume(other) {\n        var consumer = this;\n        var consumee = other;\n\n        while (consumer.consumedBy) {\n          consumer = consumer.consumedBy;\n        }\n\n        while (consumee.consumedBy) {\n          consumee = consumee.consumedBy;\n        }\n\n        var cmp = Segment.compare(consumer, consumee);\n        if (cmp === 0) return; // already consumed\n        // the winner of the consumption is the earlier segment\n        // according to sweep line ordering\n\n        if (cmp > 0) {\n          var tmp = consumer;\n          consumer = consumee;\n          consumee = tmp;\n        } // make sure a segment doesn't consume it's prev\n\n\n        if (consumer.prev === consumee) {\n          var _tmp = consumer;\n          consumer = consumee;\n          consumee = _tmp;\n        }\n\n        for (var i = 0, iMax = consumee.rings.length; i < iMax; i++) {\n          var ring = consumee.rings[i];\n          var winding = consumee.windings[i];\n          var index = consumer.rings.indexOf(ring);\n\n          if (index === -1) {\n            consumer.rings.push(ring);\n            consumer.windings.push(winding);\n          } else consumer.windings[index] += winding;\n        }\n\n        consumee.rings = null;\n        consumee.windings = null;\n        consumee.consumedBy = consumer; // mark sweep events consumed as to maintain ordering in sweep event queue\n\n        consumee.leftSE.consumedBy = consumer.leftSE;\n        consumee.rightSE.consumedBy = consumer.rightSE;\n      }\n      /* The first segment previous segment chain that is in the result */\n\n    }, {\n      key: \"prevInResult\",\n      value: function prevInResult() {\n        if (this._prevInResult !== undefined) return this._prevInResult;\n        if (!this.prev) this._prevInResult = null;else if (this.prev.isInResult()) this._prevInResult = this.prev;else this._prevInResult = this.prev.prevInResult();\n        return this._prevInResult;\n      }\n    }, {\n      key: \"beforeState\",\n      value: function beforeState() {\n        if (this._beforeState !== undefined) return this._beforeState;\n        if (!this.prev) this._beforeState = {\n          rings: [],\n          windings: [],\n          multiPolys: []\n        };else {\n          var seg = this.prev.consumedBy || this.prev;\n          this._beforeState = seg.afterState();\n        }\n        return this._beforeState;\n      }\n    }, {\n      key: \"afterState\",\n      value: function afterState() {\n        if (this._afterState !== undefined) return this._afterState;\n        var beforeState = this.beforeState();\n        this._afterState = {\n          rings: beforeState.rings.slice(0),\n          windings: beforeState.windings.slice(0),\n          multiPolys: []\n        };\n        var ringsAfter = this._afterState.rings;\n        var windingsAfter = this._afterState.windings;\n        var mpsAfter = this._afterState.multiPolys; // calculate ringsAfter, windingsAfter\n\n        for (var i = 0, iMax = this.rings.length; i < iMax; i++) {\n          var ring = this.rings[i];\n          var winding = this.windings[i];\n          var index = ringsAfter.indexOf(ring);\n\n          if (index === -1) {\n            ringsAfter.push(ring);\n            windingsAfter.push(winding);\n          } else windingsAfter[index] += winding;\n        } // calcualte polysAfter\n\n\n        var polysAfter = [];\n        var polysExclude = [];\n\n        for (var _i = 0, _iMax = ringsAfter.length; _i < _iMax; _i++) {\n          if (windingsAfter[_i] === 0) continue; // non-zero rule\n\n          var _ring = ringsAfter[_i];\n          var poly = _ring.poly;\n          if (polysExclude.indexOf(poly) !== -1) continue;\n          if (_ring.isExterior) polysAfter.push(poly);else {\n            if (polysExclude.indexOf(poly) === -1) polysExclude.push(poly);\n\n            var _index = polysAfter.indexOf(_ring.poly);\n\n            if (_index !== -1) polysAfter.splice(_index, 1);\n          }\n        } // calculate multiPolysAfter\n\n\n        for (var _i2 = 0, _iMax2 = polysAfter.length; _i2 < _iMax2; _i2++) {\n          var mp = polysAfter[_i2].multiPoly;\n          if (mpsAfter.indexOf(mp) === -1) mpsAfter.push(mp);\n        }\n\n        return this._afterState;\n      }\n      /* Is this segment part of the final result? */\n\n    }, {\n      key: \"isInResult\",\n      value: function isInResult() {\n        // if we've been consumed, we're not in the result\n        if (this.consumedBy) return false;\n        if (this._isInResult !== undefined) return this._isInResult;\n        var mpsBefore = this.beforeState().multiPolys;\n        var mpsAfter = this.afterState().multiPolys;\n\n        switch (operation.type) {\n          case 'union':\n            {\n              // UNION - included iff:\n              //  * On one side of us there is 0 poly interiors AND\n              //  * On the other side there is 1 or more.\n              var noBefores = mpsBefore.length === 0;\n              var noAfters = mpsAfter.length === 0;\n              this._isInResult = noBefores !== noAfters;\n              break;\n            }\n\n          case 'intersection':\n            {\n              // INTERSECTION - included iff:\n              //  * on one side of us all multipolys are rep. with poly interiors AND\n              //  * on the other side of us, not all multipolys are repsented\n              //    with poly interiors\n              var least;\n              var most;\n\n              if (mpsBefore.length < mpsAfter.length) {\n                least = mpsBefore.length;\n                most = mpsAfter.length;\n              } else {\n                least = mpsAfter.length;\n                most = mpsBefore.length;\n              }\n\n              this._isInResult = most === operation.numMultiPolys && least < most;\n              break;\n            }\n\n          case 'xor':\n            {\n              // XOR - included iff:\n              //  * the difference between the number of multipolys represented\n              //    with poly interiors on our two sides is an odd number\n              var diff = Math.abs(mpsBefore.length - mpsAfter.length);\n              this._isInResult = diff % 2 === 1;\n              break;\n            }\n\n          case 'difference':\n            {\n              // DIFFERENCE included iff:\n              //  * on exactly one side, we have just the subject\n              var isJustSubject = function isJustSubject(mps) {\n                return mps.length === 1 && mps[0].isSubject;\n              };\n\n              this._isInResult = isJustSubject(mpsBefore) !== isJustSubject(mpsAfter);\n              break;\n            }\n\n          default:\n            throw new Error(\"Unrecognized operation type found \".concat(operation.type));\n        }\n\n        return this._isInResult;\n      }\n    }], [{\n      key: \"fromRing\",\n      value: function fromRing(pt1, pt2, ring) {\n        var leftPt, rightPt, winding; // ordering the two points according to sweep line ordering\n\n        var cmpPts = SweepEvent.comparePoints(pt1, pt2);\n\n        if (cmpPts < 0) {\n          leftPt = pt1;\n          rightPt = pt2;\n          winding = 1;\n        } else if (cmpPts > 0) {\n          leftPt = pt2;\n          rightPt = pt1;\n          winding = -1;\n        } else throw new Error(\"Tried to create degenerate segment at [\".concat(pt1.x, \", \").concat(pt1.y, \"]\"));\n\n        var leftSE = new SweepEvent(leftPt, true);\n        var rightSE = new SweepEvent(rightPt, false);\n        return new Segment(leftSE, rightSE, [ring], [winding]);\n      }\n    }]);\n\n    return Segment;\n  }();\n\n  var RingIn = /*#__PURE__*/function () {\n    function RingIn(geomRing, poly, isExterior) {\n      _classCallCheck(this, RingIn);\n\n      if (!Array.isArray(geomRing) || geomRing.length === 0) {\n        throw new Error('Input geometry is not a valid Polygon or MultiPolygon');\n      }\n\n      this.poly = poly;\n      this.isExterior = isExterior;\n      this.segments = [];\n\n      if (typeof geomRing[0][0] !== 'number' || typeof geomRing[0][1] !== 'number') {\n        throw new Error('Input geometry is not a valid Polygon or MultiPolygon');\n      }\n\n      var firstPoint = rounder.round(geomRing[0][0], geomRing[0][1]);\n      this.bbox = {\n        ll: {\n          x: firstPoint.x,\n          y: firstPoint.y\n        },\n        ur: {\n          x: firstPoint.x,\n          y: firstPoint.y\n        }\n      };\n      var prevPoint = firstPoint;\n\n      for (var i = 1, iMax = geomRing.length; i < iMax; i++) {\n        if (typeof geomRing[i][0] !== 'number' || typeof geomRing[i][1] !== 'number') {\n          throw new Error('Input geometry is not a valid Polygon or MultiPolygon');\n        }\n\n        var point = rounder.round(geomRing[i][0], geomRing[i][1]); // skip repeated points\n\n        if (point.x === prevPoint.x && point.y === prevPoint.y) continue;\n        this.segments.push(Segment.fromRing(prevPoint, point, this));\n        if (point.x < this.bbox.ll.x) this.bbox.ll.x = point.x;\n        if (point.y < this.bbox.ll.y) this.bbox.ll.y = point.y;\n        if (point.x > this.bbox.ur.x) this.bbox.ur.x = point.x;\n        if (point.y > this.bbox.ur.y) this.bbox.ur.y = point.y;\n        prevPoint = point;\n      } // add segment from last to first if last is not the same as first\n\n\n      if (firstPoint.x !== prevPoint.x || firstPoint.y !== prevPoint.y) {\n        this.segments.push(Segment.fromRing(prevPoint, firstPoint, this));\n      }\n    }\n\n    _createClass(RingIn, [{\n      key: \"getSweepEvents\",\n      value: function getSweepEvents() {\n        var sweepEvents = [];\n\n        for (var i = 0, iMax = this.segments.length; i < iMax; i++) {\n          var segment = this.segments[i];\n          sweepEvents.push(segment.leftSE);\n          sweepEvents.push(segment.rightSE);\n        }\n\n        return sweepEvents;\n      }\n    }]);\n\n    return RingIn;\n  }();\n  var PolyIn = /*#__PURE__*/function () {\n    function PolyIn(geomPoly, multiPoly) {\n      _classCallCheck(this, PolyIn);\n\n      if (!Array.isArray(geomPoly)) {\n        throw new Error('Input geometry is not a valid Polygon or MultiPolygon');\n      }\n\n      this.exteriorRing = new RingIn(geomPoly[0], this, true); // copy by value\n\n      this.bbox = {\n        ll: {\n          x: this.exteriorRing.bbox.ll.x,\n          y: this.exteriorRing.bbox.ll.y\n        },\n        ur: {\n          x: this.exteriorRing.bbox.ur.x,\n          y: this.exteriorRing.bbox.ur.y\n        }\n      };\n      this.interiorRings = [];\n\n      for (var i = 1, iMax = geomPoly.length; i < iMax; i++) {\n        var ring = new RingIn(geomPoly[i], this, false);\n        if (ring.bbox.ll.x < this.bbox.ll.x) this.bbox.ll.x = ring.bbox.ll.x;\n        if (ring.bbox.ll.y < this.bbox.ll.y) this.bbox.ll.y = ring.bbox.ll.y;\n        if (ring.bbox.ur.x > this.bbox.ur.x) this.bbox.ur.x = ring.bbox.ur.x;\n        if (ring.bbox.ur.y > this.bbox.ur.y) this.bbox.ur.y = ring.bbox.ur.y;\n        this.interiorRings.push(ring);\n      }\n\n      this.multiPoly = multiPoly;\n    }\n\n    _createClass(PolyIn, [{\n      key: \"getSweepEvents\",\n      value: function getSweepEvents() {\n        var sweepEvents = this.exteriorRing.getSweepEvents();\n\n        for (var i = 0, iMax = this.interiorRings.length; i < iMax; i++) {\n          var ringSweepEvents = this.interiorRings[i].getSweepEvents();\n\n          for (var j = 0, jMax = ringSweepEvents.length; j < jMax; j++) {\n            sweepEvents.push(ringSweepEvents[j]);\n          }\n        }\n\n        return sweepEvents;\n      }\n    }]);\n\n    return PolyIn;\n  }();\n  var MultiPolyIn = /*#__PURE__*/function () {\n    function MultiPolyIn(geom, isSubject) {\n      _classCallCheck(this, MultiPolyIn);\n\n      if (!Array.isArray(geom)) {\n        throw new Error('Input geometry is not a valid Polygon or MultiPolygon');\n      }\n\n      try {\n        // if the input looks like a polygon, convert it to a multipolygon\n        if (typeof geom[0][0][0] === 'number') geom = [geom];\n      } catch (ex) {// The input is either malformed or has empty arrays.\n        // In either case, it will be handled later on.\n      }\n\n      this.polys = [];\n      this.bbox = {\n        ll: {\n          x: Number.POSITIVE_INFINITY,\n          y: Number.POSITIVE_INFINITY\n        },\n        ur: {\n          x: Number.NEGATIVE_INFINITY,\n          y: Number.NEGATIVE_INFINITY\n        }\n      };\n\n      for (var i = 0, iMax = geom.length; i < iMax; i++) {\n        var poly = new PolyIn(geom[i], this);\n        if (poly.bbox.ll.x < this.bbox.ll.x) this.bbox.ll.x = poly.bbox.ll.x;\n        if (poly.bbox.ll.y < this.bbox.ll.y) this.bbox.ll.y = poly.bbox.ll.y;\n        if (poly.bbox.ur.x > this.bbox.ur.x) this.bbox.ur.x = poly.bbox.ur.x;\n        if (poly.bbox.ur.y > this.bbox.ur.y) this.bbox.ur.y = poly.bbox.ur.y;\n        this.polys.push(poly);\n      }\n\n      this.isSubject = isSubject;\n    }\n\n    _createClass(MultiPolyIn, [{\n      key: \"getSweepEvents\",\n      value: function getSweepEvents() {\n        var sweepEvents = [];\n\n        for (var i = 0, iMax = this.polys.length; i < iMax; i++) {\n          var polySweepEvents = this.polys[i].getSweepEvents();\n\n          for (var j = 0, jMax = polySweepEvents.length; j < jMax; j++) {\n            sweepEvents.push(polySweepEvents[j]);\n          }\n        }\n\n        return sweepEvents;\n      }\n    }]);\n\n    return MultiPolyIn;\n  }();\n\n  var RingOut = /*#__PURE__*/function () {\n    _createClass(RingOut, null, [{\n      key: \"factory\",\n\n      /* Given the segments from the sweep line pass, compute & return a series\n       * of closed rings from all the segments marked to be part of the result */\n      value: function factory(allSegments) {\n        var ringsOut = [];\n\n        for (var i = 0, iMax = allSegments.length; i < iMax; i++) {\n          var segment = allSegments[i];\n          if (!segment.isInResult() || segment.ringOut) continue;\n          var prevEvent = null;\n          var event = segment.leftSE;\n          var nextEvent = segment.rightSE;\n          var events = [event];\n          var startingPoint = event.point;\n          var intersectionLEs = [];\n          /* Walk the chain of linked events to form a closed ring */\n\n          while (true) {\n            prevEvent = event;\n            event = nextEvent;\n            events.push(event);\n            /* Is the ring complete? */\n\n            if (event.point === startingPoint) break;\n\n            while (true) {\n              var availableLEs = event.getAvailableLinkedEvents();\n              /* Did we hit a dead end? This shouldn't happen. Indicates some earlier\n               * part of the algorithm malfunctioned... please file a bug report. */\n\n              if (availableLEs.length === 0) {\n                var firstPt = events[0].point;\n                var lastPt = events[events.length - 1].point;\n                throw new Error(\"Unable to complete output ring starting at [\".concat(firstPt.x, \",\") + \" \".concat(firstPt.y, \"]. Last matching segment found ends at\") + \" [\".concat(lastPt.x, \", \").concat(lastPt.y, \"].\"));\n              }\n              /* Only one way to go, so cotinue on the path */\n\n\n              if (availableLEs.length === 1) {\n                nextEvent = availableLEs[0].otherSE;\n                break;\n              }\n              /* We must have an intersection. Check for a completed loop */\n\n\n              var indexLE = null;\n\n              for (var j = 0, jMax = intersectionLEs.length; j < jMax; j++) {\n                if (intersectionLEs[j].point === event.point) {\n                  indexLE = j;\n                  break;\n                }\n              }\n              /* Found a completed loop. Cut that off and make a ring */\n\n\n              if (indexLE !== null) {\n                var intersectionLE = intersectionLEs.splice(indexLE)[0];\n                var ringEvents = events.splice(intersectionLE.index);\n                ringEvents.unshift(ringEvents[0].otherSE);\n                ringsOut.push(new RingOut(ringEvents.reverse()));\n                continue;\n              }\n              /* register the intersection */\n\n\n              intersectionLEs.push({\n                index: events.length,\n                point: event.point\n              });\n              /* Choose the left-most option to continue the walk */\n\n              var comparator = event.getLeftmostComparator(prevEvent);\n              nextEvent = availableLEs.sort(comparator)[0].otherSE;\n              break;\n            }\n          }\n\n          ringsOut.push(new RingOut(events));\n        }\n\n        return ringsOut;\n      }\n    }]);\n\n    function RingOut(events) {\n      _classCallCheck(this, RingOut);\n\n      this.events = events;\n\n      for (var i = 0, iMax = events.length; i < iMax; i++) {\n        events[i].segment.ringOut = this;\n      }\n\n      this.poly = null;\n    }\n\n    _createClass(RingOut, [{\n      key: \"getGeom\",\n      value: function getGeom() {\n        // Remove superfluous points (ie extra points along a straight line),\n        var prevPt = this.events[0].point;\n        var points = [prevPt];\n\n        for (var i = 1, iMax = this.events.length - 1; i < iMax; i++) {\n          var _pt = this.events[i].point;\n          var _nextPt = this.events[i + 1].point;\n          if (compareVectorAngles(_pt, prevPt, _nextPt) === 0) continue;\n          points.push(_pt);\n          prevPt = _pt;\n        } // ring was all (within rounding error of angle calc) colinear points\n\n\n        if (points.length === 1) return null; // check if the starting point is necessary\n\n        var pt = points[0];\n        var nextPt = points[1];\n        if (compareVectorAngles(pt, prevPt, nextPt) === 0) points.shift();\n        points.push(points[0]);\n        var step = this.isExteriorRing() ? 1 : -1;\n        var iStart = this.isExteriorRing() ? 0 : points.length - 1;\n        var iEnd = this.isExteriorRing() ? points.length : -1;\n        var orderedPoints = [];\n\n        for (var _i = iStart; _i != iEnd; _i += step) {\n          orderedPoints.push([points[_i].x, points[_i].y]);\n        }\n\n        return orderedPoints;\n      }\n    }, {\n      key: \"isExteriorRing\",\n      value: function isExteriorRing() {\n        if (this._isExteriorRing === undefined) {\n          var enclosing = this.enclosingRing();\n          this._isExteriorRing = enclosing ? !enclosing.isExteriorRing() : true;\n        }\n\n        return this._isExteriorRing;\n      }\n    }, {\n      key: \"enclosingRing\",\n      value: function enclosingRing() {\n        if (this._enclosingRing === undefined) {\n          this._enclosingRing = this._calcEnclosingRing();\n        }\n\n        return this._enclosingRing;\n      }\n      /* Returns the ring that encloses this one, if any */\n\n    }, {\n      key: \"_calcEnclosingRing\",\n      value: function _calcEnclosingRing() {\n        // start with the ealier sweep line event so that the prevSeg\n        // chain doesn't lead us inside of a loop of ours\n        var leftMostEvt = this.events[0];\n\n        for (var i = 1, iMax = this.events.length; i < iMax; i++) {\n          var evt = this.events[i];\n          if (SweepEvent.compare(leftMostEvt, evt) > 0) leftMostEvt = evt;\n        }\n\n        var prevSeg = leftMostEvt.segment.prevInResult();\n        var prevPrevSeg = prevSeg ? prevSeg.prevInResult() : null;\n\n        while (true) {\n          // no segment found, thus no ring can enclose us\n          if (!prevSeg) return null; // no segments below prev segment found, thus the ring of the prev\n          // segment must loop back around and enclose us\n\n          if (!prevPrevSeg) return prevSeg.ringOut; // if the two segments are of different rings, the ring of the prev\n          // segment must either loop around us or the ring of the prev prev\n          // seg, which would make us and the ring of the prev peers\n\n          if (prevPrevSeg.ringOut !== prevSeg.ringOut) {\n            if (prevPrevSeg.ringOut.enclosingRing() !== prevSeg.ringOut) {\n              return prevSeg.ringOut;\n            } else return prevSeg.ringOut.enclosingRing();\n          } // two segments are from the same ring, so this was a penisula\n          // of that ring. iterate downward, keep searching\n\n\n          prevSeg = prevPrevSeg.prevInResult();\n          prevPrevSeg = prevSeg ? prevSeg.prevInResult() : null;\n        }\n      }\n    }]);\n\n    return RingOut;\n  }();\n  var PolyOut = /*#__PURE__*/function () {\n    function PolyOut(exteriorRing) {\n      _classCallCheck(this, PolyOut);\n\n      this.exteriorRing = exteriorRing;\n      exteriorRing.poly = this;\n      this.interiorRings = [];\n    }\n\n    _createClass(PolyOut, [{\n      key: \"addInterior\",\n      value: function addInterior(ring) {\n        this.interiorRings.push(ring);\n        ring.poly = this;\n      }\n    }, {\n      key: \"getGeom\",\n      value: function getGeom() {\n        var geom = [this.exteriorRing.getGeom()]; // exterior ring was all (within rounding error of angle calc) colinear points\n\n        if (geom[0] === null) return null;\n\n        for (var i = 0, iMax = this.interiorRings.length; i < iMax; i++) {\n          var ringGeom = this.interiorRings[i].getGeom(); // interior ring was all (within rounding error of angle calc) colinear points\n\n          if (ringGeom === null) continue;\n          geom.push(ringGeom);\n        }\n\n        return geom;\n      }\n    }]);\n\n    return PolyOut;\n  }();\n  var MultiPolyOut = /*#__PURE__*/function () {\n    function MultiPolyOut(rings) {\n      _classCallCheck(this, MultiPolyOut);\n\n      this.rings = rings;\n      this.polys = this._composePolys(rings);\n    }\n\n    _createClass(MultiPolyOut, [{\n      key: \"getGeom\",\n      value: function getGeom() {\n        var geom = [];\n\n        for (var i = 0, iMax = this.polys.length; i < iMax; i++) {\n          var polyGeom = this.polys[i].getGeom(); // exterior ring was all (within rounding error of angle calc) colinear points\n\n          if (polyGeom === null) continue;\n          geom.push(polyGeom);\n        }\n\n        return geom;\n      }\n    }, {\n      key: \"_composePolys\",\n      value: function _composePolys(rings) {\n        var polys = [];\n\n        for (var i = 0, iMax = rings.length; i < iMax; i++) {\n          var ring = rings[i];\n          if (ring.poly) continue;\n          if (ring.isExteriorRing()) polys.push(new PolyOut(ring));else {\n            var enclosingRing = ring.enclosingRing();\n            if (!enclosingRing.poly) polys.push(new PolyOut(enclosingRing));\n            enclosingRing.poly.addInterior(ring);\n          }\n        }\n\n        return polys;\n      }\n    }]);\n\n    return MultiPolyOut;\n  }();\n\n  /**\n   * NOTE:  We must be careful not to change any segments while\n   *        they are in the SplayTree. AFAIK, there's no way to tell\n   *        the tree to rebalance itself - thus before splitting\n   *        a segment that's in the tree, we remove it from the tree,\n   *        do the split, then re-insert it. (Even though splitting a\n   *        segment *shouldn't* change its correct position in the\n   *        sweep line tree, the reality is because of rounding errors,\n   *        it sometimes does.)\n   */\n\n  var SweepLine = /*#__PURE__*/function () {\n    function SweepLine(queue) {\n      var comparator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Segment.compare;\n\n      _classCallCheck(this, SweepLine);\n\n      this.queue = queue;\n      this.tree = new Tree(comparator);\n      this.segments = [];\n    }\n\n    _createClass(SweepLine, [{\n      key: \"process\",\n      value: function process(event) {\n        var segment = event.segment;\n        var newEvents = []; // if we've already been consumed by another segment,\n        // clean up our body parts and get out\n\n        if (event.consumedBy) {\n          if (event.isLeft) this.queue.remove(event.otherSE);else this.tree.remove(segment);\n          return newEvents;\n        }\n\n        var node = event.isLeft ? this.tree.insert(segment) : this.tree.find(segment);\n        if (!node) throw new Error(\"Unable to find segment #\".concat(segment.id, \" \") + \"[\".concat(segment.leftSE.point.x, \", \").concat(segment.leftSE.point.y, \"] -> \") + \"[\".concat(segment.rightSE.point.x, \", \").concat(segment.rightSE.point.y, \"] \") + 'in SweepLine tree. Please submit a bug report.');\n        var prevNode = node;\n        var nextNode = node;\n        var prevSeg = undefined;\n        var nextSeg = undefined; // skip consumed segments still in tree\n\n        while (prevSeg === undefined) {\n          prevNode = this.tree.prev(prevNode);\n          if (prevNode === null) prevSeg = null;else if (prevNode.key.consumedBy === undefined) prevSeg = prevNode.key;\n        } // skip consumed segments still in tree\n\n\n        while (nextSeg === undefined) {\n          nextNode = this.tree.next(nextNode);\n          if (nextNode === null) nextSeg = null;else if (nextNode.key.consumedBy === undefined) nextSeg = nextNode.key;\n        }\n\n        if (event.isLeft) {\n          // Check for intersections against the previous segment in the sweep line\n          var prevMySplitter = null;\n\n          if (prevSeg) {\n            var prevInter = prevSeg.getIntersection(segment);\n\n            if (prevInter !== null) {\n              if (!segment.isAnEndpoint(prevInter)) prevMySplitter = prevInter;\n\n              if (!prevSeg.isAnEndpoint(prevInter)) {\n                var newEventsFromSplit = this._splitSafely(prevSeg, prevInter);\n\n                for (var i = 0, iMax = newEventsFromSplit.length; i < iMax; i++) {\n                  newEvents.push(newEventsFromSplit[i]);\n                }\n              }\n            }\n          } // Check for intersections against the next segment in the sweep line\n\n\n          var nextMySplitter = null;\n\n          if (nextSeg) {\n            var nextInter = nextSeg.getIntersection(segment);\n\n            if (nextInter !== null) {\n              if (!segment.isAnEndpoint(nextInter)) nextMySplitter = nextInter;\n\n              if (!nextSeg.isAnEndpoint(nextInter)) {\n                var _newEventsFromSplit = this._splitSafely(nextSeg, nextInter);\n\n                for (var _i = 0, _iMax = _newEventsFromSplit.length; _i < _iMax; _i++) {\n                  newEvents.push(_newEventsFromSplit[_i]);\n                }\n              }\n            }\n          } // For simplicity, even if we find more than one intersection we only\n          // spilt on the 'earliest' (sweep-line style) of the intersections.\n          // The other intersection will be handled in a future process().\n\n\n          if (prevMySplitter !== null || nextMySplitter !== null) {\n            var mySplitter = null;\n            if (prevMySplitter === null) mySplitter = nextMySplitter;else if (nextMySplitter === null) mySplitter = prevMySplitter;else {\n              var cmpSplitters = SweepEvent.comparePoints(prevMySplitter, nextMySplitter);\n              mySplitter = cmpSplitters <= 0 ? prevMySplitter : nextMySplitter;\n            } // Rounding errors can cause changes in ordering,\n            // so remove afected segments and right sweep events before splitting\n\n            this.queue.remove(segment.rightSE);\n            newEvents.push(segment.rightSE);\n\n            var _newEventsFromSplit2 = segment.split(mySplitter);\n\n            for (var _i2 = 0, _iMax2 = _newEventsFromSplit2.length; _i2 < _iMax2; _i2++) {\n              newEvents.push(_newEventsFromSplit2[_i2]);\n            }\n          }\n\n          if (newEvents.length > 0) {\n            // We found some intersections, so re-do the current event to\n            // make sure sweep line ordering is totally consistent for later\n            // use with the segment 'prev' pointers\n            this.tree.remove(segment);\n            newEvents.push(event);\n          } else {\n            // done with left event\n            this.segments.push(segment);\n            segment.prev = prevSeg;\n          }\n        } else {\n          // event.isRight\n          // since we're about to be removed from the sweep line, check for\n          // intersections between our previous and next segments\n          if (prevSeg && nextSeg) {\n            var inter = prevSeg.getIntersection(nextSeg);\n\n            if (inter !== null) {\n              if (!prevSeg.isAnEndpoint(inter)) {\n                var _newEventsFromSplit3 = this._splitSafely(prevSeg, inter);\n\n                for (var _i3 = 0, _iMax3 = _newEventsFromSplit3.length; _i3 < _iMax3; _i3++) {\n                  newEvents.push(_newEventsFromSplit3[_i3]);\n                }\n              }\n\n              if (!nextSeg.isAnEndpoint(inter)) {\n                var _newEventsFromSplit4 = this._splitSafely(nextSeg, inter);\n\n                for (var _i4 = 0, _iMax4 = _newEventsFromSplit4.length; _i4 < _iMax4; _i4++) {\n                  newEvents.push(_newEventsFromSplit4[_i4]);\n                }\n              }\n            }\n          }\n\n          this.tree.remove(segment);\n        }\n\n        return newEvents;\n      }\n      /* Safely split a segment that is currently in the datastructures\n       * IE - a segment other than the one that is currently being processed. */\n\n    }, {\n      key: \"_splitSafely\",\n      value: function _splitSafely(seg, pt) {\n        // Rounding errors can cause changes in ordering,\n        // so remove afected segments and right sweep events before splitting\n        // removeNode() doesn't work, so have re-find the seg\n        // https://github.com/w8r/splay-tree/pull/5\n        this.tree.remove(seg);\n        var rightSE = seg.rightSE;\n        this.queue.remove(rightSE);\n        var newEvents = seg.split(pt);\n        newEvents.push(rightSE); // splitting can trigger consumption\n\n        if (seg.consumedBy === undefined) this.tree.insert(seg);\n        return newEvents;\n      }\n    }]);\n\n    return SweepLine;\n  }();\n\n  var POLYGON_CLIPPING_MAX_QUEUE_SIZE = typeof process !== 'undefined' && process.env.POLYGON_CLIPPING_MAX_QUEUE_SIZE || 1000000;\n  var POLYGON_CLIPPING_MAX_SWEEPLINE_SEGMENTS = typeof process !== 'undefined' && process.env.POLYGON_CLIPPING_MAX_SWEEPLINE_SEGMENTS || 1000000;\n  var Operation = /*#__PURE__*/function () {\n    function Operation() {\n      _classCallCheck(this, Operation);\n    }\n\n    _createClass(Operation, [{\n      key: \"run\",\n      value: function run(type, geom, moreGeoms) {\n        operation.type = type;\n        rounder.reset();\n        /* Convert inputs to MultiPoly objects */\n\n        var multipolys = [new MultiPolyIn(geom, true)];\n\n        for (var i = 0, iMax = moreGeoms.length; i < iMax; i++) {\n          multipolys.push(new MultiPolyIn(moreGeoms[i], false));\n        }\n\n        operation.numMultiPolys = multipolys.length;\n        /* BBox optimization for difference operation\n         * If the bbox of a multipolygon that's part of the clipping doesn't\n         * intersect the bbox of the subject at all, we can just drop that\n         * multiploygon. */\n\n        if (operation.type === 'difference') {\n          // in place removal\n          var subject = multipolys[0];\n          var _i = 1;\n\n          while (_i < multipolys.length) {\n            if (getBboxOverlap(multipolys[_i].bbox, subject.bbox) !== null) _i++;else multipolys.splice(_i, 1);\n          }\n        }\n        /* BBox optimization for intersection operation\n         * If we can find any pair of multipolygons whose bbox does not overlap,\n         * then the result will be empty. */\n\n\n        if (operation.type === 'intersection') {\n          // TODO: this is O(n^2) in number of polygons. By sorting the bboxes,\n          //       it could be optimized to O(n * ln(n))\n          for (var _i2 = 0, _iMax = multipolys.length; _i2 < _iMax; _i2++) {\n            var mpA = multipolys[_i2];\n\n            for (var j = _i2 + 1, jMax = multipolys.length; j < jMax; j++) {\n              if (getBboxOverlap(mpA.bbox, multipolys[j].bbox) === null) return [];\n            }\n          }\n        }\n        /* Put segment endpoints in a priority queue */\n\n\n        var queue = new Tree(SweepEvent.compare);\n\n        for (var _i3 = 0, _iMax2 = multipolys.length; _i3 < _iMax2; _i3++) {\n          var sweepEvents = multipolys[_i3].getSweepEvents();\n\n          for (var _j = 0, _jMax = sweepEvents.length; _j < _jMax; _j++) {\n            queue.insert(sweepEvents[_j]);\n\n            if (queue.size > POLYGON_CLIPPING_MAX_QUEUE_SIZE) {\n              // prevents an infinite loop, an otherwise common manifestation of bugs\n              throw new Error('Infinite loop when putting segment endpoints in a priority queue ' + '(queue size too big). Please file a bug report.');\n            }\n          }\n        }\n        /* Pass the sweep line over those endpoints */\n\n\n        var sweepLine = new SweepLine(queue);\n        var prevQueueSize = queue.size;\n        var node = queue.pop();\n\n        while (node) {\n          var evt = node.key;\n\n          if (queue.size === prevQueueSize) {\n            // prevents an infinite loop, an otherwise common manifestation of bugs\n            var seg = evt.segment;\n            throw new Error(\"Unable to pop() \".concat(evt.isLeft ? 'left' : 'right', \" SweepEvent \") + \"[\".concat(evt.point.x, \", \").concat(evt.point.y, \"] from segment #\").concat(seg.id, \" \") + \"[\".concat(seg.leftSE.point.x, \", \").concat(seg.leftSE.point.y, \"] -> \") + \"[\".concat(seg.rightSE.point.x, \", \").concat(seg.rightSE.point.y, \"] from queue. \") + 'Please file a bug report.');\n          }\n\n          if (queue.size > POLYGON_CLIPPING_MAX_QUEUE_SIZE) {\n            // prevents an infinite loop, an otherwise common manifestation of bugs\n            throw new Error('Infinite loop when passing sweep line over endpoints ' + '(queue size too big). Please file a bug report.');\n          }\n\n          if (sweepLine.segments.length > POLYGON_CLIPPING_MAX_SWEEPLINE_SEGMENTS) {\n            // prevents an infinite loop, an otherwise common manifestation of bugs\n            throw new Error('Infinite loop when passing sweep line over endpoints ' + '(too many sweep line segments). Please file a bug report.');\n          }\n\n          var newEvents = sweepLine.process(evt);\n\n          for (var _i4 = 0, _iMax3 = newEvents.length; _i4 < _iMax3; _i4++) {\n            var _evt = newEvents[_i4];\n            if (_evt.consumedBy === undefined) queue.insert(_evt);\n          }\n\n          prevQueueSize = queue.size;\n          node = queue.pop();\n        } // free some memory we don't need anymore\n\n\n        rounder.reset();\n        /* Collect and compile segments we're keeping into a multipolygon */\n\n        var ringsOut = RingOut.factory(sweepLine.segments);\n        var result = new MultiPolyOut(ringsOut);\n        return result.getGeom();\n      }\n    }]);\n\n    return Operation;\n  }(); // singleton available by import\n\n  var operation = new Operation();\n\n  var union = function union(geom) {\n    for (var _len = arguments.length, moreGeoms = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      moreGeoms[_key - 1] = arguments[_key];\n    }\n\n    return operation.run('union', geom, moreGeoms);\n  };\n\n  var intersection$1 = function intersection(geom) {\n    for (var _len2 = arguments.length, moreGeoms = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      moreGeoms[_key2 - 1] = arguments[_key2];\n    }\n\n    return operation.run('intersection', geom, moreGeoms);\n  };\n\n  var xor = function xor(geom) {\n    for (var _len3 = arguments.length, moreGeoms = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n      moreGeoms[_key3 - 1] = arguments[_key3];\n    }\n\n    return operation.run('xor', geom, moreGeoms);\n  };\n\n  var difference = function difference(subjectGeom) {\n    for (var _len4 = arguments.length, clippingGeoms = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n      clippingGeoms[_key4 - 1] = arguments[_key4];\n    }\n\n    return operation.run('difference', subjectGeom, clippingGeoms);\n  };\n\n  var index = {\n    union: union,\n    intersection: intersection$1,\n    xor: xor,\n    difference: difference\n  };\n\n  return index;\n\n})));\n","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","!function(t,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?e(exports):\"function\"==typeof define&&define.amd?define([\"exports\"],e):e((t=t||self).predicates={})}(this,function(t){\"use strict\";const e=134217729,n=33306690738754706e-32;function r(t,e,n,r,o){let f,i,u,c,s=e[0],a=r[0],d=0,l=0;a>s==a>-s?(f=s,s=e[++d]):(f=a,a=r[++l]);let p=0;if(d<t&&l<n)for(a>s==a>-s?(u=f-((i=s+f)-s),s=e[++d]):(u=f-((i=a+f)-a),a=r[++l]),f=i,0!==u&&(o[p++]=u);d<t&&l<n;)a>s==a>-s?(u=f-((i=f+s)-(c=i-f))+(s-c),s=e[++d]):(u=f-((i=f+a)-(c=i-f))+(a-c),a=r[++l]),f=i,0!==u&&(o[p++]=u);for(;d<t;)u=f-((i=f+s)-(c=i-f))+(s-c),s=e[++d],f=i,0!==u&&(o[p++]=u);for(;l<n;)u=f-((i=f+a)-(c=i-f))+(a-c),a=r[++l],f=i,0!==u&&(o[p++]=u);return 0===f&&0!==p||(o[p++]=f),p}function o(t){return new Float64Array(t)}const f=33306690738754716e-32,i=22204460492503146e-32,u=11093356479670487e-47,c=o(4),s=o(8),a=o(12),d=o(16),l=o(4);t.orient2d=function(t,o,p,b,y,h){const M=(o-h)*(p-y),x=(t-y)*(b-h),j=M-x;if(0===M||0===x||M>0!=x>0)return j;const m=Math.abs(M+x);return Math.abs(j)>=f*m?j:-function(t,o,f,p,b,y,h){let M,x,j,m,_,v,w,A,F,O,P,g,k,q,z,B,C,D;const E=t-b,G=f-b,H=o-y,I=p-y;_=(z=(A=E-(w=(v=e*E)-(v-E)))*(O=I-(F=(v=e*I)-(v-I)))-((q=E*I)-w*F-A*F-w*O))-(P=z-(C=(A=H-(w=(v=e*H)-(v-H)))*(O=G-(F=(v=e*G)-(v-G)))-((B=H*G)-w*F-A*F-w*O))),c[0]=z-(P+_)+(_-C),_=(k=q-((g=q+P)-(_=g-q))+(P-_))-(P=k-B),c[1]=k-(P+_)+(_-B),_=(D=g+P)-g,c[2]=g-(D-_)+(P-_),c[3]=D;let J=function(t,e){let n=e[0];for(let r=1;r<t;r++)n+=e[r];return n}(4,c),K=i*h;if(J>=K||-J>=K)return J;if(M=t-(E+(_=t-E))+(_-b),j=f-(G+(_=f-G))+(_-b),x=o-(H+(_=o-H))+(_-y),m=p-(I+(_=p-I))+(_-y),0===M&&0===x&&0===j&&0===m)return J;if(K=u*h+n*Math.abs(J),(J+=E*m+I*M-(H*j+G*x))>=K||-J>=K)return J;_=(z=(A=M-(w=(v=e*M)-(v-M)))*(O=I-(F=(v=e*I)-(v-I)))-((q=M*I)-w*F-A*F-w*O))-(P=z-(C=(A=x-(w=(v=e*x)-(v-x)))*(O=G-(F=(v=e*G)-(v-G)))-((B=x*G)-w*F-A*F-w*O))),l[0]=z-(P+_)+(_-C),_=(k=q-((g=q+P)-(_=g-q))+(P-_))-(P=k-B),l[1]=k-(P+_)+(_-B),_=(D=g+P)-g,l[2]=g-(D-_)+(P-_),l[3]=D;const L=r(4,c,4,l,s);_=(z=(A=E-(w=(v=e*E)-(v-E)))*(O=m-(F=(v=e*m)-(v-m)))-((q=E*m)-w*F-A*F-w*O))-(P=z-(C=(A=H-(w=(v=e*H)-(v-H)))*(O=j-(F=(v=e*j)-(v-j)))-((B=H*j)-w*F-A*F-w*O))),l[0]=z-(P+_)+(_-C),_=(k=q-((g=q+P)-(_=g-q))+(P-_))-(P=k-B),l[1]=k-(P+_)+(_-B),_=(D=g+P)-g,l[2]=g-(D-_)+(P-_),l[3]=D;const N=r(L,s,4,l,a);_=(z=(A=M-(w=(v=e*M)-(v-M)))*(O=m-(F=(v=e*m)-(v-m)))-((q=M*m)-w*F-A*F-w*O))-(P=z-(C=(A=x-(w=(v=e*x)-(v-x)))*(O=j-(F=(v=e*j)-(v-j)))-((B=x*j)-w*F-A*F-w*O))),l[0]=z-(P+_)+(_-C),_=(k=q-((g=q+P)-(_=g-q))+(P-_))-(P=k-B),l[1]=k-(P+_)+(_-B),_=(D=g+P)-g,l[2]=g-(D-_)+(P-_),l[3]=D;const Q=r(N,a,4,l,d);return d[Q-1]}(t,o,p,b,y,h,m)},t.orient2dfast=function(t,e,n,r,o,f){return(e-f)*(n-o)-(t-o)*(r-f)},Object.defineProperty(t,\"__esModule\",{value:!0})});\n","\nexport default class TinyQueue {\n    constructor(data = [], compare = defaultCompare) {\n        this.data = data;\n        this.length = this.data.length;\n        this.compare = compare;\n\n        if (this.length > 0) {\n            for (let i = (this.length >> 1) - 1; i >= 0; i--) this._down(i);\n        }\n    }\n\n    push(item) {\n        this.data.push(item);\n        this.length++;\n        this._up(this.length - 1);\n    }\n\n    pop() {\n        if (this.length === 0) return undefined;\n\n        const top = this.data[0];\n        const bottom = this.data.pop();\n        this.length--;\n\n        if (this.length > 0) {\n            this.data[0] = bottom;\n            this._down(0);\n        }\n\n        return top;\n    }\n\n    peek() {\n        return this.data[0];\n    }\n\n    _up(pos) {\n        const {data, compare} = this;\n        const item = data[pos];\n\n        while (pos > 0) {\n            const parent = (pos - 1) >> 1;\n            const current = data[parent];\n            if (compare(item, current) >= 0) break;\n            data[pos] = current;\n            pos = parent;\n        }\n\n        data[pos] = item;\n    }\n\n    _down(pos) {\n        const {data, compare} = this;\n        const halfLength = this.length >> 1;\n        const item = data[pos];\n\n        while (pos < halfLength) {\n            let left = (pos << 1) + 1;\n            let best = data[left];\n            const right = left + 1;\n\n            if (right < this.length && compare(data[right], best) < 0) {\n                left = right;\n                best = data[right];\n            }\n            if (compare(best, item) >= 0) break;\n\n            data[pos] = best;\n            pos = left;\n        }\n\n        data[pos] = item;\n    }\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n","/**\n * @module helpers\n */\n/**\n * Earth Radius used with the Harvesine formula and approximates using a spherical (non-ellipsoid) Earth.\n *\n * @memberof helpers\n * @type {number}\n */\nexport var earthRadius = 6371008.8;\n/**\n * Unit of measurement factors using a spherical (non-ellipsoid) earth radius.\n *\n * @memberof helpers\n * @type {Object}\n */\nexport var factors = {\n    centimeters: earthRadius * 100,\n    centimetres: earthRadius * 100,\n    degrees: earthRadius / 111325,\n    feet: earthRadius * 3.28084,\n    inches: earthRadius * 39.37,\n    kilometers: earthRadius / 1000,\n    kilometres: earthRadius / 1000,\n    meters: earthRadius,\n    metres: earthRadius,\n    miles: earthRadius / 1609.344,\n    millimeters: earthRadius * 1000,\n    millimetres: earthRadius * 1000,\n    nauticalmiles: earthRadius / 1852,\n    radians: 1,\n    yards: earthRadius * 1.0936,\n};\n/**\n * Units of measurement factors based on 1 meter.\n *\n * @memberof helpers\n * @type {Object}\n */\nexport var unitsFactors = {\n    centimeters: 100,\n    centimetres: 100,\n    degrees: 1 / 111325,\n    feet: 3.28084,\n    inches: 39.37,\n    kilometers: 1 / 1000,\n    kilometres: 1 / 1000,\n    meters: 1,\n    metres: 1,\n    miles: 1 / 1609.344,\n    millimeters: 1000,\n    millimetres: 1000,\n    nauticalmiles: 1 / 1852,\n    radians: 1 / earthRadius,\n    yards: 1.0936133,\n};\n/**\n * Area of measurement factors based on 1 square meter.\n *\n * @memberof helpers\n * @type {Object}\n */\nexport var areaFactors = {\n    acres: 0.000247105,\n    centimeters: 10000,\n    centimetres: 10000,\n    feet: 10.763910417,\n    hectares: 0.0001,\n    inches: 1550.003100006,\n    kilometers: 0.000001,\n    kilometres: 0.000001,\n    meters: 1,\n    metres: 1,\n    miles: 3.86e-7,\n    millimeters: 1000000,\n    millimetres: 1000000,\n    yards: 1.195990046,\n};\n/**\n * Wraps a GeoJSON {@link Geometry} in a GeoJSON {@link Feature}.\n *\n * @name feature\n * @param {Geometry} geometry input geometry\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature} a GeoJSON Feature\n * @example\n * var geometry = {\n *   \"type\": \"Point\",\n *   \"coordinates\": [110, 50]\n * };\n *\n * var feature = turf.feature(geometry);\n *\n * //=feature\n */\nexport function feature(geom, properties, options) {\n    if (options === void 0) { options = {}; }\n    var feat = { type: \"Feature\" };\n    if (options.id === 0 || options.id) {\n        feat.id = options.id;\n    }\n    if (options.bbox) {\n        feat.bbox = options.bbox;\n    }\n    feat.properties = properties || {};\n    feat.geometry = geom;\n    return feat;\n}\n/**\n * Creates a GeoJSON {@link Geometry} from a Geometry string type & coordinates.\n * For GeometryCollection type use `helpers.geometryCollection`\n *\n * @name geometry\n * @param {string} type Geometry Type\n * @param {Array<any>} coordinates Coordinates\n * @param {Object} [options={}] Optional Parameters\n * @returns {Geometry} a GeoJSON Geometry\n * @example\n * var type = \"Point\";\n * var coordinates = [110, 50];\n * var geometry = turf.geometry(type, coordinates);\n * // => geometry\n */\nexport function geometry(type, coordinates, _options) {\n    if (_options === void 0) { _options = {}; }\n    switch (type) {\n        case \"Point\":\n            return point(coordinates).geometry;\n        case \"LineString\":\n            return lineString(coordinates).geometry;\n        case \"Polygon\":\n            return polygon(coordinates).geometry;\n        case \"MultiPoint\":\n            return multiPoint(coordinates).geometry;\n        case \"MultiLineString\":\n            return multiLineString(coordinates).geometry;\n        case \"MultiPolygon\":\n            return multiPolygon(coordinates).geometry;\n        default:\n            throw new Error(type + \" is invalid\");\n    }\n}\n/**\n * Creates a {@link Point} {@link Feature} from a Position.\n *\n * @name point\n * @param {Array<number>} coordinates longitude, latitude position (each in decimal degrees)\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Point>} a Point feature\n * @example\n * var point = turf.point([-75.343, 39.984]);\n *\n * //=point\n */\nexport function point(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    if (!coordinates) {\n        throw new Error(\"coordinates is required\");\n    }\n    if (!Array.isArray(coordinates)) {\n        throw new Error(\"coordinates must be an Array\");\n    }\n    if (coordinates.length < 2) {\n        throw new Error(\"coordinates must be at least 2 numbers long\");\n    }\n    if (!isNumber(coordinates[0]) || !isNumber(coordinates[1])) {\n        throw new Error(\"coordinates must contain numbers\");\n    }\n    var geom = {\n        type: \"Point\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link Point} {@link FeatureCollection} from an Array of Point coordinates.\n *\n * @name points\n * @param {Array<Array<number>>} coordinates an array of Points\n * @param {Object} [properties={}] Translate these properties to each Feature\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north]\n * associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Point>} Point Feature\n * @example\n * var points = turf.points([\n *   [-75, 39],\n *   [-80, 45],\n *   [-78, 50]\n * ]);\n *\n * //=points\n */\nexport function points(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return point(coords, properties);\n    }), options);\n}\n/**\n * Creates a {@link Polygon} {@link Feature} from an Array of LinearRings.\n *\n * @name polygon\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Polygon>} Polygon Feature\n * @example\n * var polygon = turf.polygon([[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]], { name: 'poly1' });\n *\n * //=polygon\n */\nexport function polygon(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    for (var _i = 0, coordinates_1 = coordinates; _i < coordinates_1.length; _i++) {\n        var ring = coordinates_1[_i];\n        if (ring.length < 4) {\n            throw new Error(\"Each LinearRing of a Polygon must have 4 or more Positions.\");\n        }\n        for (var j = 0; j < ring[ring.length - 1].length; j++) {\n            // Check if first point of Polygon contains two numbers\n            if (ring[ring.length - 1][j] !== ring[0][j]) {\n                throw new Error(\"First and last Position are not equivalent.\");\n            }\n        }\n    }\n    var geom = {\n        type: \"Polygon\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link Polygon} {@link FeatureCollection} from an Array of Polygon coordinates.\n *\n * @name polygons\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygon coordinates\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Polygon>} Polygon FeatureCollection\n * @example\n * var polygons = turf.polygons([\n *   [[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]],\n *   [[[-15, 42], [-14, 46], [-12, 41], [-17, 44], [-15, 42]]],\n * ]);\n *\n * //=polygons\n */\nexport function polygons(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return polygon(coords, properties);\n    }), options);\n}\n/**\n * Creates a {@link LineString} {@link Feature} from an Array of Positions.\n *\n * @name lineString\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<LineString>} LineString Feature\n * @example\n * var linestring1 = turf.lineString([[-24, 63], [-23, 60], [-25, 65], [-20, 69]], {name: 'line 1'});\n * var linestring2 = turf.lineString([[-14, 43], [-13, 40], [-15, 45], [-10, 49]], {name: 'line 2'});\n *\n * //=linestring1\n * //=linestring2\n */\nexport function lineString(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    if (coordinates.length < 2) {\n        throw new Error(\"coordinates must be an array of two or more positions\");\n    }\n    var geom = {\n        type: \"LineString\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link LineString} {@link FeatureCollection} from an Array of LineString coordinates.\n *\n * @name lineStrings\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north]\n * associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<LineString>} LineString FeatureCollection\n * @example\n * var linestrings = turf.lineStrings([\n *   [[-24, 63], [-23, 60], [-25, 65], [-20, 69]],\n *   [[-14, 43], [-13, 40], [-15, 45], [-10, 49]]\n * ]);\n *\n * //=linestrings\n */\nexport function lineStrings(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return lineString(coords, properties);\n    }), options);\n}\n/**\n * Takes one or more {@link Feature|Features} and creates a {@link FeatureCollection}.\n *\n * @name featureCollection\n * @param {Feature[]} features input features\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {FeatureCollection} FeatureCollection of Features\n * @example\n * var locationA = turf.point([-75.343, 39.984], {name: 'Location A'});\n * var locationB = turf.point([-75.833, 39.284], {name: 'Location B'});\n * var locationC = turf.point([-75.534, 39.123], {name: 'Location C'});\n *\n * var collection = turf.featureCollection([\n *   locationA,\n *   locationB,\n *   locationC\n * ]);\n *\n * //=collection\n */\nexport function featureCollection(features, options) {\n    if (options === void 0) { options = {}; }\n    var fc = { type: \"FeatureCollection\" };\n    if (options.id) {\n        fc.id = options.id;\n    }\n    if (options.bbox) {\n        fc.bbox = options.bbox;\n    }\n    fc.features = features;\n    return fc;\n}\n/**\n * Creates a {@link Feature<MultiLineString>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiLineString\n * @param {Array<Array<Array<number>>>} coordinates an array of LineStrings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiLineString>} a MultiLineString feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiLine = turf.multiLineString([[[0,0],[10,10]]]);\n *\n * //=multiLine\n */\nexport function multiLineString(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiLineString\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link Feature<MultiPoint>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPoint\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPoint>} a MultiPoint feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPt = turf.multiPoint([[0,0],[10,10]]);\n *\n * //=multiPt\n */\nexport function multiPoint(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiPoint\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link Feature<MultiPolygon>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPolygon\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygons\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPolygon>} a multipolygon feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPoly = turf.multiPolygon([[[[0,0],[0,10],[10,10],[10,0],[0,0]]]]);\n *\n * //=multiPoly\n *\n */\nexport function multiPolygon(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiPolygon\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link Feature<GeometryCollection>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name geometryCollection\n * @param {Array<Geometry>} geometries an array of GeoJSON Geometries\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<GeometryCollection>} a GeoJSON GeometryCollection Feature\n * @example\n * var pt = turf.geometry(\"Point\", [100, 0]);\n * var line = turf.geometry(\"LineString\", [[101, 0], [102, 1]]);\n * var collection = turf.geometryCollection([pt, line]);\n *\n * // => collection\n */\nexport function geometryCollection(geometries, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"GeometryCollection\",\n        geometries: geometries,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Round number to precision\n *\n * @param {number} num Number\n * @param {number} [precision=0] Precision\n * @returns {number} rounded number\n * @example\n * turf.round(120.4321)\n * //=120\n *\n * turf.round(120.4321, 2)\n * //=120.43\n */\nexport function round(num, precision) {\n    if (precision === void 0) { precision = 0; }\n    if (precision && !(precision >= 0)) {\n        throw new Error(\"precision must be a positive number\");\n    }\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.round(num * multiplier) / multiplier;\n}\n/**\n * Convert a distance measurement (assuming a spherical Earth) from radians to a more friendly unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name radiansToLength\n * @param {number} radians in radians across the sphere\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} distance\n */\nexport function radiansToLength(radians, units) {\n    if (units === void 0) { units = \"kilometers\"; }\n    var factor = factors[units];\n    if (!factor) {\n        throw new Error(units + \" units is invalid\");\n    }\n    return radians * factor;\n}\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into radians\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name lengthToRadians\n * @param {number} distance in real units\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} radians\n */\nexport function lengthToRadians(distance, units) {\n    if (units === void 0) { units = \"kilometers\"; }\n    var factor = factors[units];\n    if (!factor) {\n        throw new Error(units + \" units is invalid\");\n    }\n    return distance / factor;\n}\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into degrees\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, centimeters, kilometres, feet\n *\n * @name lengthToDegrees\n * @param {number} distance in real units\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} degrees\n */\nexport function lengthToDegrees(distance, units) {\n    return radiansToDegrees(lengthToRadians(distance, units));\n}\n/**\n * Converts any bearing angle from the north line direction (positive clockwise)\n * and returns an angle between 0-360 degrees (positive clockwise), 0 being the north line\n *\n * @name bearingToAzimuth\n * @param {number} bearing angle, between -180 and +180 degrees\n * @returns {number} angle between 0 and 360 degrees\n */\nexport function bearingToAzimuth(bearing) {\n    var angle = bearing % 360;\n    if (angle < 0) {\n        angle += 360;\n    }\n    return angle;\n}\n/**\n * Converts an angle in radians to degrees\n *\n * @name radiansToDegrees\n * @param {number} radians angle in radians\n * @returns {number} degrees between 0 and 360 degrees\n */\nexport function radiansToDegrees(radians) {\n    var degrees = radians % (2 * Math.PI);\n    return (degrees * 180) / Math.PI;\n}\n/**\n * Converts an angle in degrees to radians\n *\n * @name degreesToRadians\n * @param {number} degrees angle between 0 and 360 degrees\n * @returns {number} angle in radians\n */\nexport function degreesToRadians(degrees) {\n    var radians = degrees % 360;\n    return (radians * Math.PI) / 180;\n}\n/**\n * Converts a length to the requested unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @param {number} length to be converted\n * @param {Units} [originalUnit=\"kilometers\"] of the length\n * @param {Units} [finalUnit=\"kilometers\"] returned unit\n * @returns {number} the converted length\n */\nexport function convertLength(length, originalUnit, finalUnit) {\n    if (originalUnit === void 0) { originalUnit = \"kilometers\"; }\n    if (finalUnit === void 0) { finalUnit = \"kilometers\"; }\n    if (!(length >= 0)) {\n        throw new Error(\"length must be a positive number\");\n    }\n    return radiansToLength(lengthToRadians(length, originalUnit), finalUnit);\n}\n/**\n * Converts a area to the requested unit.\n * Valid units: kilometers, kilometres, meters, metres, centimetres, millimeters, acres, miles, yards, feet, inches, hectares\n * @param {number} area to be converted\n * @param {Units} [originalUnit=\"meters\"] of the distance\n * @param {Units} [finalUnit=\"kilometers\"] returned unit\n * @returns {number} the converted area\n */\nexport function convertArea(area, originalUnit, finalUnit) {\n    if (originalUnit === void 0) { originalUnit = \"meters\"; }\n    if (finalUnit === void 0) { finalUnit = \"kilometers\"; }\n    if (!(area >= 0)) {\n        throw new Error(\"area must be a positive number\");\n    }\n    var startFactor = areaFactors[originalUnit];\n    if (!startFactor) {\n        throw new Error(\"invalid original units\");\n    }\n    var finalFactor = areaFactors[finalUnit];\n    if (!finalFactor) {\n        throw new Error(\"invalid final units\");\n    }\n    return (area / startFactor) * finalFactor;\n}\n/**\n * isNumber\n *\n * @param {*} num Number to validate\n * @returns {boolean} true/false\n * @example\n * turf.isNumber(123)\n * //=true\n * turf.isNumber('foo')\n * //=false\n */\nexport function isNumber(num) {\n    return !isNaN(num) && num !== null && !Array.isArray(num);\n}\n/**\n * isObject\n *\n * @param {*} input variable to validate\n * @returns {boolean} true/false\n * @example\n * turf.isObject({elevation: 10})\n * //=true\n * turf.isObject('foo')\n * //=false\n */\nexport function isObject(input) {\n    return !!input && input.constructor === Object;\n}\n/**\n * Validate BBox\n *\n * @private\n * @param {Array<number>} bbox BBox to validate\n * @returns {void}\n * @throws Error if BBox is not valid\n * @example\n * validateBBox([-180, -40, 110, 50])\n * //=OK\n * validateBBox([-180, -40])\n * //=Error\n * validateBBox('Foo')\n * //=Error\n * validateBBox(5)\n * //=Error\n * validateBBox(null)\n * //=Error\n * validateBBox(undefined)\n * //=Error\n */\nexport function validateBBox(bbox) {\n    if (!bbox) {\n        throw new Error(\"bbox is required\");\n    }\n    if (!Array.isArray(bbox)) {\n        throw new Error(\"bbox must be an Array\");\n    }\n    if (bbox.length !== 4 && bbox.length !== 6) {\n        throw new Error(\"bbox must be an Array of 4 or 6 numbers\");\n    }\n    bbox.forEach(function (num) {\n        if (!isNumber(num)) {\n            throw new Error(\"bbox must only contain numbers\");\n        }\n    });\n}\n/**\n * Validate Id\n *\n * @private\n * @param {string|number} id Id to validate\n * @returns {void}\n * @throws Error if Id is not valid\n * @example\n * validateId([-180, -40, 110, 50])\n * //=Error\n * validateId([-180, -40])\n * //=Error\n * validateId('Foo')\n * //=OK\n * validateId(5)\n * //=OK\n * validateId(null)\n * //=Error\n * validateId(undefined)\n * //=Error\n */\nexport function validateId(id) {\n    if (!id) {\n        throw new Error(\"id is required\");\n    }\n    if ([\"string\", \"number\"].indexOf(typeof id) === -1) {\n        throw new Error(\"id must be a number or a string\");\n    }\n}\n","import { feature, lineString, isObject, point } from '@turf/helpers';\n\n/**\n * Callback for coordEach\n *\n * @callback coordEachCallback\n * @param {Array<number>} currentCoord The current coordinate being processed.\n * @param {number} coordIndex The current index of the coordinate being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n */\n\n/**\n * Iterate over coordinates in any GeoJSON object, similar to Array.forEach()\n *\n * @name coordEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentCoord, coordIndex, featureIndex, multiFeatureIndex)\n * @param {boolean} [excludeWrapCoord=false] whether or not to include the final coordinate of LinearRings that wraps the ring in its iteration.\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.coordEach(features, function (currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=currentCoord\n *   //=coordIndex\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n * });\n */\nfunction coordEach(geojson, callback, excludeWrapCoord) {\n  // Handles null Geometry -- Skips this GeoJSON\n  if (geojson === null) return;\n  var j,\n    k,\n    l,\n    geometry,\n    stopG,\n    coords,\n    geometryMaybeCollection,\n    wrapShrink = 0,\n    coordIndex = 0,\n    isGeometryCollection,\n    type = geojson.type,\n    isFeatureCollection = type === \"FeatureCollection\",\n    isFeature = type === \"Feature\",\n    stop = isFeatureCollection ? geojson.features.length : 1;\n\n  // This logic may look a little weird. The reason why it is that way\n  // is because it's trying to be fast. GeoJSON supports multiple kinds\n  // of objects at its root: FeatureCollection, Features, Geometries.\n  // This function has the responsibility of handling all of them, and that\n  // means that some of the `for` loops you see below actually just don't apply\n  // to certain inputs. For instance, if you give this just a\n  // Point geometry, then both loops are short-circuited and all we do\n  // is gradually rename the input until it's called 'geometry'.\n  //\n  // This also aims to allocate as few resources as possible: just a\n  // few numbers and booleans, rather than any temporary arrays as would\n  // be required with the normalization approach.\n  for (var featureIndex = 0; featureIndex < stop; featureIndex++) {\n    geometryMaybeCollection = isFeatureCollection\n      ? geojson.features[featureIndex].geometry\n      : isFeature\n      ? geojson.geometry\n      : geojson;\n    isGeometryCollection = geometryMaybeCollection\n      ? geometryMaybeCollection.type === \"GeometryCollection\"\n      : false;\n    stopG = isGeometryCollection\n      ? geometryMaybeCollection.geometries.length\n      : 1;\n\n    for (var geomIndex = 0; geomIndex < stopG; geomIndex++) {\n      var multiFeatureIndex = 0;\n      var geometryIndex = 0;\n      geometry = isGeometryCollection\n        ? geometryMaybeCollection.geometries[geomIndex]\n        : geometryMaybeCollection;\n\n      // Handles null Geometry -- Skips this geometry\n      if (geometry === null) continue;\n      coords = geometry.coordinates;\n      var geomType = geometry.type;\n\n      wrapShrink =\n        excludeWrapCoord &&\n        (geomType === \"Polygon\" || geomType === \"MultiPolygon\")\n          ? 1\n          : 0;\n\n      switch (geomType) {\n        case null:\n          break;\n        case \"Point\":\n          if (\n            callback(\n              coords,\n              coordIndex,\n              featureIndex,\n              multiFeatureIndex,\n              geometryIndex\n            ) === false\n          )\n            return false;\n          coordIndex++;\n          multiFeatureIndex++;\n          break;\n        case \"LineString\":\n        case \"MultiPoint\":\n          for (j = 0; j < coords.length; j++) {\n            if (\n              callback(\n                coords[j],\n                coordIndex,\n                featureIndex,\n                multiFeatureIndex,\n                geometryIndex\n              ) === false\n            )\n              return false;\n            coordIndex++;\n            if (geomType === \"MultiPoint\") multiFeatureIndex++;\n          }\n          if (geomType === \"LineString\") multiFeatureIndex++;\n          break;\n        case \"Polygon\":\n        case \"MultiLineString\":\n          for (j = 0; j < coords.length; j++) {\n            for (k = 0; k < coords[j].length - wrapShrink; k++) {\n              if (\n                callback(\n                  coords[j][k],\n                  coordIndex,\n                  featureIndex,\n                  multiFeatureIndex,\n                  geometryIndex\n                ) === false\n              )\n                return false;\n              coordIndex++;\n            }\n            if (geomType === \"MultiLineString\") multiFeatureIndex++;\n            if (geomType === \"Polygon\") geometryIndex++;\n          }\n          if (geomType === \"Polygon\") multiFeatureIndex++;\n          break;\n        case \"MultiPolygon\":\n          for (j = 0; j < coords.length; j++) {\n            geometryIndex = 0;\n            for (k = 0; k < coords[j].length; k++) {\n              for (l = 0; l < coords[j][k].length - wrapShrink; l++) {\n                if (\n                  callback(\n                    coords[j][k][l],\n                    coordIndex,\n                    featureIndex,\n                    multiFeatureIndex,\n                    geometryIndex\n                  ) === false\n                )\n                  return false;\n                coordIndex++;\n              }\n              geometryIndex++;\n            }\n            multiFeatureIndex++;\n          }\n          break;\n        case \"GeometryCollection\":\n          for (j = 0; j < geometry.geometries.length; j++)\n            if (\n              coordEach(geometry.geometries[j], callback, excludeWrapCoord) ===\n              false\n            )\n              return false;\n          break;\n        default:\n          throw new Error(\"Unknown Geometry Type\");\n      }\n    }\n  }\n}\n\n/**\n * Callback for coordReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback coordReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Array<number>} currentCoord The current coordinate being processed.\n * @param {number} coordIndex The current index of the coordinate being processed.\n * Starts at index 0, if an initialValue is provided, and at index 1 otherwise.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n */\n\n/**\n * Reduce coordinates in any GeoJSON object, similar to Array.reduce()\n *\n * @name coordReduce\n * @param {FeatureCollection|Geometry|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentCoord, coordIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @param {boolean} [excludeWrapCoord=false] whether or not to include the final coordinate of LinearRings that wraps the ring in its iteration.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.coordReduce(features, function (previousValue, currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=previousValue\n *   //=currentCoord\n *   //=coordIndex\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   return currentCoord;\n * });\n */\nfunction coordReduce(geojson, callback, initialValue, excludeWrapCoord) {\n  var previousValue = initialValue;\n  coordEach(\n    geojson,\n    function (\n      currentCoord,\n      coordIndex,\n      featureIndex,\n      multiFeatureIndex,\n      geometryIndex\n    ) {\n      if (coordIndex === 0 && initialValue === undefined)\n        previousValue = currentCoord;\n      else\n        previousValue = callback(\n          previousValue,\n          currentCoord,\n          coordIndex,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex\n        );\n    },\n    excludeWrapCoord\n  );\n  return previousValue;\n}\n\n/**\n * Callback for propEach\n *\n * @callback propEachCallback\n * @param {Object} currentProperties The current Properties being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Iterate over properties in any GeoJSON object, similar to Array.forEach()\n *\n * @name propEach\n * @param {FeatureCollection|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentProperties, featureIndex)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.propEach(features, function (currentProperties, featureIndex) {\n *   //=currentProperties\n *   //=featureIndex\n * });\n */\nfunction propEach(geojson, callback) {\n  var i;\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      for (i = 0; i < geojson.features.length; i++) {\n        if (callback(geojson.features[i].properties, i) === false) break;\n      }\n      break;\n    case \"Feature\":\n      callback(geojson.properties, 0);\n      break;\n  }\n}\n\n/**\n * Callback for propReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback propReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {*} currentProperties The current Properties being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Reduce properties in any GeoJSON object into a single value,\n * similar to how Array.reduce works. However, in this case we lazily run\n * the reduction, so an array of all properties is unnecessary.\n *\n * @name propReduce\n * @param {FeatureCollection|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentProperties, featureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.propReduce(features, function (previousValue, currentProperties, featureIndex) {\n *   //=previousValue\n *   //=currentProperties\n *   //=featureIndex\n *   return currentProperties\n * });\n */\nfunction propReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  propEach(geojson, function (currentProperties, featureIndex) {\n    if (featureIndex === 0 && initialValue === undefined)\n      previousValue = currentProperties;\n    else\n      previousValue = callback(previousValue, currentProperties, featureIndex);\n  });\n  return previousValue;\n}\n\n/**\n * Callback for featureEach\n *\n * @callback featureEachCallback\n * @param {Feature<any>} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Iterate over features in any GeoJSON object, similar to\n * Array.forEach.\n *\n * @name featureEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentFeature, featureIndex)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {foo: 'bar'}),\n *   turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.featureEach(features, function (currentFeature, featureIndex) {\n *   //=currentFeature\n *   //=featureIndex\n * });\n */\nfunction featureEach(geojson, callback) {\n  if (geojson.type === \"Feature\") {\n    callback(geojson, 0);\n  } else if (geojson.type === \"FeatureCollection\") {\n    for (var i = 0; i < geojson.features.length; i++) {\n      if (callback(geojson.features[i], i) === false) break;\n    }\n  }\n}\n\n/**\n * Callback for featureReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback featureReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Reduce features in any GeoJSON object, similar to Array.reduce().\n *\n * @name featureReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentFeature, featureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.featureReduce(features, function (previousValue, currentFeature, featureIndex) {\n *   //=previousValue\n *   //=currentFeature\n *   //=featureIndex\n *   return currentFeature\n * });\n */\nfunction featureReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  featureEach(geojson, function (currentFeature, featureIndex) {\n    if (featureIndex === 0 && initialValue === undefined)\n      previousValue = currentFeature;\n    else previousValue = callback(previousValue, currentFeature, featureIndex);\n  });\n  return previousValue;\n}\n\n/**\n * Get all coordinates from any GeoJSON object.\n *\n * @name coordAll\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @returns {Array<Array<number>>} coordinate position array\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {foo: 'bar'}),\n *   turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * var coords = turf.coordAll(features);\n * //= [[26, 37], [36, 53]]\n */\nfunction coordAll(geojson) {\n  var coords = [];\n  coordEach(geojson, function (coord) {\n    coords.push(coord);\n  });\n  return coords;\n}\n\n/**\n * Callback for geomEach\n *\n * @callback geomEachCallback\n * @param {Geometry} currentGeometry The current Geometry being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {Object} featureProperties The current Feature Properties being processed.\n * @param {Array<number>} featureBBox The current Feature BBox being processed.\n * @param {number|string} featureId The current Feature Id being processed.\n */\n\n/**\n * Iterate over each geometry in any GeoJSON object, similar to Array.forEach()\n *\n * @name geomEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentGeometry, featureIndex, featureProperties, featureBBox, featureId)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.geomEach(features, function (currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n *   //=currentGeometry\n *   //=featureIndex\n *   //=featureProperties\n *   //=featureBBox\n *   //=featureId\n * });\n */\nfunction geomEach(geojson, callback) {\n  var i,\n    j,\n    g,\n    geometry,\n    stopG,\n    geometryMaybeCollection,\n    isGeometryCollection,\n    featureProperties,\n    featureBBox,\n    featureId,\n    featureIndex = 0,\n    isFeatureCollection = geojson.type === \"FeatureCollection\",\n    isFeature = geojson.type === \"Feature\",\n    stop = isFeatureCollection ? geojson.features.length : 1;\n\n  // This logic may look a little weird. The reason why it is that way\n  // is because it's trying to be fast. GeoJSON supports multiple kinds\n  // of objects at its root: FeatureCollection, Features, Geometries.\n  // This function has the responsibility of handling all of them, and that\n  // means that some of the `for` loops you see below actually just don't apply\n  // to certain inputs. For instance, if you give this just a\n  // Point geometry, then both loops are short-circuited and all we do\n  // is gradually rename the input until it's called 'geometry'.\n  //\n  // This also aims to allocate as few resources as possible: just a\n  // few numbers and booleans, rather than any temporary arrays as would\n  // be required with the normalization approach.\n  for (i = 0; i < stop; i++) {\n    geometryMaybeCollection = isFeatureCollection\n      ? geojson.features[i].geometry\n      : isFeature\n      ? geojson.geometry\n      : geojson;\n    featureProperties = isFeatureCollection\n      ? geojson.features[i].properties\n      : isFeature\n      ? geojson.properties\n      : {};\n    featureBBox = isFeatureCollection\n      ? geojson.features[i].bbox\n      : isFeature\n      ? geojson.bbox\n      : undefined;\n    featureId = isFeatureCollection\n      ? geojson.features[i].id\n      : isFeature\n      ? geojson.id\n      : undefined;\n    isGeometryCollection = geometryMaybeCollection\n      ? geometryMaybeCollection.type === \"GeometryCollection\"\n      : false;\n    stopG = isGeometryCollection\n      ? geometryMaybeCollection.geometries.length\n      : 1;\n\n    for (g = 0; g < stopG; g++) {\n      geometry = isGeometryCollection\n        ? geometryMaybeCollection.geometries[g]\n        : geometryMaybeCollection;\n\n      // Handle null Geometry\n      if (geometry === null) {\n        if (\n          callback(\n            null,\n            featureIndex,\n            featureProperties,\n            featureBBox,\n            featureId\n          ) === false\n        )\n          return false;\n        continue;\n      }\n      switch (geometry.type) {\n        case \"Point\":\n        case \"LineString\":\n        case \"MultiPoint\":\n        case \"Polygon\":\n        case \"MultiLineString\":\n        case \"MultiPolygon\": {\n          if (\n            callback(\n              geometry,\n              featureIndex,\n              featureProperties,\n              featureBBox,\n              featureId\n            ) === false\n          )\n            return false;\n          break;\n        }\n        case \"GeometryCollection\": {\n          for (j = 0; j < geometry.geometries.length; j++) {\n            if (\n              callback(\n                geometry.geometries[j],\n                featureIndex,\n                featureProperties,\n                featureBBox,\n                featureId\n              ) === false\n            )\n              return false;\n          }\n          break;\n        }\n        default:\n          throw new Error(\"Unknown Geometry Type\");\n      }\n    }\n    // Only increase `featureIndex` per each feature\n    featureIndex++;\n  }\n}\n\n/**\n * Callback for geomReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback geomReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Geometry} currentGeometry The current Geometry being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {Object} featureProperties The current Feature Properties being processed.\n * @param {Array<number>} featureBBox The current Feature BBox being processed.\n * @param {number|string} featureId The current Feature Id being processed.\n */\n\n/**\n * Reduce geometry in any GeoJSON object, similar to Array.reduce().\n *\n * @name geomReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.geomReduce(features, function (previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n *   //=previousValue\n *   //=currentGeometry\n *   //=featureIndex\n *   //=featureProperties\n *   //=featureBBox\n *   //=featureId\n *   return currentGeometry\n * });\n */\nfunction geomReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  geomEach(\n    geojson,\n    function (\n      currentGeometry,\n      featureIndex,\n      featureProperties,\n      featureBBox,\n      featureId\n    ) {\n      if (featureIndex === 0 && initialValue === undefined)\n        previousValue = currentGeometry;\n      else\n        previousValue = callback(\n          previousValue,\n          currentGeometry,\n          featureIndex,\n          featureProperties,\n          featureBBox,\n          featureId\n        );\n    }\n  );\n  return previousValue;\n}\n\n/**\n * Callback for flattenEach\n *\n * @callback flattenEachCallback\n * @param {Feature} currentFeature The current flattened feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n */\n\n/**\n * Iterate over flattened features in any GeoJSON object, similar to\n * Array.forEach.\n *\n * @name flattenEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentFeature, featureIndex, multiFeatureIndex)\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.multiPoint([[40, 30], [36, 53]], {hello: 'world'})\n * ]);\n *\n * turf.flattenEach(features, function (currentFeature, featureIndex, multiFeatureIndex) {\n *   //=currentFeature\n *   //=featureIndex\n *   //=multiFeatureIndex\n * });\n */\nfunction flattenEach(geojson, callback) {\n  geomEach(geojson, function (geometry, featureIndex, properties, bbox, id) {\n    // Callback for single geometry\n    var type = geometry === null ? null : geometry.type;\n    switch (type) {\n      case null:\n      case \"Point\":\n      case \"LineString\":\n      case \"Polygon\":\n        if (\n          callback(\n            feature(geometry, properties, { bbox: bbox, id: id }),\n            featureIndex,\n            0\n          ) === false\n        )\n          return false;\n        return;\n    }\n\n    var geomType;\n\n    // Callback for multi-geometry\n    switch (type) {\n      case \"MultiPoint\":\n        geomType = \"Point\";\n        break;\n      case \"MultiLineString\":\n        geomType = \"LineString\";\n        break;\n      case \"MultiPolygon\":\n        geomType = \"Polygon\";\n        break;\n    }\n\n    for (\n      var multiFeatureIndex = 0;\n      multiFeatureIndex < geometry.coordinates.length;\n      multiFeatureIndex++\n    ) {\n      var coordinate = geometry.coordinates[multiFeatureIndex];\n      var geom = {\n        type: geomType,\n        coordinates: coordinate,\n      };\n      if (\n        callback(feature(geom, properties), featureIndex, multiFeatureIndex) ===\n        false\n      )\n        return false;\n    }\n  });\n}\n\n/**\n * Callback for flattenReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback flattenReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n */\n\n/**\n * Reduce flattened features in any GeoJSON object, similar to Array.reduce().\n *\n * @name flattenReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentFeature, featureIndex, multiFeatureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.multiPoint([[40, 30], [36, 53]], {hello: 'world'})\n * ]);\n *\n * turf.flattenReduce(features, function (previousValue, currentFeature, featureIndex, multiFeatureIndex) {\n *   //=previousValue\n *   //=currentFeature\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   return currentFeature\n * });\n */\nfunction flattenReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  flattenEach(\n    geojson,\n    function (currentFeature, featureIndex, multiFeatureIndex) {\n      if (\n        featureIndex === 0 &&\n        multiFeatureIndex === 0 &&\n        initialValue === undefined\n      )\n        previousValue = currentFeature;\n      else\n        previousValue = callback(\n          previousValue,\n          currentFeature,\n          featureIndex,\n          multiFeatureIndex\n        );\n    }\n  );\n  return previousValue;\n}\n\n/**\n * Callback for segmentEach\n *\n * @callback segmentEachCallback\n * @param {Feature<LineString>} currentSegment The current Segment being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n * @param {number} segmentIndex The current index of the Segment being processed.\n * @returns {void}\n */\n\n/**\n * Iterate over 2-vertex line segment in any GeoJSON object, similar to Array.forEach()\n * (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON\n * @param {Function} callback a method that takes (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex)\n * @returns {void}\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n *\n * // Iterate over GeoJSON by 2-vertex segments\n * turf.segmentEach(polygon, function (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n *   //=currentSegment\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   //=segmentIndex\n * });\n *\n * // Calculate the total number of segments\n * var total = 0;\n * turf.segmentEach(polygon, function () {\n *     total++;\n * });\n */\nfunction segmentEach(geojson, callback) {\n  flattenEach(geojson, function (feature, featureIndex, multiFeatureIndex) {\n    var segmentIndex = 0;\n\n    // Exclude null Geometries\n    if (!feature.geometry) return;\n    // (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n    var type = feature.geometry.type;\n    if (type === \"Point\" || type === \"MultiPoint\") return;\n\n    // Generate 2-vertex line segments\n    var previousCoords;\n    var previousFeatureIndex = 0;\n    var previousMultiIndex = 0;\n    var prevGeomIndex = 0;\n    if (\n      coordEach(\n        feature,\n        function (\n          currentCoord,\n          coordIndex,\n          featureIndexCoord,\n          multiPartIndexCoord,\n          geometryIndex\n        ) {\n          // Simulating a meta.coordReduce() since `reduce` operations cannot be stopped by returning `false`\n          if (\n            previousCoords === undefined ||\n            featureIndex > previousFeatureIndex ||\n            multiPartIndexCoord > previousMultiIndex ||\n            geometryIndex > prevGeomIndex\n          ) {\n            previousCoords = currentCoord;\n            previousFeatureIndex = featureIndex;\n            previousMultiIndex = multiPartIndexCoord;\n            prevGeomIndex = geometryIndex;\n            segmentIndex = 0;\n            return;\n          }\n          var currentSegment = lineString(\n            [previousCoords, currentCoord],\n            feature.properties\n          );\n          if (\n            callback(\n              currentSegment,\n              featureIndex,\n              multiFeatureIndex,\n              geometryIndex,\n              segmentIndex\n            ) === false\n          )\n            return false;\n          segmentIndex++;\n          previousCoords = currentCoord;\n        }\n      ) === false\n    )\n      return false;\n  });\n}\n\n/**\n * Callback for segmentReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback segmentReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature<LineString>} currentSegment The current Segment being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n * @param {number} segmentIndex The current index of the Segment being processed.\n */\n\n/**\n * Reduce 2-vertex line segment in any GeoJSON object, similar to Array.reduce()\n * (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON\n * @param {Function} callback a method that takes (previousValue, currentSegment, currentIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {void}\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n *\n * // Iterate over GeoJSON by 2-vertex segments\n * turf.segmentReduce(polygon, function (previousSegment, currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n *   //= previousSegment\n *   //= currentSegment\n *   //= featureIndex\n *   //= multiFeatureIndex\n *   //= geometryIndex\n *   //= segmentIndex\n *   return currentSegment\n * });\n *\n * // Calculate the total number of segments\n * var initialValue = 0\n * var total = turf.segmentReduce(polygon, function (previousValue) {\n *     previousValue++;\n *     return previousValue;\n * }, initialValue);\n */\nfunction segmentReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  var started = false;\n  segmentEach(\n    geojson,\n    function (\n      currentSegment,\n      featureIndex,\n      multiFeatureIndex,\n      geometryIndex,\n      segmentIndex\n    ) {\n      if (started === false && initialValue === undefined)\n        previousValue = currentSegment;\n      else\n        previousValue = callback(\n          previousValue,\n          currentSegment,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex,\n          segmentIndex\n        );\n      started = true;\n    }\n  );\n  return previousValue;\n}\n\n/**\n * Callback for lineEach\n *\n * @callback lineEachCallback\n * @param {Feature<LineString>} currentLine The current LineString|LinearRing being processed\n * @param {number} featureIndex The current index of the Feature being processed\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed\n * @param {number} geometryIndex The current index of the Geometry being processed\n */\n\n/**\n * Iterate over line or ring coordinates in LineString, Polygon, MultiLineString, MultiPolygon Features or Geometries,\n * similar to Array.forEach.\n *\n * @name lineEach\n * @param {Geometry|Feature<LineString|Polygon|MultiLineString|MultiPolygon>} geojson object\n * @param {Function} callback a method that takes (currentLine, featureIndex, multiFeatureIndex, geometryIndex)\n * @example\n * var multiLine = turf.multiLineString([\n *   [[26, 37], [35, 45]],\n *   [[36, 53], [38, 50], [41, 55]]\n * ]);\n *\n * turf.lineEach(multiLine, function (currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=currentLine\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n * });\n */\nfunction lineEach(geojson, callback) {\n  // validation\n  if (!geojson) throw new Error(\"geojson is required\");\n\n  flattenEach(geojson, function (feature, featureIndex, multiFeatureIndex) {\n    if (feature.geometry === null) return;\n    var type = feature.geometry.type;\n    var coords = feature.geometry.coordinates;\n    switch (type) {\n      case \"LineString\":\n        if (callback(feature, featureIndex, multiFeatureIndex, 0, 0) === false)\n          return false;\n        break;\n      case \"Polygon\":\n        for (\n          var geometryIndex = 0;\n          geometryIndex < coords.length;\n          geometryIndex++\n        ) {\n          if (\n            callback(\n              lineString(coords[geometryIndex], feature.properties),\n              featureIndex,\n              multiFeatureIndex,\n              geometryIndex\n            ) === false\n          )\n            return false;\n        }\n        break;\n    }\n  });\n}\n\n/**\n * Callback for lineReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback lineReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature<LineString>} currentLine The current LineString|LinearRing being processed.\n * @param {number} featureIndex The current index of the Feature being processed\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed\n * @param {number} geometryIndex The current index of the Geometry being processed\n */\n\n/**\n * Reduce features in any GeoJSON object, similar to Array.reduce().\n *\n * @name lineReduce\n * @param {Geometry|Feature<LineString|Polygon|MultiLineString|MultiPolygon>} geojson object\n * @param {Function} callback a method that takes (previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var multiPoly = turf.multiPolygon([\n *   turf.polygon([[[12,48],[2,41],[24,38],[12,48]], [[9,44],[13,41],[13,45],[9,44]]]),\n *   turf.polygon([[[5, 5], [0, 0], [2, 2], [4, 4], [5, 5]]])\n * ]);\n *\n * turf.lineReduce(multiPoly, function (previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=previousValue\n *   //=currentLine\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   return currentLine\n * });\n */\nfunction lineReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  lineEach(\n    geojson,\n    function (currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n      if (featureIndex === 0 && initialValue === undefined)\n        previousValue = currentLine;\n      else\n        previousValue = callback(\n          previousValue,\n          currentLine,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex\n        );\n    }\n  );\n  return previousValue;\n}\n\n/**\n * Finds a particular 2-vertex LineString Segment from a GeoJSON using `@turf/meta` indexes.\n *\n * Negative indexes are permitted.\n * Point & MultiPoint will always return null.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson Any GeoJSON Feature or Geometry\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.featureIndex=0] Feature Index\n * @param {number} [options.multiFeatureIndex=0] Multi-Feature Index\n * @param {number} [options.geometryIndex=0] Geometry Index\n * @param {number} [options.segmentIndex=0] Segment Index\n * @param {Object} [options.properties={}] Translate Properties to output LineString\n * @param {BBox} [options.bbox={}] Translate BBox to output LineString\n * @param {number|string} [options.id={}] Translate Id to output LineString\n * @returns {Feature<LineString>} 2-vertex GeoJSON Feature LineString\n * @example\n * var multiLine = turf.multiLineString([\n *     [[10, 10], [50, 30], [30, 40]],\n *     [[-10, -10], [-50, -30], [-30, -40]]\n * ]);\n *\n * // First Segment (defaults are 0)\n * turf.findSegment(multiLine);\n * // => Feature<LineString<[[10, 10], [50, 30]]>>\n *\n * // First Segment of 2nd Multi Feature\n * turf.findSegment(multiLine, {multiFeatureIndex: 1});\n * // => Feature<LineString<[[-10, -10], [-50, -30]]>>\n *\n * // Last Segment of Last Multi Feature\n * turf.findSegment(multiLine, {multiFeatureIndex: -1, segmentIndex: -1});\n * // => Feature<LineString<[[-50, -30], [-30, -40]]>>\n */\nfunction findSegment(geojson, options) {\n  // Optional Parameters\n  options = options || {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  var featureIndex = options.featureIndex || 0;\n  var multiFeatureIndex = options.multiFeatureIndex || 0;\n  var geometryIndex = options.geometryIndex || 0;\n  var segmentIndex = options.segmentIndex || 0;\n\n  // Find FeatureIndex\n  var properties = options.properties;\n  var geometry;\n\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      if (featureIndex < 0)\n        featureIndex = geojson.features.length + featureIndex;\n      properties = properties || geojson.features[featureIndex].properties;\n      geometry = geojson.features[featureIndex].geometry;\n      break;\n    case \"Feature\":\n      properties = properties || geojson.properties;\n      geometry = geojson.geometry;\n      break;\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n    case \"Polygon\":\n    case \"MultiLineString\":\n    case \"MultiPolygon\":\n      geometry = geojson;\n      break;\n    default:\n      throw new Error(\"geojson is invalid\");\n  }\n\n  // Find SegmentIndex\n  if (geometry === null) return null;\n  var coords = geometry.coordinates;\n  switch (geometry.type) {\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n      if (segmentIndex < 0) segmentIndex = coords.length + segmentIndex - 1;\n      return lineString(\n        [coords[segmentIndex], coords[segmentIndex + 1]],\n        properties,\n        options\n      );\n    case \"Polygon\":\n      if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n      if (segmentIndex < 0)\n        segmentIndex = coords[geometryIndex].length + segmentIndex - 1;\n      return lineString(\n        [\n          coords[geometryIndex][segmentIndex],\n          coords[geometryIndex][segmentIndex + 1],\n        ],\n        properties,\n        options\n      );\n    case \"MultiLineString\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (segmentIndex < 0)\n        segmentIndex = coords[multiFeatureIndex].length + segmentIndex - 1;\n      return lineString(\n        [\n          coords[multiFeatureIndex][segmentIndex],\n          coords[multiFeatureIndex][segmentIndex + 1],\n        ],\n        properties,\n        options\n      );\n    case \"MultiPolygon\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (geometryIndex < 0)\n        geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n      if (segmentIndex < 0)\n        segmentIndex =\n          coords[multiFeatureIndex][geometryIndex].length - segmentIndex - 1;\n      return lineString(\n        [\n          coords[multiFeatureIndex][geometryIndex][segmentIndex],\n          coords[multiFeatureIndex][geometryIndex][segmentIndex + 1],\n        ],\n        properties,\n        options\n      );\n  }\n  throw new Error(\"geojson is invalid\");\n}\n\n/**\n * Finds a particular Point from a GeoJSON using `@turf/meta` indexes.\n *\n * Negative indexes are permitted.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson Any GeoJSON Feature or Geometry\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.featureIndex=0] Feature Index\n * @param {number} [options.multiFeatureIndex=0] Multi-Feature Index\n * @param {number} [options.geometryIndex=0] Geometry Index\n * @param {number} [options.coordIndex=0] Coord Index\n * @param {Object} [options.properties={}] Translate Properties to output Point\n * @param {BBox} [options.bbox={}] Translate BBox to output Point\n * @param {number|string} [options.id={}] Translate Id to output Point\n * @returns {Feature<Point>} 2-vertex GeoJSON Feature Point\n * @example\n * var multiLine = turf.multiLineString([\n *     [[10, 10], [50, 30], [30, 40]],\n *     [[-10, -10], [-50, -30], [-30, -40]]\n * ]);\n *\n * // First Segment (defaults are 0)\n * turf.findPoint(multiLine);\n * // => Feature<Point<[10, 10]>>\n *\n * // First Segment of the 2nd Multi-Feature\n * turf.findPoint(multiLine, {multiFeatureIndex: 1});\n * // => Feature<Point<[-10, -10]>>\n *\n * // Last Segment of last Multi-Feature\n * turf.findPoint(multiLine, {multiFeatureIndex: -1, coordIndex: -1});\n * // => Feature<Point<[-30, -40]>>\n */\nfunction findPoint(geojson, options) {\n  // Optional Parameters\n  options = options || {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  var featureIndex = options.featureIndex || 0;\n  var multiFeatureIndex = options.multiFeatureIndex || 0;\n  var geometryIndex = options.geometryIndex || 0;\n  var coordIndex = options.coordIndex || 0;\n\n  // Find FeatureIndex\n  var properties = options.properties;\n  var geometry;\n\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      if (featureIndex < 0)\n        featureIndex = geojson.features.length + featureIndex;\n      properties = properties || geojson.features[featureIndex].properties;\n      geometry = geojson.features[featureIndex].geometry;\n      break;\n    case \"Feature\":\n      properties = properties || geojson.properties;\n      geometry = geojson.geometry;\n      break;\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n    case \"Polygon\":\n    case \"MultiLineString\":\n    case \"MultiPolygon\":\n      geometry = geojson;\n      break;\n    default:\n      throw new Error(\"geojson is invalid\");\n  }\n\n  // Find Coord Index\n  if (geometry === null) return null;\n  var coords = geometry.coordinates;\n  switch (geometry.type) {\n    case \"Point\":\n      return point(coords, properties, options);\n    case \"MultiPoint\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      return point(coords[multiFeatureIndex], properties, options);\n    case \"LineString\":\n      if (coordIndex < 0) coordIndex = coords.length + coordIndex;\n      return point(coords[coordIndex], properties, options);\n    case \"Polygon\":\n      if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n      if (coordIndex < 0)\n        coordIndex = coords[geometryIndex].length + coordIndex;\n      return point(coords[geometryIndex][coordIndex], properties, options);\n    case \"MultiLineString\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (coordIndex < 0)\n        coordIndex = coords[multiFeatureIndex].length + coordIndex;\n      return point(coords[multiFeatureIndex][coordIndex], properties, options);\n    case \"MultiPolygon\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (geometryIndex < 0)\n        geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n      if (coordIndex < 0)\n        coordIndex =\n          coords[multiFeatureIndex][geometryIndex].length - coordIndex;\n      return point(\n        coords[multiFeatureIndex][geometryIndex][coordIndex],\n        properties,\n        options\n      );\n  }\n  throw new Error(\"geojson is invalid\");\n}\n\nexport { coordAll, coordEach, coordReduce, featureEach, featureReduce, findPoint, findSegment, flattenEach, flattenReduce, geomEach, geomReduce, lineEach, lineReduce, propEach, propReduce, segmentEach, segmentReduce };\n","import { coordEach } from \"@turf/meta\";\nimport { point } from \"@turf/helpers\";\n/**\n * Takes one or more features and calculates the centroid using the mean of all vertices.\n * This lessens the effect of small islands and artifacts when calculating the centroid of a set of polygons.\n *\n * @name centroid\n * @param {GeoJSON} geojson GeoJSON to be centered\n * @param {Object} [options={}] Optional Parameters\n * @param {Object} [options.properties={}] an Object that is used as the {@link Feature}'s properties\n * @returns {Feature<Point>} the centroid of the input features\n * @example\n * var polygon = turf.polygon([[[-81, 41], [-88, 36], [-84, 31], [-80, 33], [-77, 39], [-81, 41]]]);\n *\n * var centroid = turf.centroid(polygon);\n *\n * //addToMap\n * var addToMap = [polygon, centroid]\n */\nfunction centroid(geojson, options) {\n    if (options === void 0) { options = {}; }\n    var xSum = 0;\n    var ySum = 0;\n    var len = 0;\n    coordEach(geojson, function (coord) {\n        xSum += coord[0];\n        ySum += coord[1];\n        len++;\n    }, true);\n    return point([xSum / len, ySum / len], options.properties);\n}\nexport default centroid;\n","import { isNumber, } from \"@turf/helpers\";\n/**\n * Unwrap a coordinate from a Point Feature, Geometry or a single coordinate.\n *\n * @name getCoord\n * @param {Array<number>|Geometry<Point>|Feature<Point>} coord GeoJSON Point or an Array of numbers\n * @returns {Array<number>} coordinates\n * @example\n * var pt = turf.point([10, 10]);\n *\n * var coord = turf.getCoord(pt);\n * //= [10, 10]\n */\nexport function getCoord(coord) {\n    if (!coord) {\n        throw new Error(\"coord is required\");\n    }\n    if (!Array.isArray(coord)) {\n        if (coord.type === \"Feature\" &&\n            coord.geometry !== null &&\n            coord.geometry.type === \"Point\") {\n            return coord.geometry.coordinates;\n        }\n        if (coord.type === \"Point\") {\n            return coord.coordinates;\n        }\n    }\n    if (Array.isArray(coord) &&\n        coord.length >= 2 &&\n        !Array.isArray(coord[0]) &&\n        !Array.isArray(coord[1])) {\n        return coord;\n    }\n    throw new Error(\"coord must be GeoJSON Point or an Array of numbers\");\n}\n/**\n * Unwrap coordinates from a Feature, Geometry Object or an Array\n *\n * @name getCoords\n * @param {Array<any>|Geometry|Feature} coords Feature, Geometry Object or an Array\n * @returns {Array<any>} coordinates\n * @example\n * var poly = turf.polygon([[[119.32, -8.7], [119.55, -8.69], [119.51, -8.54], [119.32, -8.7]]]);\n *\n * var coords = turf.getCoords(poly);\n * //= [[[119.32, -8.7], [119.55, -8.69], [119.51, -8.54], [119.32, -8.7]]]\n */\nexport function getCoords(coords) {\n    if (Array.isArray(coords)) {\n        return coords;\n    }\n    // Feature\n    if (coords.type === \"Feature\") {\n        if (coords.geometry !== null) {\n            return coords.geometry.coordinates;\n        }\n    }\n    else {\n        // Geometry\n        if (coords.coordinates) {\n            return coords.coordinates;\n        }\n    }\n    throw new Error(\"coords must be GeoJSON Feature, Geometry Object or an Array\");\n}\n/**\n * Checks if coordinates contains a number\n *\n * @name containsNumber\n * @param {Array<any>} coordinates GeoJSON Coordinates\n * @returns {boolean} true if Array contains a number\n */\nexport function containsNumber(coordinates) {\n    if (coordinates.length > 1 &&\n        isNumber(coordinates[0]) &&\n        isNumber(coordinates[1])) {\n        return true;\n    }\n    if (Array.isArray(coordinates[0]) && coordinates[0].length) {\n        return containsNumber(coordinates[0]);\n    }\n    throw new Error(\"coordinates must only contain numbers\");\n}\n/**\n * Enforce expectations about types of GeoJSON objects for Turf.\n *\n * @name geojsonType\n * @param {GeoJSON} value any GeoJSON object\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} if value is not the expected type.\n */\nexport function geojsonType(value, type, name) {\n    if (!type || !name) {\n        throw new Error(\"type and name required\");\n    }\n    if (!value || value.type !== type) {\n        throw new Error(\"Invalid input to \" +\n            name +\n            \": must be a \" +\n            type +\n            \", given \" +\n            value.type);\n    }\n}\n/**\n * Enforce expectations about types of {@link Feature} inputs for Turf.\n * Internally this uses {@link geojsonType} to judge geometry types.\n *\n * @name featureOf\n * @param {Feature} feature a feature with an expected geometry type\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} error if value is not the expected type.\n */\nexport function featureOf(feature, type, name) {\n    if (!feature) {\n        throw new Error(\"No feature passed\");\n    }\n    if (!name) {\n        throw new Error(\".featureOf() requires a name\");\n    }\n    if (!feature || feature.type !== \"Feature\" || !feature.geometry) {\n        throw new Error(\"Invalid input to \" + name + \", Feature with geometry required\");\n    }\n    if (!feature.geometry || feature.geometry.type !== type) {\n        throw new Error(\"Invalid input to \" +\n            name +\n            \": must be a \" +\n            type +\n            \", given \" +\n            feature.geometry.type);\n    }\n}\n/**\n * Enforce expectations about types of {@link FeatureCollection} inputs for Turf.\n * Internally this uses {@link geojsonType} to judge geometry types.\n *\n * @name collectionOf\n * @param {FeatureCollection} featureCollection a FeatureCollection for which features will be judged\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} if value is not the expected type.\n */\nexport function collectionOf(featureCollection, type, name) {\n    if (!featureCollection) {\n        throw new Error(\"No featureCollection passed\");\n    }\n    if (!name) {\n        throw new Error(\".collectionOf() requires a name\");\n    }\n    if (!featureCollection || featureCollection.type !== \"FeatureCollection\") {\n        throw new Error(\"Invalid input to \" + name + \", FeatureCollection required\");\n    }\n    for (var _i = 0, _a = featureCollection.features; _i < _a.length; _i++) {\n        var feature = _a[_i];\n        if (!feature || feature.type !== \"Feature\" || !feature.geometry) {\n            throw new Error(\"Invalid input to \" + name + \", Feature with geometry required\");\n        }\n        if (!feature.geometry || feature.geometry.type !== type) {\n            throw new Error(\"Invalid input to \" +\n                name +\n                \": must be a \" +\n                type +\n                \", given \" +\n                feature.geometry.type);\n        }\n    }\n}\n/**\n * Get Geometry from Feature or Geometry Object\n *\n * @param {Feature|Geometry} geojson GeoJSON Feature or Geometry Object\n * @returns {Geometry|null} GeoJSON Geometry Object\n * @throws {Error} if geojson is not a Feature or Geometry Object\n * @example\n * var point = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [110, 40]\n *   }\n * }\n * var geom = turf.getGeom(point)\n * //={\"type\": \"Point\", \"coordinates\": [110, 40]}\n */\nexport function getGeom(geojson) {\n    if (geojson.type === \"Feature\") {\n        return geojson.geometry;\n    }\n    return geojson;\n}\n/**\n * Get GeoJSON object's type, Geometry type is prioritize.\n *\n * @param {GeoJSON} geojson GeoJSON object\n * @param {string} [name=\"geojson\"] name of the variable to display in error message (unused)\n * @returns {string} GeoJSON type\n * @example\n * var point = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [110, 40]\n *   }\n * }\n * var geom = turf.getType(point)\n * //=\"Point\"\n */\nexport function getType(geojson, _name) {\n    if (geojson.type === \"FeatureCollection\") {\n        return \"FeatureCollection\";\n    }\n    if (geojson.type === \"GeometryCollection\") {\n        return \"GeometryCollection\";\n    }\n    if (geojson.type === \"Feature\" && geojson.geometry !== null) {\n        return geojson.geometry.type;\n    }\n    return geojson.type;\n}\n","/**\n * @module helpers\n */\n/**\n * Earth Radius used with the Harvesine formula and approximates using a spherical (non-ellipsoid) Earth.\n *\n * @memberof helpers\n * @type {number}\n */\nexport var earthRadius = 6371008.8;\n/**\n * Unit of measurement factors using a spherical (non-ellipsoid) earth radius.\n *\n * @memberof helpers\n * @type {Object}\n */\nexport var factors = {\n    centimeters: earthRadius * 100,\n    centimetres: earthRadius * 100,\n    degrees: earthRadius / 111325,\n    feet: earthRadius * 3.28084,\n    inches: earthRadius * 39.37,\n    kilometers: earthRadius / 1000,\n    kilometres: earthRadius / 1000,\n    meters: earthRadius,\n    metres: earthRadius,\n    miles: earthRadius / 1609.344,\n    millimeters: earthRadius * 1000,\n    millimetres: earthRadius * 1000,\n    nauticalmiles: earthRadius / 1852,\n    radians: 1,\n    yards: earthRadius * 1.0936,\n};\n/**\n * Units of measurement factors based on 1 meter.\n *\n * @memberof helpers\n * @type {Object}\n */\nexport var unitsFactors = {\n    centimeters: 100,\n    centimetres: 100,\n    degrees: 1 / 111325,\n    feet: 3.28084,\n    inches: 39.37,\n    kilometers: 1 / 1000,\n    kilometres: 1 / 1000,\n    meters: 1,\n    metres: 1,\n    miles: 1 / 1609.344,\n    millimeters: 1000,\n    millimetres: 1000,\n    nauticalmiles: 1 / 1852,\n    radians: 1 / earthRadius,\n    yards: 1.0936133,\n};\n/**\n * Area of measurement factors based on 1 square meter.\n *\n * @memberof helpers\n * @type {Object}\n */\nexport var areaFactors = {\n    acres: 0.000247105,\n    centimeters: 10000,\n    centimetres: 10000,\n    feet: 10.763910417,\n    hectares: 0.0001,\n    inches: 1550.003100006,\n    kilometers: 0.000001,\n    kilometres: 0.000001,\n    meters: 1,\n    metres: 1,\n    miles: 3.86e-7,\n    millimeters: 1000000,\n    millimetres: 1000000,\n    yards: 1.195990046,\n};\n/**\n * Wraps a GeoJSON {@link Geometry} in a GeoJSON {@link Feature}.\n *\n * @name feature\n * @param {Geometry} geometry input geometry\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature} a GeoJSON Feature\n * @example\n * var geometry = {\n *   \"type\": \"Point\",\n *   \"coordinates\": [110, 50]\n * };\n *\n * var feature = turf.feature(geometry);\n *\n * //=feature\n */\nexport function feature(geom, properties, options) {\n    if (options === void 0) { options = {}; }\n    var feat = { type: \"Feature\" };\n    if (options.id === 0 || options.id) {\n        feat.id = options.id;\n    }\n    if (options.bbox) {\n        feat.bbox = options.bbox;\n    }\n    feat.properties = properties || {};\n    feat.geometry = geom;\n    return feat;\n}\n/**\n * Creates a GeoJSON {@link Geometry} from a Geometry string type & coordinates.\n * For GeometryCollection type use `helpers.geometryCollection`\n *\n * @name geometry\n * @param {string} type Geometry Type\n * @param {Array<any>} coordinates Coordinates\n * @param {Object} [options={}] Optional Parameters\n * @returns {Geometry} a GeoJSON Geometry\n * @example\n * var type = \"Point\";\n * var coordinates = [110, 50];\n * var geometry = turf.geometry(type, coordinates);\n * // => geometry\n */\nexport function geometry(type, coordinates, _options) {\n    if (_options === void 0) { _options = {}; }\n    switch (type) {\n        case \"Point\":\n            return point(coordinates).geometry;\n        case \"LineString\":\n            return lineString(coordinates).geometry;\n        case \"Polygon\":\n            return polygon(coordinates).geometry;\n        case \"MultiPoint\":\n            return multiPoint(coordinates).geometry;\n        case \"MultiLineString\":\n            return multiLineString(coordinates).geometry;\n        case \"MultiPolygon\":\n            return multiPolygon(coordinates).geometry;\n        default:\n            throw new Error(type + \" is invalid\");\n    }\n}\n/**\n * Creates a {@link Point} {@link Feature} from a Position.\n *\n * @name point\n * @param {Array<number>} coordinates longitude, latitude position (each in decimal degrees)\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Point>} a Point feature\n * @example\n * var point = turf.point([-75.343, 39.984]);\n *\n * //=point\n */\nexport function point(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    if (!coordinates) {\n        throw new Error(\"coordinates is required\");\n    }\n    if (!Array.isArray(coordinates)) {\n        throw new Error(\"coordinates must be an Array\");\n    }\n    if (coordinates.length < 2) {\n        throw new Error(\"coordinates must be at least 2 numbers long\");\n    }\n    if (!isNumber(coordinates[0]) || !isNumber(coordinates[1])) {\n        throw new Error(\"coordinates must contain numbers\");\n    }\n    var geom = {\n        type: \"Point\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link Point} {@link FeatureCollection} from an Array of Point coordinates.\n *\n * @name points\n * @param {Array<Array<number>>} coordinates an array of Points\n * @param {Object} [properties={}] Translate these properties to each Feature\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north]\n * associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Point>} Point Feature\n * @example\n * var points = turf.points([\n *   [-75, 39],\n *   [-80, 45],\n *   [-78, 50]\n * ]);\n *\n * //=points\n */\nexport function points(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return point(coords, properties);\n    }), options);\n}\n/**\n * Creates a {@link Polygon} {@link Feature} from an Array of LinearRings.\n *\n * @name polygon\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Polygon>} Polygon Feature\n * @example\n * var polygon = turf.polygon([[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]], { name: 'poly1' });\n *\n * //=polygon\n */\nexport function polygon(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    for (var _i = 0, coordinates_1 = coordinates; _i < coordinates_1.length; _i++) {\n        var ring = coordinates_1[_i];\n        if (ring.length < 4) {\n            throw new Error(\"Each LinearRing of a Polygon must have 4 or more Positions.\");\n        }\n        for (var j = 0; j < ring[ring.length - 1].length; j++) {\n            // Check if first point of Polygon contains two numbers\n            if (ring[ring.length - 1][j] !== ring[0][j]) {\n                throw new Error(\"First and last Position are not equivalent.\");\n            }\n        }\n    }\n    var geom = {\n        type: \"Polygon\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link Polygon} {@link FeatureCollection} from an Array of Polygon coordinates.\n *\n * @name polygons\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygon coordinates\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Polygon>} Polygon FeatureCollection\n * @example\n * var polygons = turf.polygons([\n *   [[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]],\n *   [[[-15, 42], [-14, 46], [-12, 41], [-17, 44], [-15, 42]]],\n * ]);\n *\n * //=polygons\n */\nexport function polygons(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return polygon(coords, properties);\n    }), options);\n}\n/**\n * Creates a {@link LineString} {@link Feature} from an Array of Positions.\n *\n * @name lineString\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<LineString>} LineString Feature\n * @example\n * var linestring1 = turf.lineString([[-24, 63], [-23, 60], [-25, 65], [-20, 69]], {name: 'line 1'});\n * var linestring2 = turf.lineString([[-14, 43], [-13, 40], [-15, 45], [-10, 49]], {name: 'line 2'});\n *\n * //=linestring1\n * //=linestring2\n */\nexport function lineString(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    if (coordinates.length < 2) {\n        throw new Error(\"coordinates must be an array of two or more positions\");\n    }\n    var geom = {\n        type: \"LineString\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link LineString} {@link FeatureCollection} from an Array of LineString coordinates.\n *\n * @name lineStrings\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north]\n * associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<LineString>} LineString FeatureCollection\n * @example\n * var linestrings = turf.lineStrings([\n *   [[-24, 63], [-23, 60], [-25, 65], [-20, 69]],\n *   [[-14, 43], [-13, 40], [-15, 45], [-10, 49]]\n * ]);\n *\n * //=linestrings\n */\nexport function lineStrings(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return lineString(coords, properties);\n    }), options);\n}\n/**\n * Takes one or more {@link Feature|Features} and creates a {@link FeatureCollection}.\n *\n * @name featureCollection\n * @param {Feature[]} features input features\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {FeatureCollection} FeatureCollection of Features\n * @example\n * var locationA = turf.point([-75.343, 39.984], {name: 'Location A'});\n * var locationB = turf.point([-75.833, 39.284], {name: 'Location B'});\n * var locationC = turf.point([-75.534, 39.123], {name: 'Location C'});\n *\n * var collection = turf.featureCollection([\n *   locationA,\n *   locationB,\n *   locationC\n * ]);\n *\n * //=collection\n */\nexport function featureCollection(features, options) {\n    if (options === void 0) { options = {}; }\n    var fc = { type: \"FeatureCollection\" };\n    if (options.id) {\n        fc.id = options.id;\n    }\n    if (options.bbox) {\n        fc.bbox = options.bbox;\n    }\n    fc.features = features;\n    return fc;\n}\n/**\n * Creates a {@link Feature<MultiLineString>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiLineString\n * @param {Array<Array<Array<number>>>} coordinates an array of LineStrings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiLineString>} a MultiLineString feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiLine = turf.multiLineString([[[0,0],[10,10]]]);\n *\n * //=multiLine\n */\nexport function multiLineString(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiLineString\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link Feature<MultiPoint>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPoint\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPoint>} a MultiPoint feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPt = turf.multiPoint([[0,0],[10,10]]);\n *\n * //=multiPt\n */\nexport function multiPoint(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiPoint\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link Feature<MultiPolygon>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPolygon\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygons\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPolygon>} a multipolygon feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPoly = turf.multiPolygon([[[[0,0],[0,10],[10,10],[10,0],[0,0]]]]);\n *\n * //=multiPoly\n *\n */\nexport function multiPolygon(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiPolygon\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link Feature<GeometryCollection>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name geometryCollection\n * @param {Array<Geometry>} geometries an array of GeoJSON Geometries\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<GeometryCollection>} a GeoJSON GeometryCollection Feature\n * @example\n * var pt = turf.geometry(\"Point\", [100, 0]);\n * var line = turf.geometry(\"LineString\", [[101, 0], [102, 1]]);\n * var collection = turf.geometryCollection([pt, line]);\n *\n * // => collection\n */\nexport function geometryCollection(geometries, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"GeometryCollection\",\n        geometries: geometries,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Round number to precision\n *\n * @param {number} num Number\n * @param {number} [precision=0] Precision\n * @returns {number} rounded number\n * @example\n * turf.round(120.4321)\n * //=120\n *\n * turf.round(120.4321, 2)\n * //=120.43\n */\nexport function round(num, precision) {\n    if (precision === void 0) { precision = 0; }\n    if (precision && !(precision >= 0)) {\n        throw new Error(\"precision must be a positive number\");\n    }\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.round(num * multiplier) / multiplier;\n}\n/**\n * Convert a distance measurement (assuming a spherical Earth) from radians to a more friendly unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name radiansToLength\n * @param {number} radians in radians across the sphere\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} distance\n */\nexport function radiansToLength(radians, units) {\n    if (units === void 0) { units = \"kilometers\"; }\n    var factor = factors[units];\n    if (!factor) {\n        throw new Error(units + \" units is invalid\");\n    }\n    return radians * factor;\n}\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into radians\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name lengthToRadians\n * @param {number} distance in real units\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} radians\n */\nexport function lengthToRadians(distance, units) {\n    if (units === void 0) { units = \"kilometers\"; }\n    var factor = factors[units];\n    if (!factor) {\n        throw new Error(units + \" units is invalid\");\n    }\n    return distance / factor;\n}\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into degrees\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, centimeters, kilometres, feet\n *\n * @name lengthToDegrees\n * @param {number} distance in real units\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} degrees\n */\nexport function lengthToDegrees(distance, units) {\n    return radiansToDegrees(lengthToRadians(distance, units));\n}\n/**\n * Converts any bearing angle from the north line direction (positive clockwise)\n * and returns an angle between 0-360 degrees (positive clockwise), 0 being the north line\n *\n * @name bearingToAzimuth\n * @param {number} bearing angle, between -180 and +180 degrees\n * @returns {number} angle between 0 and 360 degrees\n */\nexport function bearingToAzimuth(bearing) {\n    var angle = bearing % 360;\n    if (angle < 0) {\n        angle += 360;\n    }\n    return angle;\n}\n/**\n * Converts an angle in radians to degrees\n *\n * @name radiansToDegrees\n * @param {number} radians angle in radians\n * @returns {number} degrees between 0 and 360 degrees\n */\nexport function radiansToDegrees(radians) {\n    var degrees = radians % (2 * Math.PI);\n    return (degrees * 180) / Math.PI;\n}\n/**\n * Converts an angle in degrees to radians\n *\n * @name degreesToRadians\n * @param {number} degrees angle between 0 and 360 degrees\n * @returns {number} angle in radians\n */\nexport function degreesToRadians(degrees) {\n    var radians = degrees % 360;\n    return (radians * Math.PI) / 180;\n}\n/**\n * Converts a length to the requested unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @param {number} length to be converted\n * @param {Units} [originalUnit=\"kilometers\"] of the length\n * @param {Units} [finalUnit=\"kilometers\"] returned unit\n * @returns {number} the converted length\n */\nexport function convertLength(length, originalUnit, finalUnit) {\n    if (originalUnit === void 0) { originalUnit = \"kilometers\"; }\n    if (finalUnit === void 0) { finalUnit = \"kilometers\"; }\n    if (!(length >= 0)) {\n        throw new Error(\"length must be a positive number\");\n    }\n    return radiansToLength(lengthToRadians(length, originalUnit), finalUnit);\n}\n/**\n * Converts a area to the requested unit.\n * Valid units: kilometers, kilometres, meters, metres, centimetres, millimeters, acres, miles, yards, feet, inches, hectares\n * @param {number} area to be converted\n * @param {Units} [originalUnit=\"meters\"] of the distance\n * @param {Units} [finalUnit=\"kilometers\"] returned unit\n * @returns {number} the converted area\n */\nexport function convertArea(area, originalUnit, finalUnit) {\n    if (originalUnit === void 0) { originalUnit = \"meters\"; }\n    if (finalUnit === void 0) { finalUnit = \"kilometers\"; }\n    if (!(area >= 0)) {\n        throw new Error(\"area must be a positive number\");\n    }\n    var startFactor = areaFactors[originalUnit];\n    if (!startFactor) {\n        throw new Error(\"invalid original units\");\n    }\n    var finalFactor = areaFactors[finalUnit];\n    if (!finalFactor) {\n        throw new Error(\"invalid final units\");\n    }\n    return (area / startFactor) * finalFactor;\n}\n/**\n * isNumber\n *\n * @param {*} num Number to validate\n * @returns {boolean} true/false\n * @example\n * turf.isNumber(123)\n * //=true\n * turf.isNumber('foo')\n * //=false\n */\nexport function isNumber(num) {\n    return !isNaN(num) && num !== null && !Array.isArray(num);\n}\n/**\n * isObject\n *\n * @param {*} input variable to validate\n * @returns {boolean} true/false\n * @example\n * turf.isObject({elevation: 10})\n * //=true\n * turf.isObject('foo')\n * //=false\n */\nexport function isObject(input) {\n    return !!input && input.constructor === Object;\n}\n/**\n * Validate BBox\n *\n * @private\n * @param {Array<number>} bbox BBox to validate\n * @returns {void}\n * @throws Error if BBox is not valid\n * @example\n * validateBBox([-180, -40, 110, 50])\n * //=OK\n * validateBBox([-180, -40])\n * //=Error\n * validateBBox('Foo')\n * //=Error\n * validateBBox(5)\n * //=Error\n * validateBBox(null)\n * //=Error\n * validateBBox(undefined)\n * //=Error\n */\nexport function validateBBox(bbox) {\n    if (!bbox) {\n        throw new Error(\"bbox is required\");\n    }\n    if (!Array.isArray(bbox)) {\n        throw new Error(\"bbox must be an Array\");\n    }\n    if (bbox.length !== 4 && bbox.length !== 6) {\n        throw new Error(\"bbox must be an Array of 4 or 6 numbers\");\n    }\n    bbox.forEach(function (num) {\n        if (!isNumber(num)) {\n            throw new Error(\"bbox must only contain numbers\");\n        }\n    });\n}\n/**\n * Validate Id\n *\n * @private\n * @param {string|number} id Id to validate\n * @returns {void}\n * @throws Error if Id is not valid\n * @example\n * validateId([-180, -40, 110, 50])\n * //=Error\n * validateId([-180, -40])\n * //=Error\n * validateId('Foo')\n * //=OK\n * validateId(5)\n * //=OK\n * validateId(null)\n * //=Error\n * validateId(undefined)\n * //=Error\n */\nexport function validateId(id) {\n    if (!id) {\n        throw new Error(\"id is required\");\n    }\n    if ([\"string\", \"number\"].indexOf(typeof id) === -1) {\n        throw new Error(\"id must be a number or a string\");\n    }\n}\n","/**\n * @module helpers\n */\n/**\n * Earth Radius used with the Harvesine formula and approximates using a spherical (non-ellipsoid) Earth.\n *\n * @memberof helpers\n * @type {number}\n */\nexport var earthRadius = 6371008.8;\n/**\n * Unit of measurement factors using a spherical (non-ellipsoid) earth radius.\n *\n * @memberof helpers\n * @type {Object}\n */\nexport var factors = {\n    centimeters: earthRadius * 100,\n    centimetres: earthRadius * 100,\n    degrees: earthRadius / 111325,\n    feet: earthRadius * 3.28084,\n    inches: earthRadius * 39.37,\n    kilometers: earthRadius / 1000,\n    kilometres: earthRadius / 1000,\n    meters: earthRadius,\n    metres: earthRadius,\n    miles: earthRadius / 1609.344,\n    millimeters: earthRadius * 1000,\n    millimetres: earthRadius * 1000,\n    nauticalmiles: earthRadius / 1852,\n    radians: 1,\n    yards: earthRadius * 1.0936,\n};\n/**\n * Units of measurement factors based on 1 meter.\n *\n * @memberof helpers\n * @type {Object}\n */\nexport var unitsFactors = {\n    centimeters: 100,\n    centimetres: 100,\n    degrees: 1 / 111325,\n    feet: 3.28084,\n    inches: 39.37,\n    kilometers: 1 / 1000,\n    kilometres: 1 / 1000,\n    meters: 1,\n    metres: 1,\n    miles: 1 / 1609.344,\n    millimeters: 1000,\n    millimetres: 1000,\n    nauticalmiles: 1 / 1852,\n    radians: 1 / earthRadius,\n    yards: 1.0936133,\n};\n/**\n * Area of measurement factors based on 1 square meter.\n *\n * @memberof helpers\n * @type {Object}\n */\nexport var areaFactors = {\n    acres: 0.000247105,\n    centimeters: 10000,\n    centimetres: 10000,\n    feet: 10.763910417,\n    hectares: 0.0001,\n    inches: 1550.003100006,\n    kilometers: 0.000001,\n    kilometres: 0.000001,\n    meters: 1,\n    metres: 1,\n    miles: 3.86e-7,\n    millimeters: 1000000,\n    millimetres: 1000000,\n    yards: 1.195990046,\n};\n/**\n * Wraps a GeoJSON {@link Geometry} in a GeoJSON {@link Feature}.\n *\n * @name feature\n * @param {Geometry} geometry input geometry\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature} a GeoJSON Feature\n * @example\n * var geometry = {\n *   \"type\": \"Point\",\n *   \"coordinates\": [110, 50]\n * };\n *\n * var feature = turf.feature(geometry);\n *\n * //=feature\n */\nexport function feature(geom, properties, options) {\n    if (options === void 0) { options = {}; }\n    var feat = { type: \"Feature\" };\n    if (options.id === 0 || options.id) {\n        feat.id = options.id;\n    }\n    if (options.bbox) {\n        feat.bbox = options.bbox;\n    }\n    feat.properties = properties || {};\n    feat.geometry = geom;\n    return feat;\n}\n/**\n * Creates a GeoJSON {@link Geometry} from a Geometry string type & coordinates.\n * For GeometryCollection type use `helpers.geometryCollection`\n *\n * @name geometry\n * @param {string} type Geometry Type\n * @param {Array<any>} coordinates Coordinates\n * @param {Object} [options={}] Optional Parameters\n * @returns {Geometry} a GeoJSON Geometry\n * @example\n * var type = \"Point\";\n * var coordinates = [110, 50];\n * var geometry = turf.geometry(type, coordinates);\n * // => geometry\n */\nexport function geometry(type, coordinates, _options) {\n    if (_options === void 0) { _options = {}; }\n    switch (type) {\n        case \"Point\":\n            return point(coordinates).geometry;\n        case \"LineString\":\n            return lineString(coordinates).geometry;\n        case \"Polygon\":\n            return polygon(coordinates).geometry;\n        case \"MultiPoint\":\n            return multiPoint(coordinates).geometry;\n        case \"MultiLineString\":\n            return multiLineString(coordinates).geometry;\n        case \"MultiPolygon\":\n            return multiPolygon(coordinates).geometry;\n        default:\n            throw new Error(type + \" is invalid\");\n    }\n}\n/**\n * Creates a {@link Point} {@link Feature} from a Position.\n *\n * @name point\n * @param {Array<number>} coordinates longitude, latitude position (each in decimal degrees)\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Point>} a Point feature\n * @example\n * var point = turf.point([-75.343, 39.984]);\n *\n * //=point\n */\nexport function point(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    if (!coordinates) {\n        throw new Error(\"coordinates is required\");\n    }\n    if (!Array.isArray(coordinates)) {\n        throw new Error(\"coordinates must be an Array\");\n    }\n    if (coordinates.length < 2) {\n        throw new Error(\"coordinates must be at least 2 numbers long\");\n    }\n    if (!isNumber(coordinates[0]) || !isNumber(coordinates[1])) {\n        throw new Error(\"coordinates must contain numbers\");\n    }\n    var geom = {\n        type: \"Point\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link Point} {@link FeatureCollection} from an Array of Point coordinates.\n *\n * @name points\n * @param {Array<Array<number>>} coordinates an array of Points\n * @param {Object} [properties={}] Translate these properties to each Feature\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north]\n * associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Point>} Point Feature\n * @example\n * var points = turf.points([\n *   [-75, 39],\n *   [-80, 45],\n *   [-78, 50]\n * ]);\n *\n * //=points\n */\nexport function points(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return point(coords, properties);\n    }), options);\n}\n/**\n * Creates a {@link Polygon} {@link Feature} from an Array of LinearRings.\n *\n * @name polygon\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Polygon>} Polygon Feature\n * @example\n * var polygon = turf.polygon([[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]], { name: 'poly1' });\n *\n * //=polygon\n */\nexport function polygon(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    for (var _i = 0, coordinates_1 = coordinates; _i < coordinates_1.length; _i++) {\n        var ring = coordinates_1[_i];\n        if (ring.length < 4) {\n            throw new Error(\"Each LinearRing of a Polygon must have 4 or more Positions.\");\n        }\n        for (var j = 0; j < ring[ring.length - 1].length; j++) {\n            // Check if first point of Polygon contains two numbers\n            if (ring[ring.length - 1][j] !== ring[0][j]) {\n                throw new Error(\"First and last Position are not equivalent.\");\n            }\n        }\n    }\n    var geom = {\n        type: \"Polygon\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link Polygon} {@link FeatureCollection} from an Array of Polygon coordinates.\n *\n * @name polygons\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygon coordinates\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Polygon>} Polygon FeatureCollection\n * @example\n * var polygons = turf.polygons([\n *   [[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]],\n *   [[[-15, 42], [-14, 46], [-12, 41], [-17, 44], [-15, 42]]],\n * ]);\n *\n * //=polygons\n */\nexport function polygons(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return polygon(coords, properties);\n    }), options);\n}\n/**\n * Creates a {@link LineString} {@link Feature} from an Array of Positions.\n *\n * @name lineString\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<LineString>} LineString Feature\n * @example\n * var linestring1 = turf.lineString([[-24, 63], [-23, 60], [-25, 65], [-20, 69]], {name: 'line 1'});\n * var linestring2 = turf.lineString([[-14, 43], [-13, 40], [-15, 45], [-10, 49]], {name: 'line 2'});\n *\n * //=linestring1\n * //=linestring2\n */\nexport function lineString(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    if (coordinates.length < 2) {\n        throw new Error(\"coordinates must be an array of two or more positions\");\n    }\n    var geom = {\n        type: \"LineString\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link LineString} {@link FeatureCollection} from an Array of LineString coordinates.\n *\n * @name lineStrings\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north]\n * associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<LineString>} LineString FeatureCollection\n * @example\n * var linestrings = turf.lineStrings([\n *   [[-24, 63], [-23, 60], [-25, 65], [-20, 69]],\n *   [[-14, 43], [-13, 40], [-15, 45], [-10, 49]]\n * ]);\n *\n * //=linestrings\n */\nexport function lineStrings(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return lineString(coords, properties);\n    }), options);\n}\n/**\n * Takes one or more {@link Feature|Features} and creates a {@link FeatureCollection}.\n *\n * @name featureCollection\n * @param {Feature[]} features input features\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {FeatureCollection} FeatureCollection of Features\n * @example\n * var locationA = turf.point([-75.343, 39.984], {name: 'Location A'});\n * var locationB = turf.point([-75.833, 39.284], {name: 'Location B'});\n * var locationC = turf.point([-75.534, 39.123], {name: 'Location C'});\n *\n * var collection = turf.featureCollection([\n *   locationA,\n *   locationB,\n *   locationC\n * ]);\n *\n * //=collection\n */\nexport function featureCollection(features, options) {\n    if (options === void 0) { options = {}; }\n    var fc = { type: \"FeatureCollection\" };\n    if (options.id) {\n        fc.id = options.id;\n    }\n    if (options.bbox) {\n        fc.bbox = options.bbox;\n    }\n    fc.features = features;\n    return fc;\n}\n/**\n * Creates a {@link Feature<MultiLineString>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiLineString\n * @param {Array<Array<Array<number>>>} coordinates an array of LineStrings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiLineString>} a MultiLineString feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiLine = turf.multiLineString([[[0,0],[10,10]]]);\n *\n * //=multiLine\n */\nexport function multiLineString(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiLineString\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link Feature<MultiPoint>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPoint\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPoint>} a MultiPoint feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPt = turf.multiPoint([[0,0],[10,10]]);\n *\n * //=multiPt\n */\nexport function multiPoint(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiPoint\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link Feature<MultiPolygon>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPolygon\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygons\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPolygon>} a multipolygon feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPoly = turf.multiPolygon([[[[0,0],[0,10],[10,10],[10,0],[0,0]]]]);\n *\n * //=multiPoly\n *\n */\nexport function multiPolygon(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiPolygon\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link Feature<GeometryCollection>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name geometryCollection\n * @param {Array<Geometry>} geometries an array of GeoJSON Geometries\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<GeometryCollection>} a GeoJSON GeometryCollection Feature\n * @example\n * var pt = turf.geometry(\"Point\", [100, 0]);\n * var line = turf.geometry(\"LineString\", [[101, 0], [102, 1]]);\n * var collection = turf.geometryCollection([pt, line]);\n *\n * // => collection\n */\nexport function geometryCollection(geometries, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"GeometryCollection\",\n        geometries: geometries,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Round number to precision\n *\n * @param {number} num Number\n * @param {number} [precision=0] Precision\n * @returns {number} rounded number\n * @example\n * turf.round(120.4321)\n * //=120\n *\n * turf.round(120.4321, 2)\n * //=120.43\n */\nexport function round(num, precision) {\n    if (precision === void 0) { precision = 0; }\n    if (precision && !(precision >= 0)) {\n        throw new Error(\"precision must be a positive number\");\n    }\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.round(num * multiplier) / multiplier;\n}\n/**\n * Convert a distance measurement (assuming a spherical Earth) from radians to a more friendly unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name radiansToLength\n * @param {number} radians in radians across the sphere\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} distance\n */\nexport function radiansToLength(radians, units) {\n    if (units === void 0) { units = \"kilometers\"; }\n    var factor = factors[units];\n    if (!factor) {\n        throw new Error(units + \" units is invalid\");\n    }\n    return radians * factor;\n}\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into radians\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name lengthToRadians\n * @param {number} distance in real units\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} radians\n */\nexport function lengthToRadians(distance, units) {\n    if (units === void 0) { units = \"kilometers\"; }\n    var factor = factors[units];\n    if (!factor) {\n        throw new Error(units + \" units is invalid\");\n    }\n    return distance / factor;\n}\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into degrees\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, centimeters, kilometres, feet\n *\n * @name lengthToDegrees\n * @param {number} distance in real units\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} degrees\n */\nexport function lengthToDegrees(distance, units) {\n    return radiansToDegrees(lengthToRadians(distance, units));\n}\n/**\n * Converts any bearing angle from the north line direction (positive clockwise)\n * and returns an angle between 0-360 degrees (positive clockwise), 0 being the north line\n *\n * @name bearingToAzimuth\n * @param {number} bearing angle, between -180 and +180 degrees\n * @returns {number} angle between 0 and 360 degrees\n */\nexport function bearingToAzimuth(bearing) {\n    var angle = bearing % 360;\n    if (angle < 0) {\n        angle += 360;\n    }\n    return angle;\n}\n/**\n * Converts an angle in radians to degrees\n *\n * @name radiansToDegrees\n * @param {number} radians angle in radians\n * @returns {number} degrees between 0 and 360 degrees\n */\nexport function radiansToDegrees(radians) {\n    var degrees = radians % (2 * Math.PI);\n    return (degrees * 180) / Math.PI;\n}\n/**\n * Converts an angle in degrees to radians\n *\n * @name degreesToRadians\n * @param {number} degrees angle between 0 and 360 degrees\n * @returns {number} angle in radians\n */\nexport function degreesToRadians(degrees) {\n    var radians = degrees % 360;\n    return (radians * Math.PI) / 180;\n}\n/**\n * Converts a length to the requested unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @param {number} length to be converted\n * @param {Units} [originalUnit=\"kilometers\"] of the length\n * @param {Units} [finalUnit=\"kilometers\"] returned unit\n * @returns {number} the converted length\n */\nexport function convertLength(length, originalUnit, finalUnit) {\n    if (originalUnit === void 0) { originalUnit = \"kilometers\"; }\n    if (finalUnit === void 0) { finalUnit = \"kilometers\"; }\n    if (!(length >= 0)) {\n        throw new Error(\"length must be a positive number\");\n    }\n    return radiansToLength(lengthToRadians(length, originalUnit), finalUnit);\n}\n/**\n * Converts a area to the requested unit.\n * Valid units: kilometers, kilometres, meters, metres, centimetres, millimeters, acres, miles, yards, feet, inches, hectares\n * @param {number} area to be converted\n * @param {Units} [originalUnit=\"meters\"] of the distance\n * @param {Units} [finalUnit=\"kilometers\"] returned unit\n * @returns {number} the converted area\n */\nexport function convertArea(area, originalUnit, finalUnit) {\n    if (originalUnit === void 0) { originalUnit = \"meters\"; }\n    if (finalUnit === void 0) { finalUnit = \"kilometers\"; }\n    if (!(area >= 0)) {\n        throw new Error(\"area must be a positive number\");\n    }\n    var startFactor = areaFactors[originalUnit];\n    if (!startFactor) {\n        throw new Error(\"invalid original units\");\n    }\n    var finalFactor = areaFactors[finalUnit];\n    if (!finalFactor) {\n        throw new Error(\"invalid final units\");\n    }\n    return (area / startFactor) * finalFactor;\n}\n/**\n * isNumber\n *\n * @param {*} num Number to validate\n * @returns {boolean} true/false\n * @example\n * turf.isNumber(123)\n * //=true\n * turf.isNumber('foo')\n * //=false\n */\nexport function isNumber(num) {\n    return !isNaN(num) && num !== null && !Array.isArray(num);\n}\n/**\n * isObject\n *\n * @param {*} input variable to validate\n * @returns {boolean} true/false\n * @example\n * turf.isObject({elevation: 10})\n * //=true\n * turf.isObject('foo')\n * //=false\n */\nexport function isObject(input) {\n    return !!input && input.constructor === Object;\n}\n/**\n * Validate BBox\n *\n * @private\n * @param {Array<number>} bbox BBox to validate\n * @returns {void}\n * @throws Error if BBox is not valid\n * @example\n * validateBBox([-180, -40, 110, 50])\n * //=OK\n * validateBBox([-180, -40])\n * //=Error\n * validateBBox('Foo')\n * //=Error\n * validateBBox(5)\n * //=Error\n * validateBBox(null)\n * //=Error\n * validateBBox(undefined)\n * //=Error\n */\nexport function validateBBox(bbox) {\n    if (!bbox) {\n        throw new Error(\"bbox is required\");\n    }\n    if (!Array.isArray(bbox)) {\n        throw new Error(\"bbox must be an Array\");\n    }\n    if (bbox.length !== 4 && bbox.length !== 6) {\n        throw new Error(\"bbox must be an Array of 4 or 6 numbers\");\n    }\n    bbox.forEach(function (num) {\n        if (!isNumber(num)) {\n            throw new Error(\"bbox must only contain numbers\");\n        }\n    });\n}\n/**\n * Validate Id\n *\n * @private\n * @param {string|number} id Id to validate\n * @returns {void}\n * @throws Error if Id is not valid\n * @example\n * validateId([-180, -40, 110, 50])\n * //=Error\n * validateId([-180, -40])\n * //=Error\n * validateId('Foo')\n * //=OK\n * validateId(5)\n * //=OK\n * validateId(null)\n * //=Error\n * validateId(undefined)\n * //=Error\n */\nexport function validateId(id) {\n    if (!id) {\n        throw new Error(\"id is required\");\n    }\n    if ([\"string\", \"number\"].indexOf(typeof id) === -1) {\n        throw new Error(\"id must be a number or a string\");\n    }\n}\n","import { feature, lineString, isObject, point } from '@turf/helpers';\n\n/**\n * Callback for coordEach\n *\n * @callback coordEachCallback\n * @param {Array<number>} currentCoord The current coordinate being processed.\n * @param {number} coordIndex The current index of the coordinate being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n */\n\n/**\n * Iterate over coordinates in any GeoJSON object, similar to Array.forEach()\n *\n * @name coordEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentCoord, coordIndex, featureIndex, multiFeatureIndex)\n * @param {boolean} [excludeWrapCoord=false] whether or not to include the final coordinate of LinearRings that wraps the ring in its iteration.\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.coordEach(features, function (currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=currentCoord\n *   //=coordIndex\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n * });\n */\nfunction coordEach(geojson, callback, excludeWrapCoord) {\n  // Handles null Geometry -- Skips this GeoJSON\n  if (geojson === null) return;\n  var j,\n    k,\n    l,\n    geometry,\n    stopG,\n    coords,\n    geometryMaybeCollection,\n    wrapShrink = 0,\n    coordIndex = 0,\n    isGeometryCollection,\n    type = geojson.type,\n    isFeatureCollection = type === \"FeatureCollection\",\n    isFeature = type === \"Feature\",\n    stop = isFeatureCollection ? geojson.features.length : 1;\n\n  // This logic may look a little weird. The reason why it is that way\n  // is because it's trying to be fast. GeoJSON supports multiple kinds\n  // of objects at its root: FeatureCollection, Features, Geometries.\n  // This function has the responsibility of handling all of them, and that\n  // means that some of the `for` loops you see below actually just don't apply\n  // to certain inputs. For instance, if you give this just a\n  // Point geometry, then both loops are short-circuited and all we do\n  // is gradually rename the input until it's called 'geometry'.\n  //\n  // This also aims to allocate as few resources as possible: just a\n  // few numbers and booleans, rather than any temporary arrays as would\n  // be required with the normalization approach.\n  for (var featureIndex = 0; featureIndex < stop; featureIndex++) {\n    geometryMaybeCollection = isFeatureCollection\n      ? geojson.features[featureIndex].geometry\n      : isFeature\n      ? geojson.geometry\n      : geojson;\n    isGeometryCollection = geometryMaybeCollection\n      ? geometryMaybeCollection.type === \"GeometryCollection\"\n      : false;\n    stopG = isGeometryCollection\n      ? geometryMaybeCollection.geometries.length\n      : 1;\n\n    for (var geomIndex = 0; geomIndex < stopG; geomIndex++) {\n      var multiFeatureIndex = 0;\n      var geometryIndex = 0;\n      geometry = isGeometryCollection\n        ? geometryMaybeCollection.geometries[geomIndex]\n        : geometryMaybeCollection;\n\n      // Handles null Geometry -- Skips this geometry\n      if (geometry === null) continue;\n      coords = geometry.coordinates;\n      var geomType = geometry.type;\n\n      wrapShrink =\n        excludeWrapCoord &&\n        (geomType === \"Polygon\" || geomType === \"MultiPolygon\")\n          ? 1\n          : 0;\n\n      switch (geomType) {\n        case null:\n          break;\n        case \"Point\":\n          if (\n            callback(\n              coords,\n              coordIndex,\n              featureIndex,\n              multiFeatureIndex,\n              geometryIndex\n            ) === false\n          )\n            return false;\n          coordIndex++;\n          multiFeatureIndex++;\n          break;\n        case \"LineString\":\n        case \"MultiPoint\":\n          for (j = 0; j < coords.length; j++) {\n            if (\n              callback(\n                coords[j],\n                coordIndex,\n                featureIndex,\n                multiFeatureIndex,\n                geometryIndex\n              ) === false\n            )\n              return false;\n            coordIndex++;\n            if (geomType === \"MultiPoint\") multiFeatureIndex++;\n          }\n          if (geomType === \"LineString\") multiFeatureIndex++;\n          break;\n        case \"Polygon\":\n        case \"MultiLineString\":\n          for (j = 0; j < coords.length; j++) {\n            for (k = 0; k < coords[j].length - wrapShrink; k++) {\n              if (\n                callback(\n                  coords[j][k],\n                  coordIndex,\n                  featureIndex,\n                  multiFeatureIndex,\n                  geometryIndex\n                ) === false\n              )\n                return false;\n              coordIndex++;\n            }\n            if (geomType === \"MultiLineString\") multiFeatureIndex++;\n            if (geomType === \"Polygon\") geometryIndex++;\n          }\n          if (geomType === \"Polygon\") multiFeatureIndex++;\n          break;\n        case \"MultiPolygon\":\n          for (j = 0; j < coords.length; j++) {\n            geometryIndex = 0;\n            for (k = 0; k < coords[j].length; k++) {\n              for (l = 0; l < coords[j][k].length - wrapShrink; l++) {\n                if (\n                  callback(\n                    coords[j][k][l],\n                    coordIndex,\n                    featureIndex,\n                    multiFeatureIndex,\n                    geometryIndex\n                  ) === false\n                )\n                  return false;\n                coordIndex++;\n              }\n              geometryIndex++;\n            }\n            multiFeatureIndex++;\n          }\n          break;\n        case \"GeometryCollection\":\n          for (j = 0; j < geometry.geometries.length; j++)\n            if (\n              coordEach(geometry.geometries[j], callback, excludeWrapCoord) ===\n              false\n            )\n              return false;\n          break;\n        default:\n          throw new Error(\"Unknown Geometry Type\");\n      }\n    }\n  }\n}\n\n/**\n * Callback for coordReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback coordReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Array<number>} currentCoord The current coordinate being processed.\n * @param {number} coordIndex The current index of the coordinate being processed.\n * Starts at index 0, if an initialValue is provided, and at index 1 otherwise.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n */\n\n/**\n * Reduce coordinates in any GeoJSON object, similar to Array.reduce()\n *\n * @name coordReduce\n * @param {FeatureCollection|Geometry|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentCoord, coordIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @param {boolean} [excludeWrapCoord=false] whether or not to include the final coordinate of LinearRings that wraps the ring in its iteration.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.coordReduce(features, function (previousValue, currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=previousValue\n *   //=currentCoord\n *   //=coordIndex\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   return currentCoord;\n * });\n */\nfunction coordReduce(geojson, callback, initialValue, excludeWrapCoord) {\n  var previousValue = initialValue;\n  coordEach(\n    geojson,\n    function (\n      currentCoord,\n      coordIndex,\n      featureIndex,\n      multiFeatureIndex,\n      geometryIndex\n    ) {\n      if (coordIndex === 0 && initialValue === undefined)\n        previousValue = currentCoord;\n      else\n        previousValue = callback(\n          previousValue,\n          currentCoord,\n          coordIndex,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex\n        );\n    },\n    excludeWrapCoord\n  );\n  return previousValue;\n}\n\n/**\n * Callback for propEach\n *\n * @callback propEachCallback\n * @param {Object} currentProperties The current Properties being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Iterate over properties in any GeoJSON object, similar to Array.forEach()\n *\n * @name propEach\n * @param {FeatureCollection|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentProperties, featureIndex)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.propEach(features, function (currentProperties, featureIndex) {\n *   //=currentProperties\n *   //=featureIndex\n * });\n */\nfunction propEach(geojson, callback) {\n  var i;\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      for (i = 0; i < geojson.features.length; i++) {\n        if (callback(geojson.features[i].properties, i) === false) break;\n      }\n      break;\n    case \"Feature\":\n      callback(geojson.properties, 0);\n      break;\n  }\n}\n\n/**\n * Callback for propReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback propReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {*} currentProperties The current Properties being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Reduce properties in any GeoJSON object into a single value,\n * similar to how Array.reduce works. However, in this case we lazily run\n * the reduction, so an array of all properties is unnecessary.\n *\n * @name propReduce\n * @param {FeatureCollection|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentProperties, featureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.propReduce(features, function (previousValue, currentProperties, featureIndex) {\n *   //=previousValue\n *   //=currentProperties\n *   //=featureIndex\n *   return currentProperties\n * });\n */\nfunction propReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  propEach(geojson, function (currentProperties, featureIndex) {\n    if (featureIndex === 0 && initialValue === undefined)\n      previousValue = currentProperties;\n    else\n      previousValue = callback(previousValue, currentProperties, featureIndex);\n  });\n  return previousValue;\n}\n\n/**\n * Callback for featureEach\n *\n * @callback featureEachCallback\n * @param {Feature<any>} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Iterate over features in any GeoJSON object, similar to\n * Array.forEach.\n *\n * @name featureEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentFeature, featureIndex)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {foo: 'bar'}),\n *   turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.featureEach(features, function (currentFeature, featureIndex) {\n *   //=currentFeature\n *   //=featureIndex\n * });\n */\nfunction featureEach(geojson, callback) {\n  if (geojson.type === \"Feature\") {\n    callback(geojson, 0);\n  } else if (geojson.type === \"FeatureCollection\") {\n    for (var i = 0; i < geojson.features.length; i++) {\n      if (callback(geojson.features[i], i) === false) break;\n    }\n  }\n}\n\n/**\n * Callback for featureReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback featureReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Reduce features in any GeoJSON object, similar to Array.reduce().\n *\n * @name featureReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentFeature, featureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.featureReduce(features, function (previousValue, currentFeature, featureIndex) {\n *   //=previousValue\n *   //=currentFeature\n *   //=featureIndex\n *   return currentFeature\n * });\n */\nfunction featureReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  featureEach(geojson, function (currentFeature, featureIndex) {\n    if (featureIndex === 0 && initialValue === undefined)\n      previousValue = currentFeature;\n    else previousValue = callback(previousValue, currentFeature, featureIndex);\n  });\n  return previousValue;\n}\n\n/**\n * Get all coordinates from any GeoJSON object.\n *\n * @name coordAll\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @returns {Array<Array<number>>} coordinate position array\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {foo: 'bar'}),\n *   turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * var coords = turf.coordAll(features);\n * //= [[26, 37], [36, 53]]\n */\nfunction coordAll(geojson) {\n  var coords = [];\n  coordEach(geojson, function (coord) {\n    coords.push(coord);\n  });\n  return coords;\n}\n\n/**\n * Callback for geomEach\n *\n * @callback geomEachCallback\n * @param {Geometry} currentGeometry The current Geometry being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {Object} featureProperties The current Feature Properties being processed.\n * @param {Array<number>} featureBBox The current Feature BBox being processed.\n * @param {number|string} featureId The current Feature Id being processed.\n */\n\n/**\n * Iterate over each geometry in any GeoJSON object, similar to Array.forEach()\n *\n * @name geomEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentGeometry, featureIndex, featureProperties, featureBBox, featureId)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.geomEach(features, function (currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n *   //=currentGeometry\n *   //=featureIndex\n *   //=featureProperties\n *   //=featureBBox\n *   //=featureId\n * });\n */\nfunction geomEach(geojson, callback) {\n  var i,\n    j,\n    g,\n    geometry,\n    stopG,\n    geometryMaybeCollection,\n    isGeometryCollection,\n    featureProperties,\n    featureBBox,\n    featureId,\n    featureIndex = 0,\n    isFeatureCollection = geojson.type === \"FeatureCollection\",\n    isFeature = geojson.type === \"Feature\",\n    stop = isFeatureCollection ? geojson.features.length : 1;\n\n  // This logic may look a little weird. The reason why it is that way\n  // is because it's trying to be fast. GeoJSON supports multiple kinds\n  // of objects at its root: FeatureCollection, Features, Geometries.\n  // This function has the responsibility of handling all of them, and that\n  // means that some of the `for` loops you see below actually just don't apply\n  // to certain inputs. For instance, if you give this just a\n  // Point geometry, then both loops are short-circuited and all we do\n  // is gradually rename the input until it's called 'geometry'.\n  //\n  // This also aims to allocate as few resources as possible: just a\n  // few numbers and booleans, rather than any temporary arrays as would\n  // be required with the normalization approach.\n  for (i = 0; i < stop; i++) {\n    geometryMaybeCollection = isFeatureCollection\n      ? geojson.features[i].geometry\n      : isFeature\n      ? geojson.geometry\n      : geojson;\n    featureProperties = isFeatureCollection\n      ? geojson.features[i].properties\n      : isFeature\n      ? geojson.properties\n      : {};\n    featureBBox = isFeatureCollection\n      ? geojson.features[i].bbox\n      : isFeature\n      ? geojson.bbox\n      : undefined;\n    featureId = isFeatureCollection\n      ? geojson.features[i].id\n      : isFeature\n      ? geojson.id\n      : undefined;\n    isGeometryCollection = geometryMaybeCollection\n      ? geometryMaybeCollection.type === \"GeometryCollection\"\n      : false;\n    stopG = isGeometryCollection\n      ? geometryMaybeCollection.geometries.length\n      : 1;\n\n    for (g = 0; g < stopG; g++) {\n      geometry = isGeometryCollection\n        ? geometryMaybeCollection.geometries[g]\n        : geometryMaybeCollection;\n\n      // Handle null Geometry\n      if (geometry === null) {\n        if (\n          callback(\n            null,\n            featureIndex,\n            featureProperties,\n            featureBBox,\n            featureId\n          ) === false\n        )\n          return false;\n        continue;\n      }\n      switch (geometry.type) {\n        case \"Point\":\n        case \"LineString\":\n        case \"MultiPoint\":\n        case \"Polygon\":\n        case \"MultiLineString\":\n        case \"MultiPolygon\": {\n          if (\n            callback(\n              geometry,\n              featureIndex,\n              featureProperties,\n              featureBBox,\n              featureId\n            ) === false\n          )\n            return false;\n          break;\n        }\n        case \"GeometryCollection\": {\n          for (j = 0; j < geometry.geometries.length; j++) {\n            if (\n              callback(\n                geometry.geometries[j],\n                featureIndex,\n                featureProperties,\n                featureBBox,\n                featureId\n              ) === false\n            )\n              return false;\n          }\n          break;\n        }\n        default:\n          throw new Error(\"Unknown Geometry Type\");\n      }\n    }\n    // Only increase `featureIndex` per each feature\n    featureIndex++;\n  }\n}\n\n/**\n * Callback for geomReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback geomReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Geometry} currentGeometry The current Geometry being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {Object} featureProperties The current Feature Properties being processed.\n * @param {Array<number>} featureBBox The current Feature BBox being processed.\n * @param {number|string} featureId The current Feature Id being processed.\n */\n\n/**\n * Reduce geometry in any GeoJSON object, similar to Array.reduce().\n *\n * @name geomReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.geomReduce(features, function (previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n *   //=previousValue\n *   //=currentGeometry\n *   //=featureIndex\n *   //=featureProperties\n *   //=featureBBox\n *   //=featureId\n *   return currentGeometry\n * });\n */\nfunction geomReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  geomEach(\n    geojson,\n    function (\n      currentGeometry,\n      featureIndex,\n      featureProperties,\n      featureBBox,\n      featureId\n    ) {\n      if (featureIndex === 0 && initialValue === undefined)\n        previousValue = currentGeometry;\n      else\n        previousValue = callback(\n          previousValue,\n          currentGeometry,\n          featureIndex,\n          featureProperties,\n          featureBBox,\n          featureId\n        );\n    }\n  );\n  return previousValue;\n}\n\n/**\n * Callback for flattenEach\n *\n * @callback flattenEachCallback\n * @param {Feature} currentFeature The current flattened feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n */\n\n/**\n * Iterate over flattened features in any GeoJSON object, similar to\n * Array.forEach.\n *\n * @name flattenEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentFeature, featureIndex, multiFeatureIndex)\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.multiPoint([[40, 30], [36, 53]], {hello: 'world'})\n * ]);\n *\n * turf.flattenEach(features, function (currentFeature, featureIndex, multiFeatureIndex) {\n *   //=currentFeature\n *   //=featureIndex\n *   //=multiFeatureIndex\n * });\n */\nfunction flattenEach(geojson, callback) {\n  geomEach(geojson, function (geometry, featureIndex, properties, bbox, id) {\n    // Callback for single geometry\n    var type = geometry === null ? null : geometry.type;\n    switch (type) {\n      case null:\n      case \"Point\":\n      case \"LineString\":\n      case \"Polygon\":\n        if (\n          callback(\n            feature(geometry, properties, { bbox: bbox, id: id }),\n            featureIndex,\n            0\n          ) === false\n        )\n          return false;\n        return;\n    }\n\n    var geomType;\n\n    // Callback for multi-geometry\n    switch (type) {\n      case \"MultiPoint\":\n        geomType = \"Point\";\n        break;\n      case \"MultiLineString\":\n        geomType = \"LineString\";\n        break;\n      case \"MultiPolygon\":\n        geomType = \"Polygon\";\n        break;\n    }\n\n    for (\n      var multiFeatureIndex = 0;\n      multiFeatureIndex < geometry.coordinates.length;\n      multiFeatureIndex++\n    ) {\n      var coordinate = geometry.coordinates[multiFeatureIndex];\n      var geom = {\n        type: geomType,\n        coordinates: coordinate,\n      };\n      if (\n        callback(feature(geom, properties), featureIndex, multiFeatureIndex) ===\n        false\n      )\n        return false;\n    }\n  });\n}\n\n/**\n * Callback for flattenReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback flattenReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n */\n\n/**\n * Reduce flattened features in any GeoJSON object, similar to Array.reduce().\n *\n * @name flattenReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentFeature, featureIndex, multiFeatureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.multiPoint([[40, 30], [36, 53]], {hello: 'world'})\n * ]);\n *\n * turf.flattenReduce(features, function (previousValue, currentFeature, featureIndex, multiFeatureIndex) {\n *   //=previousValue\n *   //=currentFeature\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   return currentFeature\n * });\n */\nfunction flattenReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  flattenEach(\n    geojson,\n    function (currentFeature, featureIndex, multiFeatureIndex) {\n      if (\n        featureIndex === 0 &&\n        multiFeatureIndex === 0 &&\n        initialValue === undefined\n      )\n        previousValue = currentFeature;\n      else\n        previousValue = callback(\n          previousValue,\n          currentFeature,\n          featureIndex,\n          multiFeatureIndex\n        );\n    }\n  );\n  return previousValue;\n}\n\n/**\n * Callback for segmentEach\n *\n * @callback segmentEachCallback\n * @param {Feature<LineString>} currentSegment The current Segment being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n * @param {number} segmentIndex The current index of the Segment being processed.\n * @returns {void}\n */\n\n/**\n * Iterate over 2-vertex line segment in any GeoJSON object, similar to Array.forEach()\n * (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON\n * @param {Function} callback a method that takes (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex)\n * @returns {void}\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n *\n * // Iterate over GeoJSON by 2-vertex segments\n * turf.segmentEach(polygon, function (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n *   //=currentSegment\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   //=segmentIndex\n * });\n *\n * // Calculate the total number of segments\n * var total = 0;\n * turf.segmentEach(polygon, function () {\n *     total++;\n * });\n */\nfunction segmentEach(geojson, callback) {\n  flattenEach(geojson, function (feature, featureIndex, multiFeatureIndex) {\n    var segmentIndex = 0;\n\n    // Exclude null Geometries\n    if (!feature.geometry) return;\n    // (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n    var type = feature.geometry.type;\n    if (type === \"Point\" || type === \"MultiPoint\") return;\n\n    // Generate 2-vertex line segments\n    var previousCoords;\n    var previousFeatureIndex = 0;\n    var previousMultiIndex = 0;\n    var prevGeomIndex = 0;\n    if (\n      coordEach(\n        feature,\n        function (\n          currentCoord,\n          coordIndex,\n          featureIndexCoord,\n          multiPartIndexCoord,\n          geometryIndex\n        ) {\n          // Simulating a meta.coordReduce() since `reduce` operations cannot be stopped by returning `false`\n          if (\n            previousCoords === undefined ||\n            featureIndex > previousFeatureIndex ||\n            multiPartIndexCoord > previousMultiIndex ||\n            geometryIndex > prevGeomIndex\n          ) {\n            previousCoords = currentCoord;\n            previousFeatureIndex = featureIndex;\n            previousMultiIndex = multiPartIndexCoord;\n            prevGeomIndex = geometryIndex;\n            segmentIndex = 0;\n            return;\n          }\n          var currentSegment = lineString(\n            [previousCoords, currentCoord],\n            feature.properties\n          );\n          if (\n            callback(\n              currentSegment,\n              featureIndex,\n              multiFeatureIndex,\n              geometryIndex,\n              segmentIndex\n            ) === false\n          )\n            return false;\n          segmentIndex++;\n          previousCoords = currentCoord;\n        }\n      ) === false\n    )\n      return false;\n  });\n}\n\n/**\n * Callback for segmentReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback segmentReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature<LineString>} currentSegment The current Segment being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n * @param {number} segmentIndex The current index of the Segment being processed.\n */\n\n/**\n * Reduce 2-vertex line segment in any GeoJSON object, similar to Array.reduce()\n * (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON\n * @param {Function} callback a method that takes (previousValue, currentSegment, currentIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {void}\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n *\n * // Iterate over GeoJSON by 2-vertex segments\n * turf.segmentReduce(polygon, function (previousSegment, currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n *   //= previousSegment\n *   //= currentSegment\n *   //= featureIndex\n *   //= multiFeatureIndex\n *   //= geometryIndex\n *   //= segmentIndex\n *   return currentSegment\n * });\n *\n * // Calculate the total number of segments\n * var initialValue = 0\n * var total = turf.segmentReduce(polygon, function (previousValue) {\n *     previousValue++;\n *     return previousValue;\n * }, initialValue);\n */\nfunction segmentReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  var started = false;\n  segmentEach(\n    geojson,\n    function (\n      currentSegment,\n      featureIndex,\n      multiFeatureIndex,\n      geometryIndex,\n      segmentIndex\n    ) {\n      if (started === false && initialValue === undefined)\n        previousValue = currentSegment;\n      else\n        previousValue = callback(\n          previousValue,\n          currentSegment,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex,\n          segmentIndex\n        );\n      started = true;\n    }\n  );\n  return previousValue;\n}\n\n/**\n * Callback for lineEach\n *\n * @callback lineEachCallback\n * @param {Feature<LineString>} currentLine The current LineString|LinearRing being processed\n * @param {number} featureIndex The current index of the Feature being processed\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed\n * @param {number} geometryIndex The current index of the Geometry being processed\n */\n\n/**\n * Iterate over line or ring coordinates in LineString, Polygon, MultiLineString, MultiPolygon Features or Geometries,\n * similar to Array.forEach.\n *\n * @name lineEach\n * @param {Geometry|Feature<LineString|Polygon|MultiLineString|MultiPolygon>} geojson object\n * @param {Function} callback a method that takes (currentLine, featureIndex, multiFeatureIndex, geometryIndex)\n * @example\n * var multiLine = turf.multiLineString([\n *   [[26, 37], [35, 45]],\n *   [[36, 53], [38, 50], [41, 55]]\n * ]);\n *\n * turf.lineEach(multiLine, function (currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=currentLine\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n * });\n */\nfunction lineEach(geojson, callback) {\n  // validation\n  if (!geojson) throw new Error(\"geojson is required\");\n\n  flattenEach(geojson, function (feature, featureIndex, multiFeatureIndex) {\n    if (feature.geometry === null) return;\n    var type = feature.geometry.type;\n    var coords = feature.geometry.coordinates;\n    switch (type) {\n      case \"LineString\":\n        if (callback(feature, featureIndex, multiFeatureIndex, 0, 0) === false)\n          return false;\n        break;\n      case \"Polygon\":\n        for (\n          var geometryIndex = 0;\n          geometryIndex < coords.length;\n          geometryIndex++\n        ) {\n          if (\n            callback(\n              lineString(coords[geometryIndex], feature.properties),\n              featureIndex,\n              multiFeatureIndex,\n              geometryIndex\n            ) === false\n          )\n            return false;\n        }\n        break;\n    }\n  });\n}\n\n/**\n * Callback for lineReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback lineReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature<LineString>} currentLine The current LineString|LinearRing being processed.\n * @param {number} featureIndex The current index of the Feature being processed\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed\n * @param {number} geometryIndex The current index of the Geometry being processed\n */\n\n/**\n * Reduce features in any GeoJSON object, similar to Array.reduce().\n *\n * @name lineReduce\n * @param {Geometry|Feature<LineString|Polygon|MultiLineString|MultiPolygon>} geojson object\n * @param {Function} callback a method that takes (previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var multiPoly = turf.multiPolygon([\n *   turf.polygon([[[12,48],[2,41],[24,38],[12,48]], [[9,44],[13,41],[13,45],[9,44]]]),\n *   turf.polygon([[[5, 5], [0, 0], [2, 2], [4, 4], [5, 5]]])\n * ]);\n *\n * turf.lineReduce(multiPoly, function (previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=previousValue\n *   //=currentLine\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   return currentLine\n * });\n */\nfunction lineReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  lineEach(\n    geojson,\n    function (currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n      if (featureIndex === 0 && initialValue === undefined)\n        previousValue = currentLine;\n      else\n        previousValue = callback(\n          previousValue,\n          currentLine,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex\n        );\n    }\n  );\n  return previousValue;\n}\n\n/**\n * Finds a particular 2-vertex LineString Segment from a GeoJSON using `@turf/meta` indexes.\n *\n * Negative indexes are permitted.\n * Point & MultiPoint will always return null.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson Any GeoJSON Feature or Geometry\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.featureIndex=0] Feature Index\n * @param {number} [options.multiFeatureIndex=0] Multi-Feature Index\n * @param {number} [options.geometryIndex=0] Geometry Index\n * @param {number} [options.segmentIndex=0] Segment Index\n * @param {Object} [options.properties={}] Translate Properties to output LineString\n * @param {BBox} [options.bbox={}] Translate BBox to output LineString\n * @param {number|string} [options.id={}] Translate Id to output LineString\n * @returns {Feature<LineString>} 2-vertex GeoJSON Feature LineString\n * @example\n * var multiLine = turf.multiLineString([\n *     [[10, 10], [50, 30], [30, 40]],\n *     [[-10, -10], [-50, -30], [-30, -40]]\n * ]);\n *\n * // First Segment (defaults are 0)\n * turf.findSegment(multiLine);\n * // => Feature<LineString<[[10, 10], [50, 30]]>>\n *\n * // First Segment of 2nd Multi Feature\n * turf.findSegment(multiLine, {multiFeatureIndex: 1});\n * // => Feature<LineString<[[-10, -10], [-50, -30]]>>\n *\n * // Last Segment of Last Multi Feature\n * turf.findSegment(multiLine, {multiFeatureIndex: -1, segmentIndex: -1});\n * // => Feature<LineString<[[-50, -30], [-30, -40]]>>\n */\nfunction findSegment(geojson, options) {\n  // Optional Parameters\n  options = options || {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  var featureIndex = options.featureIndex || 0;\n  var multiFeatureIndex = options.multiFeatureIndex || 0;\n  var geometryIndex = options.geometryIndex || 0;\n  var segmentIndex = options.segmentIndex || 0;\n\n  // Find FeatureIndex\n  var properties = options.properties;\n  var geometry;\n\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      if (featureIndex < 0)\n        featureIndex = geojson.features.length + featureIndex;\n      properties = properties || geojson.features[featureIndex].properties;\n      geometry = geojson.features[featureIndex].geometry;\n      break;\n    case \"Feature\":\n      properties = properties || geojson.properties;\n      geometry = geojson.geometry;\n      break;\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n    case \"Polygon\":\n    case \"MultiLineString\":\n    case \"MultiPolygon\":\n      geometry = geojson;\n      break;\n    default:\n      throw new Error(\"geojson is invalid\");\n  }\n\n  // Find SegmentIndex\n  if (geometry === null) return null;\n  var coords = geometry.coordinates;\n  switch (geometry.type) {\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n      if (segmentIndex < 0) segmentIndex = coords.length + segmentIndex - 1;\n      return lineString(\n        [coords[segmentIndex], coords[segmentIndex + 1]],\n        properties,\n        options\n      );\n    case \"Polygon\":\n      if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n      if (segmentIndex < 0)\n        segmentIndex = coords[geometryIndex].length + segmentIndex - 1;\n      return lineString(\n        [\n          coords[geometryIndex][segmentIndex],\n          coords[geometryIndex][segmentIndex + 1],\n        ],\n        properties,\n        options\n      );\n    case \"MultiLineString\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (segmentIndex < 0)\n        segmentIndex = coords[multiFeatureIndex].length + segmentIndex - 1;\n      return lineString(\n        [\n          coords[multiFeatureIndex][segmentIndex],\n          coords[multiFeatureIndex][segmentIndex + 1],\n        ],\n        properties,\n        options\n      );\n    case \"MultiPolygon\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (geometryIndex < 0)\n        geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n      if (segmentIndex < 0)\n        segmentIndex =\n          coords[multiFeatureIndex][geometryIndex].length - segmentIndex - 1;\n      return lineString(\n        [\n          coords[multiFeatureIndex][geometryIndex][segmentIndex],\n          coords[multiFeatureIndex][geometryIndex][segmentIndex + 1],\n        ],\n        properties,\n        options\n      );\n  }\n  throw new Error(\"geojson is invalid\");\n}\n\n/**\n * Finds a particular Point from a GeoJSON using `@turf/meta` indexes.\n *\n * Negative indexes are permitted.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson Any GeoJSON Feature or Geometry\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.featureIndex=0] Feature Index\n * @param {number} [options.multiFeatureIndex=0] Multi-Feature Index\n * @param {number} [options.geometryIndex=0] Geometry Index\n * @param {number} [options.coordIndex=0] Coord Index\n * @param {Object} [options.properties={}] Translate Properties to output Point\n * @param {BBox} [options.bbox={}] Translate BBox to output Point\n * @param {number|string} [options.id={}] Translate Id to output Point\n * @returns {Feature<Point>} 2-vertex GeoJSON Feature Point\n * @example\n * var multiLine = turf.multiLineString([\n *     [[10, 10], [50, 30], [30, 40]],\n *     [[-10, -10], [-50, -30], [-30, -40]]\n * ]);\n *\n * // First Segment (defaults are 0)\n * turf.findPoint(multiLine);\n * // => Feature<Point<[10, 10]>>\n *\n * // First Segment of the 2nd Multi-Feature\n * turf.findPoint(multiLine, {multiFeatureIndex: 1});\n * // => Feature<Point<[-10, -10]>>\n *\n * // Last Segment of last Multi-Feature\n * turf.findPoint(multiLine, {multiFeatureIndex: -1, coordIndex: -1});\n * // => Feature<Point<[-30, -40]>>\n */\nfunction findPoint(geojson, options) {\n  // Optional Parameters\n  options = options || {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  var featureIndex = options.featureIndex || 0;\n  var multiFeatureIndex = options.multiFeatureIndex || 0;\n  var geometryIndex = options.geometryIndex || 0;\n  var coordIndex = options.coordIndex || 0;\n\n  // Find FeatureIndex\n  var properties = options.properties;\n  var geometry;\n\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      if (featureIndex < 0)\n        featureIndex = geojson.features.length + featureIndex;\n      properties = properties || geojson.features[featureIndex].properties;\n      geometry = geojson.features[featureIndex].geometry;\n      break;\n    case \"Feature\":\n      properties = properties || geojson.properties;\n      geometry = geojson.geometry;\n      break;\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n    case \"Polygon\":\n    case \"MultiLineString\":\n    case \"MultiPolygon\":\n      geometry = geojson;\n      break;\n    default:\n      throw new Error(\"geojson is invalid\");\n  }\n\n  // Find Coord Index\n  if (geometry === null) return null;\n  var coords = geometry.coordinates;\n  switch (geometry.type) {\n    case \"Point\":\n      return point(coords, properties, options);\n    case \"MultiPoint\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      return point(coords[multiFeatureIndex], properties, options);\n    case \"LineString\":\n      if (coordIndex < 0) coordIndex = coords.length + coordIndex;\n      return point(coords[coordIndex], properties, options);\n    case \"Polygon\":\n      if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n      if (coordIndex < 0)\n        coordIndex = coords[geometryIndex].length + coordIndex;\n      return point(coords[geometryIndex][coordIndex], properties, options);\n    case \"MultiLineString\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (coordIndex < 0)\n        coordIndex = coords[multiFeatureIndex].length + coordIndex;\n      return point(coords[multiFeatureIndex][coordIndex], properties, options);\n    case \"MultiPolygon\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (geometryIndex < 0)\n        geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n      if (coordIndex < 0)\n        coordIndex =\n          coords[multiFeatureIndex][geometryIndex].length - coordIndex;\n      return point(\n        coords[multiFeatureIndex][geometryIndex][coordIndex],\n        properties,\n        options\n      );\n  }\n  throw new Error(\"geojson is invalid\");\n}\n\nexport { coordAll, coordEach, coordReduce, featureEach, featureReduce, findPoint, findSegment, flattenEach, flattenReduce, geomEach, geomReduce, lineEach, lineReduce, propEach, propReduce, segmentEach, segmentReduce };\n","import { featureCollection, lineString, } from \"@turf/helpers\";\nimport { getCoords } from \"@turf/invariant\";\nimport { flattenEach } from \"@turf/meta\";\n/**\n * Creates a {@link FeatureCollection} of 2-vertex {@link LineString} segments from a\n * {@link LineString|(Multi)LineString} or {@link Polygon|(Multi)Polygon}.\n *\n * @name lineSegment\n * @param {GeoJSON} geojson GeoJSON Polygon or LineString\n * @returns {FeatureCollection<LineString>} 2-vertex line segments\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n * var segments = turf.lineSegment(polygon);\n *\n * //addToMap\n * var addToMap = [polygon, segments]\n */\nfunction lineSegment(geojson) {\n    if (!geojson) {\n        throw new Error(\"geojson is required\");\n    }\n    var results = [];\n    flattenEach(geojson, function (feature) {\n        lineSegmentFeature(feature, results);\n    });\n    return featureCollection(results);\n}\n/**\n * Line Segment\n *\n * @private\n * @param {Feature<LineString|Polygon>} geojson Line or polygon feature\n * @param {Array} results push to results\n * @returns {void}\n */\nfunction lineSegmentFeature(geojson, results) {\n    var coords = [];\n    var geometry = geojson.geometry;\n    if (geometry !== null) {\n        switch (geometry.type) {\n            case \"Polygon\":\n                coords = getCoords(geometry);\n                break;\n            case \"LineString\":\n                coords = [getCoords(geometry)];\n        }\n        coords.forEach(function (coord) {\n            var segments = createSegments(coord, geojson.properties);\n            segments.forEach(function (segment) {\n                segment.id = results.length;\n                results.push(segment);\n            });\n        });\n    }\n}\n/**\n * Create Segments from LineString coordinates\n *\n * @private\n * @param {Array<Array<number>>} coords LineString coordinates\n * @param {*} properties GeoJSON properties\n * @returns {Array<Feature<LineString>>} line segments\n */\nfunction createSegments(coords, properties) {\n    var segments = [];\n    coords.reduce(function (previousCoords, currentCoords) {\n        var segment = lineString([previousCoords, currentCoords], properties);\n        segment.bbox = bbox(previousCoords, currentCoords);\n        segments.push(segment);\n        return currentCoords;\n    });\n    return segments;\n}\n/**\n * Create BBox between two coordinates (faster than @turf/bbox)\n *\n * @private\n * @param {Array<number>} coords1 Point coordinate\n * @param {Array<number>} coords2 Point coordinate\n * @returns {BBox} [west, south, east, north]\n */\nfunction bbox(coords1, coords2) {\n    var x1 = coords1[0];\n    var y1 = coords1[1];\n    var x2 = coords2[0];\n    var y2 = coords2[1];\n    var west = x1 < x2 ? x1 : x2;\n    var south = y1 < y2 ? y1 : y2;\n    var east = x1 > x2 ? x1 : x2;\n    var north = y1 > y2 ? y1 : y2;\n    return [west, south, east, north];\n}\nexport default lineSegment;\n","import { feature, lineString, isObject, point } from '@turf/helpers';\n\n/**\n * Callback for coordEach\n *\n * @callback coordEachCallback\n * @param {Array<number>} currentCoord The current coordinate being processed.\n * @param {number} coordIndex The current index of the coordinate being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n */\n\n/**\n * Iterate over coordinates in any GeoJSON object, similar to Array.forEach()\n *\n * @name coordEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentCoord, coordIndex, featureIndex, multiFeatureIndex)\n * @param {boolean} [excludeWrapCoord=false] whether or not to include the final coordinate of LinearRings that wraps the ring in its iteration.\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.coordEach(features, function (currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=currentCoord\n *   //=coordIndex\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n * });\n */\nfunction coordEach(geojson, callback, excludeWrapCoord) {\n  // Handles null Geometry -- Skips this GeoJSON\n  if (geojson === null) return;\n  var j,\n    k,\n    l,\n    geometry,\n    stopG,\n    coords,\n    geometryMaybeCollection,\n    wrapShrink = 0,\n    coordIndex = 0,\n    isGeometryCollection,\n    type = geojson.type,\n    isFeatureCollection = type === \"FeatureCollection\",\n    isFeature = type === \"Feature\",\n    stop = isFeatureCollection ? geojson.features.length : 1;\n\n  // This logic may look a little weird. The reason why it is that way\n  // is because it's trying to be fast. GeoJSON supports multiple kinds\n  // of objects at its root: FeatureCollection, Features, Geometries.\n  // This function has the responsibility of handling all of them, and that\n  // means that some of the `for` loops you see below actually just don't apply\n  // to certain inputs. For instance, if you give this just a\n  // Point geometry, then both loops are short-circuited and all we do\n  // is gradually rename the input until it's called 'geometry'.\n  //\n  // This also aims to allocate as few resources as possible: just a\n  // few numbers and booleans, rather than any temporary arrays as would\n  // be required with the normalization approach.\n  for (var featureIndex = 0; featureIndex < stop; featureIndex++) {\n    geometryMaybeCollection = isFeatureCollection\n      ? geojson.features[featureIndex].geometry\n      : isFeature\n      ? geojson.geometry\n      : geojson;\n    isGeometryCollection = geometryMaybeCollection\n      ? geometryMaybeCollection.type === \"GeometryCollection\"\n      : false;\n    stopG = isGeometryCollection\n      ? geometryMaybeCollection.geometries.length\n      : 1;\n\n    for (var geomIndex = 0; geomIndex < stopG; geomIndex++) {\n      var multiFeatureIndex = 0;\n      var geometryIndex = 0;\n      geometry = isGeometryCollection\n        ? geometryMaybeCollection.geometries[geomIndex]\n        : geometryMaybeCollection;\n\n      // Handles null Geometry -- Skips this geometry\n      if (geometry === null) continue;\n      coords = geometry.coordinates;\n      var geomType = geometry.type;\n\n      wrapShrink =\n        excludeWrapCoord &&\n        (geomType === \"Polygon\" || geomType === \"MultiPolygon\")\n          ? 1\n          : 0;\n\n      switch (geomType) {\n        case null:\n          break;\n        case \"Point\":\n          if (\n            callback(\n              coords,\n              coordIndex,\n              featureIndex,\n              multiFeatureIndex,\n              geometryIndex\n            ) === false\n          )\n            return false;\n          coordIndex++;\n          multiFeatureIndex++;\n          break;\n        case \"LineString\":\n        case \"MultiPoint\":\n          for (j = 0; j < coords.length; j++) {\n            if (\n              callback(\n                coords[j],\n                coordIndex,\n                featureIndex,\n                multiFeatureIndex,\n                geometryIndex\n              ) === false\n            )\n              return false;\n            coordIndex++;\n            if (geomType === \"MultiPoint\") multiFeatureIndex++;\n          }\n          if (geomType === \"LineString\") multiFeatureIndex++;\n          break;\n        case \"Polygon\":\n        case \"MultiLineString\":\n          for (j = 0; j < coords.length; j++) {\n            for (k = 0; k < coords[j].length - wrapShrink; k++) {\n              if (\n                callback(\n                  coords[j][k],\n                  coordIndex,\n                  featureIndex,\n                  multiFeatureIndex,\n                  geometryIndex\n                ) === false\n              )\n                return false;\n              coordIndex++;\n            }\n            if (geomType === \"MultiLineString\") multiFeatureIndex++;\n            if (geomType === \"Polygon\") geometryIndex++;\n          }\n          if (geomType === \"Polygon\") multiFeatureIndex++;\n          break;\n        case \"MultiPolygon\":\n          for (j = 0; j < coords.length; j++) {\n            geometryIndex = 0;\n            for (k = 0; k < coords[j].length; k++) {\n              for (l = 0; l < coords[j][k].length - wrapShrink; l++) {\n                if (\n                  callback(\n                    coords[j][k][l],\n                    coordIndex,\n                    featureIndex,\n                    multiFeatureIndex,\n                    geometryIndex\n                  ) === false\n                )\n                  return false;\n                coordIndex++;\n              }\n              geometryIndex++;\n            }\n            multiFeatureIndex++;\n          }\n          break;\n        case \"GeometryCollection\":\n          for (j = 0; j < geometry.geometries.length; j++)\n            if (\n              coordEach(geometry.geometries[j], callback, excludeWrapCoord) ===\n              false\n            )\n              return false;\n          break;\n        default:\n          throw new Error(\"Unknown Geometry Type\");\n      }\n    }\n  }\n}\n\n/**\n * Callback for coordReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback coordReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Array<number>} currentCoord The current coordinate being processed.\n * @param {number} coordIndex The current index of the coordinate being processed.\n * Starts at index 0, if an initialValue is provided, and at index 1 otherwise.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n */\n\n/**\n * Reduce coordinates in any GeoJSON object, similar to Array.reduce()\n *\n * @name coordReduce\n * @param {FeatureCollection|Geometry|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentCoord, coordIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @param {boolean} [excludeWrapCoord=false] whether or not to include the final coordinate of LinearRings that wraps the ring in its iteration.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.coordReduce(features, function (previousValue, currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=previousValue\n *   //=currentCoord\n *   //=coordIndex\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   return currentCoord;\n * });\n */\nfunction coordReduce(geojson, callback, initialValue, excludeWrapCoord) {\n  var previousValue = initialValue;\n  coordEach(\n    geojson,\n    function (\n      currentCoord,\n      coordIndex,\n      featureIndex,\n      multiFeatureIndex,\n      geometryIndex\n    ) {\n      if (coordIndex === 0 && initialValue === undefined)\n        previousValue = currentCoord;\n      else\n        previousValue = callback(\n          previousValue,\n          currentCoord,\n          coordIndex,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex\n        );\n    },\n    excludeWrapCoord\n  );\n  return previousValue;\n}\n\n/**\n * Callback for propEach\n *\n * @callback propEachCallback\n * @param {Object} currentProperties The current Properties being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Iterate over properties in any GeoJSON object, similar to Array.forEach()\n *\n * @name propEach\n * @param {FeatureCollection|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentProperties, featureIndex)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.propEach(features, function (currentProperties, featureIndex) {\n *   //=currentProperties\n *   //=featureIndex\n * });\n */\nfunction propEach(geojson, callback) {\n  var i;\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      for (i = 0; i < geojson.features.length; i++) {\n        if (callback(geojson.features[i].properties, i) === false) break;\n      }\n      break;\n    case \"Feature\":\n      callback(geojson.properties, 0);\n      break;\n  }\n}\n\n/**\n * Callback for propReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback propReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {*} currentProperties The current Properties being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Reduce properties in any GeoJSON object into a single value,\n * similar to how Array.reduce works. However, in this case we lazily run\n * the reduction, so an array of all properties is unnecessary.\n *\n * @name propReduce\n * @param {FeatureCollection|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentProperties, featureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.propReduce(features, function (previousValue, currentProperties, featureIndex) {\n *   //=previousValue\n *   //=currentProperties\n *   //=featureIndex\n *   return currentProperties\n * });\n */\nfunction propReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  propEach(geojson, function (currentProperties, featureIndex) {\n    if (featureIndex === 0 && initialValue === undefined)\n      previousValue = currentProperties;\n    else\n      previousValue = callback(previousValue, currentProperties, featureIndex);\n  });\n  return previousValue;\n}\n\n/**\n * Callback for featureEach\n *\n * @callback featureEachCallback\n * @param {Feature<any>} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Iterate over features in any GeoJSON object, similar to\n * Array.forEach.\n *\n * @name featureEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentFeature, featureIndex)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {foo: 'bar'}),\n *   turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.featureEach(features, function (currentFeature, featureIndex) {\n *   //=currentFeature\n *   //=featureIndex\n * });\n */\nfunction featureEach(geojson, callback) {\n  if (geojson.type === \"Feature\") {\n    callback(geojson, 0);\n  } else if (geojson.type === \"FeatureCollection\") {\n    for (var i = 0; i < geojson.features.length; i++) {\n      if (callback(geojson.features[i], i) === false) break;\n    }\n  }\n}\n\n/**\n * Callback for featureReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback featureReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Reduce features in any GeoJSON object, similar to Array.reduce().\n *\n * @name featureReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentFeature, featureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.featureReduce(features, function (previousValue, currentFeature, featureIndex) {\n *   //=previousValue\n *   //=currentFeature\n *   //=featureIndex\n *   return currentFeature\n * });\n */\nfunction featureReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  featureEach(geojson, function (currentFeature, featureIndex) {\n    if (featureIndex === 0 && initialValue === undefined)\n      previousValue = currentFeature;\n    else previousValue = callback(previousValue, currentFeature, featureIndex);\n  });\n  return previousValue;\n}\n\n/**\n * Get all coordinates from any GeoJSON object.\n *\n * @name coordAll\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @returns {Array<Array<number>>} coordinate position array\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {foo: 'bar'}),\n *   turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * var coords = turf.coordAll(features);\n * //= [[26, 37], [36, 53]]\n */\nfunction coordAll(geojson) {\n  var coords = [];\n  coordEach(geojson, function (coord) {\n    coords.push(coord);\n  });\n  return coords;\n}\n\n/**\n * Callback for geomEach\n *\n * @callback geomEachCallback\n * @param {Geometry} currentGeometry The current Geometry being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {Object} featureProperties The current Feature Properties being processed.\n * @param {Array<number>} featureBBox The current Feature BBox being processed.\n * @param {number|string} featureId The current Feature Id being processed.\n */\n\n/**\n * Iterate over each geometry in any GeoJSON object, similar to Array.forEach()\n *\n * @name geomEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentGeometry, featureIndex, featureProperties, featureBBox, featureId)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.geomEach(features, function (currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n *   //=currentGeometry\n *   //=featureIndex\n *   //=featureProperties\n *   //=featureBBox\n *   //=featureId\n * });\n */\nfunction geomEach(geojson, callback) {\n  var i,\n    j,\n    g,\n    geometry,\n    stopG,\n    geometryMaybeCollection,\n    isGeometryCollection,\n    featureProperties,\n    featureBBox,\n    featureId,\n    featureIndex = 0,\n    isFeatureCollection = geojson.type === \"FeatureCollection\",\n    isFeature = geojson.type === \"Feature\",\n    stop = isFeatureCollection ? geojson.features.length : 1;\n\n  // This logic may look a little weird. The reason why it is that way\n  // is because it's trying to be fast. GeoJSON supports multiple kinds\n  // of objects at its root: FeatureCollection, Features, Geometries.\n  // This function has the responsibility of handling all of them, and that\n  // means that some of the `for` loops you see below actually just don't apply\n  // to certain inputs. For instance, if you give this just a\n  // Point geometry, then both loops are short-circuited and all we do\n  // is gradually rename the input until it's called 'geometry'.\n  //\n  // This also aims to allocate as few resources as possible: just a\n  // few numbers and booleans, rather than any temporary arrays as would\n  // be required with the normalization approach.\n  for (i = 0; i < stop; i++) {\n    geometryMaybeCollection = isFeatureCollection\n      ? geojson.features[i].geometry\n      : isFeature\n      ? geojson.geometry\n      : geojson;\n    featureProperties = isFeatureCollection\n      ? geojson.features[i].properties\n      : isFeature\n      ? geojson.properties\n      : {};\n    featureBBox = isFeatureCollection\n      ? geojson.features[i].bbox\n      : isFeature\n      ? geojson.bbox\n      : undefined;\n    featureId = isFeatureCollection\n      ? geojson.features[i].id\n      : isFeature\n      ? geojson.id\n      : undefined;\n    isGeometryCollection = geometryMaybeCollection\n      ? geometryMaybeCollection.type === \"GeometryCollection\"\n      : false;\n    stopG = isGeometryCollection\n      ? geometryMaybeCollection.geometries.length\n      : 1;\n\n    for (g = 0; g < stopG; g++) {\n      geometry = isGeometryCollection\n        ? geometryMaybeCollection.geometries[g]\n        : geometryMaybeCollection;\n\n      // Handle null Geometry\n      if (geometry === null) {\n        if (\n          callback(\n            null,\n            featureIndex,\n            featureProperties,\n            featureBBox,\n            featureId\n          ) === false\n        )\n          return false;\n        continue;\n      }\n      switch (geometry.type) {\n        case \"Point\":\n        case \"LineString\":\n        case \"MultiPoint\":\n        case \"Polygon\":\n        case \"MultiLineString\":\n        case \"MultiPolygon\": {\n          if (\n            callback(\n              geometry,\n              featureIndex,\n              featureProperties,\n              featureBBox,\n              featureId\n            ) === false\n          )\n            return false;\n          break;\n        }\n        case \"GeometryCollection\": {\n          for (j = 0; j < geometry.geometries.length; j++) {\n            if (\n              callback(\n                geometry.geometries[j],\n                featureIndex,\n                featureProperties,\n                featureBBox,\n                featureId\n              ) === false\n            )\n              return false;\n          }\n          break;\n        }\n        default:\n          throw new Error(\"Unknown Geometry Type\");\n      }\n    }\n    // Only increase `featureIndex` per each feature\n    featureIndex++;\n  }\n}\n\n/**\n * Callback for geomReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback geomReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Geometry} currentGeometry The current Geometry being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {Object} featureProperties The current Feature Properties being processed.\n * @param {Array<number>} featureBBox The current Feature BBox being processed.\n * @param {number|string} featureId The current Feature Id being processed.\n */\n\n/**\n * Reduce geometry in any GeoJSON object, similar to Array.reduce().\n *\n * @name geomReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.geomReduce(features, function (previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n *   //=previousValue\n *   //=currentGeometry\n *   //=featureIndex\n *   //=featureProperties\n *   //=featureBBox\n *   //=featureId\n *   return currentGeometry\n * });\n */\nfunction geomReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  geomEach(\n    geojson,\n    function (\n      currentGeometry,\n      featureIndex,\n      featureProperties,\n      featureBBox,\n      featureId\n    ) {\n      if (featureIndex === 0 && initialValue === undefined)\n        previousValue = currentGeometry;\n      else\n        previousValue = callback(\n          previousValue,\n          currentGeometry,\n          featureIndex,\n          featureProperties,\n          featureBBox,\n          featureId\n        );\n    }\n  );\n  return previousValue;\n}\n\n/**\n * Callback for flattenEach\n *\n * @callback flattenEachCallback\n * @param {Feature} currentFeature The current flattened feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n */\n\n/**\n * Iterate over flattened features in any GeoJSON object, similar to\n * Array.forEach.\n *\n * @name flattenEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentFeature, featureIndex, multiFeatureIndex)\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.multiPoint([[40, 30], [36, 53]], {hello: 'world'})\n * ]);\n *\n * turf.flattenEach(features, function (currentFeature, featureIndex, multiFeatureIndex) {\n *   //=currentFeature\n *   //=featureIndex\n *   //=multiFeatureIndex\n * });\n */\nfunction flattenEach(geojson, callback) {\n  geomEach(geojson, function (geometry, featureIndex, properties, bbox, id) {\n    // Callback for single geometry\n    var type = geometry === null ? null : geometry.type;\n    switch (type) {\n      case null:\n      case \"Point\":\n      case \"LineString\":\n      case \"Polygon\":\n        if (\n          callback(\n            feature(geometry, properties, { bbox: bbox, id: id }),\n            featureIndex,\n            0\n          ) === false\n        )\n          return false;\n        return;\n    }\n\n    var geomType;\n\n    // Callback for multi-geometry\n    switch (type) {\n      case \"MultiPoint\":\n        geomType = \"Point\";\n        break;\n      case \"MultiLineString\":\n        geomType = \"LineString\";\n        break;\n      case \"MultiPolygon\":\n        geomType = \"Polygon\";\n        break;\n    }\n\n    for (\n      var multiFeatureIndex = 0;\n      multiFeatureIndex < geometry.coordinates.length;\n      multiFeatureIndex++\n    ) {\n      var coordinate = geometry.coordinates[multiFeatureIndex];\n      var geom = {\n        type: geomType,\n        coordinates: coordinate,\n      };\n      if (\n        callback(feature(geom, properties), featureIndex, multiFeatureIndex) ===\n        false\n      )\n        return false;\n    }\n  });\n}\n\n/**\n * Callback for flattenReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback flattenReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n */\n\n/**\n * Reduce flattened features in any GeoJSON object, similar to Array.reduce().\n *\n * @name flattenReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentFeature, featureIndex, multiFeatureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.multiPoint([[40, 30], [36, 53]], {hello: 'world'})\n * ]);\n *\n * turf.flattenReduce(features, function (previousValue, currentFeature, featureIndex, multiFeatureIndex) {\n *   //=previousValue\n *   //=currentFeature\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   return currentFeature\n * });\n */\nfunction flattenReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  flattenEach(\n    geojson,\n    function (currentFeature, featureIndex, multiFeatureIndex) {\n      if (\n        featureIndex === 0 &&\n        multiFeatureIndex === 0 &&\n        initialValue === undefined\n      )\n        previousValue = currentFeature;\n      else\n        previousValue = callback(\n          previousValue,\n          currentFeature,\n          featureIndex,\n          multiFeatureIndex\n        );\n    }\n  );\n  return previousValue;\n}\n\n/**\n * Callback for segmentEach\n *\n * @callback segmentEachCallback\n * @param {Feature<LineString>} currentSegment The current Segment being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n * @param {number} segmentIndex The current index of the Segment being processed.\n * @returns {void}\n */\n\n/**\n * Iterate over 2-vertex line segment in any GeoJSON object, similar to Array.forEach()\n * (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON\n * @param {Function} callback a method that takes (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex)\n * @returns {void}\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n *\n * // Iterate over GeoJSON by 2-vertex segments\n * turf.segmentEach(polygon, function (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n *   //=currentSegment\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   //=segmentIndex\n * });\n *\n * // Calculate the total number of segments\n * var total = 0;\n * turf.segmentEach(polygon, function () {\n *     total++;\n * });\n */\nfunction segmentEach(geojson, callback) {\n  flattenEach(geojson, function (feature, featureIndex, multiFeatureIndex) {\n    var segmentIndex = 0;\n\n    // Exclude null Geometries\n    if (!feature.geometry) return;\n    // (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n    var type = feature.geometry.type;\n    if (type === \"Point\" || type === \"MultiPoint\") return;\n\n    // Generate 2-vertex line segments\n    var previousCoords;\n    var previousFeatureIndex = 0;\n    var previousMultiIndex = 0;\n    var prevGeomIndex = 0;\n    if (\n      coordEach(\n        feature,\n        function (\n          currentCoord,\n          coordIndex,\n          featureIndexCoord,\n          multiPartIndexCoord,\n          geometryIndex\n        ) {\n          // Simulating a meta.coordReduce() since `reduce` operations cannot be stopped by returning `false`\n          if (\n            previousCoords === undefined ||\n            featureIndex > previousFeatureIndex ||\n            multiPartIndexCoord > previousMultiIndex ||\n            geometryIndex > prevGeomIndex\n          ) {\n            previousCoords = currentCoord;\n            previousFeatureIndex = featureIndex;\n            previousMultiIndex = multiPartIndexCoord;\n            prevGeomIndex = geometryIndex;\n            segmentIndex = 0;\n            return;\n          }\n          var currentSegment = lineString(\n            [previousCoords, currentCoord],\n            feature.properties\n          );\n          if (\n            callback(\n              currentSegment,\n              featureIndex,\n              multiFeatureIndex,\n              geometryIndex,\n              segmentIndex\n            ) === false\n          )\n            return false;\n          segmentIndex++;\n          previousCoords = currentCoord;\n        }\n      ) === false\n    )\n      return false;\n  });\n}\n\n/**\n * Callback for segmentReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback segmentReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature<LineString>} currentSegment The current Segment being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n * @param {number} segmentIndex The current index of the Segment being processed.\n */\n\n/**\n * Reduce 2-vertex line segment in any GeoJSON object, similar to Array.reduce()\n * (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON\n * @param {Function} callback a method that takes (previousValue, currentSegment, currentIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {void}\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n *\n * // Iterate over GeoJSON by 2-vertex segments\n * turf.segmentReduce(polygon, function (previousSegment, currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n *   //= previousSegment\n *   //= currentSegment\n *   //= featureIndex\n *   //= multiFeatureIndex\n *   //= geometryIndex\n *   //= segmentIndex\n *   return currentSegment\n * });\n *\n * // Calculate the total number of segments\n * var initialValue = 0\n * var total = turf.segmentReduce(polygon, function (previousValue) {\n *     previousValue++;\n *     return previousValue;\n * }, initialValue);\n */\nfunction segmentReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  var started = false;\n  segmentEach(\n    geojson,\n    function (\n      currentSegment,\n      featureIndex,\n      multiFeatureIndex,\n      geometryIndex,\n      segmentIndex\n    ) {\n      if (started === false && initialValue === undefined)\n        previousValue = currentSegment;\n      else\n        previousValue = callback(\n          previousValue,\n          currentSegment,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex,\n          segmentIndex\n        );\n      started = true;\n    }\n  );\n  return previousValue;\n}\n\n/**\n * Callback for lineEach\n *\n * @callback lineEachCallback\n * @param {Feature<LineString>} currentLine The current LineString|LinearRing being processed\n * @param {number} featureIndex The current index of the Feature being processed\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed\n * @param {number} geometryIndex The current index of the Geometry being processed\n */\n\n/**\n * Iterate over line or ring coordinates in LineString, Polygon, MultiLineString, MultiPolygon Features or Geometries,\n * similar to Array.forEach.\n *\n * @name lineEach\n * @param {Geometry|Feature<LineString|Polygon|MultiLineString|MultiPolygon>} geojson object\n * @param {Function} callback a method that takes (currentLine, featureIndex, multiFeatureIndex, geometryIndex)\n * @example\n * var multiLine = turf.multiLineString([\n *   [[26, 37], [35, 45]],\n *   [[36, 53], [38, 50], [41, 55]]\n * ]);\n *\n * turf.lineEach(multiLine, function (currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=currentLine\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n * });\n */\nfunction lineEach(geojson, callback) {\n  // validation\n  if (!geojson) throw new Error(\"geojson is required\");\n\n  flattenEach(geojson, function (feature, featureIndex, multiFeatureIndex) {\n    if (feature.geometry === null) return;\n    var type = feature.geometry.type;\n    var coords = feature.geometry.coordinates;\n    switch (type) {\n      case \"LineString\":\n        if (callback(feature, featureIndex, multiFeatureIndex, 0, 0) === false)\n          return false;\n        break;\n      case \"Polygon\":\n        for (\n          var geometryIndex = 0;\n          geometryIndex < coords.length;\n          geometryIndex++\n        ) {\n          if (\n            callback(\n              lineString(coords[geometryIndex], feature.properties),\n              featureIndex,\n              multiFeatureIndex,\n              geometryIndex\n            ) === false\n          )\n            return false;\n        }\n        break;\n    }\n  });\n}\n\n/**\n * Callback for lineReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback lineReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature<LineString>} currentLine The current LineString|LinearRing being processed.\n * @param {number} featureIndex The current index of the Feature being processed\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed\n * @param {number} geometryIndex The current index of the Geometry being processed\n */\n\n/**\n * Reduce features in any GeoJSON object, similar to Array.reduce().\n *\n * @name lineReduce\n * @param {Geometry|Feature<LineString|Polygon|MultiLineString|MultiPolygon>} geojson object\n * @param {Function} callback a method that takes (previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var multiPoly = turf.multiPolygon([\n *   turf.polygon([[[12,48],[2,41],[24,38],[12,48]], [[9,44],[13,41],[13,45],[9,44]]]),\n *   turf.polygon([[[5, 5], [0, 0], [2, 2], [4, 4], [5, 5]]])\n * ]);\n *\n * turf.lineReduce(multiPoly, function (previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=previousValue\n *   //=currentLine\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   return currentLine\n * });\n */\nfunction lineReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  lineEach(\n    geojson,\n    function (currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n      if (featureIndex === 0 && initialValue === undefined)\n        previousValue = currentLine;\n      else\n        previousValue = callback(\n          previousValue,\n          currentLine,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex\n        );\n    }\n  );\n  return previousValue;\n}\n\n/**\n * Finds a particular 2-vertex LineString Segment from a GeoJSON using `@turf/meta` indexes.\n *\n * Negative indexes are permitted.\n * Point & MultiPoint will always return null.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson Any GeoJSON Feature or Geometry\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.featureIndex=0] Feature Index\n * @param {number} [options.multiFeatureIndex=0] Multi-Feature Index\n * @param {number} [options.geometryIndex=0] Geometry Index\n * @param {number} [options.segmentIndex=0] Segment Index\n * @param {Object} [options.properties={}] Translate Properties to output LineString\n * @param {BBox} [options.bbox={}] Translate BBox to output LineString\n * @param {number|string} [options.id={}] Translate Id to output LineString\n * @returns {Feature<LineString>} 2-vertex GeoJSON Feature LineString\n * @example\n * var multiLine = turf.multiLineString([\n *     [[10, 10], [50, 30], [30, 40]],\n *     [[-10, -10], [-50, -30], [-30, -40]]\n * ]);\n *\n * // First Segment (defaults are 0)\n * turf.findSegment(multiLine);\n * // => Feature<LineString<[[10, 10], [50, 30]]>>\n *\n * // First Segment of 2nd Multi Feature\n * turf.findSegment(multiLine, {multiFeatureIndex: 1});\n * // => Feature<LineString<[[-10, -10], [-50, -30]]>>\n *\n * // Last Segment of Last Multi Feature\n * turf.findSegment(multiLine, {multiFeatureIndex: -1, segmentIndex: -1});\n * // => Feature<LineString<[[-50, -30], [-30, -40]]>>\n */\nfunction findSegment(geojson, options) {\n  // Optional Parameters\n  options = options || {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  var featureIndex = options.featureIndex || 0;\n  var multiFeatureIndex = options.multiFeatureIndex || 0;\n  var geometryIndex = options.geometryIndex || 0;\n  var segmentIndex = options.segmentIndex || 0;\n\n  // Find FeatureIndex\n  var properties = options.properties;\n  var geometry;\n\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      if (featureIndex < 0)\n        featureIndex = geojson.features.length + featureIndex;\n      properties = properties || geojson.features[featureIndex].properties;\n      geometry = geojson.features[featureIndex].geometry;\n      break;\n    case \"Feature\":\n      properties = properties || geojson.properties;\n      geometry = geojson.geometry;\n      break;\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n    case \"Polygon\":\n    case \"MultiLineString\":\n    case \"MultiPolygon\":\n      geometry = geojson;\n      break;\n    default:\n      throw new Error(\"geojson is invalid\");\n  }\n\n  // Find SegmentIndex\n  if (geometry === null) return null;\n  var coords = geometry.coordinates;\n  switch (geometry.type) {\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n      if (segmentIndex < 0) segmentIndex = coords.length + segmentIndex - 1;\n      return lineString(\n        [coords[segmentIndex], coords[segmentIndex + 1]],\n        properties,\n        options\n      );\n    case \"Polygon\":\n      if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n      if (segmentIndex < 0)\n        segmentIndex = coords[geometryIndex].length + segmentIndex - 1;\n      return lineString(\n        [\n          coords[geometryIndex][segmentIndex],\n          coords[geometryIndex][segmentIndex + 1],\n        ],\n        properties,\n        options\n      );\n    case \"MultiLineString\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (segmentIndex < 0)\n        segmentIndex = coords[multiFeatureIndex].length + segmentIndex - 1;\n      return lineString(\n        [\n          coords[multiFeatureIndex][segmentIndex],\n          coords[multiFeatureIndex][segmentIndex + 1],\n        ],\n        properties,\n        options\n      );\n    case \"MultiPolygon\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (geometryIndex < 0)\n        geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n      if (segmentIndex < 0)\n        segmentIndex =\n          coords[multiFeatureIndex][geometryIndex].length - segmentIndex - 1;\n      return lineString(\n        [\n          coords[multiFeatureIndex][geometryIndex][segmentIndex],\n          coords[multiFeatureIndex][geometryIndex][segmentIndex + 1],\n        ],\n        properties,\n        options\n      );\n  }\n  throw new Error(\"geojson is invalid\");\n}\n\n/**\n * Finds a particular Point from a GeoJSON using `@turf/meta` indexes.\n *\n * Negative indexes are permitted.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson Any GeoJSON Feature or Geometry\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.featureIndex=0] Feature Index\n * @param {number} [options.multiFeatureIndex=0] Multi-Feature Index\n * @param {number} [options.geometryIndex=0] Geometry Index\n * @param {number} [options.coordIndex=0] Coord Index\n * @param {Object} [options.properties={}] Translate Properties to output Point\n * @param {BBox} [options.bbox={}] Translate BBox to output Point\n * @param {number|string} [options.id={}] Translate Id to output Point\n * @returns {Feature<Point>} 2-vertex GeoJSON Feature Point\n * @example\n * var multiLine = turf.multiLineString([\n *     [[10, 10], [50, 30], [30, 40]],\n *     [[-10, -10], [-50, -30], [-30, -40]]\n * ]);\n *\n * // First Segment (defaults are 0)\n * turf.findPoint(multiLine);\n * // => Feature<Point<[10, 10]>>\n *\n * // First Segment of the 2nd Multi-Feature\n * turf.findPoint(multiLine, {multiFeatureIndex: 1});\n * // => Feature<Point<[-10, -10]>>\n *\n * // Last Segment of last Multi-Feature\n * turf.findPoint(multiLine, {multiFeatureIndex: -1, coordIndex: -1});\n * // => Feature<Point<[-30, -40]>>\n */\nfunction findPoint(geojson, options) {\n  // Optional Parameters\n  options = options || {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  var featureIndex = options.featureIndex || 0;\n  var multiFeatureIndex = options.multiFeatureIndex || 0;\n  var geometryIndex = options.geometryIndex || 0;\n  var coordIndex = options.coordIndex || 0;\n\n  // Find FeatureIndex\n  var properties = options.properties;\n  var geometry;\n\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      if (featureIndex < 0)\n        featureIndex = geojson.features.length + featureIndex;\n      properties = properties || geojson.features[featureIndex].properties;\n      geometry = geojson.features[featureIndex].geometry;\n      break;\n    case \"Feature\":\n      properties = properties || geojson.properties;\n      geometry = geojson.geometry;\n      break;\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n    case \"Polygon\":\n    case \"MultiLineString\":\n    case \"MultiPolygon\":\n      geometry = geojson;\n      break;\n    default:\n      throw new Error(\"geojson is invalid\");\n  }\n\n  // Find Coord Index\n  if (geometry === null) return null;\n  var coords = geometry.coordinates;\n  switch (geometry.type) {\n    case \"Point\":\n      return point(coords, properties, options);\n    case \"MultiPoint\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      return point(coords[multiFeatureIndex], properties, options);\n    case \"LineString\":\n      if (coordIndex < 0) coordIndex = coords.length + coordIndex;\n      return point(coords[coordIndex], properties, options);\n    case \"Polygon\":\n      if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n      if (coordIndex < 0)\n        coordIndex = coords[geometryIndex].length + coordIndex;\n      return point(coords[geometryIndex][coordIndex], properties, options);\n    case \"MultiLineString\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (coordIndex < 0)\n        coordIndex = coords[multiFeatureIndex].length + coordIndex;\n      return point(coords[multiFeatureIndex][coordIndex], properties, options);\n    case \"MultiPolygon\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (geometryIndex < 0)\n        geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n      if (coordIndex < 0)\n        coordIndex =\n          coords[multiFeatureIndex][geometryIndex].length - coordIndex;\n      return point(\n        coords[multiFeatureIndex][geometryIndex][coordIndex],\n        properties,\n        options\n      );\n  }\n  throw new Error(\"geojson is invalid\");\n}\n\nexport { coordAll, coordEach, coordReduce, featureEach, featureReduce, findPoint, findSegment, flattenEach, flattenReduce, geomEach, geomReduce, lineEach, lineReduce, propEach, propReduce, segmentEach, segmentReduce };\n","import { feature, featureCollection, point, } from \"@turf/helpers\";\nimport { getCoords } from \"@turf/invariant\";\nimport lineSegment from \"@turf/line-segment\";\nimport { featureEach } from \"@turf/meta\";\nimport rbush from \"geojson-rbush\";\n/**\n * Takes any LineString or Polygon GeoJSON and returns the intersecting point(s).\n *\n * @name lineIntersect\n * @param {GeoJSON} line1 any LineString or Polygon\n * @param {GeoJSON} line2 any LineString or Polygon\n * @returns {FeatureCollection<Point>} point(s) that intersect both\n * @example\n * var line1 = turf.lineString([[126, -11], [129, -21]]);\n * var line2 = turf.lineString([[123, -18], [131, -14]]);\n * var intersects = turf.lineIntersect(line1, line2);\n *\n * //addToMap\n * var addToMap = [line1, line2, intersects]\n */\nfunction lineIntersect(line1, line2) {\n    var unique = {};\n    var results = [];\n    // First, normalize geometries to features\n    // Then, handle simple 2-vertex segments\n    if (line1.type === \"LineString\") {\n        line1 = feature(line1);\n    }\n    if (line2.type === \"LineString\") {\n        line2 = feature(line2);\n    }\n    if (line1.type === \"Feature\" &&\n        line2.type === \"Feature\" &&\n        line1.geometry !== null &&\n        line2.geometry !== null &&\n        line1.geometry.type === \"LineString\" &&\n        line2.geometry.type === \"LineString\" &&\n        line1.geometry.coordinates.length === 2 &&\n        line2.geometry.coordinates.length === 2) {\n        var intersect = intersects(line1, line2);\n        if (intersect) {\n            results.push(intersect);\n        }\n        return featureCollection(results);\n    }\n    // Handles complex GeoJSON Geometries\n    var tree = rbush();\n    tree.load(lineSegment(line2));\n    featureEach(lineSegment(line1), function (segment) {\n        featureEach(tree.search(segment), function (match) {\n            var intersect = intersects(segment, match);\n            if (intersect) {\n                // prevent duplicate points https://github.com/Turfjs/turf/issues/688\n                var key = getCoords(intersect).join(\",\");\n                if (!unique[key]) {\n                    unique[key] = true;\n                    results.push(intersect);\n                }\n            }\n        });\n    });\n    return featureCollection(results);\n}\n/**\n * Find a point that intersects LineStrings with two coordinates each\n *\n * @private\n * @param {Feature<LineString>} line1 GeoJSON LineString (Must only contain 2 coordinates)\n * @param {Feature<LineString>} line2 GeoJSON LineString (Must only contain 2 coordinates)\n * @returns {Feature<Point>} intersecting GeoJSON Point\n */\nfunction intersects(line1, line2) {\n    var coords1 = getCoords(line1);\n    var coords2 = getCoords(line2);\n    if (coords1.length !== 2) {\n        throw new Error(\"<intersects> line1 must only contain 2 coordinates\");\n    }\n    if (coords2.length !== 2) {\n        throw new Error(\"<intersects> line2 must only contain 2 coordinates\");\n    }\n    var x1 = coords1[0][0];\n    var y1 = coords1[0][1];\n    var x2 = coords1[1][0];\n    var y2 = coords1[1][1];\n    var x3 = coords2[0][0];\n    var y3 = coords2[0][1];\n    var x4 = coords2[1][0];\n    var y4 = coords2[1][1];\n    var denom = (y4 - y3) * (x2 - x1) - (x4 - x3) * (y2 - y1);\n    var numeA = (x4 - x3) * (y1 - y3) - (y4 - y3) * (x1 - x3);\n    var numeB = (x2 - x1) * (y1 - y3) - (y2 - y1) * (x1 - x3);\n    if (denom === 0) {\n        if (numeA === 0 && numeB === 0) {\n            return null;\n        }\n        return null;\n    }\n    var uA = numeA / denom;\n    var uB = numeB / denom;\n    if (uA >= 0 && uA <= 1 && uB >= 0 && uB <= 1) {\n        var x = x1 + uA * (x2 - x1);\n        var y = y1 + uA * (y2 - y1);\n        return point([x, y]);\n    }\n    return null;\n}\nexport default lineIntersect;\n","/**\n * @module ol/Collection\n */\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n * @template T\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {T} element Element.\n   * @param {number} index The index of the added or removed element.\n   */\n  constructor(type, element, index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {T}\n     * @api\n     */\n    this.element = element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = index;\n  }\n}\n\n/***\n * @template T\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent<T>, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [array] Array.\n   * @param {Options} [options] Collection options.\n   */\n  constructor(array, options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<T, void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = array ? array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (index < 0 || index > this.getLength()) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    if (index < 0 || index >= this.getLength()) {\n      return undefined;\n    }\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index >= n) {\n      this.insertAt(index, elem);\n      return;\n    }\n    if (index < 0) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      )\n    );\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [except] Optional index to ignore.\n   */\n  assertUnique_(elem, except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== except) {\n        throw new Error('Duplicate item added to a unique collection');\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature.js';\n * import Polygon from 'ol/geom/Polygon.js';\n * import Point from 'ol/geom/Point.js';\n *\n * const feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon',\n * });\n *\n * // get the polygon geometry\n * const poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * const point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  }\n  /**\n   * @type {Array<import(\"./style/Style.js\").default>}\n   */\n  let styles;\n  if (Array.isArray(obj)) {\n    styles = obj;\n  } else {\n    assert(\n      typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n      'Expected an `ol/style/Style` or an array of `ol/style/Style.js`'\n    );\n    const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n    styles = [style];\n  }\n  return function () {\n    return styles;\n  };\n}\nexport default Feature;\n","/**\n * @module ol/Image\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport ImageState from './ImageState.js';\nimport {CREATE_IMAGE_BITMAP, IMAGE_DECODE} from './has.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport {toPromise} from './functions.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(import(\"./Image.js\").default, string): void} LoadFunction\n * @api\n */\n\n/**\n * @typedef {Object} ImageObject\n * @property {import(\"./extent.js\").Extent} [extent] Extent, if different from the requested one.\n * @property {import(\"./resolution.js\").ResolutionLike} [resolution] Resolution, if different from the requested one.\n * When x and y resolution are different, use the array type (`[xResolution, yResolution]`).\n * @property {number} [pixelRatio] Pixel ratio, if different from the requested one.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * For images that cover any extent and resolution (static images), the loader function should not accept\n * any arguments. The function returns an {@link import(\"./DataTile.js\").ImageLike image}, an\n * {@link import(\"./Image.js\").ImageObject image object}, or a promise for the same.\n * For loaders that generate images, the promise should not resolve until the image is loaded.\n * If the returned image does not match the extent, resolution or pixel ratio passed to the loader,\n * it has to return an {@link import(\"./Image.js\").ImageObject image object} with the `image` and the\n * correct `extent`, `resolution` and `pixelRatio`.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} Loader\n * @api\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * The function returns a promise for an  {@link import(\"./Image.js\").ImageObject image object}.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} ImageObjectPromiseLoader\n */\n\nclass ImageWrapper extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|Array<number>|undefined} resolution Resolution. If provided as array, x and y\n   * resolution will be assumed.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default|import(\"./Image.js\").Loader} stateOrLoader State.\n   */\n  constructor(extent, resolution, pixelRatio, stateOrLoader) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|Array<number>|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state =\n      typeof stateOrLoader === 'function' ? ImageState.IDLE : stateOrLoader;\n\n    /**\n     * @private\n     * @type {import('./DataTile.js').ImageLike|null}\n     */\n    this.image_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./Image.js\").Loader}\n     */\n    this.loader = typeof stateOrLoader === 'function' ? stateOrLoader : null;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @return {import('./DataTile.js').ImageLike} Image.\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number|Array<number>} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      if (this.loader) {\n        this.state = ImageState.LOADING;\n        this.changed();\n        const resolution = this.getResolution();\n        const requestResolution = Array.isArray(resolution)\n          ? resolution[0]\n          : resolution;\n        toPromise(() =>\n          this.loader(this.getExtent(), requestResolution, this.getPixelRatio())\n        )\n          .then((image) => {\n            if ('image' in image) {\n              this.image_ = image.image;\n            }\n            if ('extent' in image) {\n              this.extent = image.extent;\n            }\n            if ('resolution' in image) {\n              this.resolution = image.resolution;\n            }\n            if ('pixelRatio' in image) {\n              this.pixelRatio_ = image.pixelRatio;\n            }\n            if (\n              image instanceof HTMLImageElement ||\n              image instanceof ImageBitmap ||\n              image instanceof HTMLCanvasElement ||\n              image instanceof HTMLVideoElement\n            ) {\n              this.image_ = image;\n            }\n            this.state = ImageState.LOADED;\n          })\n          .catch((error) => {\n            this.state = ImageState.ERROR;\n            console.error(error); // eslint-disable-line no-console\n          })\n          .finally(() => this.changed());\n      }\n    }\n  }\n\n  /**\n   * @param {import('./DataTile.js').ImageLike} image The image.\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * @param {number|Array<number>} resolution Resolution.\n   */\n  setResolution(resolution) {\n    this.resolution = resolution;\n  }\n}\n\n/**\n * @param {import('./DataTile.js').ImageLike} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\n/**\n * Loads an image.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n * @api\n */\nexport function load(image, src) {\n  return new Promise((resolve, reject) => {\n    function handleLoad() {\n      unlisten();\n      resolve(image);\n    }\n    function handleError() {\n      unlisten();\n      reject(new Error('Image load error'));\n    }\n    function unlisten() {\n      image.removeEventListener('load', handleLoad);\n      image.removeEventListener('error', handleError);\n    }\n    image.addEventListener('load', handleLoad);\n    image.addEventListener('error', handleError);\n    if (src) {\n      image.src = src;\n    }\n  });\n}\n\n/**\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n */\nexport function decodeFallback(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE\n    ? new Promise((resolve, reject) =>\n        image\n          .decode()\n          .then(() => resolve(image))\n          .catch((e) =>\n            image.complete && image.width ? resolve(image) : reject(e)\n          )\n      )\n    : load(image);\n}\n\n/**\n * Loads an image and decodes it to an `ImageBitmap` if `createImageBitmap()` is supported. Returns\n * the loaded image otherwise.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<ImageBitmap|HTMLImageElement>} Promise resolving to an `ImageBitmap` or an\n * `HTMLImageElement` if `createImageBitmap()` is not supported.\n * @api\n */\nexport function decode(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE && CREATE_IMAGE_BITMAP\n    ? image\n        .decode()\n        .then(() => createImageBitmap(image))\n        .catch((e) => {\n          if (image.complete && image.width) {\n            return image;\n          }\n          throw e;\n        })\n    : decodeFallback(image);\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   *\n   * To retry loading tiles on failed requests, use a custom `tileLoadFunction`\n   * that checks for error status codes and reloads only when the status code is\n   * 408, 429, 500, 502, 503 and 504, and only when not too many retries have been\n   * made already:\n   *\n   * ```js\n   * const retryCodes = [408, 429, 500, 502, 503, 504];\n   * const retries = {};\n   * source.setTileLoadFunction((tile, src) => {\n   *   const image = tile.getImage();\n   *   fetch(src)\n   *     .then((response) => {\n   *       if (retryCodes.includes(response.status)) {\n   *         retries[src] = (retries[src] || 0) + 1;\n   *         if (retries[src] <= 3) {\n   *           setTimeout(() => tile.load(), retries[src] * 1000);\n   *         }\n   *         return Promise.reject();\n   *       }\n   *       return response.blob();\n   *     })\n   *     .then((blob) => {\n   *       const imageUrl = URL.createObjectURL(blob);\n   *       image.src = imageUrl;\n   *       setTimeout(() => URL.revokeObjectURL(imageUrl), 5000);\n   *     })\n   *     .catch(() => tile.setState(3)); // error\n   * });\n   * ```\n   *\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @template T\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../Map.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  flushDeclutterItems(frameState) {}\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../Map.js\").default} map Map.\n * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    this.declutterLayers_ = [];\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n\n    const declutterLayers = this.declutterLayers_;\n    declutterLayers.length = 0;\n\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != 'ready' && sourceState != 'undefined')\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(\n          /** @type {import(\"../layer/BaseVector.js\").default} */ (layer)\n        );\n      }\n    }\n    this.flushDeclutterItems(frameState);\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  flushDeclutterItems(frameState) {\n    const layers = this.declutterLayers_;\n    for (let i = layers.length - 1; i >= 0; --i) {\n      layers[i].renderDeclutter(frameState);\n    }\n    layers.length = 0;\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [dragging] Is the map currently being dragged?\n   * @param {import(\"./Map.js\").FrameState} [frameState] Frame state.\n   * @param {Array<PointerEvent>} [activePointers] Active pointers.\n   */\n  constructor(type, map, originalEvent, dragging, frameState, activePointers) {\n    super(type, map, frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = dragging !== undefined ? dragging : false;\n\n    /**\n     * @type {Array<PointerEvent>|undefined}\n     */\n    this.activePointers = activePointers;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./Map.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./Map.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {ReturnType<typeof setTimeout>}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @private\n     */\n    this.activePointers_ = [];\n\n    /**\n     * @type {!Object<number, Event>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayMoveEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(() => {\n        this.clickTimeoutId_ = undefined;\n        const newEvent = new MapBrowserEvent(\n          MapBrowserEventType.SINGLECLICK,\n          this.map_,\n          pointerEvent\n        );\n        this.dispatchEvent(newEvent);\n      }, 250);\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n    const id = event.pointerId;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[id];\n      for (const pointerId in this.trackedTouches_) {\n        if (this.trackedTouches_[pointerId].target !== event.target) {\n          // Some platforms assign a new pointerId when the target changes.\n          // If this happens, delete one tracked pointer. If there is more\n          // than one tracked pointer for the old target, it will be cleared\n          // by subsequent POINTERUP events from other pointers.\n          delete this.trackedTouches_[pointerId];\n          break;\n        }\n      }\n    } else if (\n      event.type == MapBrowserEventType.POINTERDOWN ||\n      event.type == MapBrowserEventType.POINTERMOVE\n    ) {\n      this.trackedTouches_[id] = event;\n    }\n    this.activePointers_ = Object.values(this.trackedTouches_);\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_.length === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_.length === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    this.down_ = new PointerEvent(pointerEvent.type, pointerEvent);\n    Object.defineProperty(this.down_, 'target', {\n      writable: false,\n      value: pointerEvent.target,\n    });\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.updateActivePointers_(pointerEvent);\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_,\n        undefined,\n        this.activePointers_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointermove event.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayMoveEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(\n        MapBrowserEventType.POINTERMOVE,\n        this.map_,\n        pointerEvent,\n        dragging\n      )\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events,\n    // when elm-pep is used as pointer events polyfill.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/MapEvent~MapEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/MapEvent~MapEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = /** @type {T} */ (elements.pop());\n      priorities[0] = /** @type {number} */ (priorities.pop());\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(\n      !(this.keyFunction_(element) in this.queuedElements_),\n      'Tried to enqueue an `element` that was already added to the queue'\n    );\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * const myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [options] Attribution options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    const visibleAttributions = Array.from(\n      new Set(\n        this.getMap()\n          .getAllLayers()\n          .flatMap((layer) => layer.getAttributions(frameState))\n      )\n    );\n\n    const collapsible = !this.getMap()\n      .getAllLayers()\n      .some(\n        (layer) =>\n          layer.getSource() &&\n          layer.getSource().getAttributionsCollapsible() === false\n      );\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [options] Rotate options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [options] Zoom options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/Map\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport EventType from './events/EventType.js';\nimport Layer from './layer/Layer.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals as equalsExtent,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {defaults as defaultControls} from './control/defaults.js';\nimport {defaults as defaultInteractions} from './interaction/defaults.js';\nimport {equals} from './array.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {getUid} from './util.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\nimport {warn} from './console.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent (in view projection coordinates).\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(Map, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} MapEventHandler\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/defaults.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction/defaults.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * **Note:** CSS `transform` support for the target element is limited to `scale`.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {Map} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map.js';\n *     import View from 'ol/View.js';\n *     import TileLayer from 'ol/layer/Tile.js';\n *     import OSM from 'ol/source/OSM.js';\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM(),\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass Map extends BaseObject {\n  /**\n   * @param {MapOptions} [options] Map options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MapEventHandler<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.renderComplete_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.loaded_ = true;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = this.animationDelay_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @private\n     * @type {HTMLElement|null}\n     */\n    this.targetElement_ = null;\n\n    /**\n     * @type {ResizeObserver}\n     */\n    this.resizeObserver_ = new ResizeObserver(() => this.updateSize());\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || defaultControls();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions =\n      optionsInternal.interactions ||\n      defaultInteractions({\n        onFocusOnly: true,\n      });\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default|null}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent\n       */\n      (event) => {\n        event.element.setMap(this);\n      }\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      }\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(this);\n      }\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      }\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        this.addOverlayInternal_(event.element);\n      }\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        const id = event.element.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       */\n      (control) => {\n        control.setMap(this);\n      }\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       */\n      (interaction) => {\n        interaction.setMap(this);\n      }\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteractions()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.controls.clear();\n    this.interactions.clear();\n    this.overlays_.clear();\n    this.resizeObserver_.disconnect();\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      options\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through the `layerFilter` option.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent|{clientX: number, clientY: number}} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewport = this.viewport_;\n    const viewportPosition = viewport.getBoundingClientRect();\n    const viewportSize = this.getSize();\n    const scaleX = viewportPosition.width / viewportSize[0];\n    const scaleY = viewportPosition.height / viewportSize[1];\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      (eventPosition.clientX - viewportPosition.left) / scaleX,\n      (eventPosition.clientY - viewportPosition.top) / scaleY,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    return this.targetElement_;\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const state = layerStatesArray[i];\n      if (!state.visible) {\n        continue;\n      }\n      const renderer = state.layer.getRenderer();\n      if (renderer && !renderer.ready) {\n        return true;\n      }\n      const source = state.layer.getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice(0, 2)\n    );\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [type] Type.\n   */\n  handleBrowserEvent(browserEvent, type) {\n    type = type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.renderer_ && !frameState.animate) {\n      if (this.renderComplete_ === true) {\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n          this.renderer_.dispatchRenderEvent(\n            RenderEventType.RENDERCOMPLETE,\n            frameState\n          );\n        }\n        if (this.loaded_ === false) {\n          this.loaded_ = true;\n          this.dispatchEvent(\n            new MapEvent(MapEventType.LOADEND, this, frameState)\n          );\n        }\n      } else if (this.loaded_ === true) {\n        this.loaded_ = false;\n        this.dispatchEvent(\n          new MapEvent(MapEventType.LOADSTART, this, frameState)\n        );\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    if (this.targetElement_) {\n      this.resizeObserver_.unobserve(this.targetElement_);\n      const rootNode = this.targetElement_.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.unobserve(rootNode.host);\n      }\n      this.setSize(undefined);\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const target = this.getTarget();\n    const targetElement =\n      typeof target === 'string' ? document.getElementById(target) : target;\n    this.targetElement_ = targetElement;\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = new CompositeMapRenderer(this);\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n      ];\n      const rootNode = targetElement.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.observe(rootNode.host);\n      }\n      this.resizeObserver_.observe(targetElement);\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_(this.getSize());\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * @private\n   */\n  animationDelay_() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_(Date.now());\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * This method is meant to be called in a layer's `prerender` listener. It causes all collected\n   * declutter items to be decluttered and rendered on the map immediately. This is useful for\n   * layers that need to appear entirely above the decluttered items of layers lower in the layer\n   * stack.\n   * @api\n   */\n  flushDeclutterItems() {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return;\n    }\n    this.renderer_.flushDeclutterItems(frameState);\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equalsExtent(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equalsExtent(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      this.hasListener(MapEventType.LOADSTART) ||\n      this.hasListener(MapEventType.LOADEND) ||\n      this.hasListener(RenderEventType.RENDERCOMPLETE)\n        ? !this.tileQueue_.getTilesLoading() &&\n          !this.tileQueue_.getCount() &&\n          !this.getLoadingOrNotReady()\n        : undefined;\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          warn(\n            \"No map visible because the map container's width or height are 0.\"\n          );\n        }\n      }\n    }\n\n    const oldSize = this.getSize();\n    if (size && (!oldSize || !equals(size, oldSize))) {\n      this.setSize(size);\n      this.updateViewportSize_(size);\n    }\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @param {import(\"./size.js\").Size|undefined} size The size.\n   * @private\n   */\n  updateViewportSize_(size) {\n    const view = this.getView();\n    if (view) {\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({\n          layers:\n            /** @type {Collection<import(\"./layer/Base.js\").default>|Array<import(\"./layer/Base.js\").default>} */ (\n              options.layers\n            ),\n        });\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  /** @type {Collection<import(\"./control/Control.js\").default>} */\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        'Expected `controls` to be an array or an `ol/Collection.js`'\n      );\n      controls = options.controls;\n    }\n  }\n\n  /** @type {Collection<import(\"./interaction/Interaction\").default>} */\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        'Expected `interactions` to be an array or an `ol/Collection.js`'\n      );\n      interactions = options.interactions;\n    }\n  }\n\n  /** @type {Collection<import(\"./Overlay.js\").default>} */\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        'Expected `overlays` to be an array or an `ol/Collection.js`'\n      );\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default Map;\n","/**\n * @module ol/control/defaults\n */\nimport Attribution from './Attribution.js';\nimport Collection from '../Collection.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [options] Options for the default controls.\n * @return {Collection<import(\"./Control.js\").default>} A collection of controls\n * to be used with the {@link module:ol/Map~Map} constructor's `controls` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Control.js\").default>} */\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {?import(\"./Map.js\").FrameState} [frameState] Frame state.\n   */\n  constructor(type, map, frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./Map.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./Map.js\").FrameState}\n     * @api\n     */\n    this.frameState = frameState !== undefined ? frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {getUid} from './util.js';\nimport {isEmpty} from './obj.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>|null}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.values_;\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    }\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState.js';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   const xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     const data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile|null}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {\n    if (this.state === TileState.ERROR) {\n      // to remove the `change` listener on this tile in `ol/TileQueue#handleTileChange`\n      this.setState(TileState.EMPTY);\n    }\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    let tile = this.interimTile;\n    if (!tile) {\n      //empty chain\n      return this;\n    }\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    let tile = this.interimTile;\n    if (!tile) {\n      return;\n    }\n\n    /** @type {Tile} */\n    let prev = this;\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      }\n      if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  }\n  return new TileRange(minX, maxX, minY, maxY);\n}\n\nexport default TileRange;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  equals,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to\n * fit the extent into. Defaults to the size of the map the view is associated with.\n * If no map or multiple maps are connected to the view, provide the desired box size\n * (e.g. `map.getSize()`).\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center (in view projection coordinates).\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Like {@link import(\"./Map.js\").FrameState}, but just `viewState` and `extent`.\n * @typedef {Object} ViewStateLayerStateExtent\n * @property {State} viewState View state.\n * @property {import(\"./extent.js\").Extent} extent Extent (in user projection coordinates).\n * @property {Array<import(\"./layer/Layer.js\").State>} [layerStatesArray] Layer states.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenterInternal();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    }\n    return this.hints_.slice();\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed box size.\n   * @param {import(\"./size.js\").Size} [size] The pixel dimensions of the box\n   * into which the calculated extent should fit. Defaults to the size of the\n   * map the view is associated with.\n   * If no map or multiple maps are connected to the view, provide the desired\n   * box size (e.g. `map.getSize()`).\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 'The view center is not defined');\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 'The view resolution is not defined');\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 'The view rotation is not defined');\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * @return {ViewStateLayerStateExtent} Like `FrameState`, but just `viewState` and `extent`.\n   */\n  getViewStateAndExtent() {\n    return {\n      viewState: this.getState(),\n      extent: this.calculateExtent(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    }\n    return (\n      this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n    );\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      'Invalid extent or geometry provided as `geometry`'\n    );\n    if (Array.isArray(geometryOrExtent)) {\n      assert(\n        !isEmpty(geometryOrExtent),\n        'Cannot fit empty extent provided as `geometry`'\n      );\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    if (!this.getInteracting()) {\n      return;\n    }\n    this.setHint(ViewHint.INTERACTING, -1);\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    }\n    if (constrainRotation === false) {\n      return rotationNone;\n    }\n    if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    }\n    return rotationNone;\n  }\n  return disable;\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || ascending;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function sorting arrays in ascending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function ascending(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Compare function sorting arrays in descending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is greater than, equal to, or less than the second.\n */\nexport function descending(a, b) {\n  return a < b ? 1 : a > b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  if (arr[0] <= target) {\n    return 0;\n  }\n\n  const n = arr.length;\n  if (target <= arr[n - 1]) {\n    return n - 1;\n  }\n\n  if (typeof direction === 'function') {\n    for (let i = 1; i < n; ++i) {\n      const candidate = arr[i];\n      if (candidate === target) {\n        return i;\n      }\n      if (candidate < target) {\n        if (direction(target, arr[i - 1], candidate) > 0) {\n          return i - 1;\n        }\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction > 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] < target) {\n        return i - 1;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction < 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] <= target) {\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  for (let i = 1; i < n; ++i) {\n    if (arr[i] == target) {\n      return i;\n    }\n    if (arr[i] < target) {\n      if (arr[i - 1] - target < target - arr[i]) {\n        return i - 1;\n      }\n      return i;\n    }\n  }\n  return n - 1;\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<any>|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array<any>|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || ascending;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/asserts\n */\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {string} errorMessage Error message.\n */\nexport function assert(assertion, errorMessage) {\n  if (!assertion) {\n    throw new Error(errorMessage);\n  }\n}\n","/**\n * RGB space.\n *\n * @module  color-space/rgb\n */\n\nexport default {\n\tname: 'rgb',\n\tmin: [0,0,0],\n\tmax: [255,255,255],\n\tchannel: ['red', 'green', 'blue'],\n\talias: ['RGB']\n};\n","/**\n * CIE XYZ\n *\n * @module  color-space/xyz\n */\nimport rgb from './rgb.js';\n\nvar xyz = {\n\tname: 'xyz',\n\tmin: [0,0,0],\n\tchannel: ['X','Y','Z'],\n\talias: ['XYZ', 'ciexyz', 'cie1931']\n};\n\n\n/**\n * Whitepoint reference values with observer/illuminant\n *\n * http://en.wikipedia.org/wiki/Standard_illuminant\n */\nxyz.whitepoint = {\n\t//1931 2°\n\t2: {\n\t\t//incadescent\n\t\tA:[109.85, 100, 35.585],\n\t\t// B:[],\n\t\tC: [98.074, 100, 118.232],\n\t\tD50: [96.422, 100, 82.521],\n\t\tD55: [95.682, 100, 92.149],\n\t\t//daylight\n\t\tD65: [95.045592705167, 100, 108.9057750759878],\n\t\tD75: [94.972, 100, 122.638],\n\t\t//flourescent\n\t\t// F1: [],\n\t\tF2: [99.187, 100, 67.395],\n\t\t// F3: [],\n\t\t// F4: [],\n\t\t// F5: [],\n\t\t// F6:[],\n\t\tF7: [95.044, 100, 108.755],\n\t\t// F8: [],\n\t\t// F9: [],\n\t\t// F10: [],\n\t\tF11: [100.966, 100, 64.370],\n\t\t// F12: [],\n\t\tE: [100,100,100]\n\t},\n\n\t//1964  10°\n\t10: {\n\t\t//incadescent\n\t\tA:[111.144, 100, 35.200],\n\t\tC: [97.285, 100, 116.145],\n\t\tD50: [96.720, 100, 81.427],\n\t\tD55: [95.799, 100, 90.926],\n\t\t//daylight\n\t\tD65: [94.811, 100, 107.304],\n\t\tD75: [94.416, 100, 120.641],\n\t\t//flourescent\n\t\tF2: [103.280, 100, 69.026],\n\t\tF7: [95.792, 100, 107.687],\n\t\tF11: [103.866, 100, 65.627],\n\t\tE: [100,100,100]\n\t}\n};\n\n\n/**\n * Top values are the whitepoint’s top values, default are D65\n */\nxyz.max = xyz.whitepoint[2].D65;\n\n\n/**\n * Transform xyz to rgb\n *\n * @param {Array} xyz Array of xyz values\n *\n * @return {Array} RGB values\n */\nxyz.rgb = function (_xyz, white) {\n\t//FIXME: make sure we have to divide like this. Probably we have to replace matrix as well then\n\twhite = white || xyz.whitepoint[2].E;\n\n\tvar x = _xyz[0] / white[0],\n\t\ty = _xyz[1] / white[1],\n\t\tz = _xyz[2] / white[2],\n\t\tr, g, b;\n\n\t// assume sRGB\n\t// http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\n\tr = (x * 3.240969941904521) + (y * -1.537383177570093) + (z * -0.498610760293);\n\tg = (x * -0.96924363628087) + (y * 1.87596750150772) + (z * 0.041555057407175);\n\tb = (x * 0.055630079696993) + (y * -0.20397695888897) + (z * 1.056971514242878);\n\n\tr = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n\t\t: r = (r * 12.92);\n\n\tg = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n\t\t: g = (g * 12.92);\n\n\tb = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n\t\t: b = (b * 12.92);\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n}\n\n\n\n/**\n * RGB to XYZ\n *\n * @param {Array} rgb RGB channels\n *\n * @return {Array} XYZ channels\n */\nrgb.xyz = function(rgb, white) {\n\tvar r = rgb[0] / 255,\n\t\t\tg = rgb[1] / 255,\n\t\t\tb = rgb[2] / 255;\n\n\t// assume sRGB\n\tr = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n\tvar x = (r * 0.41239079926595) + (g * 0.35758433938387) + (b * 0.18048078840183);\n\tvar y = (r * 0.21263900587151) + (g * 0.71516867876775) + (b * 0.072192315360733);\n\tvar z = (r * 0.019330818715591) + (g * 0.11919477979462) + (b * 0.95053215224966);\n\n\twhite = white || xyz.whitepoint[2].E;\n\n\treturn [x * white[0], y * white[1], z * white[2]];\n};\n\n\n\nexport default xyz;\n","/**\n * CIE LUV (C'est la vie)\n *\n * @module color-space/luv\n */\n import xyz from './xyz.js';\n\nexport default {\n\tname: 'luv',\n\t//NOTE: luv has no rigidly defined limits\n\t//easyrgb fails to get proper coords\n\t//boronine states no rigid limits\n\t//colorMine refers this ones:\n\tmin: [0,-134,-140],\n\tmax: [100,224,122],\n\tchannel: ['lightness', 'u', 'v'],\n\talias: ['LUV', 'cieluv', 'cie1976'],\n\n\txyz: function(arg, i, o){\n\t\tvar _u, _v, l, u, v, x, y, z, xn, yn, zn, un, vn;\n\t\tl = arg[0], u = arg[1], v = arg[2];\n\n\t\tif (l === 0) return [0,0,0];\n\n\t\t//get constants\n\t\t//var e = 0.008856451679035631; //(6/29)^3\n\t\tvar k = 0.0011070564598794539; //(3/29)^3\n\n\t\t//get illuminant/observer\n\t\ti = i || 'D65';\n\t\to = o || 2;\n\n\t\txn = xyz.whitepoint[o][i][0];\n\t\tyn = xyz.whitepoint[o][i][1];\n\t\tzn = xyz.whitepoint[o][i][2];\n\n\t\tun = (4 * xn) / (xn + (15 * yn) + (3 * zn));\n\t\tvn = (9 * yn) / (xn + (15 * yn) + (3 * zn));\n\t\t// un = 0.19783000664283;\n\t\t// vn = 0.46831999493879;\n\n\n\t\t_u = u / (13 * l) + un || 0;\n\t\t_v = v / (13 * l) + vn || 0;\n\n\t\ty = l > 8 ? yn * Math.pow( (l + 16) / 116 , 3) : yn * l * k;\n\n\t\t//wikipedia method\n\t\tx = y * 9 * _u / (4 * _v) || 0;\n\t\tz = y * (12 - 3 * _u - 20 * _v) / (4 * _v) || 0;\n\n\t\t//boronine method\n\t\t//https://github.com/boronine/husl/blob/master/husl.coffee#L201\n\t\t// x = 0 - (9 * y * _u) / ((_u - 4) * _v - _u * _v);\n\t\t// z = (9 * y - (15 * _v * y) - (_v * x)) / (3 * _v);\n\n\t\treturn [x, y, z];\n\t}\n};\n\n// http://www.brucelindbloom.com/index.html?Equations.html\n// https://github.com/boronine/husl/blob/master/husl.coffee\n//i - illuminant\n//o - observer\nxyz.luv = function(arg, i, o) {\n\tvar _u, _v, l, u, v, x, y, z, xn, yn, zn, un, vn;\n\n\t//get constants\n\tvar e = 0.008856451679035631; //(6/29)^3\n\tvar k = 903.2962962962961; //(29/3)^3\n\n\t//get illuminant/observer coords\n\ti = i || 'D65';\n\to = o || 2;\n\n\txn = xyz.whitepoint[o][i][0];\n\tyn = xyz.whitepoint[o][i][1];\n\tzn = xyz.whitepoint[o][i][2];\n\n\tun = (4 * xn) / (xn + (15 * yn) + (3 * zn));\n\tvn = (9 * yn) / (xn + (15 * yn) + (3 * zn));\n\n\n\tx = arg[0], y = arg[1], z = arg[2];\n\n\n\t_u = (4 * x) / (x + (15 * y) + (3 * z)) || 0;\n\t_v = (9 * y) / (x + (15 * y) + (3 * z)) || 0;\n\n\tvar yr = y/yn;\n\n\tl = yr <= e ? k * yr : 116 * Math.pow(yr, 1/3) - 16;\n\n\tu = 13 * l * (_u - un);\n\tv = 13 * l * (_v - vn);\n\n\treturn [l, u, v];\n};\n","/**\n * Cylindrical CIE LUV\n *\n * @module color-space/lchuv\n */\nimport luv from './luv.js';\nimport xyz from './xyz.js';\n\n//cylindrical luv\nvar lchuv = {\n\tname: 'lchuv',\n\tchannel: ['lightness', 'chroma', 'hue'],\n\talias: ['LCHuv', 'cielchuv'],\n\tmin: [0,0,0],\n\tmax: [100,100,360],\n\n\tluv: function(luv){\n\t\tvar l = luv[0],\n\t\tc = luv[1],\n\t\th = luv[2],\n\t\tu, v, hr;\n\n\t\thr = h / 360 * 2 * Math.PI;\n\t\tu = c * Math.cos(hr);\n\t\tv = c * Math.sin(hr);\n\t\treturn [l, u, v];\n\t},\n\n\txyz: function(arg) {\n\t\treturn luv.xyz(lchuv.luv(arg));\n\t}\n};\n\nexport default lchuv;\n\nluv.lchuv = function(luv){\n\tvar l = luv[0], u = luv[1], v = luv[2];\n\n\tvar c = Math.sqrt(u*u + v*v);\n\tvar hr = Math.atan2(v,u);\n\tvar h = hr * 360 / 2 / Math.PI;\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\treturn [l,c,h]\n};\n\nxyz.lchuv = function(arg){\n  return luv.lchuv(xyz.luv(arg));\n};\n","/**\n * @module color-parse\n */\nimport names from 'color-name'\n\nexport default parse\n\n/**\n * Base hues\n * http://dev.w3.org/csswg/css-color/#typedef-named-hue\n */\n//FIXME: use external hue detector\nvar baseHues = {\n\tred: 0,\n\torange: 60,\n\tyellow: 120,\n\tgreen: 180,\n\tblue: 240,\n\tpurple: 300\n}\n\n/**\n * Parse color from the string passed\n *\n * @return {Object} A space indicator `space`, an array `values` and `alpha`\n */\nfunction parse(cstr) {\n\tvar m, parts = [], alpha = 1, space\n\n\t//numeric case\n\tif (typeof cstr === 'number') {\n\t\treturn { space: 'rgb', values: [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff], alpha: 1 }\n\t}\n\tif (typeof cstr === 'number') return { space: 'rgb', values: [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff], alpha: 1 }\n\n\tcstr = String(cstr).toLowerCase();\n\n\t//keyword\n\tif (names[cstr]) {\n\t\tparts = names[cstr].slice()\n\t\tspace = 'rgb'\n\t}\n\n\t//reserved words\n\telse if (cstr === 'transparent') {\n\t\talpha = 0\n\t\tspace = 'rgb'\n\t\tparts = [0, 0, 0]\n\t}\n\n\t//hex\n\telse if (cstr[0] === '#') {\n\t\tvar base = cstr.slice(1)\n\t\tvar size = base.length\n\t\tvar isShort = size <= 4\n\t\talpha = 1\n\n\t\tif (isShort) {\n\t\t\tparts = [\n\t\t\t\tparseInt(base[0] + base[0], 16),\n\t\t\t\tparseInt(base[1] + base[1], 16),\n\t\t\t\tparseInt(base[2] + base[2], 16)\n\t\t\t]\n\t\t\tif (size === 4) {\n\t\t\t\talpha = parseInt(base[3] + base[3], 16) / 255\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tparts = [\n\t\t\t\tparseInt(base[0] + base[1], 16),\n\t\t\t\tparseInt(base[2] + base[3], 16),\n\t\t\t\tparseInt(base[4] + base[5], 16)\n\t\t\t]\n\t\t\tif (size === 8) {\n\t\t\t\talpha = parseInt(base[6] + base[7], 16) / 255\n\t\t\t}\n\t\t}\n\n\t\tif (!parts[0]) parts[0] = 0\n\t\tif (!parts[1]) parts[1] = 0\n\t\tif (!parts[2]) parts[2] = 0\n\n\t\tspace = 'rgb'\n\t}\n\n\t// color space\n\telse if (m = /^((?:rgba?|hs[lvb]a?|hwba?|cmyk?|xy[zy]|gray|lab|lchu?v?|[ly]uv|lms|oklch|oklab|color))\\s*\\(([^\\)]*)\\)/.exec(cstr)) {\n\t\tvar name = m[1]\n\t\tspace = name.replace(/a$/, '')\n\t\tvar dims = space === 'cmyk' ? 4 : space === 'gray' ? 1 : 3\n\t\tparts = m[2].trim().split(/\\s*[,\\/]\\s*|\\s+/)\n\n\t\t// color(srgb-linear x x x) -> srgb-linear(x x x)\n\t\tif (space === 'color') space = parts.shift()\n\n\t\tparts = parts.map(function (x, i) {\n\t\t\t//<percentage>\n\t\t\tif (x[x.length - 1] === '%') {\n\t\t\t\tx = parseFloat(x) / 100\n\t\t\t\t// alpha -> 0..1\n\t\t\t\tif (i === 3) return x\n\t\t\t\t// rgb -> 0..255\n\t\t\t\tif (space === 'rgb') return x * 255\n\t\t\t\t// hsl, hwb H -> 0..100\n\t\t\t\tif (space[0] === 'h') return x * 100\n\t\t\t\t// lch, lab L -> 0..100\n\t\t\t\tif (space[0] === 'l' && !i) return x * 100\n\t\t\t\t// lab A B -> -125..125\n\t\t\t\tif (space === 'lab') return x * 125\n\t\t\t\t// lch C -> 0..150, H -> 0..360\n\t\t\t\tif (space === 'lch') return i < 2 ? x * 150 : x * 360\n\t\t\t\t// oklch/oklab L -> 0..1\n\t\t\t\tif (space[0] === 'o' && !i) return x\n\t\t\t\t// oklab A B -> -0.4..0.4\n\t\t\t\tif (space === 'oklab') return x * 0.4\n\t\t\t\t// oklch C -> 0..0.4, H -> 0..360\n\t\t\t\tif (space === 'oklch') return i < 2 ? x * 0.4 : x * 360\n\t\t\t\t// color(xxx) -> 0..1\n\t\t\t\treturn x\n\t\t\t}\n\n\t\t\t//hue\n\t\t\tif (space[i] === 'h' || (i === 2 && space[space.length - 1] === 'h')) {\n\t\t\t\t//<base-hue>\n\t\t\t\tif (baseHues[x] !== undefined) return baseHues[x]\n\t\t\t\t//<deg>\n\t\t\t\tif (x.endsWith('deg')) return parseFloat(x)\n\t\t\t\t//<turn>\n\t\t\t\tif (x.endsWith('turn')) return parseFloat(x) * 360\n\t\t\t\tif (x.endsWith('grad')) return parseFloat(x) * 360 / 400\n\t\t\t\tif (x.endsWith('rad')) return parseFloat(x) * 180 / Math.PI\n\t\t\t}\n\t\t\tif (x === 'none') return 0\n\t\t\treturn parseFloat(x)\n\t\t});\n\n\t\talpha = parts.length > dims ? parts.pop() : 1\n\t}\n\n\t//named channels case\n\telse if (/[0-9](?:\\s|\\/|,)/.test(cstr)) {\n\t\tparts = cstr.match(/([0-9]+)/g).map(function (value) {\n\t\t\treturn parseFloat(value)\n\t\t})\n\n\t\tspace = cstr.match(/([a-z])/ig)?.join('')?.toLowerCase() || 'rgb'\n\t}\n\n\treturn {\n\t\tspace,\n\t\tvalues: parts,\n\t\talpha\n\t}\n}\n","/**\n * @module color-space/hsl\n */\nimport rgb from './rgb.js';\n\nexport default {\n\tname: 'hsl',\n\tmin: [0,0,0],\n\tmax: [360,100,100],\n\tchannel: ['hue', 'saturation', 'lightness'],\n\talias: ['HSL'],\n\n\trgb: function(hsl) {\n\t\tvar h = hsl[0]/360, s = hsl[1]/100, l = hsl[2]/100, t1, t2, t3, rgb, val, i=0;\n\n\t\tif (s === 0) return val = l * 255, [val, val, val];\n\n\t\tt2 = l < 0.5 ? l * (1 + s) : l + s - l * s;\n\t\tt1 = 2 * l - t2;\n\n\t\trgb = [0, 0, 0];\n\t\tfor (;i<3;) {\n\t\t\tt3 = h + 1 / 3 * - (i - 1);\n\t\t\tt3 < 0 ? t3++ : t3 > 1 && t3--;\n\t\t\tval = 6 * t3 < 1 ? t1 + (t2 - t1) * 6 * t3 :\n\t\t\t2 * t3 < 1 ? t2 :\n\t\t\t3 * t3 < 2 ?  t1 + (t2 - t1) * (2 / 3 - t3) * 6 :\n\t\t\tt1;\n\t\t\trgb[i++] = val * 255;\n\t\t}\n\n\t\treturn rgb;\n\t}\n};\n\n\n//extend rgb\nrgb.hsl = function(rgb) {\n\tvar r = rgb[0]/255,\n\t\t\tg = rgb[1]/255,\n\t\t\tb = rgb[2]/255,\n\t\t\tmin = Math.min(r, g, b),\n\t\t\tmax = Math.max(r, g, b),\n\t\t\tdelta = max - min,\n\t\t\th, s, l;\n\n\tif (max === min) {\n\t\th = 0;\n\t}\n\telse if (r === max) {\n\t\th = (g - b) / delta;\n\t}\n\telse if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t}\n\telse if (b === max) {\n\t\th = 4 + (r - g)/ delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tl = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t}\n\telse if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t}\n\telse {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n","/**\n * @module ol/color\n */\nimport lchuv from 'color-space/lchuv.js';\nimport parseRgba from 'color-rgba';\nimport rgb from 'color-space/rgb.js';\nimport xyz from 'color-space/xyz.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  }\n  return toString(color);\n}\n\n/**\n * @type {number}\n */\nconst MAX_CACHE_SIZE = 1024;\n\n/**\n * We maintain a small cache of parsed strings.  Whenever the cache grows too large,\n * we delete an arbitrary set of the entries.\n *\n * @type {Object<string, Color>}\n */\nconst cache = {};\n\n/**\n * @type {number}\n */\nlet cacheSize = 0;\n\n/**\n * @param {Color} color A color that may or may not have an alpha channel.\n * @return {Color} The input color with an alpha channel.  If the input color has\n * an alpha channel, the input color will be returned unchanged.  Otherwise, a new\n * array will be returned with the input color and an alpha channel of 1.\n */\nexport function withAlpha(color) {\n  if (color.length === 4) {\n    return color;\n  }\n  const output = color.slice();\n  output[3] = 1;\n  return output;\n}\n\n/**\n * @param {Color} color RGBA color.\n * @return {Color} LCHuv color with alpha.\n */\nexport function rgbaToLcha(color) {\n  const output = xyz.lchuv(rgb.xyz(color));\n  output[3] = color[3];\n  return output;\n}\n\n/**\n * @param {Color} color LCHuv color with alpha.\n * @return {Color} RGBA color.\n */\nexport function lchaToRgba(color) {\n  const output = xyz.rgb(lchuv.xyz(color));\n  output[3] = color[3];\n  return output;\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport function fromString(s) {\n  if (cache.hasOwnProperty(s)) {\n    return cache[s];\n  }\n  if (cacheSize >= MAX_CACHE_SIZE) {\n    let i = 0;\n    for (const key in cache) {\n      if ((i++ & 3) === 0) {\n        delete cache[key];\n        --cacheSize;\n      }\n    }\n  }\n\n  const color = parseRgba(s);\n  if (color.length !== 4) {\n    throw new Error('Failed to parse \"' + s + '\" as color');\n  }\n  for (const c of color) {\n    if (isNaN(c)) {\n      throw new Error('Failed to parse \"' + s + '\" as color');\n    }\n  }\n  normalize(color);\n  cache[s] = color;\n  ++cacheSize;\n  return color;\n}\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  }\n  return fromString(color);\n}\n\n/**\n * Exported for the tests.\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 100) / 100;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  try {\n    fromString(s);\n    return true;\n  } catch (_) {\n    return false;\n  }\n}\n","/** @module  color-rgba */\nimport parse from 'color-parse'\nimport rgb from 'color-space/rgb.js'\nimport hsl from 'color-space/hsl.js'\n\nexport default function rgba(color) {\n\t// template literals\n\tif (Array.isArray(color) && color.raw) color = String.raw(...arguments)\n\tif (color instanceof Number) color = +color\n\n\tvar values, i, l\n\n\t//attempt to parse non-array arguments\n\tvar parsed = parse(color)\n\n\tif (!parsed.space) return []\n\n\tconst min = parsed.space[0] === 'h' ? hsl.min : rgb.min\n\tconst max = parsed.space[0] === 'h' ? hsl.max : rgb.max\n\n\tvalues = Array(3)\n\tvalues[0] = Math.min(Math.max(parsed.values[0], min[0]), max[0])\n\tvalues[1] = Math.min(Math.max(parsed.values[1], min[1]), max[1])\n\tvalues[2] = Math.min(Math.max(parsed.values[2], min[2]), max[2])\n\n\tif (parsed.space[0] === 'h') {\n\t\tvalues = hsl.rgb(values)\n\t}\n\n\tvalues.push(Math.min(Math.max(parsed.alpha, 0), 1))\n\n\treturn values\n}\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  }\n  return color;\n}\n","/**\n * @module ol/console\n */\n\n/**\n * @typedef {'info'|'warn'|'error'|'none'} Level\n */\n\n/**\n * @type {Object<Level, number>}\n */\nconst levels = {\n  info: 1,\n  warn: 2,\n  error: 3,\n  none: 4,\n};\n\n/**\n * @type {number}\n */\nlet level = levels.info;\n\n/**\n * Set the logging level.  By default, the level is set to 'info' and all\n * messages will be logged.  Set to 'warn' to only display warnings and errors.\n * Set to 'error' to only display errors.  Set to 'none' to silence all messages.\n *\n * @param {Level} l The new level.\n */\nexport function setLevel(l) {\n  level = levels[l];\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function log(...args) {\n  if (level > levels.info) {\n    return;\n  }\n  console.log(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function warn(...args) {\n  if (level > levels.warn) {\n    return;\n  }\n  console.warn(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function error(...args) {\n  if (level > levels.error) {\n    return;\n  }\n  console.error(...args); // eslint-disable-line no-console\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an `xy`, `xyz` or `xyzm` coordinate.\n * Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  }\n  return '';\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  }\n  return '';\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\n/** @type {Array<'style'|'variant'|'weight'|'size'|'lineHeight'|'family'>} */\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = /** @type {HTMLCanvasElement} */ (canvasPool.shift());\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node|null} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  }\n  return 1 - inAndOut(2 * (t - 0.5));\n}\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  if (once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>|null}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    if (!this.listeners_) {\n      return;\n    }\n    const listeners = this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n      if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n        // make listener a no-op, and remove later in #dispatchEvent()\n        listeners[index] = VOID;\n        ++this.pendingRemovals_[type];\n      } else {\n        listeners.splice(index, 1);\n        if (listeners.length === 0) {\n          delete this.listeners_[type];\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n  return targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKey = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return MAC ? originalEvent.metaKey : originalEvent.ctrlKey;\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not an `input`,\n * `select`, or `textarea` element and no `contenteditable` attribute is\n * set or inherited, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n    tagName !== 'SELECT' &&\n    tagName !== 'TEXTAREA' &&\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\n    // different type like `SVGElement`.\n    // @ts-ignore\n    !originalEvent.target.isContentEditable\n  );\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvent !== undefined,\n    'mapBrowserEvent must originate from a pointer event'\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvt !== undefined,\n    'mapBrowserEvent must originate from a pointer event'\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvt !== undefined,\n    'mapBrowserEvent must originate from a pointer event'\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvent !== undefined,\n    'mapBrowserEvent must originate from a pointer event'\n  );\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/expr/expression\n */\nimport {ascending} from '../array.js';\nimport {isStringColor} from '../color.js';\n\n/**\n * @fileoverview This module includes types and functions for parsing array encoded expressions.\n * The result of parsing an encoded expression is one of the specific expression classes.\n * During parsing, information is added to the parsing context about the data accessed by the\n * expression.\n */\n\n/**\n * Base type used for literal style parameters; can be a number literal or the output of an operator,\n * which in turns takes {@link import(\"./expression.js\").ExpressionValue} arguments.\n *\n * The following operators can be used:\n *\n * * Reading operators:\n *   * `['band', bandIndex, xOffset, yOffset]` For tile layers only. Fetches pixel values from band\n *     `bandIndex` of the source's data. The first `bandIndex` of the source data is `1`. Fetched values\n *     are in the 0..1 range. {@link import(\"../source/TileImage.js\").default} sources have 4 bands: red,\n *     green, blue and alpha. {@link import(\"../source/DataTile.js\").default} sources can have any number\n *     of bands, depending on the underlying data source and\n *     {@link import(\"../source/GeoTIFF.js\").Options configuration}. `xOffset` and `yOffset` are optional\n *     and allow specifying pixel offsets for x and y. This is used for sampling data from neighboring pixels.\n *   * `['get', 'attributeName', typeHint]` fetches a feature property value, similar to `feature.get('attributeName')`\n *     A type hint can optionally be specified, in case the resulting expression contains a type ambiguity which\n *     will make it invalid. Type hints can be one of: 'string', 'color', 'number', 'boolean', 'number[]'\n *   * `['geometry-type']` returns a feature's geometry type as string, either: 'LineString', 'Point' or 'Polygon'\n *     `Multi*` values are returned as their singular equivalent\n *     `Circle` geometries are returned as 'Polygon'\n *     `GeometryCollection` geometries are returned as the type of the first geometry found in the collection\n *   * `['resolution']` returns the current resolution\n *   * `['time']` returns the time in seconds since the creation of the layer\n *   * `['var', 'varName']` fetches a value from the style variables; will throw an error if that variable is undefined\n *   * `['zoom']` returns the current zoom level\n *\n * * Math operators:\n *   * `['*', value1, value2, ...]` multiplies the values (either numbers or colors)\n *   * `['/', value1, value2]` divides `value1` by `value2`\n *   * `['+', value1, value2, ...]` adds the values\n *   * `['-', value1, value2]` subtracts `value2` from `value1`\n *   * `['clamp', value, low, high]` clamps `value` between `low` and `high`\n *   * `['%', value1, value2]` returns the result of `value1 % value2` (modulo)\n *   * `['^', value1, value2]` returns the value of `value1` raised to the `value2` power\n *   * `['abs', value1]` returns the absolute value of `value1`\n *   * `['floor', value1]` returns the nearest integer less than or equal to `value1`\n *   * `['round', value1]` returns the nearest integer to `value1`\n *   * `['ceil', value1]` returns the nearest integer greater than or equal to `value1`\n *   * `['sin', value1]` returns the sine of `value1`\n *   * `['cos', value1]` returns the cosine of `value1`\n *   * `['atan', value1, value2]` returns `atan2(value1, value2)`. If `value2` is not provided, returns `atan(value1)`\n *   * `['sqrt', value1]` returns the square root of `value1`\n *\n * * Transform operators:\n *   * `['case', condition1, output1, ...conditionN, outputN, fallback]` selects the first output whose corresponding\n *     condition evaluates to `true`. If no match is found, returns the `fallback` value.\n *     All conditions should be `boolean`, output and fallback can be any kind.\n *   * `['match', input, match1, output1, ...matchN, outputN, fallback]` compares the `input` value against all\n *     provided `matchX` values, returning the output associated with the first valid match. If no match is found,\n *     returns the `fallback` value.\n *     `input` and `matchX` values must all be of the same type, and can be `number` or `string`. `outputX` and\n *     `fallback` values must be of the same type, and can be of any kind.\n *   * `['interpolate', interpolation, input, stop1, output1, ...stopN, outputN]` returns a value by interpolating between\n *     pairs of inputs and outputs; `interpolation` can either be `['linear']` or `['exponential', base]` where `base` is\n *     the rate of increase from stop A to stop B (i.e. power to which the interpolation ratio is raised); a value\n *     of 1 is equivalent to `['linear']`.\n *     `input` and `stopX` values must all be of type `number`. `outputX` values can be `number` or `color` values.\n *     Note: `input` will be clamped between `stop1` and `stopN`, meaning that all output values will be comprised\n *     between `output1` and `outputN`.\n *\n * * Logical operators:\n *   * `['<', value1, value2]` returns `true` if `value1` is strictly lower than `value2`, or `false` otherwise.\n *   * `['<=', value1, value2]` returns `true` if `value1` is lower than or equals `value2`, or `false` otherwise.\n *   * `['>', value1, value2]` returns `true` if `value1` is strictly greater than `value2`, or `false` otherwise.\n *   * `['>=', value1, value2]` returns `true` if `value1` is greater than or equals `value2`, or `false` otherwise.\n *   * `['==', value1, value2]` returns `true` if `value1` equals `value2`, or `false` otherwise.\n *   * `['!=', value1, value2]` returns `true` if `value1` does not equal `value2`, or `false` otherwise.\n *   * `['!', value1]` returns `false` if `value1` is `true` or greater than `0`, or `true` otherwise.\n *   * `['all', value1, value2, ...]` returns `true` if all the inputs are `true`, `false` otherwise.\n *   * `['any', value1, value2, ...]` returns `true` if any of the inputs are `true`, `false` otherwise.\n *   * `['between', value1, value2, value3]` returns `true` if `value1` is contained between `value2` and `value3`\n *     (inclusively), or `false` otherwise.\n *   * `['in', needle, haystack]` returns `true` if `needle` is found in `haystack`, and\n *     `false` otherwise.\n *     This operator has the following limitations:\n *     * `haystack` has to be an array of numbers or strings (searching for a substring in a string is not supported yet)\n *     * Only literal arrays are supported as `haystack` for now; this means that `haystack` cannot be the result of an\n *     expression. If `haystack` is an array of strings, use the `literal` operator to disambiguate from an expression:\n *     `['literal', ['abc', 'def', 'ghi']]`\n *\n * * Conversion operators:\n *   * `['array', value1, ...valueN]` creates a numerical array from `number` values; please note that the amount of\n *     values can currently only be 2, 3 or 4.\n *   * `['color', red, green, blue, alpha]` creates a `color` value from `number` values; the `alpha` parameter is\n *     optional; if not specified, it will be set to 1.\n *     Note: `red`, `green` and `blue` components must be values between 0 and 255; `alpha` between 0 and 1.\n *   * `['palette', index, colors]` picks a `color` value from an array of colors using the given index; the `index`\n *     expression must evaluate to a number; the items in the `colors` array must be strings with hex colors\n *     (e.g. `'#86A136'`), colors using the rgba[a] functional notation (e.g. `'rgb(134, 161, 54)'` or `'rgba(134, 161, 54, 1)'`),\n *     named colors (e.g. `'red'`), or array literals with 3 ([r, g, b]) or 4 ([r, g, b, a]) values (with r, g, and b\n *     in the 0-255 range and a in the 0-1 range).\n *\n * Values can either be literals or another operator, as they will be evaluated recursively.\n * Literal values can be of the following types:\n * * `boolean`\n * * `number`\n * * `number[]` (number arrays can only have a length of 2, 3 or 4)\n * * `string`\n * * {@link module:ol/color~Color}\n *\n * @typedef {Array<*>|import(\"../color.js\").Color|string|number|boolean} ExpressionValue\n * @api\n */\n\nlet numTypes = 0;\nexport const NoneType = 0;\nexport const BooleanType = 1 << numTypes++;\nexport const NumberType = 1 << numTypes++;\nexport const StringType = 1 << numTypes++;\nexport const ColorType = 1 << numTypes++;\nexport const NumberArrayType = 1 << numTypes++;\nexport const AnyType = Math.pow(2, numTypes) - 1;\n\nconst typeNames = {\n  [BooleanType]: 'boolean',\n  [NumberType]: 'number',\n  [StringType]: 'string',\n  [ColorType]: 'color',\n  [NumberArrayType]: 'number[]',\n};\n\nconst namedTypes = Object.keys(typeNames).map(Number).sort(ascending);\n\n/**\n * Get a string representation for a type.\n * @param {number} type The type.\n * @return {string} The type name.\n */\nexport function typeName(type) {\n  const names = [];\n  for (const namedType of namedTypes) {\n    if (includesType(type, namedType)) {\n      names.push(typeNames[namedType]);\n    }\n  }\n  if (names.length === 0) {\n    return 'untyped';\n  }\n  if (names.length < 3) {\n    return names.join(' or ');\n  }\n  return names.slice(0, -1).join(', ') + ', or ' + names[names.length - 1];\n}\n\n/**\n * @param {number} broad The broad type.\n * @param {number} specific The specific type.\n * @return {boolean} The broad type includes the specific type.\n */\nexport function includesType(broad, specific) {\n  return (broad & specific) === specific;\n}\n\n/**\n * @param {number} oneType One type.\n * @param {number} otherType Another type.\n * @return {boolean} The set of types overlap (share a common specific type)\n */\nexport function overlapsType(oneType, otherType) {\n  return !!(oneType & otherType);\n}\n\n/**\n * @param {number} type The type.\n * @param {number} expected The expected type.\n * @return {boolean} The given type is exactly the expected type.\n */\nexport function isType(type, expected) {\n  return type === expected;\n}\n\n/**\n * @typedef {boolean|number|string|Array<number>} LiteralValue\n */\n\nexport class LiteralExpression {\n  /**\n   * @param {number} type The value type.\n   * @param {LiteralValue} value The literal value.\n   */\n  constructor(type, value) {\n    this.type = type;\n    this.value = value;\n  }\n}\n\nexport class CallExpression {\n  /**\n   * @param {number} type The return type.\n   * @param {string} operator The operator.\n   * @param {...Expression} args The arguments.\n   */\n  constructor(type, operator, ...args) {\n    this.type = type;\n    this.operator = operator;\n    this.args = args;\n  }\n}\n\n/**\n * @typedef {LiteralExpression|CallExpression} Expression\n */\n\n/**\n * @typedef {Object} ParsingContext\n * @property {Set<string>} variables Variables referenced with the 'var' operator.\n * @property {Set<string>} properties Properties referenced with the 'get' operator.\n * @property {boolean} featureId The style uses the feature id.\n * @property {import(\"../style/flat.js\").FlatStyle|import(\"../style/webgl.js\").WebGLStyle} style The style being parsed\n */\n\n/**\n * @return {ParsingContext} A new parsing context.\n */\nexport function newParsingContext() {\n  return {\n    variables: new Set(),\n    properties: new Set(),\n    featureId: false,\n    style: {},\n  };\n}\n\n/**\n * @param {string} typeHint Type hint\n * @return {number} Resulting value type (will be a single type)\n */\nfunction getTypeFromHint(typeHint) {\n  switch (typeHint) {\n    case 'string':\n      return StringType;\n    case 'color':\n      return ColorType;\n    case 'number':\n      return NumberType;\n    case 'boolean':\n      return BooleanType;\n    case 'number[]':\n      return NumberArrayType;\n    default:\n      throw new Error(`Unrecognized type hint: ${typeHint}`);\n  }\n}\n\n/**\n * @typedef {LiteralValue|Array} EncodedExpression\n */\n\n/**\n * @param {EncodedExpression} encoded The encoded expression.\n * @param {ParsingContext} context The parsing context.\n * @param {number} [typeHint] Optional type hint\n * @return {Expression} The parsed expression result.\n */\nexport function parse(encoded, context, typeHint) {\n  switch (typeof encoded) {\n    case 'boolean': {\n      return new LiteralExpression(BooleanType, encoded);\n    }\n    case 'number': {\n      return new LiteralExpression(NumberType, encoded);\n    }\n    case 'string': {\n      let type = StringType;\n      if (isStringColor(encoded)) {\n        type |= ColorType;\n      }\n      // apply the given type hint only if it won't result in an empty type\n      if (!isType(type & typeHint, NoneType)) {\n        type &= typeHint;\n      }\n      return new LiteralExpression(type, encoded);\n    }\n    default: {\n      // pass\n    }\n  }\n\n  if (!Array.isArray(encoded)) {\n    throw new Error('Expression must be an array or a primitive value');\n  }\n\n  if (encoded.length === 0) {\n    throw new Error('Empty expression');\n  }\n\n  if (typeof encoded[0] === 'string') {\n    return parseCallExpression(encoded, context, typeHint);\n  }\n\n  for (const item of encoded) {\n    if (typeof item !== 'number') {\n      throw new Error('Expected an array of numbers');\n    }\n  }\n\n  let type = NumberArrayType;\n  if (encoded.length === 3 || encoded.length === 4) {\n    type |= ColorType;\n  }\n  if (typeHint) {\n    type &= typeHint;\n  }\n  return new LiteralExpression(type, encoded);\n}\n\n/**\n * @type {Object<string, string>}\n */\nexport const Ops = {\n  Get: 'get',\n  Var: 'var',\n  Concat: 'concat',\n  GeometryType: 'geometry-type',\n  Any: 'any',\n  All: 'all',\n  Not: '!',\n  Resolution: 'resolution',\n  Zoom: 'zoom',\n  Time: 'time',\n  Equal: '==',\n  NotEqual: '!=',\n  GreaterThan: '>',\n  GreaterThanOrEqualTo: '>=',\n  LessThan: '<',\n  LessThanOrEqualTo: '<=',\n  Multiply: '*',\n  Divide: '/',\n  Add: '+',\n  Subtract: '-',\n  Clamp: 'clamp',\n  Mod: '%',\n  Pow: '^',\n  Abs: 'abs',\n  Floor: 'floor',\n  Ceil: 'ceil',\n  Round: 'round',\n  Sin: 'sin',\n  Cos: 'cos',\n  Atan: 'atan',\n  Sqrt: 'sqrt',\n  Match: 'match',\n  Between: 'between',\n  Interpolate: 'interpolate',\n  Case: 'case',\n  In: 'in',\n  Number: 'number',\n  String: 'string',\n  Array: 'array',\n  Color: 'color',\n  Id: 'id',\n  Band: 'band',\n  Palette: 'palette',\n};\n\n/**\n * @typedef {function(Array, ParsingContext, number):Expression} Parser\n * Third argument is a type hint\n */\n\n/**\n * @type {Object<string, Parser>}\n */\nconst parsers = {\n  [Ops.Get]: createParser(\n    ([_, typeHint]) => {\n      if (typeHint !== undefined) {\n        return getTypeFromHint(\n          /** @type {string} */ (\n            /** @type {LiteralExpression} */ (typeHint).value\n          )\n        );\n      }\n      return AnyType;\n    },\n    withArgsCount(1, 2),\n    withGetArgs\n  ),\n  [Ops.Var]: createParser(\n    ([firstArg]) => firstArg.type,\n    withArgsCount(1, 1),\n    withVarArgs\n  ),\n  [Ops.Id]: createParser(NumberType | StringType, withNoArgs, usesFeatureId),\n  [Ops.Concat]: createParser(\n    StringType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(AnyType)\n  ),\n  [Ops.GeometryType]: createParser(StringType, withNoArgs),\n  [Ops.Resolution]: createParser(NumberType, withNoArgs),\n  [Ops.Zoom]: createParser(NumberType, withNoArgs),\n  [Ops.Time]: createParser(NumberType, withNoArgs),\n  [Ops.Any]: createParser(\n    BooleanType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(BooleanType)\n  ),\n  [Ops.All]: createParser(\n    BooleanType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(BooleanType)\n  ),\n  [Ops.Not]: createParser(\n    BooleanType,\n    withArgsCount(1, 1),\n    parseArgsOfType(BooleanType)\n  ),\n  [Ops.Equal]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType\n  ),\n  [Ops.NotEqual]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType\n  ),\n  [Ops.GreaterThan]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType\n  ),\n  [Ops.GreaterThanOrEqualTo]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType\n  ),\n  [Ops.LessThan]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType\n  ),\n  [Ops.LessThanOrEqualTo]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType\n  ),\n  [Ops.Multiply]: createParser(\n    (parsedArgs) => {\n      let outputType = NumberType | ColorType;\n      for (let i = 0; i < parsedArgs.length; i++) {\n        outputType &= parsedArgs[i].type;\n      }\n      return outputType;\n    },\n    withArgsCount(2, Infinity),\n    parseArgsOfType(NumberType | ColorType),\n    narrowArgsType\n  ),\n  [Ops.Divide]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Add]: createParser(\n    NumberType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Subtract]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Clamp]: createParser(\n    NumberType,\n    withArgsCount(3, 3),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Mod]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Pow]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Abs]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Floor]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Ceil]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Round]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Sin]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Cos]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Atan]: createParser(\n    NumberType,\n    withArgsCount(1, 2),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Sqrt]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Match]: createParser(\n    (parsedArgs) => {\n      let type = AnyType;\n      for (let i = 2; i < parsedArgs.length; i += 2) {\n        type &= parsedArgs[i].type;\n      }\n      type &= parsedArgs[parsedArgs.length - 1].type;\n      return type;\n    },\n    withArgsCount(4, Infinity),\n    withEvenArgs,\n    parseMatchArgs\n  ),\n  [Ops.Between]: createParser(\n    BooleanType,\n    withArgsCount(3, 3),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Interpolate]: createParser(\n    (parsedArgs) => {\n      let type = ColorType | NumberType;\n      for (let i = 3; i < parsedArgs.length; i += 2) {\n        type &= parsedArgs[i].type;\n      }\n      return type;\n    },\n    withArgsCount(6, Infinity),\n    withEvenArgs,\n    parseInterpolateArgs\n  ),\n  [Ops.Case]: createParser(\n    (parsedArgs) => {\n      let type = AnyType;\n      for (let i = 1; i < parsedArgs.length; i += 2) {\n        type &= parsedArgs[i].type;\n      }\n      type &= parsedArgs[parsedArgs.length - 1].type;\n      return type;\n    },\n    withArgsCount(3, Infinity),\n    withOddArgs,\n    parseCaseArgs\n  ),\n  [Ops.In]: createParser(BooleanType, withArgsCount(2, 2), parseInArgs),\n  [Ops.Number]: createParser(\n    NumberType,\n    withArgsCount(1, Infinity),\n    parseArgsOfType(AnyType)\n  ),\n  [Ops.String]: createParser(\n    StringType,\n    withArgsCount(1, Infinity),\n    parseArgsOfType(AnyType)\n  ),\n  [Ops.Array]: createParser(\n    (parsedArgs) => {\n      return parsedArgs.length === 3 || parsedArgs.length === 4\n        ? NumberArrayType | ColorType\n        : NumberArrayType;\n    },\n    withArgsCount(1, Infinity),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Color]: createParser(\n    ColorType,\n    withArgsCount(3, 4),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Band]: createParser(\n    NumberType,\n    withArgsCount(1, 3),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Palette]: createParser(ColorType, withArgsCount(2, 2), parsePaletteArgs),\n};\n\n/**\n * @typedef {function(Array<EncodedExpression>, ParsingContext, Array<Expression>, number?):Array<Expression>|void} ArgValidator\n * An argument validator applies various checks to an encoded expression arguments\n * Returns the parsed arguments if any.\n * Third argument is the array of parsed arguments from previous validators\n * Fourth argument is an optional type hint\n */\n\n/**\n * @type ArgValidator\n */\nfunction withGetArgs(encoded, context) {\n  const arg = parse(encoded[1], context);\n  if (!(arg instanceof LiteralExpression)) {\n    throw new Error('Expected a literal argument for get operation');\n  }\n  if (typeof arg.value !== 'string') {\n    throw new Error('Expected a string argument for get operation');\n  }\n  context.properties.add(arg.value);\n  if (encoded.length === 3) {\n    const hint = parse(encoded[2], context);\n    return [arg, hint];\n  }\n  return [arg];\n}\n\n/**\n * @type ArgValidator\n */\nfunction withVarArgs(encoded, context, parsedArgs, typeHint) {\n  const varName = encoded[1];\n  if (typeof varName !== 'string') {\n    throw new Error('Expected a string argument for var operation');\n  }\n  context.variables.add(varName);\n  if (\n    !('variables' in context.style) ||\n    context.style.variables[varName] === undefined\n  ) {\n    return [new LiteralExpression(AnyType, varName)];\n  }\n  const initialValue = context.style.variables[varName];\n  const arg = /** @type {LiteralExpression} */ (parse(initialValue, context));\n  arg.value = varName;\n  if (typeHint && !overlapsType(typeHint, arg.type)) {\n    throw new Error(\n      `The variable ${varName} has type ${typeName(\n        arg.type\n      )} but the following type was expected: ${typeName(typeHint)}`\n    );\n  }\n  return [arg];\n}\n\n/**\n * @type ArgValidator\n */\nfunction usesFeatureId(encoded, context) {\n  context.featureId = true;\n}\n\n/**\n * @type ArgValidator\n */\nfunction withNoArgs(encoded, context) {\n  const operation = encoded[0];\n  if (encoded.length !== 1) {\n    throw new Error(`Expected no arguments for ${operation} operation`);\n  }\n  return [];\n}\n\n/**\n * @param {number} minArgs The minimum number of arguments.\n * @param {number} maxArgs The maximum number of arguments.\n * @return {ArgValidator} The argument validator\n */\nfunction withArgsCount(minArgs, maxArgs) {\n  return function (encoded, context) {\n    const operation = encoded[0];\n    const argCount = encoded.length - 1;\n    if (minArgs === maxArgs) {\n      if (argCount !== minArgs) {\n        const plural = minArgs === 1 ? '' : 's';\n        throw new Error(\n          `Expected ${minArgs} argument${plural} for ${operation}, got ${argCount}`\n        );\n      }\n    } else if (argCount < minArgs || argCount > maxArgs) {\n      const range =\n        maxArgs === Infinity\n          ? `${minArgs} or more`\n          : `${minArgs} to ${maxArgs}`;\n      throw new Error(\n        `Expected ${range} arguments for ${operation}, got ${argCount}`\n      );\n    }\n  };\n}\n\n/**\n * @param {number} argType The argument type.\n * @return {ArgValidator} The argument validator\n */\nfunction parseArgsOfType(argType) {\n  return function (encoded, context) {\n    const operation = encoded[0];\n    const argCount = encoded.length - 1;\n    /**\n     * @type {Array<Expression>}\n     */\n    const args = new Array(argCount);\n    for (let i = 0; i < argCount; ++i) {\n      const expression = parse(encoded[i + 1], context);\n      if (!overlapsType(argType, expression.type)) {\n        const gotType = typeName(argType);\n        const expectedType = typeName(expression.type);\n        throw new Error(\n          `Unexpected type for argument ${i} of ${operation} operation` +\n            `, got ${gotType} but expected ${expectedType}`\n        );\n      }\n      expression.type &= argType;\n      args[i] = expression;\n    }\n    return args;\n  };\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction narrowArgsType(encoded, context, parsedArgs) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n\n  // first pass to determine a narrowed down type\n  let sameType = AnyType;\n  for (let i = 0; i < parsedArgs.length; ++i) {\n    sameType &= parsedArgs[i].type;\n  }\n\n  if (sameType === NoneType) {\n    throw new Error(\n      `No common type could be found for arguments of ${operation} operation`\n    );\n  }\n\n  // re-parse args\n  const args = new Array(argCount);\n  for (let i = 0; i < argCount; ++i) {\n    args[i] = parse(encoded[i + 1], context, sameType);\n  }\n  return args;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withOddArgs(encoded, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 0) {\n    throw new Error(\n      `An odd amount of arguments was expected for operation ${operation}, got ${JSON.stringify(\n        argCount\n      )} instead`\n    );\n  }\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withEvenArgs(encoded, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 1) {\n    throw new Error(\n      `An even amount of arguments was expected for operation ${operation}, got ${JSON.stringify(\n        argCount\n      )} instead`\n    );\n  }\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseMatchArgs(encoded, context, parsedArgs, typeHint) {\n  const argsCount = encoded.length - 1;\n\n  const input = parse(encoded[1], context);\n  let inputType = input.type;\n  const fallback = parse(encoded[encoded.length - 1], context);\n  let outputType =\n    typeHint !== undefined ? typeHint & fallback.type : fallback.type;\n\n  // first parse args to figure out possible types\n  const args = new Array(argsCount - 2);\n  for (let i = 0; i < argsCount - 2; i += 2) {\n    const match = parse(encoded[i + 2], context);\n    const output = parse(encoded[i + 3], context);\n    inputType &= match.type;\n    outputType &= output.type;\n    args[i] = match;\n    args[i + 1] = output;\n  }\n\n  // check input and output types validity\n  const expectedInputType = StringType | NumberType | BooleanType;\n  if (!overlapsType(expectedInputType, inputType)) {\n    throw new Error(\n      `Expected an input of type ${typeName(\n        expectedInputType\n      )} for the interpolate operation` + `, got ${typeName(inputType)} instead`\n    );\n  }\n  if (isType(outputType, NoneType)) {\n    throw new Error(\n      `Could not find a common output type for the following match operation: ` +\n        JSON.stringify(encoded)\n    );\n  }\n\n  // parse again inputs and outputs with common type\n  for (let i = 0; i < argsCount - 2; i += 2) {\n    const match = parse(encoded[i + 2], context, inputType);\n    const output = parse(encoded[i + 3], context, outputType);\n    args[i] = match;\n    args[i + 1] = output;\n  }\n\n  return [\n    parse(encoded[1], context, inputType),\n    ...args,\n    parse(encoded[encoded.length - 1], context, outputType),\n  ];\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseInterpolateArgs(encoded, context, parsedArgs, typeHint) {\n  const interpolationType = encoded[1];\n  let interpolation;\n  switch (interpolationType[0]) {\n    case 'linear':\n      interpolation = 1;\n      break;\n    case 'exponential':\n      interpolation = interpolationType[1];\n      if (typeof interpolation !== 'number') {\n        throw new Error(\n          `Expected a number base for exponential interpolation` +\n            `, got ${JSON.stringify(interpolation)} instead`\n        );\n      }\n      break;\n    default:\n      interpolation = null;\n  }\n  if (!interpolation) {\n    throw new Error(\n      `Invalid interpolation type: ${JSON.stringify(interpolationType)}`\n    );\n  }\n  interpolation = parse(interpolation, context);\n\n  // check input types\n  let input = parse(encoded[2], context);\n  if (!overlapsType(NumberType, input.type)) {\n    throw new Error(\n      `Expected an input of type number for the interpolate operation` +\n        `, got ${typeName(input.type)} instead`\n    );\n  }\n  input = parse(encoded[2], context, NumberType); // parse again with narrower output\n\n  const args = new Array(encoded.length - 3);\n  for (let i = 0; i < args.length; i += 2) {\n    let stop = parse(encoded[i + 3], context);\n    if (!overlapsType(NumberType, stop.type)) {\n      throw new Error(\n        `Expected all stop input values in the interpolate operation to be of type number` +\n          `, got ${typeName(stop.type)} at position ${i + 2} instead`\n      );\n    }\n    let output = parse(encoded[i + 4], context);\n    if (!overlapsType(NumberType | ColorType, output.type)) {\n      throw new Error(\n        `Expected all stop output values in the interpolate operation to be a number or color` +\n          `, got ${typeName(output.type)} at position ${i + 3} instead`\n      );\n    }\n    // parse again with narrower types\n    stop = parse(encoded[i + 3], context, NumberType);\n    output = parse(encoded[i + 4], context, NumberType | ColorType);\n    args[i] = stop;\n    args[i + 1] = output;\n  }\n\n  return [interpolation, input, ...args];\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseCaseArgs(encoded, context, parsedArgs, typeHint) {\n  const fallback = parse(encoded[encoded.length - 1], context);\n  let outputType =\n    typeHint !== undefined ? typeHint & fallback.type : fallback.type;\n\n  // first parse args to figure out possible types\n  const args = new Array(encoded.length - 1);\n  for (let i = 0; i < args.length - 1; i += 2) {\n    const condition = parse(encoded[i + 1], context);\n    const output = parse(encoded[i + 2], context);\n    if (!overlapsType(BooleanType, condition.type)) {\n      throw new Error(\n        `Expected all conditions in the case operation to be of type boolean` +\n          `, got ${typeName(condition.type)} at position ${i} instead`\n      );\n    }\n    outputType &= output.type;\n    args[i] = condition;\n    args[i + 1] = output;\n  }\n\n  if (isType(outputType, NoneType)) {\n    throw new Error(\n      `Could not find a common output type for the following case operation: ` +\n        JSON.stringify(encoded)\n    );\n  }\n\n  // parse again args with common output type\n  for (let i = 0; i < args.length - 1; i += 2) {\n    args[i + 1] = parse(encoded[i + 2], context, outputType);\n  }\n  args[args.length - 1] = parse(\n    encoded[encoded.length - 1],\n    context,\n    outputType\n  );\n\n  return args;\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseInArgs(encoded, context) {\n  /** @type {Array<number|string>} */\n  let haystack = /** @type {any} */ (encoded[2]);\n  if (!Array.isArray(haystack)) {\n    throw new Error(\n      `The \"in\" operator was provided a literal value which was not an array as second argument.`\n    );\n  }\n  if (typeof haystack[0] === 'string') {\n    if (haystack[0] !== 'literal') {\n      throw new Error(\n        `For the \"in\" operator, a string array should be wrapped in a \"literal\" operator to disambiguate from expressions.`\n      );\n    }\n    if (!Array.isArray(haystack[1])) {\n      throw new Error(\n        `The \"in\" operator was provided a literal value which was not an array as second argument.`\n      );\n    }\n    haystack = haystack[1];\n  }\n\n  let needleType = StringType | NumberType;\n  const args = new Array(haystack.length);\n  for (let i = 0; i < args.length; i++) {\n    const arg = parse(haystack[i], context);\n    needleType &= arg.type;\n    args[i] = arg;\n  }\n  if (isType(needleType, NoneType)) {\n    throw new Error(\n      `Could not find a common type for the following in operation: ` +\n        JSON.stringify(encoded)\n    );\n  }\n\n  const needle = parse(encoded[1], context, needleType);\n  return [needle, ...args];\n}\n\n/**\n * @type ArgValidator\n */\nfunction parsePaletteArgs(encoded, context) {\n  const index = parse(encoded[1], context, NumberType);\n  if (index.type !== NumberType) {\n    throw new Error(\n      `The first argument of palette must be an number, got ${typeName(\n        index.type\n      )} instead`\n    );\n  }\n  const colors = encoded[2];\n  if (!Array.isArray(colors)) {\n    throw new Error('The second argument of palette must be an array');\n  }\n  const parsedColors = new Array(colors.length);\n  for (let i = 0; i < parsedColors.length; i++) {\n    const color = parse(colors[i], context, ColorType);\n    if (!(color instanceof LiteralExpression)) {\n      throw new Error(\n        `The palette color at index ${i} must be a literal value`\n      );\n    }\n    if (!overlapsType(color.type, ColorType)) {\n      throw new Error(\n        `The palette color at index ${i} should be of type color, got ${typeName(\n          color.type\n        )} instead`\n      );\n    }\n    parsedColors[i] = color;\n  }\n  return [index, ...parsedColors];\n}\n\n/**\n * @param {number|function(Array<Expression>):number} returnType The return type of the operator; can be a fixed value or a callback taking the parsed\n * arguments\n * @param {Array<ArgValidator>} argValidators A chain of argument validators; the return value of the last validator\n * will be used as parsed arguments\n * @return {Parser} The parser.\n */\nfunction createParser(returnType, ...argValidators) {\n  return function (encoded, context, typeHint) {\n    const operator = encoded[0];\n    let parsedArgs = [];\n    for (let i = 0; i < argValidators.length; i++) {\n      parsedArgs =\n        argValidators[i](encoded, context, parsedArgs, typeHint) || parsedArgs;\n    }\n    let actualType =\n      typeof returnType === 'function' ? returnType(parsedArgs) : returnType;\n    if (typeHint !== undefined) {\n      if (!overlapsType(actualType, typeHint)) {\n        throw new Error(\n          `The following expression was expected to return ${typeName(\n            typeHint\n          )}, but returns ${typeName(actualType)} instead: ${JSON.stringify(\n            encoded\n          )}`\n        );\n      }\n      actualType &= typeHint;\n    }\n    if (actualType === NoneType) {\n      throw new Error(\n        `No matching type was found for the following expression: ${JSON.stringify(\n          encoded\n        )}`\n      );\n    }\n    return new CallExpression(actualType, operator, ...parsedArgs);\n  };\n}\n\n/**\n * @param {Array} encoded The encoded expression.\n * @param {ParsingContext} context The parsing context.\n * @param {number} [typeHint] Optional type hint\n * @return {Expression} The parsed expression.\n */\nfunction parseCallExpression(encoded, context, typeHint) {\n  const operator = encoded[0];\n\n  const parser = parsers[operator];\n  if (!parser) {\n    throw new Error(`Unknown operator: ${operator}`);\n  }\n  return parser(encoded, context, typeHint);\n}\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  }\n  return [\n    extent[0] - value,\n    extent[1] - value,\n    extent[2] + value,\n    extent[3] + value,\n  ];\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent.slice();\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  }\n  return [minX, minY, maxX, maxY];\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    throw new Error('Invalid corner');\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  if (isEmpty(extent)) {\n    return createOrUpdateEmpty(dest);\n  }\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n    if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    }\n    if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(\n      (revision, squaredTolerance, transform) => {\n        if (!transform) {\n          return this.getSimplifiedGeometry(squaredTolerance);\n        }\n        const clone = this.clone();\n        clone.applyTransform(transform);\n        return clone.getSimplifiedGeometry(squaredTolerance);\n      }\n    );\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/LineString\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    extend(this.flatCoordinates, coordinate);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate) {\n    if (this.layout != 'XYM' && this.layout != 'XYZM') {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      dest,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(\n        0.5,\n        this.flatMidpoint_ ?? undefined\n      );\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.flatMidpoint_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LineString(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/geom/Point\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/LinearRing\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Polygon\n */\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter, isEmpty} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return /** @type {import(\"../coordinate.js\").Coordinate} */ (\n      this.flatInteriorPoint_\n    );\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.orientedFlatCoordinates_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  if (isEmpty(extent)) {\n    throw new Error('Cannot create polygon from empty extent');\n  }\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    }\n    // Simplification did not actually remove any coordinates.  We now know\n    // that any calls to getSimplifiedGeometry with a squaredTolerance less\n    // than or equal to the current squaredTolerance will also not have any\n    // effect.  This allows us to short circuit simplification (saving CPU\n    // cycles) and prevents the cache of simplified geometries from filling\n    // up with useless identical copies of this geometry (saving memory).\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        }\n        coordinates = /** @type {Array<unknown>} */ (coordinates[0]);\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nexport function getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  }\n  const stride = simpleGeometry.getStride();\n  return transform2D(\n    flatCoordinates,\n    0,\n    flatCoordinates.length,\n    stride,\n    transform,\n    dest\n  );\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i]\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {ascending} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(ascending);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  }\n  return [pointX, y, maxSegmentLength];\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  /** @type {Array<number>} */\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  dest,\n  dimension\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  dimension = dimension > 1 ? dimension : 2;\n  dest = dest ? dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n        ? flatCoordinates[o + i]\n        : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t\n      )\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    }\n    if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean|undefined} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to construct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  let startOrientation;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    const orientation = linearRingIsClockwise(flatCoordinates, offset, end, 2);\n    if (startOrientation === undefined) {\n      startOrientation = orientation;\n    }\n    if (orientation === startOrientation) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride)\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.includes('firefox');\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * createImageBitmap() is supported.\n * @type {boolean}\n */\nexport const CREATE_IMAGE_BITMAP = typeof createImageBitmap === 'function';\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    // @ts-ignore Ignore invalid event type '_'\n    window.addEventListener('_', null, options);\n    // @ts-ignore Ignore invalid event type '_'\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (options && options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [duration] Duration.\n */\nexport function pan(view, delta, duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: duration !== undefined ? duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [anchor] Anchor coordinate in the user projection.\n * @param {number} [duration] Duration.\n */\nexport function zoomByDelta(view, delta, anchor, duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: anchor,\n    duration: duration !== undefined ? duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (mapBrowserEvent.activePointers) {\n      this.targetPointers = mapBrowserEvent.activePointers;\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {{clientX: number, clientY: number}} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return {clientX: clientX / length, clientY: clientY / length};\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    if (!this.panning_) {\n      this.panning_ = true;\n      map.getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = map.getEventPixel(centroidFromPointers(targetPointers));\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    }\n    if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger up, tiny drag, second finger up\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = null;\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/Key\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  LEFT: 'ArrowLeft',\n  UP: 'ArrowUp',\n  RIGHT: 'ArrowRight',\n  DOWN: 'ArrowDown',\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport Key from '../events/Key.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (key == Key.DOWN ||\n          key == Key.LEFT ||\n          key == Key.RIGHT ||\n          key == Key.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (key == Key.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (key == Key.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (key == Key.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {platformModifierKey, targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. The default condition is\n * that {@link module:ol/events/condition.targetNotEditable} is fulfilled and that\n * the platform modifier key isn't pressed\n * (!{@link module:ol/events/condition.platformModifierKey}).\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition\n      ? options.condition\n      : function (mapBrowserEvent) {\n          return (\n            !platformModifierKey(mapBrowserEvent) &&\n            targetNotEditable(mapBrowserEvent)\n          );\n        };\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (this.condition_(mapBrowserEvent) && (key === '+' || key === '-')) {\n        const map = mapBrowserEvent.map;\n        const delta = key === '+' ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {'trackpad' | 'wheel'} Mode\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @private\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n    this.lastDelta_ = delta;\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? 'trackpad' : 'wheel';\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === 'trackpad' &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers))\n    );\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers))\n    );\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/interaction/defaults\n */\nimport Collection from '../Collection.js';\nimport DoubleClickZoom from './DoubleClickZoom.js';\nimport DragPan from './DragPan.js';\nimport DragRotate from './DragRotate.js';\nimport DragZoom from './DragZoom.js';\nimport KeyboardPan from './KeyboardPan.js';\nimport KeyboardZoom from './KeyboardZoom.js';\nimport Kinetic from '../Kinetic.js';\nimport MouseWheelZoom from './MouseWheelZoom.js';\nimport PinchRotate from './PinchRotate.js';\nimport PinchZoom from './PinchZoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [options] Defaults options.\n * @return {Collection<import(\"./Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Interaction.js\").default>} */\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number | undefined} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(\n      typeof properties[LayerProperty.OPACITY] === 'number',\n      'Layer opacity must be a number'\n    );\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer. Returns Infinity if\n   * the layer has no maximum resolution set.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer. Returns 0 if\n   * the layer has no minimum resolution set.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer. Returns -Infinity if\n   * the layer has no minimum zoom set.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer. Returns Infinity if\n   * the layer has no maximum zoom set.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the value of this layer's `visible` property. To find out whether the layer\n   * is visible on a map, use `isVisible()` instead.\n   * @return {boolean} The value of the `visible` property of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. Returns undefined if the layer is unmanaged.\n   * @return {number|undefined} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number|undefined} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 'Layer opacity must be a number');\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} EventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {EventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [options] Layer options.\n   */\n  constructor(options) {\n    options = options || {};\n    const baseOptions = /** @type {Options} */ (Object.assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(\n          typeof (/** @type {?} */ (layers).getArray) === 'function',\n          'Expected `layers` to be an array or a `Collection`'\n        );\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this)\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = collectionEvent.element;\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = collectionEvent.element;\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!Collection<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array !== undefined ? array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If dest is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(dest) {\n    const states = dest !== undefined ? dest : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!dest && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return 'ready';\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport View from '../View.js';\nimport {assert} from '../asserts.js';\nimport {intersects} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {'sourceready'|'change:source'} LayerEventType\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     LayerEventType, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|LayerEventType|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number | undefined} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n * A `sourceready` event is fired when the layer's source is ready.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n * @fires import(\"../events/Event.js\").BaseEvent#sourceready\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.sourceReady_ = false;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n    if (this.sourceReady_ || this.getSource().getState() !== 'ready') {\n      return;\n    }\n    this.sourceReady_ = true;\n    this.dispatchEvent('sourceready');\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    this.sourceReady_ = false;\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n      if (source.getState() === 'ready') {\n        this.sourceReady_ = true;\n        setTimeout(() => {\n          this.dispatchEvent('sourceready');\n        }, 0);\n      }\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return Promise.resolve([]);\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * The layer is visible on the map view, i.e. within its min/max resolution or zoom and\n   * extent, not set to `visible: false`, and not inside a layer group that is set\n   * to `visible: false`.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {boolean} The layer is visible in the map view.\n   * @api\n   */\n  isVisible(view) {\n    let frameState;\n    const map = this.getMapInternal();\n    if (!view && map) {\n      view = map.getView();\n    }\n    if (view instanceof View) {\n      frameState = {\n        viewState: view.getState(),\n        extent: view.calculateExtent(),\n      };\n    } else {\n      frameState = view;\n    }\n    if (!frameState.layerStatesArray && map) {\n      frameState.layerStatesArray = map.getLayerGroup().getLayerStatesArray();\n    }\n    let layerState;\n    if (frameState.layerStatesArray) {\n      layerState = frameState.layerStatesArray.find(\n        (layerState) => layerState.layer === this\n      );\n    } else {\n      layerState = this.getLayerState();\n    }\n\n    const layerExtent = this.getExtent();\n\n    return (\n      inView(layerState, frameState.viewState) &&\n      (!layerExtent || intersects(layerExtent, frameState.extent))\n    );\n  }\n\n  /**\n   * Get the attributions of the source of this layer for the given view.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {Array<string>} Attributions for this layer at the given view.\n   * @api\n   */\n  getAttributions(view) {\n    if (!this.isVisible(view)) {\n      return [];\n    }\n    let getAttributions;\n    const source = this.getSource();\n    if (source) {\n      getAttributions = source.getAttributions();\n    }\n    if (!getAttributions) {\n      return [];\n    }\n    const frameState =\n      view instanceof View ? view.getViewStateAndExtent() : view;\n    let attributions = getAttributions(frameState);\n    if (!Array.isArray(attributions)) {\n      attributions = [attributions];\n    }\n    return attributions;\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n    return null;\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.'\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/expr/cpu\n */\n\nimport {\n  ColorType,\n  LiteralExpression,\n  Ops,\n  overlapsType,\n  parse,\n  typeName,\n} from './expression.js';\nimport {\n  fromString,\n  lchaToRgba,\n  normalize,\n  rgbaToLcha,\n  withAlpha,\n} from '../color.js';\n\n/**\n * @fileoverview This module includes functions to build expressions for evaluation on the CPU.\n * Building is composed of two steps: parsing and compiling.  The parsing step takes an encoded\n * expression and returns an instance of one of the expression classes.  The compiling step takes\n * the expression instance and returns a function that can be evaluated in to return a literal\n * value.  The evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {Object} EvaluationContext\n * @property {Object} properties The values for properties used in 'get' expressions.\n * @property {Object} variables The values for variables used in 'var' expressions.\n * @property {number} resolution The map resolution.\n * @property {string|number|null} featureId The feature id.\n */\n\n/**\n * @return {EvaluationContext} A new evaluation context.\n */\nexport function newEvaluationContext() {\n  return {\n    variables: {},\n    properties: {},\n    resolution: NaN,\n    featureId: null,\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"./expression.js\").LiteralValue} ExpressionEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):boolean} BooleanEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):number} NumberEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):string} StringEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|string)} ColorLikeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} NumberArrayEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} CoordinateEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|number)} SizeLikeEvaluator\n */\n\n/**\n * @param {import('./expression.js').EncodedExpression} encoded The encoded expression.\n * @param {number} type The expected type.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The expression evaluator.\n */\nexport function buildExpression(encoded, type, context) {\n  const expression = parse(encoded, context);\n  if (!overlapsType(type, expression.type)) {\n    const expected = typeName(type);\n    const actual = typeName(expression.type);\n    throw new Error(\n      `Expected expression to be of type ${expected}, got ${actual}`\n    );\n  }\n  return compileExpression(expression, context);\n}\n\n/**\n * @param {import(\"./expression.js\").Expression} expression The expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileExpression(expression, context) {\n  if (expression instanceof LiteralExpression) {\n    // convert colors to array if possible\n    if (expression.type === ColorType && typeof expression.value === 'string') {\n      const colorValue = fromString(expression.value);\n      return function () {\n        return colorValue;\n      };\n    }\n    return function () {\n      return expression.value;\n    };\n  }\n  const operator = expression.operator;\n  switch (operator) {\n    case Ops.Number:\n    case Ops.String: {\n      return compileAssertionExpression(expression, context);\n    }\n    case Ops.Get:\n    case Ops.Var: {\n      return compileAccessorExpression(expression, context);\n    }\n    case Ops.Id: {\n      return (expression) => expression.featureId;\n    }\n    case Ops.Concat: {\n      const args = expression.args.map((e) => compileExpression(e, context));\n      return (context) =>\n        ''.concat(...args.map((arg) => arg(context).toString()));\n    }\n    case Ops.Resolution: {\n      return (context) => context.resolution;\n    }\n    case Ops.Any:\n    case Ops.All:\n    case Ops.Not: {\n      return compileLogicalExpression(expression, context);\n    }\n    case Ops.Equal:\n    case Ops.NotEqual:\n    case Ops.LessThan:\n    case Ops.LessThanOrEqualTo:\n    case Ops.GreaterThan:\n    case Ops.GreaterThanOrEqualTo: {\n      return compileComparisonExpression(expression, context);\n    }\n    case Ops.Multiply:\n    case Ops.Divide:\n    case Ops.Add:\n    case Ops.Subtract:\n    case Ops.Clamp:\n    case Ops.Mod:\n    case Ops.Pow:\n    case Ops.Abs:\n    case Ops.Floor:\n    case Ops.Ceil:\n    case Ops.Round:\n    case Ops.Sin:\n    case Ops.Cos:\n    case Ops.Atan:\n    case Ops.Sqrt: {\n      return compileNumericExpression(expression, context);\n    }\n    case Ops.Match: {\n      return compileMatchExpression(expression, context);\n    }\n    case Ops.Interpolate: {\n      return compileInterpolateExpression(expression, context);\n    }\n    default: {\n      throw new Error(`Unsupported operator ${operator}`);\n    }\n    // TODO: unimplemented\n    // Ops.GeometryType\n    // Ops.Zoom\n    // Ops.Time\n    // Ops.Between\n    // Ops.Case\n    // Ops.In\n    // Ops.Array\n    // Ops.Color\n    // Ops.Band\n    // Ops.Palette\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAssertionExpression(expression, context) {\n  const type = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (type) {\n    case Ops.Number:\n    case Ops.String: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value === type) {\n            return value;\n          }\n        }\n        throw new Error(`Expected one of the values to be a ${type}`);\n      };\n    }\n    default: {\n      throw new Error(`Unsupported assertion operator ${type}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAccessorExpression(expression, context) {\n  const nameExpression = /** @type {LiteralExpression} */ (expression.args[0]);\n  const name = /** @type {string} */ (nameExpression.value);\n  switch (expression.operator) {\n    case Ops.Get: {\n      return (context) => context.properties[name];\n    }\n    case Ops.Var: {\n      return (context) => context.variables[name];\n    }\n    default: {\n      throw new Error(`Unsupported accessor operator ${expression.operator}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileComparisonExpression(expression, context) {\n  const op = expression.operator;\n  const left = compileExpression(expression.args[0], context);\n  const right = compileExpression(expression.args[1], context);\n  switch (op) {\n    case Ops.Equal: {\n      return (context) => left(context) === right(context);\n    }\n    case Ops.NotEqual: {\n      return (context) => left(context) !== right(context);\n    }\n    case Ops.LessThan: {\n      return (context) => left(context) < right(context);\n    }\n    case Ops.LessThanOrEqualTo: {\n      return (context) => left(context) <= right(context);\n    }\n    case Ops.GreaterThan: {\n      return (context) => left(context) > right(context);\n    }\n    case Ops.GreaterThanOrEqualTo: {\n      return (context) => left(context) >= right(context);\n    }\n    default: {\n      throw new Error(`Unsupported comparison operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileLogicalExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Any: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.All: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (!args[i](context)) {\n            return false;\n          }\n        }\n        return true;\n      };\n    }\n    case Ops.Not: {\n      return (context) => !args[0](context);\n    }\n    default: {\n      throw new Error(`Unsupported logical operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {NumberEvaluator} The evaluator function.\n */\nfunction compileNumericExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Multiply: {\n      return (context) => {\n        let value = 1;\n        for (let i = 0; i < length; ++i) {\n          value *= args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Divide: {\n      return (context) => args[0](context) / args[1](context);\n    }\n    case Ops.Add: {\n      return (context) => {\n        let value = 0;\n        for (let i = 0; i < length; ++i) {\n          value += args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Subtract: {\n      return (context) => args[0](context) - args[1](context);\n    }\n    case Ops.Clamp: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        if (value < min) {\n          return min;\n        }\n        const max = args[2](context);\n        if (value > max) {\n          return max;\n        }\n        return value;\n      };\n    }\n    case Ops.Mod: {\n      return (context) => args[0](context) % args[1](context);\n    }\n    case Ops.Pow: {\n      return (context) => Math.pow(args[0](context), args[1](context));\n    }\n    case Ops.Abs: {\n      return (context) => Math.abs(args[0](context));\n    }\n    case Ops.Floor: {\n      return (context) => Math.floor(args[0](context));\n    }\n    case Ops.Ceil: {\n      return (context) => Math.ceil(args[0](context));\n    }\n    case Ops.Round: {\n      return (context) => Math.round(args[0](context));\n    }\n    case Ops.Sin: {\n      return (context) => Math.sin(args[0](context));\n    }\n    case Ops.Cos: {\n      return (context) => Math.cos(args[0](context));\n    }\n    case Ops.Atan: {\n      if (length === 2) {\n        return (context) => Math.atan2(args[0](context), args[1](context));\n      }\n      return (context) => Math.atan(args[0](context));\n    }\n    case Ops.Sqrt: {\n      return (context) => Math.sqrt(args[0](context));\n    }\n    default: {\n      throw new Error(`Unsupported numeric operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileMatchExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const value = args[0](context);\n    for (let i = 1; i < length; i += 2) {\n      if (value === args[i](context)) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileInterpolateExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const base = args[0](context);\n    const value = args[1](context);\n\n    let previousInput;\n    let previousOutput;\n    for (let i = 2; i < length; i += 2) {\n      const input = args[i](context);\n      let output = args[i + 1](context);\n      const isColor = Array.isArray(output);\n      if (isColor) {\n        output = withAlpha(output);\n      }\n      if (input >= value) {\n        if (i === 2) {\n          return output;\n        }\n        if (isColor) {\n          return interpolateColor(\n            base,\n            value,\n            previousInput,\n            previousOutput,\n            input,\n            output\n          );\n        }\n        return interpolateNumber(\n          base,\n          value,\n          previousInput,\n          previousOutput,\n          input,\n          output\n        );\n      }\n      previousInput = input;\n      previousOutput = output;\n    }\n    return previousOutput;\n  };\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {number} output1 The first output value.\n * @param {number} input2 The second input value.\n * @param {number} output2 The second output value.\n * @return {number} The interpolated value.\n */\nfunction interpolateNumber(base, value, input1, output1, input2, output2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return output1;\n  }\n  const along = value - input1;\n  const factor =\n    base === 1\n      ? along / delta\n      : (Math.pow(base, along) - 1) / (Math.pow(base, delta) - 1);\n  return output1 + factor * (output2 - output1);\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {import('../color.js').Color} rgba1 The first output value.\n * @param {number} input2 The second input value.\n * @param {import('../color.js').Color} rgba2 The second output value.\n * @return {import('../color.js').Color} The interpolated color.\n */\nfunction interpolateColor(base, value, input1, rgba1, input2, rgba2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return rgba1;\n  }\n  const lcha1 = rgbaToLcha(rgba1);\n  const lcha2 = rgbaToLcha(rgba2);\n  let deltaHue = lcha2[2] - lcha1[2];\n  if (deltaHue > 180) {\n    deltaHue -= 360;\n  } else if (deltaHue < -180) {\n    deltaHue += 360;\n  }\n\n  const lcha = [\n    interpolateNumber(base, value, input1, lcha1[0], input2, lcha2[0]),\n    interpolateNumber(base, value, input1, lcha1[1], input2, lcha2[1]),\n    lcha1[2] + interpolateNumber(base, value, input1, 0, input2, deltaHue),\n    interpolateNumber(base, value, input1, rgba1[3], input2, rgba2[3]),\n  ];\n  return normalize(lchaToRgba(lcha));\n}\n","/**\n * @module ol/render/canvas/style\n */\n\nimport Circle from '../../style/Circle.js';\nimport Fill from '../../style/Fill.js';\nimport Icon from '../../style/Icon.js';\nimport RegularShape from '../../style/RegularShape.js';\nimport Stroke from '../../style/Stroke.js';\nimport Style from '../../style/Style.js';\nimport Text from '../../style/Text.js';\nimport {\n  BooleanType,\n  ColorType,\n  NumberArrayType,\n  NumberType,\n  StringType,\n  newParsingContext,\n} from '../../expr/expression.js';\nimport {buildExpression, newEvaluationContext} from '../../expr/cpu.js';\nimport {isEmpty} from '../../obj.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @fileoverview This module includes functions to build styles for the canvas renderer.  Building\n * is composed of two steps: parsing and compiling.  The parsing step takes an encoded expression\n * and returns an instance of one of the expression classes.  The compiling step takes the\n * expression instance and returns a function that can be evaluated to return a literal value.  The\n * evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {import(\"../../style/flat.js\").FlatStyle} FlatStyle\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").EncodedExpression} EncodedExpression\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").ParsingContext} ParsingContext\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").CallExpression} CallExpression\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").EvaluationContext} EvaluationContext\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").ExpressionEvaluator} ExpressionEvaluator\n */\n\n/**\n * @param {EvaluationContext} context The evaluation context.\n * @return {boolean} Always true.\n */\nfunction always(context) {\n  return true;\n}\n\n/**\n * This function adapts a rule evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function rulesToStyleFunction(rules) {\n  const parsingContext = newParsingContext();\n  const evaluator = buildRuleSet(rules, parsingContext);\n  const evaluationContext = newEvaluationContext();\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    return evaluator(evaluationContext);\n  };\n}\n\n/**\n * This function adapts a style evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').FlatStyle>} flatStyles The flat styles.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function flatStylesToStyleFunction(flatStyles) {\n  const parsingContext = newParsingContext();\n  const length = flatStyles.length;\n\n  /**\n   * @type {Array<StyleEvaluator>}\n   */\n  const evaluators = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    evaluators[i] = buildStyle(flatStyles[i], parsingContext);\n  }\n  const evaluationContext = newEvaluationContext();\n\n  /**\n   * @type {Array<Style>}\n   */\n  const styles = new Array(length);\n\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    let nonNullCount = 0;\n    for (let i = 0; i < length; ++i) {\n      const style = evaluators[i](evaluationContext);\n      if (style) {\n        styles[nonNullCount] = style;\n        nonNullCount += 1;\n      }\n    }\n    styles.length = nonNullCount;\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Array<Style>} RuleSetEvaluator\n */\n\n/**\n * @typedef {Object} CompiledRule\n * @property {ExpressionEvaluator} filter The compiled filter evaluator.\n * @property {Array<StyleEvaluator>} styles The list of compiled style evaluators.\n */\n\n/**\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @param {ParsingContext} context The parsing context.\n * @return {RuleSetEvaluator} The evaluator function.\n */\nexport function buildRuleSet(rules, context) {\n  const length = rules.length;\n\n  /**\n   * @type {Array<CompiledRule>}\n   */\n  const compiledRules = new Array(length);\n\n  for (let i = 0; i < length; ++i) {\n    const rule = rules[i];\n    const filter =\n      'filter' in rule\n        ? buildExpression(rule.filter, BooleanType, context)\n        : always;\n\n    /**\n     * @type {Array<StyleEvaluator>}\n     */\n    let styles;\n    if (Array.isArray(rule.style)) {\n      const styleLength = rule.style.length;\n      styles = new Array(styleLength);\n      for (let j = 0; j < styleLength; ++j) {\n        styles[j] = buildStyle(rule.style[j], context);\n      }\n    } else {\n      styles = [buildStyle(rule.style, context)];\n    }\n\n    compiledRules[i] = {filter, styles};\n  }\n\n  return function (context) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = [];\n\n    let someMatched = false;\n    for (let i = 0; i < length; ++i) {\n      const filterEvaluator = compiledRules[i].filter;\n      if (!filterEvaluator(context)) {\n        continue;\n      }\n      if (rules[i].else && someMatched) {\n        continue;\n      }\n      someMatched = true;\n      for (const styleEvaluator of compiledRules[i].styles) {\n        const style = styleEvaluator(context);\n        if (!style) {\n          continue;\n        }\n        styles.push(style);\n      }\n    }\n\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Style|null} StyleEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @param {ParsingContext} context The parsing context.\n * @return {StyleEvaluator} A function that evaluates to a style.  The style returned by\n * this function will be reused between invocations.\n */\nexport function buildStyle(flatStyle, context) {\n  const evaluateFill = buildFill(flatStyle, '', context);\n  const evaluateStroke = buildStroke(flatStyle, '', context);\n  const evaluateText = buildText(flatStyle, context);\n  const evaluateImage = buildImage(flatStyle, context);\n  const evaluateZIndex = numberEvaluator(flatStyle, 'z-index', context);\n\n  if (\n    !evaluateFill &&\n    !evaluateStroke &&\n    !evaluateText &&\n    !evaluateImage &&\n    !isEmpty(flatStyle)\n  ) {\n    // assume this is a user error\n    // would be nice to check the properties and suggest \"did you mean...\"\n    throw new Error(\n      'No fill, stroke, point, or text symbolizer properties in style: ' +\n        JSON.stringify(flatStyle)\n    );\n  }\n\n  const style = new Style();\n  return function (context) {\n    let empty = true;\n    if (evaluateFill) {\n      const fill = evaluateFill(context);\n      if (fill) {\n        empty = false;\n      }\n      style.setFill(fill);\n    }\n    if (evaluateStroke) {\n      const stroke = evaluateStroke(context);\n      if (stroke) {\n        empty = false;\n      }\n      style.setStroke(stroke);\n    }\n    if (evaluateText) {\n      const text = evaluateText(context);\n      if (text) {\n        empty = false;\n      }\n      style.setText(text);\n    }\n    if (evaluateImage) {\n      const image = evaluateImage(context);\n      if (image) {\n        empty = false;\n      }\n      style.setImage(image);\n    }\n    if (evaluateZIndex) {\n      style.setZIndex(evaluateZIndex(context));\n    }\n    if (empty) {\n      return null;\n    }\n    return style;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Fill|null} FillEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {FillEvaluator?} A function that evaluates to a fill.\n */\nfunction buildFill(flatStyle, prefix, context) {\n  const evaluateColor = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'fill-color',\n    context\n  );\n  if (!evaluateColor) {\n    return null;\n  }\n\n  const fill = new Fill();\n  return function (context) {\n    const color = evaluateColor(context);\n    if (color === 'none') {\n      return null;\n    }\n    fill.setColor(color);\n    return fill;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Stroke|null} StrokeEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {StrokeEvaluator?} A function the evaluates to a stroke.\n */\nfunction buildStroke(flatStyle, prefix, context) {\n  const evaluateWidth = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-width',\n    context\n  );\n\n  const evaluateColor = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'stroke-color',\n    context\n  );\n\n  if (!evaluateWidth && !evaluateColor) {\n    return null;\n  }\n\n  const evaluateLineCap = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-cap',\n    context\n  );\n\n  const evaluateLineJoin = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-join',\n    context\n  );\n\n  const evaluateLineDash = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash',\n    context\n  );\n\n  const evaluateLineDashOffset = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash-offset',\n    context\n  );\n\n  const evaluateMiterLimit = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-miter-limit',\n    context\n  );\n\n  const stroke = new Stroke();\n  return function (context) {\n    if (evaluateColor) {\n      const color = evaluateColor(context);\n      if (color === 'none') {\n        return null;\n      }\n      stroke.setColor(color);\n    }\n\n    if (evaluateWidth) {\n      stroke.setWidth(evaluateWidth(context));\n    }\n\n    if (evaluateLineCap) {\n      const lineCap = evaluateLineCap(context);\n      if (lineCap !== 'butt' && lineCap !== 'round' && lineCap !== 'square') {\n        throw new Error('Expected butt, round, or square line cap');\n      }\n      stroke.setLineCap(lineCap);\n    }\n\n    if (evaluateLineJoin) {\n      const lineJoin = evaluateLineJoin(context);\n      if (\n        lineJoin !== 'bevel' &&\n        lineJoin !== 'round' &&\n        lineJoin !== 'miter'\n      ) {\n        throw new Error('Expected bevel, round, or miter line join');\n      }\n      stroke.setLineJoin(lineJoin);\n    }\n\n    if (evaluateLineDash) {\n      stroke.setLineDash(evaluateLineDash(context));\n    }\n\n    if (evaluateLineDashOffset) {\n      stroke.setLineDashOffset(evaluateLineDashOffset(context));\n    }\n\n    if (evaluateMiterLimit) {\n      stroke.setMiterLimit(evaluateMiterLimit(context));\n    }\n\n    return stroke;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Text} TextEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {TextEvaluator?} A function that evaluates to a text symbolizer.\n */\nfunction buildText(flatStyle, context) {\n  const prefix = 'text-';\n\n  // Currently, an Array<string> may be used for rich text support.  This doesn't\n  // work with our expression syntax where arrays of strings are interpreted as\n  // call expressions.  To support rich text, we could add a 'strings' operator\n  // where all the following arguments would be string values.\n  const evaluateValue = stringEvaluator(flatStyle, prefix + 'value', context);\n  if (!evaluateValue) {\n    return null;\n  }\n\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n\n  const evaluateBackgroundFill = buildFill(\n    flatStyle,\n    prefix + 'background-',\n    context\n  );\n\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n\n  const evaluateBackgroundStroke = buildStroke(\n    flatStyle,\n    prefix + 'background-',\n    context\n  );\n\n  const evaluateFont = stringEvaluator(flatStyle, prefix + 'font', context);\n\n  const evaluateMaxAngle = numberEvaluator(\n    flatStyle,\n    prefix + 'max-angle',\n    context\n  );\n\n  const evaluateOffsetX = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-x',\n    context\n  );\n\n  const evaluateOffsetY = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-y',\n    context\n  );\n\n  const evaluateOverflow = booleanEvaluator(\n    flatStyle,\n    prefix + 'overflow',\n    context\n  );\n\n  const evaluatePlacement = stringEvaluator(\n    flatStyle,\n    prefix + 'placement',\n    context\n  );\n\n  const evaluateRepeat = numberEvaluator(flatStyle, prefix + 'repeat', context);\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context\n  );\n\n  const evaluateAlign = stringEvaluator(flatStyle, prefix + 'align', context);\n\n  const evaluateJustify = stringEvaluator(\n    flatStyle,\n    prefix + 'justify',\n    context\n  );\n\n  const evaluateBaseline = stringEvaluator(\n    flatStyle,\n    prefix + 'baseline',\n    context\n  );\n\n  const evaluatePadding = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'padding',\n    context\n  );\n\n  const text = new Text({});\n  return function (context) {\n    text.setText(evaluateValue(context));\n\n    if (evaluateFill) {\n      text.setFill(evaluateFill(context));\n    }\n\n    if (evaluateBackgroundFill) {\n      text.setBackgroundFill(evaluateBackgroundFill(context));\n    }\n\n    if (evaluateStroke) {\n      text.setStroke(evaluateStroke(context));\n    }\n\n    if (evaluateBackgroundStroke) {\n      text.setBackgroundStroke(evaluateBackgroundStroke(context));\n    }\n\n    if (evaluateFont) {\n      text.setFont(evaluateFont(context));\n    }\n\n    if (evaluateMaxAngle) {\n      text.setMaxAngle(evaluateMaxAngle(context));\n    }\n\n    if (evaluateOffsetX) {\n      text.setOffsetX(evaluateOffsetX(context));\n    }\n\n    if (evaluateOffsetY) {\n      text.setOffsetY(evaluateOffsetY(context));\n    }\n\n    if (evaluateOverflow) {\n      text.setOverflow(evaluateOverflow(context));\n    }\n\n    if (evaluatePlacement) {\n      const placement = evaluatePlacement(context);\n      if (placement !== 'point' && placement !== 'line') {\n        throw new Error('Expected point or line for text-placement');\n      }\n      text.setPlacement(placement);\n    }\n\n    if (evaluateRepeat) {\n      text.setRepeat(evaluateRepeat(context));\n    }\n\n    if (evaluateScale) {\n      text.setScale(evaluateScale(context));\n    }\n\n    if (evaluateRotateWithView) {\n      text.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateRotation) {\n      text.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateAlign) {\n      const textAlign = evaluateAlign(context);\n      if (\n        textAlign !== 'left' &&\n        textAlign !== 'center' &&\n        textAlign !== 'right' &&\n        textAlign !== 'end' &&\n        textAlign !== 'start'\n      ) {\n        throw new Error(\n          'Expected left, right, center, start, or end for text-align'\n        );\n      }\n      text.setTextAlign(textAlign);\n    }\n\n    if (evaluateJustify) {\n      const justify = evaluateJustify(context);\n      if (justify !== 'left' && justify !== 'right' && justify !== 'center') {\n        throw new Error('Expected left, right, or center for text-justify');\n      }\n      text.setJustify(justify);\n    }\n\n    if (evaluateBaseline) {\n      const textBaseline = evaluateBaseline(context);\n      if (\n        textBaseline !== 'bottom' &&\n        textBaseline !== 'top' &&\n        textBaseline !== 'middle' &&\n        textBaseline !== 'alphabetic' &&\n        textBaseline !== 'hanging'\n      ) {\n        throw new Error(\n          'Expected bottom, top, middle, alphabetic, or hanging for text-baseline'\n        );\n      }\n      text.setTextBaseline(textBaseline);\n    }\n\n    if (evaluatePadding) {\n      text.setPadding(evaluatePadding(context));\n    }\n\n    return text;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"../../style/Image.js\").default} ImageEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator?} A function that evaluates to an image symbolizer.\n */\nfunction buildImage(flatStyle, context) {\n  if ('icon-src' in flatStyle) {\n    return buildIcon(flatStyle, context);\n  }\n\n  if ('shape-points' in flatStyle) {\n    return buildShape(flatStyle, context);\n  }\n\n  if ('circle-radius' in flatStyle) {\n    return buildCircle(flatStyle, context);\n  }\n\n  return null;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an image symbolizer.\n */\nfunction buildIcon(flatStyle, context) {\n  const prefix = 'icon-';\n\n  // required property\n  const srcName = prefix + 'src';\n  const src = requireString(flatStyle[srcName], srcName);\n\n  // settable properties\n  const evaluateAnchor = coordinateEvaluator(\n    flatStyle,\n    prefix + 'anchor',\n    context\n  );\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateOpacity = numberEvaluator(\n    flatStyle,\n    prefix + 'opacity',\n    context\n  );\n\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context\n  );\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context\n  );\n\n  // the remaining symbolizer properties are not currently settable\n  const anchorOrigin = optionalIconOrigin(flatStyle, prefix + 'anchor-origin');\n  const anchorXUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-x-units'\n  );\n  const anchorYUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-y-units'\n  );\n  const color = optionalColorLike(flatStyle, prefix + 'color');\n  const crossOrigin = optionalString(flatStyle, prefix + 'cross-origin');\n  const offset = optionalNumberArray(flatStyle, prefix + 'offset');\n  const offsetOrigin = optionalIconOrigin(flatStyle, prefix + 'offset-origin');\n  const width = optionalNumber(flatStyle, prefix + 'width');\n  const height = optionalNumber(flatStyle, prefix + 'height');\n  const size = optionalSize(flatStyle, prefix + 'size');\n  const declutterMode = optionalDeclutterMode(flatStyle, prefix + 'declutter');\n\n  const icon = new Icon({\n    src,\n    anchorOrigin,\n    anchorXUnits,\n    anchorYUnits,\n    color,\n    crossOrigin,\n    offset,\n    offsetOrigin,\n    height,\n    width,\n    size,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateOpacity) {\n      icon.setOpacity(evaluateOpacity(context));\n    }\n\n    if (evaluateDisplacement) {\n      icon.setDisplacement(evaluateDisplacement(context));\n    }\n\n    if (evaluateRotation) {\n      icon.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateRotateWithView) {\n      icon.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateScale) {\n      icon.setScale(evaluateScale(context));\n    }\n\n    if (evaluateAnchor) {\n      icon.setAnchor(evaluateAnchor(context));\n    }\n    return icon;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an icon symbolizer.\n */\nfunction buildShape(flatStyle, context) {\n  const prefix = 'shape-';\n\n  // required property\n  const pointsName = prefix + 'points';\n  const points = requireNumber(flatStyle[pointsName], pointsName);\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context\n  );\n\n  // the remaining properties are not currently settable\n  const radius = optionalNumber(flatStyle, prefix + 'radius');\n  const radius1 = optionalNumber(flatStyle, prefix + 'radius1');\n  const radius2 = optionalNumber(flatStyle, prefix + 'radius2');\n  const angle = optionalNumber(flatStyle, prefix + 'angle');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode'\n  );\n\n  const shape = new RegularShape({\n    points,\n    radius,\n    radius1,\n    radius2,\n    angle,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateFill) {\n      shape.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      shape.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      shape.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      shape.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      shape.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      shape.setScale(evaluateScale(context));\n    }\n\n    return shape;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to a circle symbolizer.\n */\nfunction buildCircle(flatStyle, context) {\n  const prefix = 'circle-';\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateRadius = numberEvaluator(flatStyle, prefix + 'radius', context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context\n  );\n\n  // the remaining properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode'\n  );\n\n  const circle = new Circle({\n    radius: 5, // this is arbitrary, but required - the evaluated radius is used below\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateRadius) {\n      circle.setRadius(evaluateRadius(context));\n    }\n    if (evaluateFill) {\n      circle.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      circle.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      circle.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      circle.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      circle.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      circle.setScale(evaluateScale(context));\n    }\n\n    return circle;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberEvaluator|undefined} The expression evaluator or undefined.\n */\nfunction numberEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return undefined;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberType, context);\n  return function (context) {\n    return requireNumber(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').StringEvaluator?} The expression evaluator.\n */\nfunction stringEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], StringType, context);\n  return function (context) {\n    return requireString(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').BooleanEvaluator?} The expression evaluator.\n */\nfunction booleanEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], BooleanType, context);\n  return function (context) {\n    const value = evaluator(context);\n    if (typeof value !== 'boolean') {\n      throw new Error(`Expected a boolean for ${name}`);\n    }\n    return value;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').ColorLikeEvaluator?} The expression evaluator.\n */\nfunction colorLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    ColorType | StringType,\n    context\n  );\n  return function (context) {\n    return requireColorLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberArrayEvaluator?} The expression evaluator.\n */\nfunction numberArrayEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireNumberArray(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').CoordinateEvaluator?} The expression evaluator.\n */\nfunction coordinateEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    const array = requireNumberArray(evaluator(context), name);\n    if (array.length !== 2) {\n      throw new Error(`Expected two numbers for ${name}`);\n    }\n    return array;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeLikeEvaluator?} The expression evaluator.\n */\nfunction sizeLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    NumberArrayType | NumberType,\n    context\n  );\n  return function (context) {\n    return requireSizeLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {number|undefined} A number or undefined.\n */\nfunction optionalNumber(flatStyle, property) {\n  const value = flatStyle[property];\n  if (value === undefined) {\n    return undefined;\n  }\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../size.js\").Size|undefined} A size or undefined.\n */\nfunction optionalSize(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded === 'number') {\n    return toSize(encoded);\n  }\n  if (!Array.isArray(encoded)) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  if (\n    encoded.length !== 2 ||\n    typeof encoded[0] !== 'number' ||\n    typeof encoded[1] !== 'number'\n  ) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|undefined} A string or undefined.\n */\nfunction optionalString(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconOrigin|undefined} An icon origin or undefined.\n */\nfunction optionalIconOrigin(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (\n    encoded !== 'bottom-left' &&\n    encoded !== 'bottom-right' &&\n    encoded !== 'top-left' &&\n    encoded !== 'top-right'\n  ) {\n    throw new Error(\n      `Expected bottom-left, bottom-right, top-left, or top-right for ${property}`\n    );\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconAnchorUnits|undefined} Icon anchor units or undefined.\n */\nfunction optionalIconAnchorUnits(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (encoded !== 'pixels' && encoded !== 'fraction') {\n    throw new Error(`Expected pixels or fraction for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {Array<number>|undefined} An array of numbers or undefined.\n */\nfunction optionalNumberArray(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireNumberArray(encoded, property);\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {\"declutter\"|\"obstacle\"|\"none\"|undefined} Icon declutter mode.\n */\nfunction optionalDeclutterMode(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  if (encoded !== 'declutter' && encoded !== 'obstacle' && encoded !== 'none') {\n    throw new Error(`Expected declutter, obstacle, or none for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|Array<number>|undefined} A string or an array of color values or undefined.\n */\nfunction optionalColorLike(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireColorLike(encoded, property);\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} An array of numbers.\n */\nfunction requireNumberArray(value, property) {\n  if (!Array.isArray(value)) {\n    throw new Error(`Expected an array for ${property}`);\n  }\n  const length = value.length;\n  for (let i = 0; i < length; ++i) {\n    if (typeof value[i] !== 'number') {\n      throw new Error(`Expected an array of numbers for ${property}`);\n    }\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {string} A string.\n */\nfunction requireString(value, property) {\n  if (typeof value !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number} A number.\n */\nfunction requireNumber(value, property) {\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>|string} A color.\n */\nfunction requireColorLike(value, property) {\n  if (typeof value === 'string') {\n    return value;\n  }\n  const array = requireNumberArray(value, property);\n  const length = array.length;\n  if (length < 3 || length > 4) {\n    throw new Error(`Expected a color with 3 or 4 values for ${property}`);\n  }\n  return array;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number|Array<number>} A number or an array of two numbers.\n */\nfunction requireSizeLike(value, property) {\n  if (typeof value === 'number') {\n    return value;\n  }\n  const size = requireNumberArray(value, property);\n  if (size.length !== 2) {\n    throw new Error(`Expected an array of two numbers for ${property}`);\n  }\n  return size;\n}\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport {\n  flatStylesToStyleFunction,\n  rulesToStyleFunction,\n} from '../render/canvas/style.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @extends {Layer<VectorSourceType, RendererType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ =\n      options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!frameState.declutterTree) {\n      frameState.declutterTree = new RBush(9);\n    }\n    /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use [flat style]{@link module:ol/style/flat~FlatStyle} object\n   * literals instead of using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.):\n   * ```js\n   * vectorLayer.setStyle({\n   *   \"fill-color\": \"yellow\",\n   *   \"stroke-color\": \"black\",\n   *   \"stroke-width\": 4\n   * })\n   * ```\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    this.style_ = toStyleLike(style);\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\n/**\n * Coerce the allowed style types into a shorter list of types.  Flat styles, arrays of flat\n * styles, and arrays of rules are converted into style functions.\n *\n * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n * @return {import(\"../style/Style.js\").StyleLike|null} The style.\n */\nfunction toStyleLike(style) {\n  if (style === undefined) {\n    return createDefaultStyle;\n  }\n  if (!style) {\n    return null;\n  }\n  if (typeof style === 'function') {\n    return style;\n  }\n  if (style instanceof Style) {\n    return style;\n  }\n  if (!Array.isArray(style)) {\n    return flatStylesToStyleFunction([style]);\n  }\n  if (style.length === 0) {\n    return [];\n  }\n\n  const length = style.length;\n  const first = style[0];\n\n  if (first instanceof Style) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!(candidate instanceof Style)) {\n        throw new Error('Expected a list of style instances');\n      }\n      styles[i] = candidate;\n    }\n    return styles;\n  }\n\n  if ('style' in first) {\n    /**\n     * @type Array<import(\"../style/flat.js\").Rule>\n     */\n    const rules = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!('style' in candidate)) {\n        throw new Error('Expected a list of rules with a style property');\n      }\n      rules[i] = candidate;\n    }\n    return rulesToStyleFunction(rules);\n  }\n\n  const flatStyles =\n    /** @type {Array<import(\"../style/flat.js\").FlatStyle>} */ (style);\n  return flatStylesToStyleFunction(flatStyles);\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {\n    this.beginGeometry(geometry, feature);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case 'MultiPolygon':\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        break;\n      case 'Polygon':\n      case 'MultiLineString':\n        builderEnds = [];\n        flatCoordinates =\n          type == 'Polygon'\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n        ]);\n        break;\n      case 'LineString':\n      case 'Circle':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n        ]);\n        break;\n      case 'MultiPoint':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n          ]);\n        }\n        break;\n      case 'Point':\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n    this.image_ = imageStyle.getImage(this.pixelRatio);\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterMode_ = imageStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {\n  defaultFillStyle,\n  defaultLineDash,\n  defaultLineDashOffset,\n} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","import {lerp} from '../../math.js';\n\n/**\n * Creates chunks of equal length from a linestring\n * @param {number} chunkLength Length of each chunk.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @return {Array<Array<number>>} Chunks of linestrings with stride 2.\n */\nexport function lineChunk(chunkLength, flatCoordinates, offset, end, stride) {\n  const chunks = [];\n  let cursor = offset;\n  let chunkM = 0;\n  let currentChunk = flatCoordinates.slice(offset, 2);\n  while (chunkM < chunkLength && cursor + stride < end) {\n    const [x1, y1] = currentChunk.slice(-2);\n    const x2 = flatCoordinates[cursor + stride];\n    const y2 = flatCoordinates[cursor + stride + 1];\n    const segmentLength = Math.sqrt(\n      (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1)\n    );\n    chunkM += segmentLength;\n    if (chunkM >= chunkLength) {\n      const m = (chunkLength - chunkM + segmentLength) / segmentLength;\n      const x = lerp(x1, x2, m);\n      const y = lerp(y1, y2, m);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      if (chunkM == chunkLength) {\n        cursor += stride;\n      }\n      chunkM = 0;\n    } else if (chunkM < chunkLength) {\n      currentChunk.push(\n        flatCoordinates[cursor + stride],\n        flatCoordinates[cursor + stride + 1]\n      );\n      cursor += stride;\n    } else {\n      const missing = segmentLength - chunkM;\n      const x = lerp(x1, x2, missing / segmentLength);\n      const y = lerp(y1, y2, missing / segmentLength);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      chunkM = 0;\n      cursor += stride;\n    }\n  }\n  if (chunkM > 0) {\n    chunks.push(currentChunk);\n  }\n  return chunks;\n}\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {lineChunk} from '../../geom/flat/linechunk.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @type {{left: 0, center: 0.5, right: 1, top: 0, middle: 0.5, hanging: 0.2, alphabetic: 0.8, ideographic: 0.8, bottom: 1}}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'center': 0.5,\n  'right': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n    this.fillStates[defaultFillStyle] = {fillStyle: defaultFillStyle};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === 'line' &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const repeat = textState.repeat;\n      const textAlign = repeat ? undefined : textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        let chunks;\n        if (repeat) {\n          chunks = lineChunk(\n            repeat * this.resolution,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride\n          );\n        } else {\n          chunks = [flatCoordinates.slice(flatOffset, ends[o])];\n        }\n        for (let c = 0, cc = chunks.length; c < cc; ++c) {\n          const chunk = chunks[c];\n          let chunkBegin = 0;\n          let chunkEnd = chunk.length;\n          if (textAlign == undefined) {\n            const range = matchingChunk(\n              textState.maxAngle,\n              chunk,\n              0,\n              chunk.length,\n              2\n            );\n            chunkBegin = range[0];\n            chunkEnd = range[1];\n          }\n          for (let i = chunkBegin; i < chunkEnd; i += stride) {\n            coordinates.push(chunk[i], chunk[i + 1]);\n          }\n          const end = coordinates.length;\n          flatOffset = ends[o];\n          this.drawChars_(begin, end);\n          begin = end;\n        }\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      // Set default fill for hit detection background\n      const currentFillStyle = this.state.fillStyle;\n      if (textState.backgroundFill) {\n        this.state.fillStyle = defaultFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_ ? defaultFillStyle : this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      // Reset previous fill\n      if (textState.backgroundFill) {\n        this.state.fillStyle = currentFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey ? defaultFillStyle : fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1 / pixelRatio,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setTextStyle(textStyle, sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.repeat = textStyle.getRepeat();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.repeat || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ = fillState\n        ? typeof fillState.fillStyle == 'string'\n          ? fillState.fillStyle\n          : '|' + getUid(fillState.fillStyle)\n        : '';\n    }\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  // rendering across line segments\n  text = text.replace(/\\n/g, ' '); // ensure rendering in single-line as all calculations below don't handle multi-lines\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {CanvasTextAlign} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if (align === 'start') {\n    align = rtlRegEx.test(text) ? 'right' : 'left';\n  } else if (align === 'end') {\n    align = rtlRegEx.test(text) ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const textIsArray = Array.isArray(text);\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = textIsArray\n      ? text\n      : text.split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction)\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    contextScale,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= canvas.width / contextScale &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= canvas.height / contextScale &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction)\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context['strokeStyle'] =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    contextScale,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    hitExtent,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            hitExtent !== undefined &&\n            !intersects(hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          const declutterMode =\n            /** @type {\"declutter\"|\"obstacle\"|\"none\"|undefined} */ (\n              instruction[14]\n            );\n          const declutterImageWithText =\n            /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFill = /** @type {boolean} */ (instruction[17]);\n            backgroundStroke = /** @type {boolean} */ (instruction[18]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              contextScale,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            if (declutterTree) {\n              if (declutterMode === 'none') {\n                // not rendered in declutter group\n                continue;\n              } else if (declutterMode === 'obstacle') {\n                // will always be drawn, thus no collision detection, but insert as obstacle\n                declutterTree.insert(dimensions.declutterBox);\n                continue;\n              } else {\n                let imageArgs;\n                let imageDeclutterBox;\n                if (declutterImageWithText) {\n                  const index = dd - d;\n                  if (!declutterImageWithText[index]) {\n                    // We now have the image for an image+text combination.\n                    declutterImageWithText[index] = args;\n                    // Don't render anything for now, wait for the text.\n                    continue;\n                  }\n                  imageArgs = declutterImageWithText[index];\n                  delete declutterImageWithText[index];\n                  imageDeclutterBox = getDeclutterBox(imageArgs);\n                  if (declutterTree.collides(imageDeclutterBox)) {\n                    continue;\n                  }\n                }\n                if (declutterTree.collides(dimensions.declutterBox)) {\n                  continue;\n                }\n                if (imageArgs) {\n                  // We now have image and text for an image+text combination.\n                  declutterTree.insert(imageDeclutterBox);\n                  // Render the image before we render the text.\n                  this.replayImageOrLabel_.apply(this, imageArgs);\n                }\n                declutterTree.insert(dimensions.declutterBox);\n              }\n            }\n            this.replayImageOrLabel_.apply(this, args);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM =\n              (pathLength - textLength) * horizontalTextAlign(text, textAlign);\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (declutterTree) {\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle =\n            /** @type {import(\"../../colorlike.js\").ColorLike} */ (\n              instruction[1]\n            );\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    declutterTree\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      contextScale,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      declutterTree\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    featureCallback,\n    hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      1,\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      featureCallback,\n      hitExtent\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport Executor from './Executor.js';\nimport {ascending} from '../../array.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nconst ORDER = ['Polygon', 'Circle', 'LineString', 'Image', 'Text', 'Default'];\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [renderBuffer] Optional rendering buffer.\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    renderBuffer\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  createExecutors_(allInstructions) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1]\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize,\n        undefined,\n        {willReadFrequently: true}\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== 'Image' && builderType !== 'Text') ||\n            declutteredFeatures.includes(feature)\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>|null} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    builderTypes,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    builderTypes = builderTypes ? builderTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    if (declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          replay.execute(\n            context,\n            contextScale,\n            transform,\n            viewRotation,\n            snapToPixel,\n            declutterTree\n          );\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {toFixed} from '../../math.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.transformRotation_ = transform\n      ? toFixed(Math.atan2(transform[1], transform[0]), 10)\n      : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY\n        );\n        context.save();\n        context.transform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n        context.restore();\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.save();\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.restore();\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Circle.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry)\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry)\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry)\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride()\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash)\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport {Icon} from '../../style.js';\nimport {ascending} from '../../array.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation\n) {\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!featureStyleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = index.toString(16).padStart(7, '#00000');\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(extent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false}\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            anchor: image.getAnchor(),\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          })\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType['Polygon'] = [];\n        byGeometryType['Circle'] = [];\n        byGeometryType['LineString'] = [];\n        byGeometryType['Point'] = [];\n      }\n      const type = geometry.getType();\n      if (type === 'GeometryCollection') {\n        const geometries =\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ).getGeometriesArrayRecursive();\n        for (let i = 0, ii = geometries.length; i < ii; ++i) {\n          const geometry = geometries[i];\n          byGeometryType[geometry.getType().replace('Multi', '')].push(\n            geometry,\n            style\n          );\n        }\n      } else {\n        byGeometryType[type.replace('Multi', '')].push(geometry, style);\n      }\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex).map(Number).sort(ascending);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<F>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<F>} Features.\n * @template {import(\"../../Feature.js\").FeatureLike} F\n */\nexport function hitDetect(pixel, features, imageData) {\n  /** @type {Array<F>} */\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  transform,\n  declutterBuilderGroup\n) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    const imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    transform,\n    declutterBuilderGroup\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  transform,\n  declutterBuilderGroup\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    transform\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer()\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawMultiPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer, {canvasPool} from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport RenderEventType from '../../render/EventType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply,\n  makeInverse,\n  makeScale,\n  toString as transformToString,\n} from '../../transform.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {createCanvasContext2D, releaseCanvas} from '../../dom.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {equals} from '../../array.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n  toUserResolution,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/BaseVector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @type {ImageData|null}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.compositionContext_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = 1;\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  renderWorlds(executorGroup, frameState, declutterTree) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.compositionContext_;\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      const transform = this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth\n      );\n      executorGroup.execute(\n        context,\n        1,\n        transform,\n        rotation,\n        snapToPixel,\n        undefined,\n        declutterTree\n      );\n    } while (++world < endWorld);\n  }\n\n  setupCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const compositionContext = createCanvasContext2D(\n        this.context.canvas.width,\n        this.context.canvas.height,\n        canvasPool\n      );\n      this.compositionContext_ = compositionContext;\n    } else {\n      this.compositionContext_ = this.context;\n    }\n  }\n\n  releaseCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const alpha = this.context.globalAlpha;\n      this.context.globalAlpha = this.opacity_;\n      this.context.drawImage(this.compositionContext_.canvas, 0, 0);\n      this.context.globalAlpha = alpha;\n      releaseCanvas(this.compositionContext_);\n      canvasPool.push(this.compositionContext_.canvas);\n      this.compositionContext_ = null;\n    }\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (this.declutterExecutorGroup) {\n      this.setupCompositionContext_();\n      this.renderWorlds(\n        this.declutterExecutorGroup,\n        frameState,\n        frameState.declutterTree\n      );\n      this.releaseCompositionContext_();\n    }\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const pixelRatio = frameState.pixelRatio;\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n\n    // set forward and inverse pixel transforms\n    makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = transformToString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    const replayGroup = this.replayGroup_;\n    const declutterExecutorGroup = this.declutterExecutorGroup;\n    let render =\n      (replayGroup && !replayGroup.isEmpty()) ||\n      (declutterExecutorGroup && !declutterExecutorGroup.isEmpty());\n    if (!render) {\n      const hasRenderListeners =\n        this.getLayer().hasListener(RenderEventType.PRERENDER) ||\n        this.getLayer().hasListener(RenderEventType.POSTRENDER);\n      if (!hasRenderListeners) {\n        return null;\n      }\n    }\n\n    // resize and clear\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    this.preRender(context, frameState);\n\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n\n    this.opacity_ = layerState.opacity;\n    this.setupCompositionContext_();\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    if (render && layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(this.compositionContext_, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(replayGroup, frameState);\n    }\n\n    if (clipped) {\n      this.compositionContext_.restore();\n    }\n\n    this.releaseCompositionContext_();\n\n    this.postRender(context, frameState);\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise\n   * that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve) => {\n      if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n        const size = [this.context.canvas.width, this.context.canvas.height];\n        apply(this.pixelTransform, size);\n        const center = this.renderedCenter_;\n        const resolution = this.renderedResolution_;\n        const rotation = this.renderedRotation_;\n        const projection = this.renderedProjection_;\n        const extent = this.wrappedRenderedExtent_;\n        const layer = this.getLayer();\n        const transforms = [];\n        const width = size[0] * HIT_DETECT_RESOLUTION;\n        const height = size[1] * HIT_DETECT_RESOLUTION;\n        transforms.push(\n          this.getRenderTransform(\n            center,\n            resolution,\n            rotation,\n            HIT_DETECT_RESOLUTION,\n            width,\n            height,\n            0\n          ).slice()\n        );\n        const source = layer.getSource();\n        const projectionExtent = projection.getExtent();\n        if (\n          source.getWrapX() &&\n          projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)\n        ) {\n          let startX = extent[0];\n          const worldWidth = getWidth(projectionExtent);\n          let world = 0;\n          let offsetX;\n          while (startX < projectionExtent[0]) {\n            --world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX\n              ).slice()\n            );\n            startX += worldWidth;\n          }\n          world = 0;\n          startX = extent[2];\n          while (startX > projectionExtent[2]) {\n            ++world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX\n              ).slice()\n            );\n            startX -= worldWidth;\n          }\n        }\n\n        this.hitDetectionImageData_ = createHitDetectionImageData(\n          size,\n          transforms,\n          this.renderedFeatures_,\n          layer.getStyleFunction(),\n          extent,\n          resolution,\n          rotation\n        );\n      }\n      resolve(\n        hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_)\n      );\n    });\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    if (this.declutterExecutorGroup) {\n      executorGroups.push(this.declutterExecutorGroup);\n    }\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        executorGroup === this.declutterExecutorGroup &&\n          frameState.declutterTree\n          ? frameState.declutterTree.all().map((item) => item.value)\n          : null\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (this.ready && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      this.ready &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio\n    );\n\n    let declutterBuilderGroup;\n    if (this.getLayer().getDeclutter()) {\n      declutterBuilderGroup = new CanvasBuilderGroup(\n        getRenderTolerance(resolution, pixelRatio),\n        extent,\n        resolution,\n        pixelRatio\n      );\n    }\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        const extent = loadExtents[i];\n        const userExtent = toUserExtent(extent, projection);\n        vectorSource.loadFeatures(\n          userExtent,\n          toUserResolution(resolution, projection),\n          userProjection\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n    let ready = true;\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       */\n      (feature) => {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            declutterBuilderGroup\n          );\n          ready = ready && !dirty;\n        }\n      };\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i]);\n    }\n    this.renderedFeatures_ = features;\n    this.ready = ready;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer()\n    );\n\n    if (declutterBuilderGroup) {\n      this.declutterExecutorGroup = new ExecutorGroup(\n        extent,\n        resolution,\n        pixelRatio,\n        vectorSource.getOverlaps(),\n        declutterBuilderGroup.finish(),\n        vectorLayer.getRenderBuffer()\n      );\n    }\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    transform,\n    declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            transform,\n            declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        transform,\n        declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/**\n * @classdesc\n * Vector data is rendered client-side, as vectors. This layer type provides most accurate rendering\n * even during animations. Points and labels stay upright on rotated views. For very large\n * amounts of vector data, performance may suffer during pan and zoom animations. In this case,\n * try {@link module:ol/layer/VectorImage~VectorImageLayer}.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType, CanvasVectorLayerRenderer>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {import(\"./BaseVector.js\").Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>|null} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object<string, unknown>} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {getDistance} from './sphere.js';\nimport {warn} from './console.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  }\n  if (typeof projection === 'string') {\n    return get(projection);\n  }\n  return /** @type {Projection} */ (projection);\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = dimension; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  }\n  const transformFunc = getTransformFromProjections(projection1, projection2);\n  return transformFunc === cloneTransform && equalUnits;\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.'\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceMetersPerUnit = get(sourceProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return sourceMetersPerUnit && userMetersPerUnit\n    ? (resolution * sourceMetersPerUnit) / userMetersPerUnit\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const destMetersPerUnit = get(destProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return destMetersPerUnit && userMetersPerUnit\n    ? (resolution * userMetersPerUnit) / destMetersPerUnit\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destination).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destination).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/render/Feature\n */\nimport Feature from '../Feature.js';\nimport {\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from '../geom.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createOrUpdateFromCoordinate,\n  createOrUpdateFromFlatCoordinates,\n  getCenter,\n  getHeight,\n} from '../extent.js';\nimport {\n  douglasPeucker,\n  douglasPeuckerArray,\n  quantizeArray,\n} from '../geom/flat/simplify.js';\nimport {extend} from '../array.js';\nimport {\n  getInteriorPointOfArray,\n  getInteriorPointsOfMultiArray,\n} from '../geom/flat/interiorpoint.js';\nimport {get as getProjection} from '../proj.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\nimport {interpolatePoint} from '../geom/flat/interpolate.js';\nimport {linearRingss as linearRingssCenter} from '../geom/flat/center.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from '../geom/flat/transform.js';\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'` or 'MultiLineString'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * Lightweight, read-only, {@link module:ol/Feature~Feature} and {@link module:ol/geom/Geometry~Geometry} like\n * structure, optimized for vector tile rendering and styling. Geometry access\n * through the API is limited to getting the type and extent of the geometry.\n */\nclass RenderFeature {\n  /**\n   * @param {Type} type Geometry type.\n   * @param {Array<number>} flatCoordinates Flat coordinates. These always need\n   *     to be right-handed for polygons.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Object<string, *>} properties Properties.\n   * @param {number|string|undefined} id Feature id.\n   */\n  constructor(type, flatCoordinates, ends, stride, properties, id) {\n    /**\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent|undefined}\n     */\n    this.extent_;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = id;\n\n    /**\n     * @private\n     * @type {Type}\n     */\n    this.type_ = type;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatCoordinates_ = flatCoordinates;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatMidpoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.ends_ = ends;\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.properties_ = properties;\n\n    /**\n     * @type {number}\n     */\n    this.squaredTolerance_;\n\n    /**\n     * @type {number}\n     */\n    this.stride_ = stride;\n\n    /**\n     * @private\n     * @type {RenderFeature}\n     */\n    this.simplifiedGeometry_;\n  }\n\n  /**\n   * Get a feature property by its key.\n   * @param {string} key Key\n   * @return {*} Value for the requested key.\n   * @api\n   */\n  get(key) {\n    return this.properties_[key];\n  }\n\n  /**\n   * Get the extent of this feature's geometry.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    if (!this.extent_) {\n      this.extent_ =\n        this.type_ === 'Point'\n          ? createOrUpdateFromCoordinate(this.flatCoordinates_)\n          : createOrUpdateFromFlatCoordinates(\n              this.flatCoordinates_,\n              0,\n              this.flatCoordinates_.length,\n              2\n            );\n    }\n    return this.extent_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoint() {\n    if (!this.flatInteriorPoints_) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoints_ = getInteriorPointOfArray(\n        this.flatCoordinates_,\n        0,\n        /** @type {Array<number>} */ (this.ends_),\n        2,\n        flatCenter,\n        0\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (!this.flatInteriorPoints_) {\n      const ends = inflateEnds(this.flatCoordinates_, this.ends_);\n      const flatCenters = linearRingssCenter(this.flatCoordinates_, 0, ends, 2);\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.flatCoordinates_,\n        0,\n        ends,\n        2,\n        flatCenters\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = interpolatePoint(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        0.5\n      );\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = [];\n      const flatCoordinates = this.flatCoordinates_;\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (this.ends_);\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        const end = ends[i];\n        const midpoint = interpolatePoint(flatCoordinates, offset, end, 2, 0.5);\n        extend(this.flatMidpoints_, midpoint);\n        offset = end;\n      }\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is set when reading data from a remote source.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    return this.flatCoordinates_;\n  }\n\n  /**\n   * For API compatibility with {@link module:ol/Feature~Feature}, this method is useful when\n   * determining the geometry type in style function (see {@link #getType}).\n   * @return {RenderFeature} Feature.\n   * @api\n   */\n  getGeometry() {\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this;\n  }\n\n  /**\n   * Get the feature properties.\n   * @return {Object<string, *>} Feature properties.\n   * @api\n   */\n  getProperties() {\n    return this.properties_;\n  }\n\n  /**\n   * Get an object of all property names and values.  This has the same behavior as getProperties,\n   * but is here to conform with the {@link module:ol/Feature~Feature} interface.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.properties_;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride_;\n  }\n\n  /**\n   * @return {import('../style/Style.js').StyleFunction|undefined} Style\n   */\n  getStyleFunction() {\n    return this.styleFunction;\n  }\n\n  /**\n   * Get the type of this feature's geometry.\n   * @return {Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return this.type_;\n  }\n\n  /**\n   * Transform geometry coordinates from tile pixel space to projected.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection The data projection\n   */\n  transform(projection) {\n    projection = getProjection(projection);\n    const pixelExtent = projection.getExtent();\n    const projectedExtent = projection.getWorldExtent();\n    if (pixelExtent && projectedExtent) {\n      const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n      composeTransform(\n        tmpTransform,\n        projectedExtent[0],\n        projectedExtent[3],\n        scale,\n        -scale,\n        0,\n        0,\n        0\n      );\n      transform2D(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        tmpTransform,\n        this.flatCoordinates_\n      );\n    }\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   */\n  applyTransform(transformFn) {\n    transformFn(this.flatCoordinates_, this.flatCoordinates_, this.stride_);\n  }\n\n  /**\n   * @return {RenderFeature} A cloned render feature.\n   */\n  clone() {\n    return new RenderFeature(\n      this.type_,\n      this.flatCoordinates_.slice(),\n      this.ends_.slice(),\n      this.stride_,\n      Object.assign({}, this.properties_),\n      this.id_\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Add transform and resolution based geometry simplification to this instance.\n   * @return {RenderFeature} This render feature.\n   */\n  enableSimplifyTransformed() {\n    this.simplifyTransformed = memoizeOne((squaredTolerance, transform) => {\n      if (squaredTolerance === this.squaredTolerance_) {\n        return this.simplifiedGeometry_;\n      }\n      this.simplifiedGeometry_ = this.clone();\n      if (transform) {\n        this.simplifiedGeometry_.applyTransform(transform);\n      }\n      const simplifiedFlatCoordinates =\n        this.simplifiedGeometry_.getFlatCoordinates();\n      let simplifiedEnds;\n      switch (this.type_) {\n        case 'LineString':\n          simplifiedFlatCoordinates.length = douglasPeucker(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.flatCoordinates_.length,\n            this.simplifiedGeometry_.stride_,\n            squaredTolerance,\n            simplifiedFlatCoordinates,\n            0\n          );\n          simplifiedEnds = [simplifiedFlatCoordinates.length];\n          break;\n        case 'MultiLineString':\n          simplifiedEnds = [];\n          simplifiedFlatCoordinates.length = douglasPeuckerArray(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.ends_,\n            this.simplifiedGeometry_.stride_,\n            squaredTolerance,\n            simplifiedFlatCoordinates,\n            0,\n            simplifiedEnds\n          );\n          break;\n        case 'Polygon':\n          simplifiedEnds = [];\n          simplifiedFlatCoordinates.length = quantizeArray(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.ends_,\n            this.simplifiedGeometry_.stride_,\n            Math.sqrt(squaredTolerance),\n            simplifiedFlatCoordinates,\n            0,\n            simplifiedEnds\n          );\n          break;\n        default:\n      }\n      if (simplifiedEnds) {\n        this.simplifiedGeometry_ = new RenderFeature(\n          this.type_,\n          simplifiedFlatCoordinates,\n          simplifiedEnds,\n          2,\n          this.properties_,\n          this.id_\n        );\n      }\n      this.squaredTolerance_ = squaredTolerance;\n      return this.simplifiedGeometry_;\n    });\n    return this;\n  }\n}\n\n/**\n * @return {Array<number>} Flat coordinates.\n */\nRenderFeature.prototype.getFlatCoordinates =\n  RenderFeature.prototype.getOrientedFlatCoordinates;\n\n/**\n * Create a geometry from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature\n * Render Feature\n * @return {Point|MultiPoint|LineString|MultiLineString|Polygon|MultiPolygon}\n * New geometry instance.\n * @api\n */\nexport function toGeometry(renderFeature) {\n  const geometryType = renderFeature.getType();\n  switch (geometryType) {\n    case 'Point':\n      return new Point(renderFeature.getFlatCoordinates());\n    case 'MultiPoint':\n      return new MultiPoint(renderFeature.getFlatCoordinates(), 'XY');\n    case 'LineString':\n      return new LineString(renderFeature.getFlatCoordinates(), 'XY');\n    case 'MultiLineString':\n      return new MultiLineString(\n        renderFeature.getFlatCoordinates(),\n        'XY',\n        /** @type {Array<number>} */ (renderFeature.getEnds())\n      );\n    case 'Polygon':\n      const flatCoordinates = renderFeature.getFlatCoordinates();\n      const ends = /** @type {Array<number>} */ (renderFeature.getEnds());\n      const endss = inflateEnds(flatCoordinates, ends);\n      return endss.length > 1\n        ? new MultiPolygon(flatCoordinates, 'XY', endss)\n        : new Polygon(flatCoordinates, 'XY', ends);\n    default:\n      throw new Error('Invalid geometry type:' + geometryType);\n  }\n}\n\n/**\n * Create an `ol/Feature` from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature RenderFeature\n * @param {string} [geometryName='geometry'] Geometry name to use\n * when creating the Feature.\n * @return {Feature} Newly constructed `ol/Feature` with properties,\n * geometry, and id copied over.\n * @api\n */\nexport function toFeature(renderFeature, geometryName) {\n  const id = renderFeature.getId();\n  const geometry = toGeometry(renderFeature);\n  const properties = renderFeature.getProperties();\n  const feature = new Feature();\n  if (geometryName !== undefined) {\n    feature.setGeometryName(geometryName);\n  }\n  feature.setGeometry(geometry);\n  if (id !== undefined) {\n    feature.setId(id);\n  }\n  feature.setProperties(properties, true);\n  return feature;\n}\n\nexport default RenderFeature;\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {number} [repeat] Repeat.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.transform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      (zoom, tileRange) => {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (\n      image.getState() === ImageState.LOADED ||\n      image.getState() === ImageState.ERROR\n    ) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../Image.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {equals} from '../../array.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {import('../../DataTile.js').ImageLike} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor)\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    } else if (this.container) {\n      this.container.style.backgroundColor = null;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/reproj\n */\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = createCanvasContext2D(6, 6, canvasPool);\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n    releaseCanvas(ctx);\n    canvasPool.push(ctx.canvas);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @param {boolean} [drawSingle] Draw single source images directly without stitchContext.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  renderEdges,\n  interpolate,\n  drawSingle\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool\n  );\n\n  if (!interpolate) {\n    context.imageSmoothingEnabled = false;\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  let stitchContext;\n  if (!drawSingle || sources.length !== 1 || gutter !== 0) {\n    const canvasWidthInUnits = getWidth(sourceDataExtent);\n    const canvasHeightInUnits = getHeight(sourceDataExtent);\n    stitchContext = createCanvasContext2D(\n      Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\n      Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution),\n      canvasPool\n    );\n\n    if (!interpolate) {\n      stitchContext.imageSmoothingEnabled = false;\n    }\n\n    const stitchScale = pixelRatio / sourceResolution;\n\n    sources.forEach(function (src, i, arr) {\n      const xPos = src.extent[0] - sourceDataExtent[0];\n      const yPos = -(src.extent[3] - sourceDataExtent[3]);\n      const srcWidth = getWidth(src.extent);\n      const srcHeight = getHeight(src.extent);\n\n      // This test should never fail -- but it does. Need to find a fix the upstream condition\n      if (src.image.width > 0 && src.image.height > 0) {\n        stitchContext.drawImage(\n          src.image,\n          gutter,\n          gutter,\n          src.image.width - 2 * gutter,\n          src.image.height - 2 * gutter,\n          xPos * stitchScale,\n          yPos * stitchScale,\n          srcWidth * stitchScale,\n          srcHeight * stitchScale\n        );\n      }\n    });\n  }\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1))\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY\n    );\n\n    let image;\n    if (stitchContext) {\n      image = stitchContext.canvas;\n      context.scale(\n        sourceResolution / pixelRatio,\n        -sourceResolution / pixelRatio\n      );\n    } else {\n      const source = sources[0];\n      const extent = source.extent;\n      image = source.image;\n      context.scale(\n        getWidth(extent) / image.width,\n        -getHeight(extent) / image.height\n      );\n    }\n\n    context.drawImage(image, 0, 0);\n    context.restore();\n  });\n\n  if (stitchContext) {\n    releaseCanvas(stitchContext);\n    canvasPool.push(stitchContext.canvas);\n  }\n\n  if (renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {releaseCanvas} from '../dom.js';\n\n/**\n * @typedef {function(number, number, number, number) : (import(\"../ImageTile.js\").default)} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [renderEdges] Render reprojection edges.\n   * @param {import(\"../Tile.js\").Options} [options] Tile options.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    errorThreshold,\n    renderEdges,\n    options\n  ) {\n    super(tileCoord, TileState.IDLE, options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = renderEdges !== undefined ? renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../ImageTile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      errorThreshold !== undefined ? errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach((tile) => {\n      if (tile && tile.getState() == TileState.LOADED) {\n        sources.push({\n          extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n          image: tile.getImage(),\n        });\n      }\n    });\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach((tile) => {\n        const state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          const sourceListenKey = listen(\n            tile,\n            EventType.CHANGE,\n            function (e) {\n              const state = tile.getState();\n              if (\n                state == TileState.LOADED ||\n                state == TileState.ERROR ||\n                state == TileState.EMPTY\n              ) {\n                unlistenByKey(sourceListenKey);\n                leftToLoad--;\n                if (leftToLoad === 0) {\n                  this.unlistenSources_();\n                  this.reproject_();\n                }\n              }\n            },\n            this\n          );\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    if (this.canvas_) {\n      releaseCanvas(this.canvas_.getContext('2d'));\n      canvasPool.push(this.canvas_);\n      this.canvas_ = null;\n    }\n    super.release();\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    destinationResolution\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) >= getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overall reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              Math.log2(\n                getArea(targetExtent) /\n                  (destinationResolution * destinationResolution * 256 * 256)\n              )\n            )\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0]\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach((triangle) => {\n        if (\n          Math.max(\n            triangle.source[0][0],\n            triangle.source[1][0],\n            triangle.source[2][0]\n          ) -\n            leftBound >\n          this.sourceWorldWidth_ / 2\n        ) {\n          const newTriangle = [\n            [triangle.source[0][0], triangle.source[0][1]],\n            [triangle.source[1][0], triangle.source[1][1]],\n            [triangle.source[2][0], triangle.source[2][1]],\n          ];\n          if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[0][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[1][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[2][0] -= this.sourceWorldWidth_;\n          }\n\n          // Rarely (if the extent contains both the dateline and prime meridian)\n          // the shift can in turn break some triangles.\n          // Detect this here and don't shift in such cases.\n          const minX = Math.min(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0]\n          );\n          const maxX = Math.max(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0]\n          );\n          if (maxX - minX < this.sourceWorldWidth_ / 2) {\n            triangle.source = newTriangle;\n          }\n        }\n      });\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  }\n  return undefined;\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  }\n  return undefined;\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  const t = tolerance === undefined ? toRadians(5) : tolerance;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving || rotation === undefined) {\n        return rotation;\n      }\n\n      if (Math.abs(rotation) <= t) {\n        return 0;\n      }\n      return rotation;\n    }\n  );\n}\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  }\n  if (dest === undefined) {\n    dest = [size, size];\n  } else {\n    dest[0] = size;\n    dest[1] = size;\n  }\n  return dest;\n}\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link import(\"../View.js\").ViewStateLayerStateExtent} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../View.js\").ViewStateLayerStateExtent): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    return null;\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  clear() {\n    while (this.getCount() > 0) {\n      this.pop().release();\n    }\n    super.clear();\n  }\n\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach((tile) => {\n      if (tile.tileCoord[0] !== z) {\n        this.remove(getKey(tile.tileCoord));\n        tile.release();\n      }\n    });\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    const tileGrid = projection\n      ? this.getTileGridForProjection(projection)\n      : this.tileGrid;\n    if (!tileGrid) {\n      return null;\n    }\n    return tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    }\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    const sourceProjection = this.getProjection();\n    assert(\n      sourceProjection === null || equivalent(sourceProjection, projection),\n      'A VectorTile source can only be rendered if it has a projection compatible with the view projection.'\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    }\n    return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    projection = projection !== undefined ? projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    }\n    for (const key in this.tileCacheForProjection) {\n      if (this.tileCacheForProjection[key].canExpireCache()) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    }\n    return this.getGutter();\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    }\n    return super.getOpaque(projection);\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileGridForProjection)) {\n      this.tileGridForProjection[projKey] =\n        getTileGridForProjection(projection);\n    }\n    return this.tileGridForProjection[projKey];\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileCacheForProjection)) {\n      this.tileCacheForProjection[projKey] = new TileCache(\n        this.tileCache.highWaterMark\n      );\n    }\n    return this.tileCacheForProjection[projKey];\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection\n      );\n    }\n    const cache = this.getTileCacheForProjection(projection);\n    const tileCoord = [z, x, y];\n    let tile;\n    const tileCoordKey = getKey(tileCoord);\n    if (cache.containsKey(tileCoordKey)) {\n      tile = cache.get(tileCoordKey);\n    }\n    const key = this.getKey();\n    if (tile && tile.key == key) {\n      return tile;\n    }\n    const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n    const targetTileGrid = this.getTileGridForProjection(projection);\n    const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const newTile = new ReprojTile(\n      sourceProjection,\n      sourceTileGrid,\n      projection,\n      targetTileGrid,\n      tileCoord,\n      wrappedTileCoord,\n      this.getTilePixelRatio(pixelRatio),\n      this.getGutter(),\n      (z, x, y, pixelRatio) =>\n        this.getTileInternal(z, x, y, pixelRatio, sourceProjection),\n      this.reprojectionErrorThreshold_,\n      this.renderReprojectionEdges_,\n      this.tileOptions\n    );\n    newTile.key = key;\n\n    if (tile) {\n      newTile.interimTile = tile;\n      newTile.refreshInterimChain();\n      cache.replace(tileCoordKey, newTile);\n    } else {\n      cache.set(tileCoordKey, newTile);\n    }\n    return newTile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!ImageTile} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = tilegrid;\n      }\n    }\n  }\n\n  clear() {\n    super.clear();\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number} [maxEntries] Max entries.\n   */\n  constructor(maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, extent);\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/loadingstrategy\n */\n\nimport {fromUserExtent, fromUserResolution, toUserExtent} from './proj.js';\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n      const z = tileGrid.getZForResolution(\n        fromUserResolution(resolution, projection)\n      );\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        fromUserExtent(extent, projection),\n        z\n      );\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(\n            toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection)\n          );\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true\n  );\n  if (format.getType() == 'arraybuffer') {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == 'json') {\n        source = JSON.parse(xhr.responseText);\n      } else if (type == 'text') {\n        source = xhr.responseText;\n      } else if (type == 'xml') {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml'\n          );\n        }\n      } else if (type == 'arraybuffer') {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (\n            format.readFeatures(source, {\n              extent: extent,\n              featureProjection: projection,\n            })\n          ),\n          format.readProjection(source)\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<import(\"./Feature.js\").default>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport RenderFeature from '../render/Feature.js';\nimport Source from './Source.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals, wrapAndSliceX} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureClass=import(\"../Feature.js\").default]\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {FeatureClass} [feature] Feature.\n   * @param {Array<FeatureClass>} [features] Features.\n   */\n  constructor(type, feature, features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {FeatureClass|undefined}\n     * @api\n     */\n    this.feature = feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<FeatureClass>|undefined}\n     * @api\n     */\n    this.features = features;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureClass=import(\"../Feature.js\").default]\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<FeatureClass>|Collection<FeatureClass>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import Vector from 'ol/source/Vector.js';\n * import GeoJSON from 'ol/format/GeoJSON.js';\n * import {bbox} from 'ol/loadingstrategy.js';\n *\n * const vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      const proj = projection.getCode();\n *      const url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      const xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      const onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          const features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox,\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureClass=import(\"../Feature.js\").default]\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options<FeatureClass>} [options] Vector source options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: true,\n      projection: undefined,\n      state: 'ready',\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, '`format` must be set when `url` is set');\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(\n        this.url_,\n        /** @type {import(\"../format/Feature.js\").default} */ (this.format_)\n      );\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<FeatureClass>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, FeatureClass>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, FeatureClass|Array<RenderFeature>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, FeatureClass>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<FeatureClass>|null}\n     */\n    this.featuresCollection_ = null;\n\n    /** @type {Collection<FeatureClass>} */\n    let collection;\n    /** @type {Array<FeatureClass>} */\n    let features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection~Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {FeatureClass} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {FeatureClass} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature)\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {FeatureClass} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    if (feature instanceof RenderFeature) {\n      return;\n    }\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {FeatureClass} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    if (feature.getId() !== undefined) {\n      const id = String(feature.getId());\n      if (!(id in this.idIndex_)) {\n        this.idIndex_[id] = feature;\n      } else if (feature instanceof RenderFeature) {\n        const indexedFeature = this.idIndex_[id];\n        if (!(indexedFeature instanceof RenderFeature)) {\n          valid = false;\n        } else {\n          if (!Array.isArray(indexedFeature)) {\n            this.idIndex_[id] = [indexedFeature, feature];\n          } else {\n            indexedFeature.push(feature);\n          }\n        }\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(\n        !(featureKey in this.uidIndex_),\n        'The passed `feature` was already added to the source'\n      );\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<FeatureClass>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<FeatureClass>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    /** @type {Array<FeatureClass>} */\n    const newFeatures = [];\n    /** @type Array<FeatureClass> */\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    if (this.hasListener(VectorEventType.ADDFEATURE)) {\n      for (let i = 0, length = newFeatures.length; i < length; i++) {\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i])\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {!Collection<FeatureClass>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<FeatureClass>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<FeatureClass>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<FeatureClass>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<FeatureClass>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature} events.\n   * @api\n   */\n  clear(fast) {\n    if (fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        const removeAndIgnoreReturn = (feature) => {\n          this.removeFeatureInternal(feature);\n        };\n        this.featuresRtree_.forEach(removeAndIgnoreReturn);\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(FeatureClass): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * For {@link module:ol/render/Feature~RenderFeature} features, the callback will be\n   * called for all features.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(FeatureClass): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (\n        geometry instanceof RenderFeature ||\n        geometry.intersectsCoordinate(coordinate)\n      ) {\n        return callback(feature);\n      }\n      return undefined;\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(FeatureClass): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(FeatureClass): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {FeatureClass} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (\n          geometry instanceof RenderFeature ||\n          geometry.intersectsExtent(extent)\n        ) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection~Collection} as `features`.\n   * @return {Collection<FeatureClass>|null} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<FeatureClass>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, Object.values(this.nullGeometryFeatures_));\n      }\n    }\n    return features;\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Include features\n   * where `extent` exceeds the x-axis bounds of `projection` and wraps around the world.\n   * @return {Array<FeatureClass>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent, projection) {\n    if (this.featuresRtree_) {\n      const multiWorld = projection && projection.canWrapX() && this.getWrapX();\n\n      if (!multiWorld) {\n        return this.featuresRtree_.getInExtent(extent);\n      }\n\n      const extents = wrapAndSliceX(extent, projection);\n\n      return [].concat(\n        ...extents.map((anExtent) => this.featuresRtree_.getInExtent(anExtent))\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    }\n    return [];\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false` and the features in this source are of type\n   * {@link module:ol/Feature~Feature}.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(FeatureClass):boolean} [filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {FeatureClass} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    filter = filter ? filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {FeatureClass} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance =\n            geometry instanceof RenderFeature\n              ? 0\n              : geometry.closestPointXY(x, y, closestPoint, minSquaredDistance);\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      }\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(extent) {\n    return this.featuresRtree_.getExtent(extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()). When `RenderFeature`s\n   * are used, `getFeatureById()` can return an array of `RenderFeature`s. This allows for handling\n   * of `GeometryCollection` geometries, where format readers create one `RenderFeature` per\n   * `GeometryCollection` member.\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {FeatureClass|Array<RenderFeature>|null} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {FeatureClass|null} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {FeatureClass} */ (event.target);\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {FeatureClass} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    }\n    return getUid(feature) in this.uidIndex_;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    if (this.featuresRtree_) {\n      return (\n        this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_)\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getLength() === 0;\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        }\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART)\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          (features) => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features\n              )\n            );\n          },\n          () => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR)\n            );\n          }\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {FeatureClass} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    if (!feature) {\n      return;\n    }\n    const featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    const result = this.removeFeatureInternal(feature);\n    if (result) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {FeatureClass} feature Feature.\n   * @return {FeatureClass|undefined} The removed feature\n   *     (or undefined if the feature was not found).\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    const featureChangeKeys = this.featureChangeKeys_[featureKey];\n    if (!featureChangeKeys) {\n      return;\n    }\n    featureChangeKeys.forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n    delete this.uidIndex_[featureKey];\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature)\n    );\n    return feature;\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {FeatureClass} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      const indexedFeature = this.idIndex_[id];\n      if (\n        feature instanceof RenderFeature &&\n        Array.isArray(indexedFeature) &&\n        indexedFeature.includes(feature)\n      ) {\n        indexedFeature.splice(indexedFeature.indexOf(feature), 1);\n      } else if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, '`format` must be set when `url` is set');\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around image tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported images should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [options] XYZ options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n}\n\nexport default XYZ;\n","/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Entry|null} newer Newer.\n * @property {Entry|null} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache'\n    );\n    if (entry === this.newest_) {\n      return entry.value_;\n    }\n    if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache'\n    );\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T|undefined} Value.\n   */\n  peek(key) {\n    return this.entries_[key]?.value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(\n      !(key in this.entries_),\n      'Tried to set a value for a key that is used already'\n    );\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {decodeFallback} from '../Image.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap} image Image.\n   * @param {string|undefined} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState === undefined ? ImageState.IDLE : imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|null}\n     */\n    this.size_ =\n      image && image.width && image.height ? [image.width, image.height] : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1, undefined, {\n          willReadFrequently: true,\n        });\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    this.size_ = [this.image_.width, this.image_.height];\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element or image bitmap.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      if (this.src_ !== undefined) {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      }\n    } catch (e) {\n      this.handleImageError_();\n    }\n    if (this.image_ instanceof HTMLImageElement) {\n      decodeFallback(this.image_, this.src_)\n        .then((image) => {\n          this.image_ = image;\n          this.handleImageLoad_();\n        })\n        .catch(this.handleImageError_.bind(this));\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const canvas = document.createElement('canvas');\n    canvas.width = Math.ceil(image.width * pixelRatio);\n    canvas.height = Math.ceil(image.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap} image Image.\n * @param {string} cacheKey Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, cacheKey, crossOrigin, imageState, color) {\n  let iconImage =\n    cacheKey === undefined\n      ? undefined\n      : iconImageCache.get(cacheKey, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(\n      image,\n      image instanceof HTMLImageElement ? image.src || undefined : cacheKey,\n      crossOrigin,\n      imageState,\n      color\n    );\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement|ImageBitmap} [img] Image object for the icon.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [width] The width of the icon in pixels. This can't be used together with `scale`.\n * @property {number} [height] The height of the icon in pixels. This can't be used together with `scale`.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {number|undefined} wantedWidth The wanted width.\n * @param {number|undefined} wantedHeight The wanted height.\n * @return {number|Array<number>} The scale.\n */\nfunction calculateScale(width, height, wantedWidth, wantedHeight) {\n  if (wantedWidth !== undefined && wantedHeight !== undefined) {\n    return [wantedWidth / width, wantedHeight / height];\n  }\n  if (wantedWidth !== undefined) {\n    return wantedWidth / width;\n  }\n  if (wantedHeight !== undefined) {\n    return wantedHeight / height;\n  }\n  return 1;\n}\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    const image = options.img !== undefined ? options.img : null;\n\n    let cacheKey = options.src;\n\n    assert(\n      !(cacheKey !== undefined && image),\n      '`image` and `src` cannot be provided at the same time'\n    );\n\n    if ((cacheKey === undefined || cacheKey.length === 0) && image) {\n      cacheKey = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(\n      cacheKey !== undefined && cacheKey.length > 0,\n      'A defined and non-empty `src` or `image` must be provided'\n    );\n\n    assert(\n      !(\n        (options.width !== undefined || options.height !== undefined) &&\n        options.scale !== undefined\n      ),\n      '`width` or `height` cannot be provided together with `scale`'\n    );\n\n    let imageState;\n    if (options.src !== undefined) {\n      imageState = ImageState.IDLE;\n    } else if (image !== undefined) {\n      if (image instanceof HTMLImageElement) {\n        if (image.complete) {\n          imageState = image.src ? ImageState.LOADED : ImageState.IDLE;\n        } else {\n          imageState = ImageState.LOADING;\n        }\n      } else {\n        imageState = ImageState.LOADED;\n      }\n    }\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (cacheKey),\n      this.crossOrigin_,\n      imageState,\n      this.color_\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n    /**\n     * Calculate the scale if width or height were given.\n     */\n    if (options.width !== undefined || options.height !== undefined) {\n      let width, height;\n      if (options.size) {\n        [width, height] = options.size;\n      } else {\n        const image = this.getImage(1);\n        if (image.width && image.height) {\n          width = image.width;\n          height = image.height;\n        } else if (image instanceof HTMLImageElement) {\n          this.initialOptions_ = options;\n          const onload = () => {\n            this.unlistenImageChange(onload);\n            if (!this.initialOptions_) {\n              return;\n            }\n            const imageSize = this.iconImage_.getSize();\n            this.setScale(\n              calculateScale(\n                imageSize[0],\n                imageSize[1],\n                options.width,\n                options.height\n              )\n            );\n          };\n          this.listenImageChange(onload);\n          return;\n        }\n      }\n      if (width !== undefined) {\n        this.setScale(\n          calculateScale(width, height, options.width, options.height)\n        );\n      }\n    }\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    let scale, width, height;\n    if (this.initialOptions_) {\n      width = this.initialOptions_.width;\n      height = this.initialOptions_.height;\n    } else {\n      scale = this.getScale();\n      scale = Array.isArray(scale) ? scale.slice() : scale;\n    }\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale,\n      width,\n      height,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element. If the Icon\n   * style was configured with `src` or with a not let loaded `img`, an `ImageBitmap` will be returned.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * Get the width of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon width (in pixels).\n   * @api\n   */\n  getWidth() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[0] * scale[0];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[0] * scale[0];\n    }\n    return undefined;\n  }\n\n  /**\n   * Get the height of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon height (in pixels).\n   * @api\n   */\n  getHeight() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[1] * scale[1];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[1] * scale[1];\n    }\n    return undefined;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    delete this.initialOptions_;\n    super.setScale(scale);\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} declutterMode Declutter mode: `declutter`, `obstacle`, 'none */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {\"declutter\"|\"obstacle\"|\"none\"|undefined} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [radius2] Second radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike|undefined} strokeStyle StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvases_;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|null}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ =\n      options.radius !== undefined ? options.radius : options.radius1;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_;\n\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    const size = this.size_;\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.createHitDetectionCanvas_(\n        this.renderOptions_\n      );\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    let image = this.canvases_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvases_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius_;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distance from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineCap = defaultLineCap;\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = asColorLike(this.stroke_.getColor() ?? defaultStrokeStyle);\n      strokeWidth = this.stroke_.getWidth() ?? defaultLineWidth;\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset() ?? 0;\n      lineJoin = this.stroke_.getLineJoin() ?? defaultLineJoin;\n      lineCap = this.stroke_.getLineCap() ?? defaultLineCap;\n      miterLimit = this.stroke_.getMiterLimit() ?? defaultMiterLimit;\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.canvases_ = {};\n    this.hitDetectionCanvas_ = null;\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = renderOptions.lineCap;\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @return {HTMLCanvasElement} Canvas containing the icon\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    let context;\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    return context ? context.canvas : this.getImage(1);\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius_;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>|Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default|null}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default|null}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry ?? undefined,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer() ?? undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default|null} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default|null} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(\n        typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n        'Expected an `Style` or an array of `Style`'\n      );\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point']\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number} [repeat] Repeat interval. When set, the text will be repeated at this interval, which specifies\n * the distance between two text anchors in pixels. Only available when `placement` is set to `'line'`. Overrides 'textAlign'.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for `placement: 'line'` or the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default|null} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333). Specify `null` for no fill.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.repeat_ = options.repeat;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      repeat: this.getRepeat(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the repeat interval of the text.\n   * @return {number|undefined} Repeat interval in pixels.\n   * @api\n   */\n  getRepeat() {\n    return this.repeat_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set the repeat interval of the text.\n   * @param {number|undefined} [repeat] Repeat interval in pixels.\n   * @api\n   */\n  setRepeat(repeat) {\n    this.repeat_ = repeat;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  }\n  return [z, x, y];\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  }\n  return tileRange.containsXY(x, y);\n}\n","/**\n * @module ol/tilegrid\n */\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\nexport {TileGrid};\nexport {default as WMTS} from './tilegrid/WMTS.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  }\n  return tileCoord;\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        /**\n         * @param {number} a First resolution\n         * @param {number} b Second resolution\n         * @return {number} Comparison result\n         */\n        (a, b) => b - a,\n        true\n      ),\n      '`resolutions` must be sorted in descending order'\n    );\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(\n        this.origins_.length == this.resolutions_.length,\n        'Number of `origins` and `resolutions` must be equal'\n      );\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      'Either `origin` or `origins` must be configured, never both'\n    );\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(\n        this.tileSizes_.length == this.resolutions_.length,\n        'Number of `tileSizes` and `resolutions` must be equal'\n      );\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      'Either `tileSize` or `tileSizes` must be configured, never both'\n    );\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map((size, z) => {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      });\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (x !== undefined && y !== undefined) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    return this.origins_[z];\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tmpTileCoord);\n    const minX = tmpTileCoord[1];\n    const minY = tmpTileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tmpTileCoord);\n    const maxX = tmpTileCoord[1];\n    const maxY = tmpTileCoord[2];\n    return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Integer zoom level, e.g. the result of a `getZForResolution()` method call\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    return this.tileSizes_[z];\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default|null} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    }\n    return this.fullTileRanges_[z];\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord)\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/tileurlfunction\n */\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      return template\n        .replace(zRegEx, tileCoord[0].toString())\n        .replace(xRegEx, tileCoord[1].toString())\n        .replace(yRegEx, tileCoord[2].toString())\n        .replace(dashYRegEx, function () {\n          const z = tileCoord[0];\n          const range = tileGrid.getFullTileRange(z);\n          if (!range) {\n            throw new Error(\n              'The {-y} placeholder requires a tile grid with extent'\n            );\n          }\n          const y = range.getHeight() - tileCoord[2] - 1;\n          return y.toString();\n        });\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      const h = tileCoordHash(tileCoord);\n      const index = modulo(h, tileUrlFunctions.length);\n      return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 'Transformation matrix cannot be inverted');\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '8.2.0';\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t592: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunk\"] = self[\"webpackChunk\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));"],"names":["deferred","booleanPointInPolygon","point","polygon","options","Error","pt","geom","type","bbox","polys","coordinates","inBBox","insidePoly","i","length","res","pointInPolygon","ignoreBoundary","p","ii","k","f","u1","v1","u2","v2","currentP","nextP","x","y","numContours","contourLen","contour","properties","feat","id","geometry","_i","coordinates_1","ring","j","coordEach","geojson","callback","excludeWrapCoord","l","stopG","coords","geometryMaybeCollection","isGeometryCollection","wrapShrink","coordIndex","isFeatureCollection","isFeature","stop","features","featureIndex","geometries","geomIndex","multiFeatureIndex","geometryIndex","geomType","convex","concavity","Infinity","points","coord","push","convexHull","concaveman","polygon1","polygon2","geom1","geom2","differenced","poly1","poly2","unioned","ArcCollection","constructor","this","_zlimit","initArcs","arcs","xx","yy","nn","map","n","initXYData","size","_xx","Float64Array","_yy","_nn","Uint32Array","_zz","_filteredArcIter","_ii","idx","error","initBounds","_arcIter","ArcIter","data","calcArcBounds_","_bb","bb","_allBounds","bounds","numArcs","Bounds","arcLen","b","arcOffs","calcArcBounds","mergeBounds","getBounds","clone","forEachSegment","cb","count","forEachArcSegment","arcId","fw","absId","zlim","getRetainedInterval","step","getVertexData","zz","getUint32Array","bytes","buf","byteLength","ArrayBuffer","getAvgSegment2","dx","dy","Math","abs","calcSegmentIntersectionStripeCount","yrange","height","segLen","ceil","findSegmentIntersections","ymin","ymax","stripeCount","stripeSizes","stripeId","floor","id1","id2","s1","s2","stripeData","arr","info","isArrayLike","val","tot","nan","isNaN","utilsSum","offs","stripes","func","ctx","call","utilsForEach","stripeSize","start","subarray","init","len","initializeArray","stripe","raw","intersections","intersectSegments","dedupIntersections","args","msg","join","obj","Array","isArray","toString","String","prototype","isString","ids","lim","s1p1","s1p2","s2p1","s2p2","s1p1x","s1p2x","s2p1x","s2p2x","s1p1y","s1p2y","s2p1y","s2p2y","hit","seg1","seg2","swap","orderSegmentIds","quicksortSegmentIds","sortSegmentIds","segmentIntersection","formatIntersection","slice","ax","ay","bx","by","cx","cy","orient2D","segmentHit","nearest","lineIntersection","dist","minIdx","minDist","distanceSq","nearestPoint","clampToCloseRange","clampIntersectionPoint","crossIntersection","endpointHit","minX","min","maxX","max","minY","maxY","useY","inside","collinearIntersection","determinant2D","a","c","d","den","m","outsideRange","findEndpointInRange","out","tmp","lo","hi","pivot","insertionSortSegmentIds","end","xy","formatIntersectingSegment","index","filter","o","key","getIntersectionKey","_n","_inc","xmin","xmax","undefined","setBounds","cloneBounds","width","arguments","update","epsilon","elen","e","flen","h","Q","Qnew","hh","bvirt","enow","fnow","eindex","findex","hindex","vec","ccwerrboundB","ccwerrboundC","B","C1","C2","D","u","orient2d","detleft","detright","det","detsum","acxtail","acytail","bcxtail","bcytail","ahi","alo","bhi","blo","_j","_0","s0","t1","t0","u3","acx","bcx","acy","bcy","errbound","C1len","C2len","Dlen","orient2dadapt","EPSILON","pow","EDGE_STACK","Delaunator","static","getX","defaultGetX","getY","defaultGetY","maxTriangles","_triangles","_halfedges","Int32Array","_hashSize","sqrt","_hullPrev","_hullNext","_hullTri","_hullHash","fill","_ids","_dists","hullPrev","hullNext","hullTri","hullHash","i0","i1","i2","i0x","i0y","i1x","i1y","minRadius","r","circumradius","i2x","i2y","quicksort","hull","d0","triangles","halfedges","center","ex","ey","bl","cl","circumcenter","_cx","_cy","_hullStart","hullSize","_hashKey","trianglesLen","_addTriangle","xp","yp","q","t","_legalize","pseudoAngle","ar","a0","b0","al","p0","pr","pl","p1","inCircle","hbl","_link","br","px","py","fx","fy","bp","cp","dists","left","right","temp","tempDist","alen","blen","clen","sum","product1","product0","finlen","adx","bdx","cdx","ady","bdy","cdy","bdxcdy","cdxbdy","alift","cdxady","adxcdy","blift","adxbdy","bdxady","clift","permanent","adxtail","bdxtail","cdxtail","adytail","bdytail","cdytail","axtbclen","aytbclen","bxtcalen","bytcalen","cxtablen","cytablen","abtlen","bctlen","catlen","abttlen","bcttlen","cattlen","n1","n0","len2","BitSet","W","bs","add","byte","bit","delete","set","has","forEach","fn","BitSet8","super","Uint8Array","nextEdge","prevEdge","Constrainautor","del","edges","U32NIL","numPoints","numEdges","vertMap","flips","consd","v","updateVert","constrainAll","constrainOne","segP1","segP2","vm","edg","p4","nxt","protect","opp","p3","conEdge","rescan","adj","bot","top","rgt","isCollinear","flipDiagonal","flipped","isDelaunay","findEdge","delaunify","deep","isConstrained","p2","start1","prv","markFlip","lft","adjBot","adjTop","inc","pts","p1x","p1y","p2x","p2y","p3x","p3y","p4x","p4y","x0","y0","x1","y1","z","del_points","from","con","tris","keys","indices","xyz","format_version","Tin","setWh","wh","vertexMode","VERTEX_PLAIN","strictMode","MODE_AUTO","yaxisMode","YAXIS_INVERT","importance","priority","stateFull","setPoints","setEdges","getFormatVersion","YAXIS_FOLLOW","tins","indexedTins","normalizeEdges","edgeNodes","minx","maxx","miny","maxy","boundsPolygon","setCompiled","compiled","version","tins_points","pointsWeightBuffer","reduce","bd","forb","base","weight_buffer","Object","buffer","normalizeNodeKey","strict_status","kinks_points","STATUS_ERROR","STATUS_LOOSE","STATUS_STRICT","vertices_params","forw","bakw","tri","indexesToTri","centroid_point","vertices_points","centroid","target","bakwI","idxes","addIndexedTin","kinks","JSON","parse","stringify","replace","pIdx","getCompiled","vertices","vertex_data","tin","kink","gridNum","forwBound","bakwBound","forwEachBound","eachBound","forwXUnit","forwYUnit","forwGridCache","prev","bound","normXMin","unitCalc","normXMax","normYMin","normYMax","bakwEachBound","bakwXUnit","bakwYUnit","bakwGridCache","xOrigin","yOrigin","xUnit","yUnit","gridCache","setVertexMode","mode","setStrictMode","calcurateStrictTinAsync","pointsSet","Promise","all","resolve","counterTri","then","searchIndex","forTri","bakTri","insertSearchIndex","overlapCheckAsync","catch","err","prevResult","overlapped","trises","forUnion","forConvex","splittedKey","split","match","numberKey","parseInt","sort","sharedVtx","alpha","prop","vtx","nonSharedVtx","removeSearchIndex","sVtx","newTriCoords","newTriProp","newBakTri","newForTri","direc","apoint","array","findIntersections","poly","result","generatePointsSet","pointsArray","forPoint","createPoint","counterPoint","edgeNodeIndex","startEnd","illstNodes","assign","mercNodes","unshift","lengths","nodes","eachLengths","node","sumLengths","eachSum","ratio","thisLengths","anotherLengths","lengthItem","anotherSets","item","next","anotherPrev","anotherNext","ratioInEdge","anotherNode","concat","updateTinAsync","strict","insideCheck","curr","MODE_STRICT","MODE_LOOSE","prevResults","tinForCentroid","tinBakCentroid","forCentroidFt","pointsSetBbox","transformArr","forwBuf","convexBuf","vconvex","vertex","bakConvex","expandConvex","_","_array","forVertex","bakVertex","vertexDelta","xRate","yRate","orthant","VERTEX_BIRDEYE","pre","cur","distanceSum","thetaDelta","atan2","sumThetaX","cos","sumThetaY","sin","verticesSet","delta","forDelta","bakDistance","bakTheta","expandRate","side","expand","expandLine","intersect","intersect_","rate","verticesList","forVertexFt","bakVertexFt","prom","rotateVerticesTriangle","vertexCalc","calculatePointsWeightAsync","reject","transform","backward","ignoreBounds","tpoint","verticesParams","weightBuffer","stateTriangle","stateSetFunc","stateBackward","ret","calcTargets","alreadyChecked","vtxes","vi","vj","indexi","indexj","fromi","fromj","toi","toj","weight","feature","substring","list","centCoord","itemi","itemj","radian","normalizeRadian","noNegative","rangeFunc","PI","transformTinArr","of","ad","cd","ab","ac","ao","abd","acd","abv","acv","aW","bW","cW","nabv","normB","normC","useVerticesArr","radianList","minIndex","idel","minTheta","jdel","minDel","decideUseVertex","origin","unit","normCoord","normX","normY","tinsKey","geoms","props","indexes","cent","bboxes","buildTri","point_base","isFinite","nodeIndex","edge","retValue","searchResult","dir","intersection","calcSearchKeys","bakKeys","newArray","eachTris","eachTri","g","BBox","isObject","validateBBox","validateId","isNumber","lineString","featureCollection","fc","num","input","indexOf","module","exports","RBush","Queue","orient","lengthThreshold","bottom","cull","filtered","compareByX","lower","cross","pop","upper","fastConvexHull","tree","toBBox","compareMinX","compareMinY","load","last","queue","remove","insertNode","segTree","insert","updateBBox","sqConcavity","sqLenThreshold","shift","sqLen","getSqDist","maxSqLen","findCandidate","concave","maxDist","compareDist","children","child","leaf","sqSegDist","sqSegBoxDist","peek","d1","noIntersections","sqSegSegDist","d2","d3","d4","q1","q2","search","x2","y2","x3","y3","sc","sN","tc","tN","ux","uy","vx","vy","wx","wy","sD","tD","default","rbush","helpers","meta","turfBBox","featureEach","geojsonRbush","maxEntries","equals","clear","collides","toJSON","fromJSON","json","multiLineString","multiPoint","multiPolygon","radiansToLength","radians","units","factor","factors","lengthToRadians","distance","radiansToDegrees","defineProperty","value","earthRadius","centimeters","centimetres","degrees","feet","inches","kilometers","kilometres","meters","metres","miles","millimeters","millimetres","nauticalmiles","yards","unitsFactors","areaFactors","acres","hectares","_options","polygons","lineStrings","geometryCollection","round","precision","multiplier","lengthToDegrees","bearingToAzimuth","bearing","angle","degreesToRadians","convertLength","originalUnit","finalUnit","convertArea","area","startFactor","finalFactor","propEach","geomEach","featureProperties","featureBBox","featureId","flattenEach","segmentEach","segmentIndex","previousCoords","previousFeatureIndex","previousMultiIndex","prevGeomIndex","currentCoord","featureIndexCoord","multiPartIndexCoord","currentSegment","lineEach","coordAll","coordReduce","initialValue","previousValue","featureReduce","currentFeature","findPoint","findSegment","flattenReduce","geomReduce","currentGeometry","lineReduce","currentLine","propReduce","currentProperties","segmentReduce","started","quickselect","compare","quickselectStep","defaultCompare","log","s","exp","sd","factory","format","_maxEntries","_minEntries","_initFormat","findItem","items","equalsFn","calcBBox","distBBox","destNode","createNode","extend","compareNodeMinX","compareNodeMinY","bboxArea","bboxMargin","contains","intersects","multiSelect","mid","stack","_all","childBBox","nodesToSearch","_build","_splitRoot","tmpNode","_insert","parent","goingUp","path","splice","_condense","apply","N","M","right2","right3","N2","N1","_chooseSubtree","level","targetNode","enlargement","minArea","minEnlargement","isNode","insertPath","_split","_adjustParentBBoxes","_chooseSplitAxis","splitIndex","_chooseSplitIndex","newNode","bbox1","bbox2","overlap","minOverlap","_allDistMargin","leftBBox","rightBBox","margin","siblings","compareArr","Function","vs","xi","yi","xj","yj","pointInPolygonFlat","pointInPolygonNested","nested","flat","_classCallCheck","instance","Constructor","TypeError","_defineProperties","descriptor","enumerable","configurable","writable","_createClass","protoProps","staticProps","Node","DEFAULT_COMPARE","splay","comparator","cmp","merge","printRow","root","prefix","isTail","printNode","indent","Tree","_root","_size","_comparator","_remove","findStatic","current","find","visitor","done","range","low","high","_a","values","minNode","maxNode","at","successor","predecessor","toList","presort","loadRecursive","mergedList","mergeLists","createList","sortedListToBST","head","isEmpty","get","newKey","newData","middle","l1","l2","isInBbox","ll","ur","getBboxOverlap","b1","b2","lowerX","upperX","Number","EPSILON_SQ","PtRounder","reset","xRounder","CoordRounder","yRounder","prevNode","nextNode","rounder","crossProduct","dotProduct","compareVectorAngles","basePt","endPt1","endPt2","kross","sineOfAngle","pShared","pBase","pAngle","vBase","vAngle","cosineOfAngle","horizontalIntersection","verticalIntersection","pt1","pt2","ve","SweepEvent","isLeft","events","ptCmp","comparePoints","link","Segment","segment","aPt","bPt","other","otherEvents","iMax","evt","checkForConsuming","numEvents","evt1","consumedBy","evt2","otherSE","consume","ringOut","isInResult","baseEvent","_this","cache","Map","fillCache","linkedEvent","nextEvent","sine","cosine","_cache$get","asine","acosine","_cache$get2","bsine","bcosine","segmentId","leftSE","rightSE","rings","windings","alx","blx","arx","brx","aly","bly","ary","bry","aCmpBLeft","comparePoint","bCmpARight","bCmpALeft","aCmpBRight","_bCmpARight","_aCmpBRight","newRightSE","isAnEndpoint","lPt","rPt","vector","yDist","xFromYDist","xDist","yFromXDist","tBbox","oBbox","bboxOverlap","tlp","trp","olp","orp","touchesOtherLSE","touchesThisLSE","touchesOtherRSE","touchesThisRSE","newEvents","alreadyLinked","newLeftSE","oldRightSE","replaceRightSE","newSeg","swapEvents","tmpEvt","consumer","consumee","_tmp","winding","_prevInResult","prevInResult","_beforeState","seg","afterState","multiPolys","_afterState","beforeState","ringsAfter","windingsAfter","mpsAfter","polysAfter","polysExclude","_iMax","_ring","isExterior","_index","_i2","_iMax2","mp","multiPoly","_isInResult","mpsBefore","operation","noBefores","noAfters","least","most","numMultiPolys","diff","isJustSubject","mps","isSubject","leftPt","rightPt","cmpPts","RingIn","geomRing","segments","firstPoint","prevPoint","fromRing","sweepEvents","PolyIn","geomPoly","exteriorRing","interiorRings","getSweepEvents","ringSweepEvents","jMax","MultiPolyIn","POSITIVE_INFINITY","NEGATIVE_INFINITY","polySweepEvents","RingOut","allSegments","ringsOut","prevEvent","event","startingPoint","intersectionLEs","availableLEs","getAvailableLinkedEvents","firstPt","lastPt","indexLE","getLeftmostComparator","intersectionLE","ringEvents","reverse","prevPt","_pt","_nextPt","nextPt","isExteriorRing","iStart","iEnd","orderedPoints","_isExteriorRing","enclosing","enclosingRing","_enclosingRing","_calcEnclosingRing","leftMostEvt","prevSeg","prevPrevSeg","PolyOut","getGeom","ringGeom","MultiPolyOut","_composePolys","polyGeom","addInterior","SweepLine","nextSeg","prevMySplitter","prevInter","getIntersection","newEventsFromSplit","_splitSafely","nextMySplitter","nextInter","_newEventsFromSplit","mySplitter","_newEventsFromSplit2","inter","_newEventsFromSplit3","_i3","_iMax3","_newEventsFromSplit4","_i4","_iMax4","POLYGON_CLIPPING_MAX_QUEUE_SIZE","process","env","POLYGON_CLIPPING_MAX_SWEEPLINE_SEGMENTS","Operation","moreGeoms","multipolys","subject","mpA","_jMax","sweepLine","prevQueueSize","_evt","union","_len","_key","run","intersection$1","_len2","_key2","xor","_len3","_key3","difference","subjectGeom","_len4","clippingGeoms","_key4","w","A","F","O","P","C","E","G","H","I","J","K","L","orient2dfast","TinyQueue","_down","_up","pos","halfLength","best","xSum","ySum","getCoord","getCoords","coordinate","results","currentCoords","coords1","coords2","createSegments","lineSegmentFeature","line1","line2","x4","y4","denom","numeA","numeB","uA","uB","unique","Property","CollectionEvent","element","Collection","on","once","un","unique_","array_","assertUnique_","updateLength_","getLength","getArray","insertAt","elem","dispatchEvent","removeAt","setAt","except","ADD","REMOVE","disposed","dispose","disposeInternal","Feature","geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","addChangeListener","handleGeometryChanged_","setGeometry","setProperties","hasProperties","getProperties","setGeometryName","getGeometryName","getGeometry","style","getStyle","setStyle","getId","getStyleFunction","handleGeometryChange_","changed","styles","createStyleFunction","setId","name","removeChangeListener","listenImage","image","loadHandler","errorHandler","img","listening","decoding","loaded","listenerKeys","src","decode","decodeFallback","complete","handleLoad","unlisten","handleError","removeEventListener","addEventListener","IDLE","LOADING","LOADED","ERROR","EMPTY","ImageTile","tileCoord","state","crossOrigin","tileLoadFunction","crossOrigin_","src_","image_","Image","unlisten_","tileLoadFunction_","getImage","setImage","unlistenImage_","handleImageError_","fillStyle","fillRect","canvas","getBlankImage","handleImageLoad_","naturalWidth","naturalHeight","bind","MapRenderer","Disposable","map_","dispatchRenderEvent","frameState","calculateMatrices2D","viewState","coordinateToPixelTransform","pixelToCoordinateTransform","resolution","rotation","forEachFeatureAtCoordinate","hitTolerance","checkWrapped","thisArg","layerFilter","thisArg2","managed","layer","projection","translatedCoordinate","offsets","canWrapX","projectionExtent","getExtent","worldWidth","layerStates","layerStatesArray","numLayers","matches","tmpCoord","layerState","hasRenderer","layerRenderer","getRenderer","source","getSource","getWrapX","order","some","hasFeatureAtCoordinate","getMap","renderFrame","flushDeclutterItems","scheduleExpireIconCache","postRenderFunctions","expireIconCache","fontChangeListenerKey_","ObjectEventType","redrawText","element_","document","createElement","position","zIndex","className","container","getViewport","insertBefore","firstChild","children_","renderedVisible_","declutterLayers_","hasListener","parentNode","removeChild","display","declutterLayers","previousElement","layerIndex","sourceState","getSourceState","unrender","render","layers","renderDeclutter","MapBrowserEvent","MapEvent","originalEvent","dragging","activePointers","pixel_","coordinate_","pixel","getEventPixel","getCoordinateFromPixel","preventDefault","stopPropagation","MapBrowserEventHandler","Target","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayMoveEvent_","boundHandleTouchMove_","handleTouchMove_","passive","emulateClick_","pointerEvent","newEvent","MapBrowserEventType","clearTimeout","setTimeout","updateActivePointers_","pointerId","handlePointerUp_","defaultPrevented","isMouseActionButton_","button","PointerEvent","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","cancelable","clientX","clientY","LAYERGROUP","SIZE","TARGET","VIEW","DROP","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","tilePriorityFunction","tileChangeCallback","getKey","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","getTilesLoading","tile","getState","TileState","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","Control","pointerEvents","target_","setTarget","setMap","getOverlayContainerStopEvent","appendChild","MapEventType","mapEvent","getElementById","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label","label_","activeLabel","toggleButton_","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","collectSourceAttributions_","visibleAttributions","Set","getAllLayers","flatMap","getAttributions","getAttributionsCollapsible","setCollapsible","updateElement_","attributions","visible","innerHTML","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","compassClassName","callResetNorth_","resetNorth","duration_","duration","autoHide_","autoHide","rotation_","resetNorth_","view","getView","getRotation","animate","easing","setRotation","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","currentZoom","getZoom","newZoom","getConstrainedZoom","getAnimating","cancelAnimations","zoom","setZoom","removeLayerMapProperty","Layer","setMapInternal","getLayers","setLayerMapProperty","optionsInternal","keyboardEventTarget","layerGroup","controls","interactions","overlays","MapProperty","View","createOptionsInternal","renderComplete_","loaded_","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","pixelRatio_","pixelRatio","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","window","overflow","overlayContainer_","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","targetChangeHandlerKeys_","targetElement_","resizeObserver_","ResizeObserver","updateSize","zoomOptions","rotate","rotateOptions","attribution","attributionOptions","onFocusOnly","overlays_","overlayIdIndex_","renderer_","postRenderFunctions_","tileQueue_","getTilePriority","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","viewOptions","setView","CollectionEventType","addOverlayInternal_","control","interaction","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","handleLayerAdd_","addOverlay","overlay","getOverlays","disconnect","forEachFeatureAtPixel","getCoordinateFromPixelInternal","getFeaturesAtPixel","addLayersFrom","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","viewportSize","getSize","scaleX","scaleY","eventPosition","changedTouches","getTarget","getTargetElement","getProjection","getOverlayById","setLayers","group","collection","getLoadingOrNotReady","getLayerStatesArray","renderer","ready","loading","getPixelFromCoordinate","viewCoordinate","getPixelFromCoordinateInternal","getOverlayContainer","targetElement","ownerDocument","tileSourceKey","tileCenter","tileResolution","wantedTiles","deltaX","deltaY","browserEvent","mapBrowserEvent","handleMapBrowserEvent","eventType","rootNode","documentElement","interactionsArray","getActive","handleEvent","propagationStopped","handlePostRender","tileQueue","hints","viewHints","ViewHint","lowOnFrameBudget","Date","now","time","resolveConstraints","unobserve","ShadowRoot","host","setSize","Composite","observe","cancelAnimationFrame","handleViewPropertyChanged_","updateViewportSize_","Group","handleLayerRemove_","isRendered","renderFrame_","renderSync","handleFontsChanged","requestAnimationFrame","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","isDef","getHints","declutterTree","extent","usedTiles","mapId","renderTargets","nextCenter","nextResolution","nextRotation","nextExtent","setLayerGroup","oldLayerGroup","computedStyle","getComputedStyle","offsetWidth","parseFloat","offsetHeight","getClientRects","oldSize","setViewportSize","SINGLECLICK","CLICK","DBLCLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","ObjectEvent","oldValue","BaseObject","values_","hasOwnProperty","getKeys","getPropertiesInternal","notify","listener","silent","applyProperties","unset","PROPERTYCHANGE","Observable","revision_","getRevision","onInternal","onceInternal","ol_key","unInternal","unByKey","Tile","interimTile","transition_","transition","transitionStarts_","interpolate","release","setState","getInterimTile","refreshInterimChain","getTileCoord","getAlpha","inTransition","endTransition","TileRange","containsXY","containsTileRange","tileRange","getHeight","getWidth","createOrUpdate","CENTER","RESOLUTION","ROTATION","createExtent","onlyCenter","smooth","isMoving","centerShift","viewWidth","viewHeight","shiftX","shiftY","none","getViewportClampedResolution","maxExtent","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","maxResolution","minResolution","createMinMaxResolution","direction","cappedMaxRes","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","applyOptions_","ViewProperty","resolutionConstraintInfo","resolutionConstraint","defaultMaxZoom","defaultZoomFactor","minZoom","maxZoom","zoomFactor","multiWorld","smoothResolutionConstraint","projExtent","constrainOnlyCenter","isGlobal","resolutions","constrainResolution","capped","createSnapToResolutions","defaultMaxResolution","getMetersPerUnit","defaultMinResolution","power","tolerance","minZoomLevel","offset","cappedZoomLevel","zoomLevel","newResolution","createSnapToPower","constraint","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","resolutions_","padding_","padding","minZoom_","centerConstraint","smoothExtentConstraint","createCenterConstraint","rotationConstraint","enableRotation","constrainRotation","createRotationConstraint","constraints_","setCenterInternal","setResolution","oldPadding","getCenterInternal","newPadding","getResolution","offsetX","offsetY","getUpdatedOptions_","newOptions","var_args","anchor","animateInternal","animationCount","animationCallback","series","animation","sourceCenter","targetCenter","sourceResolution","targetResolution","getResolutionForZoom","sourceRotation","targetRotation","isNoopAnimation","setHint","updateAnimations_","getInteracting","jj","NaN","more","seriesComplete","elapsed","fraction","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","Boolean","currentCenter","currentResolution","getCenter","getConstraints","getConstrainResolution","calculateExtent","calculateExtentInternal","getViewportSizeMinusPadding_","getMaxResolution","getMinResolution","getMaxZoom","getZoomForResolution","setMaxZoom","getMinZoom","setMinZoom","setConstrainResolution","enabled","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","getConstrainedResolution","getValueForResolutionFunction","logPower","reducedSize","calculateCenterOn","getViewStateAndExtent","baseLevel","fit","geometryOrExtent","getType","userProjection","fitInternal","rotatedExtentForGeometry","cosAngle","sinAngle","getFlatCoordinates","stride","getStride","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","rotatedExtent","centerRot","centerX","centerY","getConstrainedCenter","centerOn","centerOnInternal","calculateCenterShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","doNotCancelAnims","forceMoving","newCenter","resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","targetZoom","targetRes","returnValue","ANIMATING","INTERACTING","binarySearch","haystack","needle","ascending","found","descending","linearFindNearest","candidate","reverseSubArray","begin","extension","arr1","arr2","len1","isSorted","every","currentVal","assert","assertion","errorMessage","channel","alias","D50","D55","D65","D75","F2","F7","F11","whitepoint","rgb","_xyz","white","arg","_u","_v","xn","yn","zn","vn","yr","lchuv","luv","hr","cstr","space","parts","toLowerCase","exec","dims","trim","baseHues","endsWith","test","red","orange","yellow","green","blue","purple","hsl","t2","t3","asString","color","MAX_CACHE_SIZE","cacheSize","withAlpha","output","rgbaToLcha","lchaToRgba","fromString","parsed","normalize","asArray","isStringColor","asColorLike","levels","warn","console","coordinate1","coordinate2","scale","wrapX","worldsAway","sourceExtentWidth","getWorldsAway","CLASS_HIDDEN","CLASS_UNSELECTABLE","CLASS_CONTROL","CLASS_COLLAPSED","fontRegEx","RegExp","fontRegExMatchIndex","getFontParameters","fontSpec","lineHeight","variant","families","family","createCanvasContext2D","canvasPool","settings","OffscreenCanvas","getContext","releaseCanvas","context","clearRect","replaceNode","oldNode","replaceChild","removeNode","removeChildren","lastChild","replaceChildren","oldChildren","childNodes","oldChild","newChild","easeIn","easeOut","inAndOut","linear","listen","originalListener","eventsKey","listenOnce","unlistenByKey","CHANGE","BLUR","CLEAR","CONTEXTMENU","DRAGENTER","DRAGOVER","FOCUS","KEYDOWN","KEYPRESS","LOAD","RESIZE","TOUCHMOVE","WHEEL","eventTarget_","pendingRemovals_","dispatching_","listeners_","listeners","listenersForType","includes","dispatching","pendingRemovals","propagate","getListeners","conditions","pass","altKeyOnly","altKey","metaKey","ctrlKey","shiftKey","altShiftKeysOnly","focusWithTabindex","hasAttribute","activeElement","focus","always","mouseActionButton","noModifierKeys","platformModifierKey","shiftKeyOnly","targetNotEditable","tagName","isContentEditable","mouseOnly","pointerType","primaryAction","isPrimary","numTypes","NoneType","BooleanType","NumberType","StringType","ColorType","NumberArrayType","AnyType","typeNames","namedTypes","typeName","names","namedType","specific","overlapsType","oneType","otherType","isType","expected","LiteralExpression","CallExpression","operator","newParsingContext","variables","encoded","typeHint","parser","parsers","parseCallExpression","Ops","Get","Var","Concat","GeometryType","Any","All","Not","Resolution","Zoom","Time","Equal","NotEqual","GreaterThan","GreaterThanOrEqualTo","LessThan","LessThanOrEqualTo","Multiply","Divide","Add","Subtract","Clamp","Mod","Pow","Abs","Floor","Ceil","Round","Sin","Cos","Atan","Sqrt","Match","Between","Interpolate","Case","In","Color","Id","Band","Palette","createParser","getTypeFromHint","withArgsCount","firstArg","parsedArgs","varName","withNoArgs","parseArgsOfType","narrowArgsType","outputType","withEvenArgs","argsCount","inputType","fallback","expectedInputType","interpolationType","interpolation","argCount","condition","needleType","colors","parsedColors","minArgs","maxArgs","argType","expression","gotType","expectedType","sameType","returnType","argValidators","actualType","boundingExtent","createEmpty","extendCoordinate","dest","closestSquaredDistanceXY","containsCoordinate","containsExtent","extent1","extent2","coordinateRelationship","relationship","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromFlatCoordinates","flatCoordinates","extendFlatCoordinates","extendXY","forEachCorner","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","getCorner","corner","getForViewAndSize","getRotatedViewport","cosRotation","sinRotation","xCos","xSin","yCos","ySin","returnOrUpdate","intersectsSegment","startRel","endRel","startX","startY","endX","endY","slope","applyTransform","transformFn","stops","xs","ys","_boundingExtentXYs","wrapAndSliceX","UNKNOWN","INTERSECTING","ABOVE","RIGHT","BELOW","LEFT","TRUE","FALSE","VOID","memoizeOne","lastResult","lastArgs","lastThis","called","nextArgs","tmpTransform","Geometry","extent_","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","squaredTolerance","getSimplifiedGeometry","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","getClosestPoint","intersectsCoordinate","computeExtent","sx","sy","simplify","intersectsExtent","translate","destination","sourceProj","getUnits","inCoordinates","outCoordinates","pixelExtent","projectedExtent","getWorldExtent","LineString","layout","flatMidpoint_","flatMidpointRevision_","maxDelta_","maxDeltaRevision_","setCoordinates","setFlatCoordinates","appendCoordinate","getCoordinateAtM","extrapolate","getCoordinates","getCoordinateAt","getFlatMidpoint","getSimplifiedGeometryInternal","simplifiedFlatCoordinates","setLayout","Point","squaredDistance","LinearRing","SimpleGeometry","inflate","deflate","Polygon","ends","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","linearRing","getOrientedFlatCoordinates","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","linearRings","simplifiedEnds","circular","radius","sphereRadius","sphere","fromExtent","getFirstCoordinate","getLastCoordinate","getLayout","simplifiedGeometry","getStrideForLayout","nesting","getLayoutForStride","transformGeom2D","simpleGeometry","twiceArea","linearRingss","endss","flatCenters","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","arrayMaxSquaredDelta","multiArrayMaxSquaredDelta","assignClosestPoint","maxDelta","isRing","tmpPoint","assignClosestArrayPoint","assignClosestMultiArrayPoint","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","linearRingssContainsXY","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","deflateMultiCoordinatesArray","coordinatesss","inflateCoordinates","inflateCoordinatesArray","inflateMultiCoordinatesArray","getInteriorPointOfArray","flatCentersOffset","rr","pointX","maxSegmentLength","segmentLength","getInteriorPointsOfMultiArray","interiorPoints","interpolatePoint","dimension","cumulativeLengths","lineStringCoordinateAtM","m0","lineStringsCoordinateAtM","intersectsLineString","coordinatesExtent","point1","point2","intersectsLineStringArray","intersectsLinearRing","intersectsLinearRingArray","intersectsLinearRingMultiArray","lineStringLength","linearRingIsClockwise","linearRingsAreOriented","isClockwise","linearRingssAreOriented","orientLinearRings","orientLinearRingsArray","inflateEnds","startOrientation","prevEndIndex","orientation","douglasPeucker","simplifiedOffset","markers","first","maxSquaredDistance","douglasPeuckerArray","snap","quantize","dx1","dy1","dx2","dy2","quantizeArray","quantizeMultiArray","simplifiedEndss","transform2D","anchorX","anchorY","ua","navigator","userAgent","FIREFOX","SAFARI_BUG_237906","WEBKIT","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","WORKER_OFFSCREEN_CANVAS","WorkerGlobalScope","self","IMAGE_DECODE","PASSIVE_EVENT_LISTENERS","DragRotate","stopDown","condition_","lastAngle_","handleDragEvent","theta","handleUpEvent","handleDownEvent","Interaction","setActive","active","pan","zoomByDelta","PointerInteraction","handleMoveEvent","handlingDownUpSequence","targetPointers","getPointerCount","stopEvent","updateTrackedPointers_","handledUp","handled","DoubleClickZoom","delta_","DragPan","Pointer","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","noKinetic_","getDistance","getAngle","centerpx","RenderBox","geometry_","startPixel_","endPixel_","render_","startPixel","endPixel","setPixels","createOrUpdateGeometry","DragBoxEventType","DragBoxEvent","Event","DragBox","box_","minArea_","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","out_","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","EventType","keyEvent","Key","mapUnitsDelta","KeyboardZoom","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","lastIndex","firstIndex","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","defaults","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","BaseLayer","background_","background","opacity","className_","state_","getBackground","getClassName","getLayerState","getZIndex","getOpacity","getVisible","getLayersArray","states","setBackground","setExtent","setMaxResolution","setMinResolution","setOpacity","setVisible","setZIndex","zindex","BaseTileLayer","baseOptions","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","getPreload","TileProperty","getUseInterimTilesOnError","getData","GroupEvent","LayerGroup","layersListenerKeys_","listenerKeys_","handleLayersChanged_","handleLayerChange_","handleLayersAdd_","handleLayersRemove_","layersArray","registerLayerListeners_","handleLayerGroupAdd_","handleLayerGroupRemove_","collectionEvent","currentLayers","ownLayerState","defaultZIndex","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","sourceReady_","rendered","handleSourcePropertyChange_","setSource","getRenderSource","handleSourceChange_","getFeatures","isVisible","getMapInternal","layerExtent","inView","prepareFrame","arrayLayerState","createRenderer","OPACITY","VISIBLE","EXTENT","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","MAX_ZOOM","MIN_ZOOM","SOURCE","MAP","buildExpression","actual","compileExpression","colorValue","compileAssertionExpression","nameExpression","compileAccessorExpression","op","compileLogicalExpression","compileComparisonExpression","atan","compileNumericExpression","compileMatchExpression","previousInput","previousOutput","isColor","interpolateColor","interpolateNumber","compileInterpolateExpression","input1","output1","input2","output2","along","rgba1","rgba2","lcha1","lcha2","deltaHue","lcha","rulesToStyleFunction","rules","parsingContext","evaluator","compiledRules","rule","styleLength","buildStyle","someMatched","filterEvaluator","else","styleEvaluator","buildRuleSet","evaluationContext","flatStylesToStyleFunction","flatStyles","evaluators","nonNullCount","flatStyle","evaluateFill","buildFill","evaluateStroke","buildStroke","evaluateText","evaluateValue","stringEvaluator","evaluateBackgroundFill","evaluateBackgroundStroke","evaluateFont","evaluateMaxAngle","numberEvaluator","evaluateOffsetX","evaluateOffsetY","evaluateOverflow","booleanEvaluator","evaluatePlacement","evaluateRepeat","evaluateScale","sizeLikeEvaluator","evaluateRotateWithView","evaluateRotation","evaluateAlign","evaluateJustify","evaluateBaseline","evaluatePadding","numberArrayEvaluator","text","Text","setText","setFill","setBackgroundFill","setStroke","setBackgroundStroke","setFont","setMaxAngle","setOffsetX","setOffsetY","setOverflow","placement","setPlacement","setRepeat","setScale","setRotateWithView","textAlign","setTextAlign","justify","setJustify","textBaseline","setTextBaseline","setPadding","buildText","evaluateImage","srcName","requireString","evaluateAnchor","coordinateEvaluator","evaluateOpacity","evaluateDisplacement","anchorOrigin","optionalIconOrigin","anchorXUnits","optionalIconAnchorUnits","anchorYUnits","property","requireColorLike","optionalColorLike","optionalString","requireNumberArray","optionalNumberArray","offsetOrigin","optionalNumber","optionalSize","declutterMode","optionalDeclutterMode","icon","Icon","setDisplacement","setAnchor","buildIcon","pointsName","requireNumber","radius1","radius2","shape","RegularShape","buildShape","evaluateRadius","circle","Circle","setRadius","buildCircle","buildImage","evaluateZIndex","Style","empty","stroke","evaluateColor","colorLikeEvaluator","Fill","setColor","evaluateWidth","evaluateLineCap","evaluateLineJoin","evaluateLineDash","evaluateLineDashOffset","evaluateMiterLimit","Stroke","setWidth","lineCap","setLineCap","lineJoin","setLineJoin","setLineDash","setLineDashOffset","setMiterLimit","requireSizeLike","BaseVectorLayer","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","getDeclutter","getRenderBuffer","getRenderOrder","getUpdateWhileAnimating","getUpdateWhileInteracting","setRenderOrder","renderOrder","toStyleLike","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CIRCLE","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","fillInstruction","strokeInstruction","beginPathInstruction","closePathInstruction","drawCustom","hitDetectionRenderer","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","strokeStyle","setImageStyle","imageStyle","declutterImageWithText","setTextStyle","textStyle","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastXCoord","lastYCoord","nextCoord","lastRel","nextRel","skipped","Relationship","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderBegin","builderEndss","getEndss","myEnds","endGeometry","finish","reverseHitDetectionInstructions","instruction","fillStyleColor","getColor","strokeStyleColor","strokeStyleLineCap","getLineCap","strokeStyleLineDash","getLineDash","lineDash","strokeStyleLineDashOffset","getLineDashOffset","lineDashOffset","strokeStyleLineJoin","getLineJoin","strokeStyleWidth","lineWidth","strokeStyleMiterLimit","getMiterLimit","miterLimit","createFill","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","hitDetectionImage_","imagePixelRatio_","anchorX_","anchorY_","height_","opacity_","originX_","originY_","rotateWithView_","scale_","width_","declutterMode_","declutterImageWithText_","myBegin","sharedData","getAnchor","getOrigin","getPixelRatio","getHitDetectionImage","getRotateWithView","getScaleArray","getDeclutterMode","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","lineChunk","chunkLength","chunks","cursor","chunkM","currentChunk","missing","matchingChunk","maxAngle","acos","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","TEXT_ALIGN","labels_","text_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","fillState","strokeState","textState","geometryType","geometryWidths","getFlatMidpoints","getFlatInteriorPoints","beg","keep","saveTextStates_","backgroundFill","backgroundStroke","repeat","flatOffset","oo","cc","chunk","chunkBegin","drawChars_","strokeKey","textKey","font","fillKey","baseline","strokeWidth","textFillStyle","getFill","textStrokeStyle","getStroke","getFont","textScale","getOverflow","getMaxAngle","getPlacement","getTextAlign","getRepeat","getJustify","getTextBaseline","getBackgroundFill","getBackgroundStroke","getPadding","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","getText","BATCH_CONSTRUCTORS","PolygonBuilder","Builder","ImageBuilder","LineStringBuilder","TextBuilder","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","drawTextOnPath","startM","measureAndCacheTextWidth","segmentM","advance","beginX","beginY","startOffset","startLength","endM","singleSegment","previousAngle","charLength","chars","tmpExtent","getDeclutterBox","replayImageOrLabelArgs","declutterBox","rtlRegEx","fromCharCode","horizontalTextAlign","align","createTextChunks","acc","line","overlaps","alignFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","createLabel","textIsArray","widths","heights","lineWidths","renderWidth","contextInstructions","leftRight","strokeInstructions","fillInstructions","previousFont","lineOffset","widthHeightIndex","lineWidthIndex","fillStrokeArgs","replayTextBackground_","beginPath","moveTo","lineTo","fill_","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","originX","originY","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","canvasTransform","replayImageOrLabel_","contextScale","imageOrLabel","dimensions","box","strokePadding","repeatSize","save","restore","drawLabelWithPointPlacement_","execute_","featureCallback","hitExtent","pixelCoordinates","dd","prevX","prevY","roundX","roundY","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","arc","closePath","rotateWithView","labelWithAnchor","widthIndex","imageArgs","imageDeclutterBox","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","drawChars","part","execute","executeHitDetection","ORDER","circlePixelIndexArrayCache","allInstructions","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","clip","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","declutteredFeatures","contextSize","newContext","willReadFrequently","maxDistanceSq","distances","pixelIndex","getPixelIndexArray","imageData","getImageData","zs","executor","builderTypes","userTransform","context_","transform_","transformRotation_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","drawImages_","localTransform","globalAlpha","drawImage","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","setTransform","getGeometryFunction","getGeometriesArray","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imageSize","imagePixelRatio","imageAnchor","imageOrigin","imageScale","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","HIT_DETECT_RESOLUTION","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","builderGroup","declutterBuilderGroup","getImageState","ImageState","imageBuilderGroup","imageReplay","textBuilderGroup","textReplay","lineStringReplay","polygonReplay","replayGroup","geometryRenderer","circleReplay","defaultOrder","feature1","feature2","getTolerance","renderFeature","imageState","unlistenImageChange","listenImageChange","renderGeometry","renderFeatureInternal","getGeometries","getHitDetectionRenderer","CanvasVectorLayerRenderer","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","hitDetectionImageData_","renderedFeatures_","renderedRevision_","renderedResolution_","renderedExtent_","wrappedRenderedExtent_","renderedRotation_","renderedCenter_","renderedProjection_","renderedRenderOrder_","replayGroup_","replayGroupChanged","declutterExecutorGroup","clipping","compositionContext_","renderWorlds","executorGroup","vectorSource","getLayer","endWorld","world","getRenderTransform","setupCompositionContext_","compositionContext","releaseCompositionContext_","pixelTransform","inversePixelTransform","useContainer","containerReused","preRender","clipped","clipUnrotated","postRender","transforms","styleFunction","imageSmoothingEnabled","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","padStart","originalStyle","imgSize","getImageSize","imgContext","getScale","byGeometryType","getGeometriesArrayRecursive","zIndexKeys","geomAndStyle","kk","createHitDetectionImageData","resultFeatures","hitDetect","lastIndexOf","executorGroups","renderIfReadyAndVisible","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","renderedExtent","loadExtents","gutter","loadExtent","userExtent","loadFeatures","dirty","getFeaturesInExtent","replayGroupInstructions","getOverlaps","BaseVector","clamp","squaredSegmentDistance","solveLinearSystem","mat","maxRow","maxEl","absValue","coef","toDegrees","angleInRadians","toRadians","angleInDegrees","modulo","lerp","toFixed","decimals","object","RADIUS","HALF_SIZE","WORLD_EXTENT","MAX_SAFE_Y","tan","EPSG3857Projection","Projection","code","global","worldExtent","getPointResolution","cosh","PROJECTIONS","fromEPSG4326","toEPSG4326","METERS_PER_UNIT","EPSG4326Projection","axisOrientation","metersPerUnit","sourceCode","getCode","destinationCode","showCoordinateWarning","disableCoordinateWarning","disable","cloneTransform","identityTransform","addProjection","projectionLike","pointResolution","getter","getPointResolutionFunc","projUnits","getTransformFromProjections","addEquivalentProjections","projections","addProjections","createProjection","defaultCode","createTransformFromCoordinateTransform","coordTransform","pointLength","addCoordinateTransforms","forward","inverse","destProj","toLonLat","lonLat","lon","equivalent","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","getTransform","transformExtent","getUserProjection","toUserCoordinate","fromUserCoordinate","destProjection","toUserExtent","fromUserExtent","toUserResolution","sourceMetersPerUnit","userMetersPerUnit","projections2","forwardTransform","inverseTransform","code_","units_","worldExtent_","axisOrientation_","global_","canWrapX_","getPointResolutionFunc_","defaultTileGrid_","metersPerUnit_","getAxisOrientation","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setWorldExtent","setGetPointResolution","RenderEvent","PRERENDER","POSTRENDER","PRECOMPOSE","POSTCOMPOSE","RENDERCOMPLETE","RenderFeature","type_","flatCoordinates_","flatInteriorPoints_","flatMidpoints_","properties_","stride_","simplifiedGeometry_","midpoint","enableSimplifyTransformed","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","defaultLineWidth","checkedFonts","measureFont","measureContext","textHeights","registerFont","referenceFonts","interval","referenceWidth","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","measureTextWidth","check","fonts","clearInterval","setInterval","measureTextHeight","measureElement","metrics","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","minHeight","maxHeight","border","body","getTextDimensions","baseStyle","currentWidth","currentHeight","drawImageOrLabel","labelOrImage","executeLabelInstructions","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","loadedTileCallback","tiles","createLoadedTileFinder","forEachLoadedTile","loadImage","pixelContext","CanvasLayerRenderer","renderedResolution","tempTransform","pixelContext_","col","row","backgroundColor","layerClassName","firstElementChild","HTMLCanvasElement","transformOrigin","topLeft","topRight","bottomRight","bottomLeft","inverted","dispatchRenderEvent_","brokenDiagonalRendering_","drawTestTriangle","verifyBrokenDiagonalRendering","calculateSourceResolution","targetProj","targetMetersPerUnit","sourceExtent","compensationFactor","calculateSourceExtentResolution","targetExtent","triangulation","sources","renderEdges","drawSingle","pixelRound","globalCompositeOperation","sourceDataExtent","stitchContext","canvasWidthInUnits","canvasHeightInUnits","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","getTriangles","triangle","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","augmentedMatrix","affineCoefs","isBrokenDiagonalRendering","steps","ud","vd","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","errorThreshold","renderEdges_","gutter_","canvas_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","getTileCoordExtent","maxTargetExtent","maxSourceExtent","limitedTargetExtent","sourceProjExtent","errorThresholdInPixels","triangulation_","getZForResolution","calculateSourceExtent","sourceRange","getTileRangeForExtentAndZ","srcX","srcY","reproject_","getTileSize","leftToLoad","sourceListenKey","unlistenSources_","destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","log2","addQuad_","leftBound","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","targetQuadExtent","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","abSrc","cdSrc","ERROR_THRESHOLD","createSnapToN","createSnapToZero","hasArea","toSize","Source","attributions_","adaptAttributions","attributionsCollapsible_","attributionsCollapsible","wrapX_","interpolate_","viewResolver","viewRejector","viewPromise_","getInterpolate","refresh","setAttributions","attributionLike","TileCache","LRUCache","expireCache","canExpireCache","peekLast","pruneExceptNewestZ","peekFirstKey","TileSource","opaque_","opaque","tilePixelRatio_","tilePixelRatio","tileSize","tileCache","tmpSize","key_","tileOptions","zDirection","getTileCacheForProjection","tileCoordKey","covered","containsKey","getGutterForProjection","setKey","getOpaque","getTileGridForProjection","getTile","getTileGrid","getTilePixelRatio","getTilePixelSize","getTileCoordForTileUrlFunction","updateCacheSize","tileCount","highWaterMark","useTile","TileSourceEvent","UrlTile","generateTileUrlFunction_","tileUrlFunction","urls","setUrls","url","setUrl","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","uid","tileState","TileEventType","setTileLoadFunction","setTileUrlFunction","defaultTileLoadFunction","imageTile","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","usedTileCache","getGutter","thisProj","projKey","createTile_","urlTileCoord","tileUrl","getTileInternal","newTile","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","rbush_","items_","extents","getAll","getInExtent","forEach_","forEachInExtent","withCredentials","xhr","success","failure","XMLHttpRequest","open","responseType","onload","status","responseText","responseXML","DOMParser","parseFromString","readFeatures","featureProjection","readProjection","onerror","send","loadFeaturesXhr","dataProjection","addFeatures","VectorSourceEvent","VectorSource","loader_","format_","url_","loader","strategy_","strategy","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","VectorEventType","handleFeatureChange_","valid","indexedFeature","newFeatures","geometryFeatures","modifyingCollection","removeFeature","fast","removeAndIgnoreReturn","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeaturesAtCoordinate","anExtent","getClosestFeatureToCoordinate","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","getFormat","getUrl","sid","removeFromIdIndex_","hasFeature","loadedExtentsRtree","extentsToLoad","extentToLoad","removeLoadedExtent","featureChangeKeys","removed","setLoader","XYZ","DEFAULT_RADIUS","c1","c2","lat1","lat2","deltaLatBy2","deltaLonBy2","lon1","dByR","lat","asin","count_","entries_","oldest_","newest_","entry","value_","newer","older","getValues","peekLastKey","CircleStyle","displacement","getRadius","getDisplacement","radius_","color_","taintedTestContext","IconImage","imageState_","size_","tainted_","initializeImage_","isTainted_","dispatchChangeEvent_","replaceColor_","getSrc","HTMLImageElement","calculateScale","wantedWidth","wantedHeight","normalizedAnchor_","anchorOrigin_","anchorXUnits_","anchorYUnits_","cacheKey","iconImage_","iconImage","offset_","offsetOrigin_","origin_","initialOptions_","iconImageSize","IconImageCache","cache_","cacheSize_","maxCacheSize_","expire","maxCacheSize","shared","ImageStyle","scaleArray_","displacement_","canvases_","hitDetectionCanvas_","radius2_","stroke_","renderOptions_","getPoints","getRadius2","createHitDetectionCanvas_","renderOptions","draw_","calculateLineJoinSize_","r1","r2","miterRatio","bevelAdd","aa","innerMiterRatio","innerLength","createRenderOptions","maxRadius","createPath_","drawHitDetectionCanvas_","startAngle","angle0","radiusC","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","geometryFunction_","defaultGeometryFunction","hitDetectionRenderer_","zIndex_","setRenderer","setHitDetectionRenderer","toFunction","defaultStyles","createDefaultStyle","font_","textAlign_","justify_","repeat_","textBaseline_","maxAngle_","placement_","overflow_","offsetX_","offsetY_","backgroundFill_","backgroundStroke_","getKeyZXY","fromKey","hash","withinExtentAndZ","getFullTileRange","getForProjection","extentFromProjection","resolutionsFromExtent","createForExtent","createForProjection","getTileCoordCenter","getTileCoordForCoordAndZ","createXYZ","xyzOptions","gridOptions","half","tmpTileCoord","origins","origins_","tileSizes_","tileSizes","tileSize_","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","forEachTileCoordParentTileRange","tempTileRange","tempExtent","tileCoordExtent","getTileCoordChildTileRange","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","opt_tileCoord","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","getTileCoordResolution","opt_direction","tileCoordIntersectsViewport","viewport","fullTileRanges","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","createFromTemplate","template","zRegEx","xRegEx","yRegEx","dashYRegEx","createFromTemplates","templates","tileUrlFunctions","createFromTileUrlFunctions","expandUrl","startCharCode","charCodeAt","stopCharCode","charCode","tmp_","create","multiply","transform1","transform2","a1","e1","f1","a2","e2","f2","setFromArray","makeScale","compose","makeInverse","transformStringDiv","transformString","abstract","uidCounter_","getUid","ol_uid","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","chunkIds","notFulfilled","fulfilled","__esModule","definition","globalThis","Symbol","toStringTag","nmd","paths","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal"],"sourceRoot":""}